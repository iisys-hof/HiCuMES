{
    "id": 475982,
    "externalId": "GenerateReport",
    "name": "GenerateReport",
    "dataReader": {
        "readerID": "inputPlugin-DatabaseReader",
        "parserID": "parserPlugin-JSON",
        "readerConfigID": 0,
        "parserConfigID": 0,
        "readerKeyValueConfigs": [
            {
                "configKey": "CLASSNAME",
                "configValue": "MachineOccupation"
            },
            {
                "configKey": "SEARCH_COLUMN",
                "configValue": "externalId"
            },
            {
                "configKey": "SEARCH_VALUE",
                "configValue": "364914011_1625"
            },
            {
                "configKey": "LOOP_IF_NOT_FINISHED",
                "configValue": "true"
            },
            {
                "configKey": "ADDITIONAL",
                "configValue": "29120"
            }
        ],
        "parserKeyValueConfigs": [],
        "readerConfigMap": {
            "CLASSNAME": "MachineOccupation",
            "ADDITIONAL": "29120",
            "SEARCH_COLUMN": "externalId",
            "SEARCH_VALUE": "364914011_1625"
        },
        "parserConfigMap": {}
    },
    "dataWriter": {
        "writerID": "outputPlugin-NewEntityEventWriter",
        "parserID": "",
        "writerConfigID": 0,
        "parserConfigID": 0,
        "writerKeyValueConfigs": [
            {
                "configKey": "ENTITY_FILTER",
                "configValue": "de.iisys.sysint.hicumes.core.entities"
            },
            {
                "configKey": "FORCE_UPDATE",
                "configValue": "false"
            }
        ],
        "parserKeyValueConfigs": [],
        "writerConfigMap": {
            "ENTITY_FILTER": "de.iisys.sysint.hicumes.core.entities",
            "FORCE_UPDATE": "false"
        },
        "parserConfigMap": {}
    },
    "mappingConfiguration": {
        "mappings": [],
        "loops": [],
        "inputSelector": null,
        "outputSelector": null,
        "xsltRules": "<xsl:stylesheet version=\"2.0\"\n    xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n    xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">\n  <xsl:decimal-format name=\"d\" decimal-separator=\",\" grouping-separator=\".\"/>\n  <xsl:template match=\"/\">\n    <output>  \n        <xsl:choose>\n            <xsl:when test=\"/ObjectNode/result/subMachineOccupations\">\n                <xsl:for-each\n                    select=\"/ObjectNode/result/subMachineOccupations\">    \n\n                    <!-- Assuming $parentValue contains the parent value obtained during iteration -->\n                    <xsl:variable name=\"parentValue\" select=\"./id\" />\n\n                    <!-- Use $parentValue to construct the XPath expression -->\n                    <xsl:variable name=\"manufacturingSetParameterTaskValue\" select=\"xs:double(/ObjectNode/additional/timeDistribution[id = $parentValue]/timeDurations/Manufacturing_SetParameterTask)\" />\n                    <xsl:variable name=\"manufacturingConfirmProductionTaskValue\" select=\"xs:double(/ObjectNode/additional/timeDistribution[id = $parentValue]/timeDurations/Manufacturing_ConfirmProductionTask)\" />\n\n                    <xsl:variable name=\"rawSeconds\" select=\"$manufacturingSetParameterTaskValue + $manufacturingConfirmProductionTaskValue\"/>\n                    <xsl:variable name=\"seconds\">\n                        <xsl:choose>\n                            <xsl:when test=\"string($rawSeconds) = '' or not(xs:double($rawSeconds))\">\n                                <!-- Set $seconds to 0 when empty or erroneous -->\n                                <xsl:value-of select=\"0\"/>\n                            </xsl:when>\n                            <xsl:otherwise>\n                                <!-- Otherwise, set $seconds to the parsed double value -->\n                                <xsl:value-of select=\"format-number(xs:double($rawSeconds), '#.##')\"/>\n                            </xsl:otherwise>\n                        </xsl:choose>\n                    </xsl:variable>\n                    <xsl:variable name=\"export\"> \n                        <xsl:call-template name=\"export_json\">                        \n                            <xsl:with-param name=\"ba\"><xsl:value-of select=\"substring-before(./externalId, '_')\" /></xsl:with-param>\n                            <xsl:with-param name=\"gutmge\"><xsl:value-of select=\"number(./totalProductionNumbers/acceptedMeasurement/amount)\" /></xsl:with-param>\n                            <xsl:with-param name=\"article\"><xsl:value-of select=\"concat('$,artikel=', ./productionOrder/product/name)\" /></xsl:with-param>\n                            <xsl:with-param name=\"bzeit\"><xsl:value-of select=\"format-number(xs:dayTimeDuration(concat('PT', $seconds, 'S')) div xs:dayTimeDuration('PT1H') , '#.###,00', 'd')\" /></xsl:with-param>\n                            <xsl:with-param name=\"mzeit\"><xsl:value-of select=\"format-number(xs:dayTimeDuration(concat('PT', $seconds, 'S')) div xs:dayTimeDuration('PT1H') , '#.###,00', 'd')\" /></xsl:with-param>\n                            <xsl:with-param name=\"ma\"><xsl:value-of select=\"/ObjectNode/result/subProductionSteps[last()]/timeRecords[last()]/responseUser/externalId\" /></xsl:with-param>\n                            <xsl:with-param name=\"erfzeit\"><xsl:value-of select=\"format-dateTime(current-dateTime(),'[D01].[M01].[Y0001]_[H01]:[m01]')\" /></xsl:with-param>\n                            <xsl:with-param name=\"erfdat\"><xsl:value-of select=\"format-dateTime(current-dateTime(),'[Y0001][M01][D01]')\" /></xsl:with-param>\n                            <xsl:with-param name=\"bem\"><xsl:value-of select=\"concat(format-dateTime(current-dateTime(),'[D01].[M01].[Y0001]'), ' ', /ObjectNode/result/subProductionSteps[last()]/timeRecords[last()]/responseUser/externalId, ' ', /ObjectNode/result/subProductionSteps[last()]/timeRecords[last()]/responseUser/userName, ';BDE')\" /></xsl:with-param>\n                        </xsl:call-template>\n                    </xsl:variable>\n\n                    <bookingEntry>\n                        <machineOccupation>\n                            <externalId>\n                                <xsl:value-of select=\"/ObjectNode/result/externalId\"/>\n                            </externalId>\n                        </machineOccupation>\n                        <subProductionStep>\n                            <externalId>\n                                <xsl:value-of select=\"/ObjectNode/result/subProductionSteps[last()]/externalId\"/>\n                            </externalId>\n                        </subProductionStep>\n                        <bookingState>NEW</bookingState>\n                        <xsl:if test=\"/ObjectNode/result/subProductionSteps[last()]/timeRecords[last()]/responseUser/externalId != ''\">\n                            <user>\n                                <externalId>\n                                    <xsl:value-of select=\"/ObjectNode/result/subProductionSteps[last()]/timeRecords[last()]/responseUser/externalId\"/>\n                                </externalId>\n                            </user>\n                        </xsl:if>                       \n                        <message>\n                            <xsl:copy-of select=\"$export\"/>\n                        </message>\n                    </bookingEntry>          \n                </xsl:for-each>\n            </xsl:when>\n            <xsl:when test=\"/ObjectNode/subMachineOccupations\">\n                <xsl:for-each\n                    select=\"/ObjectNode/subMachineOccupations\">    \n\n                    <!-- Assuming $parentValue contains the parent value obtained during iteration -->\n                    <xsl:variable name=\"parentValue\" select=\"./id\" />\n\n                    <!-- Use $parentValue to construct the XPath expression -->\n                    <xsl:variable name=\"manufacturingSetParameterTaskValue\" select=\"xs:double(/ObjectNode/additional/timeDistribution[id = $parentValue]/timeDurations/Manufacturing_SetParameterTask)\" />\n                    <xsl:variable name=\"manufacturingConfirmProductionTaskValue\" select=\"xs:double(/ObjectNode/additional/timeDistribution[id = $parentValue]/timeDurations/Manufacturing_ConfirmProductionTask)\" />\n\n                    <xsl:variable name=\"rawSeconds\" select=\"$manufacturingSetParameterTaskValue + $manufacturingConfirmProductionTaskValue\"/>\n                    <xsl:variable name=\"seconds\">\n                        <xsl:choose>\n                            <xsl:when test=\"string($rawSeconds) = '' or not(xs:double($rawSeconds))\">\n                                <!-- Set $seconds to 0 when empty or erroneous -->\n                                <xsl:value-of select=\"0\"/>\n                            </xsl:when>\n                            <xsl:otherwise>\n                                <!-- Otherwise, set $seconds to the parsed double value -->\n                                <xsl:value-of select=\"format-number(xs:double($rawSeconds), '#.##')\"/>\n                            </xsl:otherwise>\n                        </xsl:choose>\n                    </xsl:variable>\n                    <xsl:variable name=\"export\"> \n                        <xsl:call-template name=\"export_json\">                        \n                            <xsl:with-param name=\"ba\"><xsl:value-of select=\"substring-before(./externalId, '_')\" /></xsl:with-param>\n                            <xsl:with-param name=\"gutmge\"><xsl:value-of select=\"number(./totalProductionNumbers/acceptedMeasurement/amount)\" /></xsl:with-param>\n                            <xsl:with-param name=\"article\"><xsl:value-of select=\"concat('$,artikel=', ./productionOrder/product/name)\" /></xsl:with-param>\n                            <xsl:with-param name=\"bzeit\"><xsl:value-of select=\"format-number(xs:dayTimeDuration(concat('PT', $seconds, 'S')) div xs:dayTimeDuration('PT1H') , '#.###,00', 'd')\" /></xsl:with-param>\n                            <xsl:with-param name=\"mzeit\"><xsl:value-of select=\"format-number(xs:dayTimeDuration(concat('PT', $seconds, 'S')) div xs:dayTimeDuration('PT1H') , '#.###,00', 'd')\" /></xsl:with-param>\n                            <xsl:with-param name=\"ma\"><xsl:value-of select=\"/ObjectNode/subProductionSteps[last()]/timeRecords[last()]/responseUser/externalId\" /></xsl:with-param>\n                            <xsl:with-param name=\"erfzeit\"><xsl:value-of select=\"format-dateTime(current-dateTime(),'[D01].[M01].[Y0001]_[H01]:[m01]')\" /></xsl:with-param>\n                            <xsl:with-param name=\"erfdat\"><xsl:value-of select=\"format-dateTime(current-dateTime(),'[Y0001][M01][D01]')\" /></xsl:with-param>\n                            <xsl:with-param name=\"bem\"><xsl:value-of select=\"concat(format-dateTime(current-dateTime(),'[D01].[M01].[Y0001]'), ' ', /ObjectNode/subProductionSteps[last()]/timeRecords[last()]/responseUser/externalId, ' ', /ObjectNode/result/subProductionSteps[last()]/timeRecords[last()]/responseUser/userName, ';BDE')\" /></xsl:with-param>\n                        </xsl:call-template>\n                    </xsl:variable>\n\n                    <bookingEntry>\n                        <machineOccupation>\n                            <externalId>\n                                <xsl:value-of select=\"/ObjectNode/externalId\"/>\n                            </externalId>\n                        </machineOccupation>\n                        <subProductionStep>\n                            <externalId>\n                                <xsl:value-of select=\"/ObjectNode/subProductionSteps[last()]/externalId\"/>\n                            </externalId>\n                        </subProductionStep>\n                        <bookingState>NEW</bookingState>\n                        <xsl:if test=\"/ObjectNode/subProductionSteps[last()]/timeRecords[last()]/responseUser/externalId != ''\">\n                            <user>\n                                <externalId>\n                                    <xsl:value-of select=\"/ObjectNode/subProductionSteps[last()]/timeRecords[last()]/responseUser/externalId\"/>\n                                </externalId>\n                            </user>\n                        </xsl:if>                       \n                        <message>\n                            <xsl:copy-of select=\"$export\"/>\n                        </message>\n                    </bookingEntry>          \n                </xsl:for-each>\n            </xsl:when>\n            <xsl:when test=\"/ObjectNode/result\">\n\n                <xsl:variable name=\"rawSeconds\" select=\"xs:double(/ObjectNode/result/timeDurations/work)\"/>\n                <xsl:variable name=\"seconds\">\n                    <xsl:choose>\n                        <xsl:when test=\"string($rawSeconds) = '' or not(xs:double($rawSeconds))\">\n                            <!-- Set $seconds to 0 when empty or erroneous -->\n                            <xsl:value-of select=\"0\"/>\n                        </xsl:when>\n                        <xsl:otherwise>\n                            <!-- Otherwise, set $seconds to the parsed double value -->\n                            <xsl:value-of select=\"format-number(xs:double($rawSeconds), '#.##')\"/>\n                        </xsl:otherwise>\n                    </xsl:choose>\n                </xsl:variable>\n\n                <bookingEntry>\n                    <machineOccupation>\n                        <externalId>\n                            <xsl:value-of select=\"/ObjectNode/result/externalId\"/>\n                        </externalId>\n                    </machineOccupation>\n                    <subProductionStep>\n                        <externalId>\n                            <xsl:value-of select=\"/ObjectNode/result/subProductionSteps[last()]/externalId\"/>\n                        </externalId>\n                    </subProductionStep>\n                    <bookingState>NEW</bookingState>\n                    <xsl:if test=\"/ObjectNode/result/subProductionSteps[last()]/timeRecords[last()]/responseUser/externalId != ''\">\n                        <user>\n                            <externalId>\n                                <xsl:value-of select=\"/ObjectNode/result/subProductionSteps[last()]/timeRecords[last()]/responseUser/externalId\"/>\n                            </externalId>\n                        </user>\n                    </xsl:if>\n                    <message>                \n                        <xsl:call-template name=\"export_json\">\n                                <xsl:with-param name=\"ba\"><xsl:value-of select=\"concat(/ObjectNode/result/productionOrder/externalId, /ObjectNode/result/name)\" /></xsl:with-param>\n                                <xsl:with-param name=\"gutmge\"><xsl:value-of select=\"number(/ObjectNode/result/totalProductionNumbers/acceptedMeasurement/amount)\" /></xsl:with-param>\n                                <xsl:with-param name=\"article\"><xsl:value-of select=\"concat('$,artikel=', /ObjectNode/result/productionOrder/product/name)\" /></xsl:with-param>\n                                <xsl:with-param name=\"bzeit\"><xsl:value-of select=\"format-number(xs:dayTimeDuration(concat('PT', $seconds, 'S')) div xs:dayTimeDuration('PT1H') , '#.###,00', 'd')\" /></xsl:with-param>\n                                <xsl:with-param name=\"mzeit\"><xsl:value-of select=\"format-number(xs:dayTimeDuration(concat('PT', $seconds, 'S')) div xs:dayTimeDuration('PT1H') , '#.###,00', 'd')\" /></xsl:with-param>\n                                <xsl:with-param name=\"ma\"><xsl:value-of select=\"/ObjectNode/result/subProductionSteps[last()]/timeRecords[last()]/responseUser/externalId\" /></xsl:with-param>\n                                <xsl:with-param name=\"erfzeit\"><xsl:value-of select=\"format-dateTime(current-dateTime(),'[D01].[M01].[Y0001]_[H01]:[m01]')\" /></xsl:with-param>\n                                <xsl:with-param name=\"erfdat\"><xsl:value-of select=\"format-dateTime(current-dateTime(),'[Y0001][M01][D01]')\" /></xsl:with-param>\n                                <xsl:with-param name=\"bem\"><xsl:value-of select=\"concat(format-dateTime(current-dateTime(),'[D01].[M01].[Y0001]'), ' ', /ObjectNode/result/subProductionSteps[last()]/timeRecords[last()]/responseUser/externalId, ' ', /ObjectNode/result/subProductionSteps[last()]/timeRecords[last()]/responseUser/userName, ';BDE')\" /></xsl:with-param>\n                        </xsl:call-template> \n                    </message>\n                </bookingEntry>     \n            </xsl:when>\n            <xsl:otherwise>\n                \n                <xsl:variable name=\"rawSeconds\" select=\"xs:double(/ObjectNode/timeDurations/work)\"/>\n                <xsl:variable name=\"seconds\">\n                    <xsl:choose>\n                        <xsl:when test=\"string($rawSeconds) = '' or not(xs:double($rawSeconds))\">\n                            <!-- Set $seconds to 0 when empty or erroneous -->\n                            <xsl:value-of select=\"0\"/>\n                        </xsl:when>\n                        <xsl:otherwise>\n                            <!-- Otherwise, set $seconds to the parsed double value -->\n                            <xsl:value-of select=\"format-number(xs:double($rawSeconds), '#.##')\"/>\n                        </xsl:otherwise>\n                    </xsl:choose>\n                </xsl:variable>\n\n                <bookingEntry>\n                    <machineOccupation>\n                        <externalId>\n                            <xsl:value-of select=\"/ObjectNode/externalId\"/>\n                        </externalId>\n                    </machineOccupation>                    \n                    <subProductionStep>\n                        <externalId>\n                            <xsl:value-of select=\"/ObjectNode/subProductionSteps[last()]/externalId\"/>\n                        </externalId>\n                    </subProductionStep>\n                    <bookingState>NEW</bookingState>\n                    <xsl:if test=\"/ObjectNode/subProductionSteps[last()]/timeRecords[last()]/responseUser/externalId != ''\">\n                        <user>\n                            <externalId>\n                                <xsl:value-of select=\"/ObjectNode/subProductionSteps[last()]/timeRecords[last()]/responseUser/externalId\"/>\n                            </externalId>\n                        </user>\n                    </xsl:if>\n                    <message>        \n                        <xsl:call-template name=\"export_json\">\n                            <xsl:with-param name=\"ba\"><xsl:value-of select=\"concat(/ObjectNode/productionOrder/externalId, /ObjectNode/name)\" /></xsl:with-param>\n                            <xsl:with-param name=\"gutmge\"><xsl:value-of select=\"number(/ObjectNode/totalProductionNumbers/acceptedMeasurement/amount)\" /></xsl:with-param>\n                            <xsl:with-param name=\"article\"><xsl:value-of select=\"concat('$,artikel=', /ObjectNode/productionOrder/product/name)\" /></xsl:with-param>\n                            <xsl:with-param name=\"bzeit\"><xsl:value-of select=\"format-number(xs:dayTimeDuration(concat('PT', $seconds, 'S')) div xs:dayTimeDuration('PT1H') , '#.###,00', 'd')\" /></xsl:with-param>\n                            <xsl:with-param name=\"mzeit\"><xsl:value-of select=\"format-number(xs:dayTimeDuration(concat('PT', $seconds, 'S')) div xs:dayTimeDuration('PT1H') , '#.###,00', 'd')\" /></xsl:with-param>\n                            <xsl:with-param name=\"ma\"><xsl:value-of select=\"/ObjectNode/subProductionSteps[last()]/timeRecords[last()]/responseUser/externalId\" /></xsl:with-param>\n                            <xsl:with-param name=\"erfzeit\"><xsl:value-of select=\"format-dateTime(current-dateTime(),'[D01].[M01].[Y0001]_[H01]:[m01]')\" /></xsl:with-param>\n                            <xsl:with-param name=\"erfdat\"><xsl:value-of select=\"format-dateTime(current-dateTime(),'[Y0001][M01][D01]')\" /></xsl:with-param>\n                            <xsl:with-param name=\"bem\"><xsl:value-of select=\"concat(format-dateTime(current-dateTime(),'[D01].[M01].[Y0001]'), ' ', /ObjectNode/subProductionSteps[last()]/timeRecords[last()]/responseUser/externalId, ' ', /ObjectNode/subProductionSteps[last()]/timeRecords[last()]/responseUser/userName, ';BDE')\" /></xsl:with-param>\n                        </xsl:call-template>   \n                    </message>\n                </bookingEntry>                                \n            </xsl:otherwise>\n        </xsl:choose>\n    </output>\n  </xsl:template>\n\n\n  <xsl:template name=\"export_json\">\n        <xsl:param name=\"ba\" />\n        <xsl:param name=\"gutmge\" />\n        <xsl:param name=\"article\" />\n        <xsl:param name=\"bzeit\" />\n        <xsl:param name=\"mzeit\" />\n        <xsl:param name=\"ma\" />\n        <xsl:param name=\"erfzeit\" />\n        <xsl:param name=\"erfdat\" />\n        <xsl:param name=\"bem\" />\n        <EXPORT_JSON>\n        <initAction>\n                <_type>OpenEditor</_type>\n                <tableName>9:2</tableName>\n                <editAction>DONE</editAction>\n            </initAction>\n            <actions>\n                <_type>SetFieldValue</_type>\n                <fieldName>barmex</fieldName>\n                <value>\n                    <xsl:value-of select=\"$ba\" />\n                </value>\n            </actions>\n            <actions>\n                <_type>SetFieldValue</_type>\n                <fieldName>gutmge</fieldName>\n                <value>            \n                    <xsl:value-of select=\"$gutmge\" />\n                </value>\n                <rowSpec>\n                    <xsl:value-of select=\"$article\" />\n                </rowSpec>\n            </actions>\n            <actions>\n                <_type>SetFieldValue</_type>\n                <fieldName>bzeit</fieldName>\n                <value>\n                    <xsl:value-of select=\"$bzeit\" />\n                </value>\n            </actions>\n            <actions>\n                <_type>SetFieldValue</_type>\n                <fieldName>mzeit</fieldName>\n                <value>\n                    <xsl:value-of select=\"$mzeit\" />\n                </value>\n            </actions>\n            <actions>\n                <_type>SetFieldValue</_type>\n                <fieldName>ma</fieldName>\n                <value>\n                    <xsl:value-of select=\"$ma\" />\n                </value>\n            </actions>\n            <actions>\n                <_type>SetFieldValue</_type>\n                <fieldName>rzbuchen</fieldName>\n                <value>true</value>\n            </actions>\n            <actions>\n                <_type>SetFieldValue</_type>\n                <fieldName>yerfzeit</fieldName>\n                <value>\n                <xsl:value-of select=\"$erfzeit\"/>\n                </value>\n            </actions>\n            <actions>\n                <_type>SetFieldValue</_type>\n                <fieldName>yerfdat</fieldName>\n                <value>\n                    <xsl:value-of select=\"$erfdat\"/>\n                </value>\n            </actions>\n            <actions>\n                <_type>SetFieldValue</_type>\n                <fieldName>bem</fieldName>\n                <value>\n                    <xsl:value-of select=\"$bem\" />\n                </value>\n            </actions>\n        </EXPORT_JSON>\n    </xsl:template>\n</xsl:stylesheet>"
    },
    "readerResult": {
        "result": "{\"id\":74338,\"externalId\":\"364914011_1625\",\"versionNr\":null,\"subMachineOccupations\":[],\"productionSteps\":[{\"id\":74277,\"externalId\":\"364914_1625\",\"versionNr\":null,\"camundaProcessName\":\"Subprocess_AbdrehenCBN_1625_1635\",\"machineType\":{\"id\":809,\"externalId\":\"625\",\"versionNr\":null,\"name\":\"Abdrehen CBN CNC 625\"},\"toolType\":null,\"product\":null,\"name\":\"Abdrehen CBN CNC\",\"productionDuration\":1.700000000,\"setupTime\":0.0,\"sequence\":0,\"productionStepInfo\":{\"id\":17,\"externalId\":\"625_cnc_turn\",\"versionNr\":null,\"stepGroup\":\"625_cnc\",\"stepIdent\":\"turn\",\"stepType\":\"ALTERNATIVE\",\"stepNr\":1},\"mgrnr\":\"625\",\"arbgangNr\":\"1625\"}],\"machine\":{\"id\":817,\"externalId\":\"625\",\"versionNr\":null,\"machineType\":{\"id\":809,\"externalId\":\"625\",\"versionNr\":null,\"name\":\"Abdrehen CBN CNC 625\"},\"name\":\"Abdrehen CBN CNC\"},\"tool\":null,\"availableTools\":[],\"productionOrder\":{\"id\":74282,\"externalId\":\"364914\",\"versionNr\":\"2023101309152800000000\",\"measurement\":{\"amount\":55.0,\"unitString\":\"pcs\"},\"customerOrder\":{\"id\":74281,\"externalId\":\"2074278_2\",\"versionNr\":null,\"name\":\"2074278_2\",\"customerName\":\"53000\",\"priority\":0,\"deadline\":\"2023-11-14T23:59:00\",\"note\":\"Mat-Nr. 036893080-0000\\n\",\"ysbvertr\":\"Ss/Gm\"},\"product\":{\"id\":625,\"externalId\":\"60995\",\"versionNr\":\"2023101419141300000102\",\"name\":\"60995\",\"unitType\":null,\"qualityControlFeatures\":[],\"elemsuch\":\"SLSBOB32B0046\",\"elemname\":\"8,3-0,3 X 20 X 5,5\",\"platzsuch\":null,\"ysm1\":\"32B\",\"ykorn1\":\"46\",\"yhart1\":\"P\",\"ygef1\":\"7\",\"ybind1\":\"V164\",\"ybind2\":\"PK\",\"ynachb\":\"\",\"yspezgew\":0.0,\"ymgamma\":2.26,\"yagamma\":0.0,\"ykonz\":192.0,\"yform\":\"Leer\",\"yrand\":\"A\",\"ytxbs\":\"SIEHE75628\",\"ytabm\":\"\",\"ydurch1\":8.3,\"ydtol\":\"-0,3\",\"ybreit1\":20.0,\"ybtol\":\"+0,30/-0,10\",\"ybs\":5.5,\"ystol\":\"\",\"yausd1\":0.0,\"yausb1\":0.0,\"yausd2\":0.0,\"yausb2\":0.0,\"ykennz1\":\"\",\"ykennz2\":\"\",\"ykennz3\":\"\",\"ygetext\":\"\",\"ybem\":\"Mach Klärung Sj/Ra/Hg wurde die Breite mit +0,3/-0,10 toleriert - \\nMail Sj 02.05.17 - ew\\n\\n\\n\\nauf Anweisung Pö 15.09.15 wurde der Freigabehaken im Artikel \\nwieder gesetzt - ew \\n\",\"yvms\":\"63\",\"ybrand\":\"\",\"ycode\":\"\",\"yfarbkoerper\":\"\",\"yzeichnung\":\"assets/drawing/Zeichnungen/60995_ZG(1)8864_20230427.pdf\",\"yd1tol\":\"\",\"yb1tol\":\"\",\"yd2tol\":\"\",\"yb2tol\":\"\"},\"name\":\"364914\",\"priority\":0,\"deadline\":\"2023-11-14T23:59:00\",\"status\":\"PLANNED\",\"notes\":[],\"keyValueMap\":{},\"orderAmount\":500.0,\"orderType\":\"A\",\"startDateTime\":\"2023-10-25T00:00:00\",\"sumSteps\":14},\"plannedStartDateTime\":\"2023-11-09T00:00:00\",\"plannedEndDateTime\":\"2023-11-09T23:59:00\",\"actualStartDateTime\":null,\"actualEndDateTime\":null,\"camundaProcessName\":\"Process_unknown\",\"name\":\"011\",\"status\":\"PLANNED\",\"subProductionSteps\":[],\"activeToolSettings\":[],\"totalProductionNumbers\":{\"id\":74339,\"externalId\":null,\"versionNr\":null,\"acceptedMeasurement\":{\"amount\":0.0,\"unitString\":\"\"},\"rejectedMeasurement\":{\"amount\":0.0,\"unitString\":\"\"}},\"timeDurations\":{},\"ptext\":\"Achtung! aufgrund Reklamation 3524 bitte\\nmit der Abdrehaufnahme 5,53+0,01\\nabdrehen - Ra/ew 23.05.2012\\n\\nfür Zeitaufnahme Ma verständigen\",\"datasheet\":null,\"drawing\":null,\"image\":null,\"instruction\":null,\"manual\":null,\"document\":null,\"misc\":null}",
        "additionalData": "29120"
    }
}