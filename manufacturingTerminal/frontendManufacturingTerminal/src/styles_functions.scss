@use 'sass:math';

@function clampBuilder($minFontSize, $maxFontSize, $minWidth: 1300, $maxWidth: 2560)
{
  $slope: (($maxFontSize - $minFontSize) / ($maxWidth - $minWidth));
  $yAxis: -$minWidth * $slope + $minFontSize;
  @return unquote(
      'clamp(' + $minFontSize + 'rem, (' + $yAxis + 'rem + ' + ($slope * 1000) + 'vw), ' + $maxFontSize + 'rem)'
  );
}



$default-min-bp: 1300px;
$default-max-bp: 2560px;

@function round($number, $decimals: 0) {
  $n: 1;
  @if $decimals > 0 {
    @for $i from 1 through $decimals {
      $n: $n * 10;
    }
  }
  @return math.div(math.round($number * $n), $n);
}

@function px-to-rem($px) {
  $rems: math.div($px, 16px) * 1rem;
  @return $rems;
}

@function fluid($min-size, $max-size, $min-breakpoint: $default-min-bp, $max-breakpoint: $default-max-bp, $unit: vw) {
  $slope: math.div($max-size - $min-size, $max-breakpoint - $min-breakpoint);
  $slope-to-unit: round($slope * 100, 2);
  $intercept-rem: round(px-to-rem($min-size - $slope * $min-breakpoint), 2);
  $min-size-rem: round(px-to-rem($min-size), 2);
  $max-size-rem: round(px-to-rem($max-size), 2);
  @return clamp(#{$min-size-rem}, #{$slope-to-unit}#{$unit} + #{$intercept-rem}, #{$max-size-rem});
}
