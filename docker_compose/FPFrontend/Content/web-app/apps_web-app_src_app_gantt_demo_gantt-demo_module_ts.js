(self["webpackChunkweb_app"] = self["webpackChunkweb_app"] || []).push([["apps_web-app_src_app_gantt_demo_gantt-demo_module_ts"],{

/***/ 9414:
/*!*******************************************************************************!*\
  !*** ./apps/web-app/src/app/core/components/list-item/list-item.component.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FlatNode": () => (/* binding */ FlatNode),
/* harmony export */   "ListItemComponent": () => (/* binding */ ListItemComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! tslib */ 4929);
/* harmony import */ var _list_item_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./list-item.component.html?ngResource */ 7311);
/* harmony import */ var _list_item_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./list-item.component.scss?ngResource */ 2866);
/* harmony import */ var _list_item_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_list_item_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 2560);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ 6317);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ 228);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ 8951);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/common */ 4666);
/* harmony import */ var _material_material_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../material/material.module */ 4653);
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/tree */ 3453);
/* harmony import */ var _shared_pipes_pipe_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../shared/pipes/pipe.module */ 8068);
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/cdk/tree */ 5183);
/* harmony import */ var _shared_utils_getListItemsHtml_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../shared/utils/getListItemsHtml.utils */ 8814);











class FlatNode {}
const transformer = (node, level) => {
  return Object.assign(Object.assign({
    expandable: !!node.children && node.children.length > 0
  }, node), {
    level: level,
    id: node.id
  });
};
let ListItemComponent = class ListItemComponent {
  constructor() {
    this.treeControl = new _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_5__.FlatTreeControl(node => node.level, node => node.expandable);
    this.treeFlattener = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_6__.MatTreeFlattener(transformer, node => node.level, node => node.expandable, node => node.children);
    this.data = new rxjs__WEBPACK_IMPORTED_MODULE_7__.BehaviorSubject([] || 0);
    this.index = 0;
    this.isDraggable = false;
    this.isDisabled = false;
    this.isClass = false;
    this.clickListItem = new _angular_core__WEBPACK_IMPORTED_MODULE_8__.EventEmitter();
    this.mouseDownListItem = new _angular_core__WEBPACK_IMPORTED_MODULE_8__.EventEmitter();
    this.mouseUpListItem = new _angular_core__WEBPACK_IMPORTED_MODULE_8__.EventEmitter();
    this.dragStartListItem = new _angular_core__WEBPACK_IMPORTED_MODULE_8__.EventEmitter();
    this.dragEndListItem = new _angular_core__WEBPACK_IMPORTED_MODULE_8__.EventEmitter();
    this.listHtml = [];
    this._unsubscribeAll = new rxjs__WEBPACK_IMPORTED_MODULE_9__.Subject();
  }
  ngOnInit() {
    this.data.pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_10__.takeUntil)(this._unsubscribeAll)).subscribe(value => {
      this.listHtml = (0,_shared_utils_getListItemsHtml_utils__WEBPACK_IMPORTED_MODULE_4__.getListItemsHtml)(value, this.template, this.format);
    });
  }
  ngOnDestroy() {
    this._unsubscribeAll.next({});
    this._unsubscribeAll.complete();
  }
};
ListItemComponent.propDecorators = {
  data: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.Input
  }],
  template: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.Input
  }],
  format: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.Input
  }],
  index: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.Input
  }],
  isDraggable: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.Input
  }],
  isDisabled: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.Input
  }],
  isClass: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.Input
  }],
  clickListItem: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.Output
  }],
  mouseDownListItem: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.Output
  }],
  mouseUpListItem: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.Output
  }],
  dragStartListItem: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.Output
  }],
  dragEndListItem: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__.Output
  }]
};
ListItemComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_8__.Component)({
  selector: 'app-list-item',
  template: _list_item_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  standalone: true,
  encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_8__.ViewEncapsulation.None,
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_12__.CommonModule, _material_material_module__WEBPACK_IMPORTED_MODULE_2__.MaterialModule, _shared_pipes_pipe_module__WEBPACK_IMPORTED_MODULE_3__.PipeModule],
  styles: [(_list_item_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ListItemComponent);


/***/ }),

/***/ 1767:
/*!*************************************************************************************!*\
  !*** ./apps/web-app/src/app/core/components/search-field/search-field.component.ts ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SearchFieldComponent": () => (/* binding */ SearchFieldComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 4929);
/* harmony import */ var _search_field_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./search-field.component.html?ngResource */ 2893);
/* harmony import */ var _search_field_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./search-field.component.scss?ngResource */ 2752);
/* harmony import */ var _search_field_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_search_field_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 2560);
/* harmony import */ var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/form-field */ 5074);
/* harmony import */ var _angular_material_icon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/icon */ 7822);
/* harmony import */ var _angular_material_input__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/input */ 8562);







let SearchFieldComponent = class SearchFieldComponent {
  constructor() {
    this.placeholder = 'Search';
    this.label = 'Search';
    this.search = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
  }
  onSearch(event) {
    this.search.emit(event);
  }
};
SearchFieldComponent.propDecorators = {
  placeholder: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
  }],
  label: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
  }],
  search: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
  }],
  searchInput: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ViewChild,
    args: ['searchInput', {
      static: true
    }]
  }]
};
SearchFieldComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
  standalone: true,
  selector: 'app-search-field',
  imports: [_angular_material_form_field__WEBPACK_IMPORTED_MODULE_4__.MatFormFieldModule, _angular_material_icon__WEBPACK_IMPORTED_MODULE_5__.MatIconModule, _angular_material_input__WEBPACK_IMPORTED_MODULE_6__.MatInputModule],
  template: _search_field_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_search_field_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], SearchFieldComponent);


/***/ }),

/***/ 506:
/*!************************************************************************************************!*\
  !*** ./apps/web-app/src/app/gantt demo/customization-dialog/customization-dialog.component.ts ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CustomizationDialogComponent": () => (/* binding */ CustomizationDialogComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ 4929);
/* harmony import */ var _customization_dialog_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./customization-dialog.component.html?ngResource */ 7242);
/* harmony import */ var _customization_dialog_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./customization-dialog.component.scss?ngResource */ 5955);
/* harmony import */ var _customization_dialog_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_customization_dialog_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 2560);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/dialog */ 1484);
/* harmony import */ var _angular_material_components_datetime_picker__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular-material-components/datetime-picker */ 820);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! moment */ 6908);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__);








const CUSTOM_DATE_FORMATS = {
  parse: {
    dateInput: 'DD/MM/YYYY HH:mm'
  },
  display: {
    dateInput: 'DD/MM/YYYY HH:mm',
    monthYearLabel: 'MMM YYYY',
    dateA11yLabel: 'LL',
    monthYearA11yLabel: 'MMMM YYYY'
  }
};
let CustomizationDialogComponent = class CustomizationDialogComponent {
  constructor(fb, data) {
    var _a;
    this.fb = fb;
    this.deleteItem = false;
    this.durationPercentOfDate = 0;
    this.allowedGroups = [];
    this.subOrders = [];
    this.maxMinutes = 59;
    this.minMinutes = 0;
    this.maxHours = 24;
    this.minHours = 0;
    this.valueMinutes = 0;
    this.valueHours = 0;
    this.color = 'default';
    this.moment = moment__WEBPACK_IMPORTED_MODULE_2__;
    if (data !== undefined && data !== null) {
      this.startDate = data.item.start;
      this.endDate = data.item.end;
      this.setupTime = data.item.setupTime;
      this.orderNumber = data.item.content;
      this.minStartDate = data.minRange;
      this.maxStartDate = data.maxRange;
      this.item = data.item;
      this.subOrders = ((_a = data.item.subMachineOccupations) === null || _a === void 0 ? void 0 : _a.length) > 0 ? data.item.subMachineOccupations : [];
      if (data.allowedGroups) {
        this.allowedGroups = data.allowedGroups;
      }
      if (data.item) {
        this.item = data.item;
        this.mgFromControl = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControl(this.item.group);
      }
    }
  }
  ngOnInit() {
    this.form = this.fb.group({
      startDate: new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControl({
        value: this.startDate,
        disabled: false
      }, undefined),
      endDate: new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControl({
        value: this.endDate,
        disabled: false
      }, undefined),
      valueHours: [this.valueHours, undefined],
      valueMinutes: [this.valueMinutes, undefined],
      deleteItem: [this.deleteItem, undefined],
      durationPercentOfDate: new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControl({
        value: this.durationPercentOfDate,
        disabled: false
      }, [_angular_forms__WEBPACK_IMPORTED_MODULE_3__.Validators.min(0)]),
      machine: this.mgFromControl
    });
  }
  shouldDisableDecrementMinutes() {
    return this.form.get('valueMinutes').value <= this.minMinutes;
  }
  shouldDisableIncrementMinutes() {
    return this.form.get('valueMinutes').value >= this.maxMinutes;
  }
  shouldDisableDecrementHours() {
    return this.form.get('valueHours').value <= this.minHours;
  }
  shouldDisableIncrementHours() {
    return this.form.get('valueHours').value >= this.maxHours;
  }
  incrementHoursValue() {
    this.form.patchValue({
      valueHours: this.form.get('valueHours').value + 1
    });
  }
  decrementHoursValue() {
    this.form.patchValue({
      valueHours: this.form.get('valueHours').value - 1
    });
  }
  incrementMinutesValue() {
    this.form.patchValue({
      valueMinutes: this.form.get('valueMinutes').value + 1
    });
  }
  decrementMinutesValue() {
    this.form.patchValue({
      valueMinutes: this.form.get('valueMinutes').value - 1
    });
  }
  setDeleteItem() {
    this.form.patchValue({
      deleteItem: true
    });
    return this.form.value;
  }
  validateData() {
    return moment__WEBPACK_IMPORTED_MODULE_2__(this.form.get('startDate').value).isAfter(moment__WEBPACK_IMPORTED_MODULE_2__(this.form.get('endDate').value)) || this.form.get('durationPercentOfDate').value < 0 || !this.validateStartDate(moment__WEBPACK_IMPORTED_MODULE_2__(this.form.get('startDate').value).toDate());
  }
  validateStartDate(startDate) {
    if (moment__WEBPACK_IMPORTED_MODULE_2__(this.minStartDate).isValid() && moment__WEBPACK_IMPORTED_MODULE_2__(this.maxStartDate).isValid()) {
      return startDate >= this.minStartDate && startDate <= this.maxStartDate;
    } else if (moment__WEBPACK_IMPORTED_MODULE_2__(this.minStartDate).isValid()) {
      return startDate >= this.minStartDate;
    } else if (moment__WEBPACK_IMPORTED_MODULE_2__(this.maxStartDate).isValid()) {
      return startDate <= this.maxStartDate;
    } else {
      return true;
    }
  }
  sendFormValue() {
    this.form.patchValue({
      deleteItem: false
    });
    return this.form.value;
  }
  decrementPercentValueOfDate() {
    this.form.patchValue({
      durationPercentOfDate: this.form.get('durationPercentOfDate').value - 1
    });
    this.disableDatePicker();
  }
  shouldDisableDecrementPercentValueOfDate() {
    return this.form.get('durationPercentOfDate').value <= 0;
  }
  incrementPercentValueOfDate() {
    this.form.patchValue({
      durationPercentOfDate: this.form.get('durationPercentOfDate').value + 1
    });
    this.disableDatePicker();
  }
  shouldDisableIncrementPercentValueOfDate() {
    return this.form.get('durationPercentOfDate').value >= 100;
  }
  disableDatePicker() {
    if (this.form.get('durationPercentOfDate').value !== 0) {
      this.form.get('startDate').disable();
      this.form.get('endDate').disable();
    } else {
      this.form.get('startDate').enable();
      this.form.get('endDate').enable();
    }
  }
};
CustomizationDialogComponent.ctorParameters = () => [{
  type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormBuilder
}, {
  type: undefined,
  decorators: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Inject,
    args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__.MAT_DIALOG_DATA]
  }]
}];
CustomizationDialogComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_4__.Component)({
  selector: 'app-customization-dialog',
  template: _customization_dialog_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  providers: [{
    provide: _angular_material_components_datetime_picker__WEBPACK_IMPORTED_MODULE_7__.NGX_MAT_DATE_FORMATS,
    useValue: CUSTOM_DATE_FORMATS
  }],
  encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ViewEncapsulation.None,
  styles: [(_customization_dialog_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
}), (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__metadata)("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormBuilder, Object])], CustomizationDialogComponent);


/***/ }),

/***/ 6740:
/*!**********************************************************************************!*\
  !*** ./apps/web-app/src/app/gantt demo/delete-dialog/delete-dialog.component.ts ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DeleteDialogComponent": () => (/* binding */ DeleteDialogComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 4929);
/* harmony import */ var _delete_dialog_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./delete-dialog.component.html?ngResource */ 7929);
/* harmony import */ var _delete_dialog_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./delete-dialog.component.scss?ngResource */ 5465);
/* harmony import */ var _delete_dialog_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_delete_dialog_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 2560);




let DeleteDialogComponent = class DeleteDialogComponent {
  constructor() {
    this.onPlanningDelete = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    this.onNextBarsDelete = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    this.onSelectionDelete = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
  }
  onPlanningDeleteClicked() {
    this.onPlanningDelete.emit();
  }
  onSelectionDeleteClicked() {
    this.onSelectionDelete.emit();
  }
  onNextBarsDeleteClicked() {
    this.onNextBarsDelete.emit();
  }
};
DeleteDialogComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
  selector: 'app-delete-dialog',
  template: _delete_dialog_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_delete_dialog_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], DeleteDialogComponent);


/***/ }),

/***/ 9254:
/*!**********************************************************************************!*\
  !*** ./apps/web-app/src/app/gantt demo/filter-dialog/filter-dialog.component.ts ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FilterDialogComponent": () => (/* binding */ FilterDialogComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! tslib */ 4929);
/* harmony import */ var _filter_dialog_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./filter-dialog.component.html?ngResource */ 5828);
/* harmony import */ var _filter_dialog_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filter-dialog.component.scss?ngResource */ 9222);
/* harmony import */ var _filter_dialog_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_filter_dialog_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 2560);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/dialog */ 1484);
/* harmony import */ var _angular_material_components_datetime_picker__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular-material-components/datetime-picker */ 820);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ 6067);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ 228);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ 8951);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ 2938);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);









const CUSTOM_DATE_FORMATS = {
  parse: {
    dateInput: 'DD/MM/YYYY HH:mm'
  },
  display: {
    dateInput: 'DD/MM/YYYY HH:mm',
    monthYearLabel: 'MMM YYYY',
    dateA11yLabel: 'LL',
    monthYearA11yLabel: 'MMMM YYYY'
  }
};
let FilterDialogComponent = class FilterDialogComponent {
  constructor(fb, data) {
    var _a;
    this.fb = fb;
    this.color = 'default';
    this.mgFilterCtrl = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControl('');
    this.filteredMgsMulti = new rxjs__WEBPACK_IMPORTED_MODULE_4__.ReplaySubject(1);
    this._onDestroy = new rxjs__WEBPACK_IMPORTED_MODULE_5__.Subject();
    this.selectAllMsg = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControl(false);
    this.selectMsgFromOrder = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControl(false);
    this.allStepsOfProduct = null;
    this.msgsOfOrder = [];
    if (data !== undefined && data !== null) {
      this.machineGroups = data.machineGroups.sort((a, b) => a.name.localeCompare(b.name));
      this.allStepsOfProduct = data.allStepsOfProduct;
      if (this.allStepsOfProduct) {
        const msgIdsOfOrder = this.allStepsOfProduct.map(x => x.machineType.id);
        this.msgsOfOrder = this.machineGroups.filter(msg => msgIdsOfOrder.includes(msg.id));
      }
      const filteredMachineGroupsIdsInLocalStorage = JSON.parse(localStorage.getItem('filteredMachineGroups'));
      this.filteredMgs = lodash__WEBPACK_IMPORTED_MODULE_2__.cloneDeep(this.machineGroups).filter(x => filteredMachineGroupsIdsInLocalStorage === null || filteredMachineGroupsIdsInLocalStorage === void 0 ? void 0 : filteredMachineGroupsIdsInLocalStorage.some(y => y === x.id));
      this.mgFromControl = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControl(((_a = this.filteredMgs) === null || _a === void 0 ? void 0 : _a.length) > 0 ? this.machineGroups.filter(x => this.filteredMgs.some(y => y.id === x.id)) : this.machineGroups);
    }
  }
  ngOnDestroy() {
    this._onDestroy.next();
    this._onDestroy.complete();
  }
  ngOnInit() {
    this.form = this.fb.group({
      machineGroups: this.mgFromControl
    });
    this.filteredMgsMulti.next(this.machineGroups.slice());
    this.mgFilterCtrl.valueChanges.pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_6__.takeUntil)(this._onDestroy)).subscribe(() => {
      this.filterBanksMulti();
    });
    this.initialCheckCheckbox();
  }
  sendFormValue() {
    return this.form.value;
  }
  initialCheckCheckbox() {
    if (this.form.controls.machineGroups.value.length === this.machineGroups.length) {
      this.selectAllMsg.setValue(true);
      return;
    }
    if (this.msgsOfOrder.every(msg => this.form.controls.machineGroups.value.includes(msg)) && this.msgsOfOrder.length === this.form.controls.machineGroups.value.length) {
      this.selectMsgFromOrder.patchValue(true);
    }
  }
  setChosenMgsToLocalStorage() {
    const chosenMachineGroups = this.form.controls.machineGroups.value.map(x => x.id);
    //if all mgs selected do not store in localStorage
    if (chosenMachineGroups.length !== this.machineGroups.length) {
      localStorage.setItem('filteredMachineGroups', JSON.stringify(chosenMachineGroups));
    } else {
      localStorage.removeItem('filteredMachineGroups');
    }
  }
  togglePerOne() {
    this.mgFromControl.markAsDirty();
    this.selectAllMsg.setValue(false);
    this.selectMsgFromOrder.setValue(false);
    if (this.form.controls.machineGroups.value.length == this.machineGroups.length) {
      this.selectAllMsg.setValue(true);
      return;
    }
    if (this.form.controls.machineGroups.value.every(msg => this.msgsOfOrder.includes(msg)) && this.msgsOfOrder.length === this.form.controls.machineGroups.value.length) {
      this.selectMsgFromOrder.setValue(true);
      return;
    }
  }
  toggleAllSelection() {
    this.mgFromControl.markAsDirty();
    if (this.selectAllMsg.value) {
      this.selectMsgFromOrder.patchValue(false);
      this.form.controls.machineGroups.patchValue([...this.machineGroups]);
    } else {
      this.form.controls.machineGroups.patchValue([]);
    }
  }
  toggleFromOrderSelection() {
    this.mgFromControl.markAsDirty();
    if (this.selectMsgFromOrder.value) {
      this.selectAllMsg.patchValue(false);
      this.form.controls.machineGroups.setValue([...this.msgsOfOrder]);
    } else {
      this.form.controls.machineGroups.patchValue([]);
    }
  }
  filterBanksMulti() {
    if (!this.machineGroups) {
      return;
    }
    // get the search keyword
    let search = this.mgFilterCtrl.value;
    if (!search) {
      this.filteredMgsMulti.next(this.machineGroups.slice());
      return;
    } else {
      search = search.toLowerCase();
    }
    // filter the mgs
    this.filteredMgsMulti.next(this.machineGroups.filter(mg => mg.name.toLowerCase().indexOf(search) > -1));
  }
  disableSave() {
    return this.mgFromControl.pristine || this.mgFromControl.value.length === 0;
  }
};
FilterDialogComponent.ctorParameters = () => [{
  type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormBuilder
}, {
  type: undefined,
  decorators: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__.Inject,
    args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_8__.MAT_DIALOG_DATA]
  }]
}];
FilterDialogComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_7__.Component)({
  selector: 'app-filter-dialog',
  template: _filter_dialog_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  providers: [{
    provide: _angular_material_components_datetime_picker__WEBPACK_IMPORTED_MODULE_10__.NGX_MAT_DATE_FORMATS,
    useValue: CUSTOM_DATE_FORMATS
  }],
  styles: [(_filter_dialog_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
}), (0,tslib__WEBPACK_IMPORTED_MODULE_9__.__metadata)("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormBuilder, Object])], FilterDialogComponent);


/***/ }),

/***/ 5582:
/*!**************************************************************!*\
  !*** ./apps/web-app/src/app/gantt demo/gantt-demo.module.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GanttDemoModule": () => (/* binding */ GanttDemoModule)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! tslib */ 4929);
/* harmony import */ var _angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/cdk/drag-drop */ 7727);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/common */ 4666);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/core */ 2560);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/router */ 124);
/* harmony import */ var _ngrx_effects__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @ngrx/effects */ 5405);
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @ngrx/store */ 3488);
/* harmony import */ var _ngx_formly_core__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @ngx-formly/core */ 4599);
/* harmony import */ var _core_store_reducers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/store/reducers */ 5986);
/* harmony import */ var _material_material_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../material/material.module */ 4653);
/* harmony import */ var _shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared */ 9961);
/* harmony import */ var _customization_dialog_customization_dialog_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./customization-dialog/customization-dialog.component */ 506);
/* harmony import */ var _filter_dialog_filter_dialog_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./filter-dialog/filter-dialog.component */ 9254);
/* harmony import */ var _delete_dialog_delete_dialog_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./delete-dialog/delete-dialog.component */ 6740);
/* harmony import */ var _view_settings_view_settings_dialog_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./view-settings/view-settings-dialog.component */ 4931);
/* harmony import */ var _vis_timeline_vis_timeline_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./vis-timeline/vis-timeline.component */ 9198);
/* harmony import */ var _extensions_FormlyExtensionSimpleField__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../extensions/FormlyExtensionSimpleField */ 4104);
/* harmony import */ var _extensions_FormlyWrapperDynamicStyle__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../extensions/FormlyWrapperDynamicStyle */ 8393);
/* harmony import */ var ngx_mat_select_search__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ngx-mat-select-search */ 8322);
/* harmony import */ var _suborders_planning_dialog_suborders_planning_dialog_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./suborders-planning-dialog/suborders-planning-dialog.component */ 4045);
/* harmony import */ var _core_components_list_item_list_item_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../core/components/list-item/list-item.component */ 9414);
/* harmony import */ var _shared_pipes_pipe_module__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../shared/pipes/pipe.module */ 8068);
/* harmony import */ var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @angular/material/form-field */ 5074);
/* harmony import */ var _core_components_search_field_search_field_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../core/components/search-field/search-field.component */ 1767);

























let GanttDemoModule = class GanttDemoModule {};
GanttDemoModule = (0,tslib__WEBPACK_IMPORTED_MODULE_14__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_15__.NgModule)({
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_16__.CommonModule, _material_material_module__WEBPACK_IMPORTED_MODULE_1__.MaterialModule, _shared__WEBPACK_IMPORTED_MODULE_2__.SharedModule, _angular_router__WEBPACK_IMPORTED_MODULE_17__.RouterModule.forChild([{
    path: 'timeline',
    component: _vis_timeline_vis_timeline_component__WEBPACK_IMPORTED_MODULE_7__.VisTimelineComponent
  }]), _ngrx_store__WEBPACK_IMPORTED_MODULE_18__.StoreModule.forFeature('lazyFeature', _core_store_reducers__WEBPACK_IMPORTED_MODULE_0__.reducers), _ngrx_effects__WEBPACK_IMPORTED_MODULE_19__.EffectsModule.forFeature([]), _material_material_module__WEBPACK_IMPORTED_MODULE_1__.MaterialModule, _angular_forms__WEBPACK_IMPORTED_MODULE_20__.ReactiveFormsModule, _angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_21__.CdkDrag, _angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_21__.CdkDropList, _angular_forms__WEBPACK_IMPORTED_MODULE_20__.FormsModule, _ngx_formly_core__WEBPACK_IMPORTED_MODULE_22__.FormlyModule, ngx_mat_select_search__WEBPACK_IMPORTED_MODULE_23__.NgxMatSelectSearchModule, _core_components_list_item_list_item_component__WEBPACK_IMPORTED_MODULE_11__.ListItemComponent, _shared_pipes_pipe_module__WEBPACK_IMPORTED_MODULE_12__.PipeModule, _core_components_search_field_search_field_component__WEBPACK_IMPORTED_MODULE_13__.SearchFieldComponent],
  declarations: [_vis_timeline_vis_timeline_component__WEBPACK_IMPORTED_MODULE_7__.VisTimelineComponent, _customization_dialog_customization_dialog_component__WEBPACK_IMPORTED_MODULE_3__.CustomizationDialogComponent, _filter_dialog_filter_dialog_component__WEBPACK_IMPORTED_MODULE_4__.FilterDialogComponent, _delete_dialog_delete_dialog_component__WEBPACK_IMPORTED_MODULE_5__.DeleteDialogComponent, _view_settings_view_settings_dialog_component__WEBPACK_IMPORTED_MODULE_6__.ViewSettingsDialogComponent, _extensions_FormlyExtensionSimpleField__WEBPACK_IMPORTED_MODULE_8__.FormlyExtensionSimpleField, _extensions_FormlyWrapperDynamicStyle__WEBPACK_IMPORTED_MODULE_9__.FormlyWrapperDynamicStyle, _suborders_planning_dialog_suborders_planning_dialog_component__WEBPACK_IMPORTED_MODULE_10__.SubordersPlanningDialogComponent],
  providers: [{
    provide: _angular_material_form_field__WEBPACK_IMPORTED_MODULE_24__.MAT_FORM_FIELD_DEFAULT_OPTIONS,
    useValue: {
      subscriptSizing: 'dynamic'
    }
  }]
})], GanttDemoModule);


/***/ }),

/***/ 8131:
/*!********************************************************************!*\
  !*** ./apps/web-app/src/app/gantt demo/production-data.service.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ProductionDataService": () => (/* binding */ ProductionDataService)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 4929);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ 8987);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 2560);



let ProductionDataService = class ProductionDataService {
  constructor(http) {
    this.http = http;
    this.apiUrl = 'http://172.27.40.38:5010/api/hicumes/';
    // Get
    this.productionOrdersUrl = this.apiUrl + 'productionOrders';
    this.allMachineTypesUrl = this.apiUrl + 'machineTypes';
    this.productionStepsOfProduct = this.apiUrl + 'productionStepsOfProduct';
    this.assignedMachineOccupationsUrl = this.apiUrl + 'assignedMachineOccupations';
    this.allProductionSteps = this.apiUrl + 'productionSteps';
    this.ordersOfStep = this.apiUrl + 'ordersContainingStep';
    // Post
    this.postMachineOccupationUrl = this.apiUrl + 'createMachineOccupation';
    // Put
    this.putMachineOccupationUrl = this.apiUrl + 'updateMachineOccupations';
    // Delete
    this.deleteMachineOccupationUrl = this.apiUrl + 'deleteMachineOccupations';
  }
  getProductionOrders(filteredMGs, ref, searchTerm = '') {
    filteredMGs = filteredMGs || [];
    const queryParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__.HttpParams({
      fromObject: {
        'filteredMachineTypes': filteredMGs,
        'pageNumber': ref,
        'searchTerm': searchTerm
      }
    });
    const x = this.http.get(this.productionOrdersUrl, {
      params: queryParams
    });
    return x;
  }
  getAssignedMachineOccupations() {
    return this.http.get(this.assignedMachineOccupationsUrl);
  }
  // getMachinesOfProductionOrder(productId) : Observable<any[]> {
  //   let queryParams = new HttpParams();
  //   queryParams = queryParams.append('productId',productId);
  //
  //   return this.http.get<any[]>(this.machinesOfProductionOrderUrl, {params: queryParams});
  // }
  // getMachineTypesOfProductionOrder(productId) : Observable<any[]> {
  //   let queryParams = new HttpParams();
  //   queryParams = queryParams.append('productId',productId);
  //
  //   return this.http.get<any[]>(this.machineTypesOfProductionOrderUrl, {params: queryParams});
  // }
  getAllMachineTypes() {
    return this.http.get(this.allMachineTypesUrl);
  }
  getProductionStepsOfProduct(productId, orderId) {
    let queryParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__.HttpParams();
    queryParams = queryParams.append('productId', productId);
    queryParams = queryParams.append('productionOrderId', orderId);
    const result = this.http.get(this.productionStepsOfProduct, {
      params: queryParams
    });
    return result;
  }
  getOrdersOfProductionStep(productionStepName, machinenTypeId, ref, searchTerm = '') {
    let queryParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__.HttpParams();
    queryParams = queryParams.append('productionStepName', productionStepName);
    queryParams = queryParams.append('machineTypeId', machinenTypeId);
    queryParams = queryParams.append('pageNumber', ref);
    queryParams = queryParams.append('searchTerm', searchTerm);
    return this.http.get(this.ordersOfStep, {
      params: queryParams
    });
  }
  getAllProductionSteps(filteredMGs, ref, searchTerm = '') {
    filteredMGs = filteredMGs || [];
    const queryParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__.HttpParams({
      fromObject: {
        'filteredMachineTypes': filteredMGs,
        'pageNumber': ref,
        'searchTerm': searchTerm
      }
    });
    return this.http.get(this.allProductionSteps, {
      params: queryParams
    });
  }
  postMachineOccupation(body) {
    const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__.HttpHeaders({
      'content-type': 'application/json'
    });
    body = JSON.stringify(body);
    return this.http.post(this.postMachineOccupationUrl, body, {
      headers: headers
    });
  }
  putMachineOccupation(body) {
    const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__.HttpHeaders({
      'content-type': 'application/json'
    });
    const updatedBody = JSON.stringify(body);
    return this.http.put(this.putMachineOccupationUrl, updatedBody, {
      headers: headers,
      responseType: 'json'
    });
  }
  deleteMachineOccupations(body) {
    const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__.HttpHeaders({
      'content-type': 'application/json'
    });
    const deletedBody = JSON.stringify(body);
    return this.http.delete(this.deleteMachineOccupationUrl, {
      headers: headers,
      body: deletedBody
    });
  }
};
ProductionDataService.ctorParameters = () => [{
  type: _angular_common_http__WEBPACK_IMPORTED_MODULE_0__.HttpClient
}];
ProductionDataService = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Injectable)({
  providedIn: 'root'
}), (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__metadata)("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_0__.HttpClient])], ProductionDataService);


/***/ }),

/***/ 4045:
/*!**********************************************************************************************************!*\
  !*** ./apps/web-app/src/app/gantt demo/suborders-planning-dialog/suborders-planning-dialog.component.ts ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SubordersPlanningDialogComponent": () => (/* binding */ SubordersPlanningDialogComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ 4929);
/* harmony import */ var _suborders_planning_dialog_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./suborders-planning-dialog.component.html?ngResource */ 2429);
/* harmony import */ var _suborders_planning_dialog_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./suborders-planning-dialog.component.scss?ngResource */ 9162);
/* harmony import */ var _suborders_planning_dialog_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_suborders_planning_dialog_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2560);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/dialog */ 1484);






let SubordersPlanningDialogComponent = class SubordersPlanningDialogComponent {
  constructor(fb, data) {
    this.fb = fb;
    this.subordersAmount = 0;
    this.plannedSubordersItems = [];
    this.ordersAmountToBePlanned = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__.FormControl(0);
    this.collectionOrdersAmount = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__.FormControl(0);
    this.ordersLeft = 0;
    if (data !== undefined && data !== null) {
      this.subordersAmount = data.subordersAmount;
      this.plannedSubordersItems = data.plannedSubordersItems;
    }
  }
  ngOnInit() {
    var _a;
    if (this.subordersAmount > 0) {
      this.form = this.fb.group({
        ordersAmountToBePlanned: this.ordersAmountToBePlanned,
        setupTimeChecked: false,
        collectiveOrder: false,
        collectionOrdersAmount: this.collectionOrdersAmount
      });
      this.ordersLeft = this.subordersAmount - ((_a = this.plannedSubordersItems) === null || _a === void 0 ? void 0 : _a.length);
    } else {
      this.form = this.fb.group({
        setupTimeChecked: false,
        collectiveOrder: false,
        ordersAmountToBePlanned: this.ordersAmountToBePlanned
      });
    }
  }
  sendFormValue() {
    return this.form.value;
  }
  checkSelection() {
    var _a, _b, _c;
    const checkAmountToBePlanned = !(this.ordersAmountToBePlanned.value > 0 && this.ordersAmountToBePlanned.value <= this.ordersLeft);
    let checkCollectionOrderDetails = false;
    if (!(this.ordersAmountToBePlanned.value > 1 && ((_a = this.form.get('collectiveOrder')) === null || _a === void 0 ? void 0 : _a.value) === true && this.collectionOrdersAmount.value > 1 && ((_b = this.collectionOrdersAmount) === null || _b === void 0 ? void 0 : _b.value) <= this.ordersAmountToBePlanned.value)) {
      checkCollectionOrderDetails = true;
    }
    if (((_c = this.form.get('collectiveOrder')) === null || _c === void 0 ? void 0 : _c.value) === true && this.ordersAmountToBePlanned.value > 1) {
      return checkAmountToBePlanned || checkCollectionOrderDetails;
    } else {
      return checkAmountToBePlanned;
    }
  }
};
SubordersPlanningDialogComponent.ctorParameters = () => [{
  type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__.FormBuilder
}, {
  type: undefined,
  decorators: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_3__.Inject,
    args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__.MAT_DIALOG_DATA]
  }]
}];
SubordersPlanningDialogComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.Component)({
  selector: 'app-filter-dialog',
  template: _suborders_planning_dialog_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_suborders_planning_dialog_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
}), (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__metadata)("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_2__.FormBuilder, Object])], SubordersPlanningDialogComponent);


/***/ }),

/***/ 4931:
/*!*****************************************************************************************!*\
  !*** ./apps/web-app/src/app/gantt demo/view-settings/view-settings-dialog.component.ts ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ViewSettingsDialogComponent": () => (/* binding */ ViewSettingsDialogComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 4929);
/* harmony import */ var _view_settings_dialog_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./view-settings-dialog.component.html?ngResource */ 8352);
/* harmony import */ var _view_settings_dialog_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./view-settings-dialog.component.scss?ngResource */ 2878);
/* harmony import */ var _view_settings_dialog_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_view_settings_dialog_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 2560);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/dialog */ 1484);





let ViewSettingsDialogComponent = class ViewSettingsDialogComponent {
  constructor(data) {
    this.color = 'default';
    console.log('Injected Data:  ', data);
  }
  ngOnInit() {
    console.log("päorsjg");
  }
  sendFormValue() {}
};
ViewSettingsDialogComponent.ctorParameters = () => [{
  type: undefined,
  decorators: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Inject,
    args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__.MAT_DIALOG_DATA]
  }]
}];
ViewSettingsDialogComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
  selector: 'app-view-settings',
  template: _view_settings_dialog_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_view_settings_dialog_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
}), (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__metadata)("design:paramtypes", [Object])], ViewSettingsDialogComponent);


/***/ }),

/***/ 9198:
/*!********************************************************************************!*\
  !*** ./apps/web-app/src/app/gantt demo/vis-timeline/vis-timeline.component.ts ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FlatNode": () => (/* binding */ FlatNode),
/* harmony export */   "VisTimelineComponent": () => (/* binding */ VisTimelineComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! tslib */ 4929);
/* harmony import */ var _vis_timeline_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vis-timeline.component.html?ngResource */ 4610);
/* harmony import */ var _vis_timeline_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vis-timeline.component.scss?ngResource */ 1134);
/* harmony import */ var _vis_timeline_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_vis_timeline_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/cdk/tree */ 5183);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @angular/core */ 2560);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @angular/material/dialog */ 1484);
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/material/tree */ 3453);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ 2938);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! moment */ 6908);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ngx-toastr */ 4817);
/* harmony import */ var node_modules_timeline_arrows_arrow_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! node_modules/timeline-arrows/arrow.js */ 2196);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! rxjs */ 6317);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! rxjs */ 3280);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! rxjs */ 1989);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! rxjs */ 8947);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! rxjs */ 8611);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! rxjs */ 4363);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! rxjs */ 9295);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! rxjs */ 9337);
/* harmony import */ var vis_timeline__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vis-timeline */ 8690);
/* harmony import */ var vis_timeline__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(vis_timeline__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _assets_templates_vis_item_template_json__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../assets/templates/vis-item-template.json */ 3609);
/* harmony import */ var _assets_templates_contracts_list_item_template_json__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../assets/templates/contracts-list-item-template.json */ 1652);
/* harmony import */ var _assets_templates_production_steps_list_item_template_json__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../assets/templates/production-steps-list-item-template.json */ 4723);
/* harmony import */ var _assets_templates_all_production_steps_list_item_template_json__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../assets/templates/all-production-steps-list-item-template.json */ 6265);
/* harmony import */ var _customization_dialog_customization_dialog_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../customization-dialog/customization-dialog.component */ 506);
/* harmony import */ var _filter_dialog_filter_dialog_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../filter-dialog/filter-dialog.component */ 9254);
/* harmony import */ var _production_data_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../production-data.service */ 8131);
/* harmony import */ var _view_settings_view_settings_dialog_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../view-settings/view-settings-dialog.component */ 4931);
/* harmony import */ var _suborders_planning_dialog_suborders_planning_dialog_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../suborders-planning-dialog/suborders-planning-dialog.component */ 4045);
/* harmony import */ var _shared_utils_getTemplate_utils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../shared/utils/getTemplate.utils */ 1452);
/* harmony import */ var _delete_dialog_delete_dialog_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../delete-dialog/delete-dialog.component */ 6740);
/* harmony import */ var _shared_utils_getListItemsHtml_utils__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../shared/utils/getListItemsHtml.utils */ 8814);
/* harmony import */ var _core_components_search_field_search_field_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../core/components/search-field/search-field.component */ 1767);



























class FlatNode {}
const transformer = (node, level) => {
  return Object.assign(Object.assign({
    expandable: !!node.children && node.children.length > 0
  }, node), {
    level: level,
    id: node.id
  });
};
let VisTimelineComponent = class VisTimelineComponent {
  constructor(_service, dialog, toastr, ref) {
    this._service = _service;
    this.dialog = dialog;
    this.toastr = toastr;
    this.ref = ref;
    this.items = [];
    this.groups = [];
    this.machineOccupations = new rxjs__WEBPACK_IMPORTED_MODULE_19__.BehaviorSubject([]);
    this.machineTypes = new rxjs__WEBPACK_IMPORTED_MODULE_19__.BehaviorSubject([]);
    this.allMachineTypes = new rxjs__WEBPACK_IMPORTED_MODULE_19__.BehaviorSubject([]);
    this.productionSteps = new rxjs__WEBPACK_IMPORTED_MODULE_19__.BehaviorSubject([]);
    this.subProductionOrders$ = new rxjs__WEBPACK_IMPORTED_MODULE_19__.BehaviorSubject([]);
    this.addedItem = undefined;
    this.arrowArray = [];
    this.orderViewSelected = true;
    this.productionStepViewSelected = false;
    this.allProductionSteps = new rxjs__WEBPACK_IMPORTED_MODULE_19__.BehaviorSubject([]);
    this.ordersOfStep = new rxjs__WEBPACK_IMPORTED_MODULE_19__.BehaviorSubject([]);
    this.temporarilyDeletedItems = [];
    this.setUnoccupiedMachinesToggleChecked = false;
    this.setViewSelectedOrderPlanToggle = false;
    this.setViewAndEditSelectedOrderPlanToggle = false;
    this.x1 = false;
    this.x2 = false;
    this.x3 = false;
    this.shownGroups = [];
    this.plannedSteps = new rxjs__WEBPACK_IMPORTED_MODULE_19__.BehaviorSubject([]);
    this.isLeftDragging = false;
    this.heightOffset = 232;
    this.contractsTemplate = _assets_templates_contracts_list_item_template_json__WEBPACK_IMPORTED_MODULE_7__;
    this.productionStepsTemplate = _assets_templates_production_steps_list_item_template_json__WEBPACK_IMPORTED_MODULE_8__;
    this.allProductionStepsTemplate = _assets_templates_all_production_steps_list_item_template_json__WEBPACK_IMPORTED_MODULE_9__;
    this.treeControl = new _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_20__.FlatTreeControl(node => node.level, node => node.expandable);
    this.treeFlattener = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_21__.MatTreeFlattener(transformer, node => node.level, node => node.expandable, node => node.children);
    this.productionOrdersDataSource$ = new rxjs__WEBPACK_IMPORTED_MODULE_19__.BehaviorSubject(new _angular_material_tree__WEBPACK_IMPORTED_MODULE_21__.MatTreeFlatDataSource(this.treeControl, this.treeFlattener));
    this.ordersOfStepDataSource$ = new rxjs__WEBPACK_IMPORTED_MODULE_19__.BehaviorSubject(new _angular_material_tree__WEBPACK_IMPORTED_MODULE_21__.MatTreeFlatDataSource(this.treeControl, this.treeFlattener));
    this.currentExpandedNode = null;
    this.gotProductionOrders = false;
    this.ordersListHtml = [];
    this.stepsListHtml = [];
    this.pageOrderNumber = 1;
    this.pageStepNumber = 1;
    this.pageOrderOfStepNumber = 1;
    this.loading = false;
    this.scrolledOrdersToBottom = new rxjs__WEBPACK_IMPORTED_MODULE_19__.BehaviorSubject(false);
    this.scrolledStepsToBottom = new rxjs__WEBPACK_IMPORTED_MODULE_19__.BehaviorSubject(false);
    this.scrolledOrdersOfStepsToBottom = new rxjs__WEBPACK_IMPORTED_MODULE_19__.BehaviorSubject(false);
    this.isScrollable = true;
    this.itemsPerPage = [];
    this.searchTextForProductionOrders$ = new rxjs__WEBPACK_IMPORTED_MODULE_19__.BehaviorSubject('');
    this.searchTextForAllProductionSteps$ = new rxjs__WEBPACK_IMPORTED_MODULE_19__.BehaviorSubject('');
    this.searchTextForOrdersOfStep$ = new rxjs__WEBPACK_IMPORTED_MODULE_19__.BehaviorSubject('');
    this.previousScrollTop = 0;
    this.screenLeft = screenLeft;
    this.event = event;
    this.hasChildAndDifferentProductId = (_, node) => !!node.children && node.children.length > 0 && node.children.some(x => x.productId !== node.productId);
    this.height = window.innerHeight - this.heightOffset;
    this.getOptions();
    window.addEventListener('resize', () => {
      this.height = window.innerHeight - this.heightOffset;
      this.timeline.setOptions({
        height: this.height + 'px'
      });
    });
  }
  ngOnInit() {
    var _a;
    const colWidthDefn = localStorage.getItem('col-width-Definition');
    if (colWidthDefn !== null) {
      const page = document.getElementById('page');
      page.style.gridTemplateColumns = colWidthDefn;
    }
    this.contractsFormat = item => {
      var _a, _b, _c, _d;
      const week = moment__WEBPACK_IMPORTED_MODULE_3___default()(item.deadline).week();
      return {
        content: item.name,
        product: item.product ? item.product.name : 'Nicht vorhanden',
        amount: item.amount,
        unit: item.unitString,
        container: ((_a = item.subProductionOrders) === null || _a === void 0 ? void 0 : _a.length) > 0 ? (_b = item.subProductionOrders) === null || _b === void 0 ? void 0 : _b.length : " ",
        empty: ((_c = item.subProductionOrders) === null || _c === void 0 ? void 0 : _c.filter(x => x.productId !== item.productId).length) > 0 || item.parentProductionOrderId !== null ? 1 : ((_d = item.subProductionOrders) === null || _d === void 0 ? void 0 : _d.filter(x => x.productId === item.productId).length) > 0 && item.parentProductionOrderId === null ? 0 : 2,
        deadline: !isNaN(week) ? ('' + week).length < 2 ? 0 + week : week : 'Nicht vorhanden'
      };
    };
    this._service.getProductionOrders((_a = JSON.parse(localStorage.getItem('filteredMachineGroups'))) !== null && _a !== void 0 ? _a : [], 1).subscribe(y => {
      this.gotProductionOrders = true;
      this.itemsPerPage[this.pageOrderNumber - 1] = y.length;
      //Tree view
      this.productionOrdersDataSource$.getValue().data = this.mapProductionOrders(y, 1);
      this.ordersListHtml = (0,_shared_utils_getListItemsHtml_utils__WEBPACK_IMPORTED_MODULE_17__.getListItemsHtml)(this.productionOrdersDataSource$.getValue().data, this.contractsTemplate, this.contractsFormat);
      this.ref.detectChanges();
    });
    this.getAssignedMachineOccupations().then(() => {
      this.getAllMachineTypes().then(() => {
        this.setupTimeline();
      });
    });
    this.productionStepsFormat = item => {
      var _a;
      return {
        productionStep: item.name,
        machineType: (_a = item.machineType) === null || _a === void 0 ? void 0 : _a.name,
        // To Do: Plural and single Behälter, Aufträge
        container: this.getSubOrdersInformation(item).subordersAmount > 0 ? this.getSubOrdersInformation(item).subordersAmount - this.getSubOrdersInformation(item).plannedSubordersAmount + '/' + this.getSubOrdersInformation(item).subordersAmount + ' Containern noch nicht verplant' : ''
      };
    };
    this.allProductionStepsFormat = item => {
      var _a;
      return {
        productionStep: item.name,
        machineType: (_a = item.machineType) === null || _a === void 0 ? void 0 : _a.name
      };
    };
  }
  ngAfterViewInit() {
    this.barsConstraints.checked = true;
    if (this.scroller1 && this.scroller1.nativeElement) {
      this.scrollSubscription1 = (0,rxjs__WEBPACK_IMPORTED_MODULE_22__.fromEvent)(this.scroller1.nativeElement, 'scroll').pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_23__.debounceTime)(200)).subscribe(event => this.onScrollOrders(event));
    }
    if (this.scroller2 && this.scroller2.nativeElement) {
      this.scrollSubscription2 = (0,rxjs__WEBPACK_IMPORTED_MODULE_22__.fromEvent)(this.scroller2.nativeElement, 'scroll').pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_23__.debounceTime)(200)).subscribe(event => this.onScrollOrders(event));
    }
    if (this.scroller3 && this.scroller3.nativeElement) {
      this.scrollSubscription3 = (0,rxjs__WEBPACK_IMPORTED_MODULE_22__.fromEvent)(this.scroller3.nativeElement, 'scroll').pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_23__.debounceTime)(200)).subscribe(event => this.onScrollOrders(event));
    }
  }
  ngOnDestroy() {
    if (this.scrollSubscription1) {
      this.scrollSubscription1.unsubscribe();
    }
    if (this.scrollSubscription2) {
      this.scrollSubscription2.unsubscribe();
    }
    if (this.scrollSubscription3) {
      this.scrollSubscription3.unsubscribe();
    }
  }
  onScroll(event, pageNumber, scrolledToBottom, getData,
  // This function is a generic data fetching service
  dataSource$, useMapProductionOrders = true, scrollSubscription, scroller, listHtml, template, format) {
    const element = event.target;
    const tolerance = 5;
    if (!this.loading && element.scrollHeight - element.scrollTop <= element.clientHeight + tolerance) {
      if (!scrolledToBottom.getValue()) {
        this.previousScrollTop = element.scrollTop;
        this.loading = true;
        pageNumber = pageNumber + 1;
        if (scrollSubscription) {
          scrollSubscription.unsubscribe();
        }
        getData(pageNumber).subscribe(data => {
          if (data.length > 0) {
            (0,rxjs__WEBPACK_IMPORTED_MODULE_24__.timer)(1000).subscribe(() => {
              this.itemsPerPage[pageNumber - 1] = data.length;
              const mappedOrders = useMapProductionOrders ? this.mapProductionOrders(data, pageNumber) : data;
              const updatedData = dataSource$.getValue().data ? dataSource$.getValue().data.concat(mappedOrders) : dataSource$.getValue().concat(mappedOrders);
              if (dataSource$.getValue().data) {
                dataSource$.getValue().data = updatedData;
              } else {
                dataSource$.next(updatedData);
              }
              if (listHtml) {
                listHtml.length = 0; // Clear the array
                listHtml.push(...(0,_shared_utils_getListItemsHtml_utils__WEBPACK_IMPORTED_MODULE_17__.getListItemsHtml)(updatedData, template, format));
              }
              this.ref.detectChanges();
              this.loading = false;
              // Reattach scroll listener after loading
              scrollSubscription = (0,rxjs__WEBPACK_IMPORTED_MODULE_22__.fromEvent)(scroller.nativeElement, 'scroll').pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_23__.debounceTime)(200)).subscribe(event => this.onScroll(event, pageNumber, scrolledToBottom, getData, dataSource$, useMapProductionOrders, scrollSubscription, scroller, listHtml, template, format));
              // Check if scroll position has changed due to content load
              const element = scroller === null || scroller === void 0 ? void 0 : scroller.nativeElement;
              if (element && element.scrollTop !== this.previousScrollTop) {
                // If the scroll position changed automatically, reset it
                element.scrollTop = this.previousScrollTop;
              }
            });
          } else {
            scrolledToBottom.next(true);
            pageNumber = pageNumber - 1;
            this.loading = false;
            // Reattach scroll listener
            scrollSubscription = (0,rxjs__WEBPACK_IMPORTED_MODULE_22__.fromEvent)(scroller.nativeElement, 'scroll').pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_23__.debounceTime)(200)).subscribe(event => this.onScroll(event, pageNumber, scrolledToBottom, getData, dataSource$, useMapProductionOrders, scrollSubscription, scroller, listHtml, template, format));
          }
        });
      }
    }
    return pageNumber;
  }
  onScrollOrders(event) {
    this.pageOrderNumber = this.onScroll(event, this.pageOrderNumber, this.scrolledOrdersToBottom, page => {
      var _a;
      return this._service.getProductionOrders((_a = JSON.parse(localStorage.getItem('filteredMachineGroups'))) !== null && _a !== void 0 ? _a : [], page);
    }, this.productionOrdersDataSource$, true, this.scrollSubscription1, this.scroller1, this.ordersListHtml, this.contractsTemplate, this.contractsFormat);
  }
  onScrollSteps(event) {
    this.pageStepNumber = this.onScroll(event, this.pageStepNumber, this.scrolledStepsToBottom, page => {
      var _a;
      return this._service.getAllProductionSteps((_a = JSON.parse(localStorage.getItem('filteredMachineGroups'))) !== null && _a !== void 0 ? _a : [], page);
    }, this.allProductionSteps, false, this.scrollSubscription2, this.scroller2, this.stepsListHtml, this.allProductionStepsTemplate, this.allProductionStepsFormat);
  }
  onScrollOrdersOfSteps(event) {
    this.pageOrderOfStepNumber = this.onScroll(event, this.pageOrderOfStepNumber, this.scrolledOrdersOfStepsToBottom, page => this._service.getOrdersOfProductionStep(this.selectedStep.name, this.selectedStep.machineTypeId, page), this.ordersOfStepDataSource$, true, this.scrollSubscription3, this.scroller3);
  }
  resetColumnSizes() {
    // when page resizes return to default col sizes
    const page = document.getElementById('pageFrame');
    page.style.gridTemplateColumns = '2fr 6px 6fr 6px 2fr';
  }
  setCursor(cursor) {
    const page = document.getElementById('page');
    page.style.cursor = cursor;
  }
  startWidthDrag(e) {
    this.isLeftDragging = true;
    this.setCursor('ew-resize');
  }
  endWidthDrag() {
    this.isLeftDragging = false;
    this.setCursor('auto');
  }
  onWidthDrag($event) {
    if (this.isLeftDragging) {
      const page = document.getElementById('page');
      const leftCol = document.getElementById('leftCol');
      const leftColWidth = this.isLeftDragging ? $event.clientX - 40 : leftCol.clientWidth;
      const cols = [leftColWidth + 'px', '6px', 'auto'];
      const newColDefn = cols.join(' ');
      localStorage.setItem('col-width-Definition', newColDefn);
      page.style.gridTemplateColumns = newColDefn;
      $event.preventDefault();
    }
  }
  expandOrCollapseNode(node) {
    if (this.currentExpandedNode === node) {
      this.treeControl.collapse(node);
      node.isCollapsed = true;
      this.subProductionOrders$.next([]);
      this.currentExpandedNode = null;
    } else {
      this.treeControl.collapseAll();
      this.productionOrdersDataSource$.getValue().data.forEach(x => {
        x.isCollapsed = true;
      });
      this.treeControl.expand(node);
      node.isCollapsed = false;
      this.subProductionOrders$.next(node.children);
      this.currentExpandedNode = node;
    }
    this.ref.detectChanges();
  }
  setupTimeline() {
    this.timeline = new vis_timeline__WEBPACK_IMPORTED_MODULE_5__.Timeline(this.timelineContainer.nativeElement, this.items, [], this.options);
    this.timeline.on('drop', props => this.onDrop(props));
    this.timeline.on('doubleClick', props => this.openCustomizationDialog(props));
    this.timeline.setGroups(this.groups);
    this.timeline.setItems(this.items);
    this.timeline.on('changed', function () {
      const outerCollection = window.document.getElementsByClassName('vis-foreground')[0].getElementsByClassName('rangechange');
      Array.from(outerCollection).forEach(outer => {
        let width = outer.style.width;
        width = width.substring(0, width.length - 2);
        const inner = outer.getElementsByClassName('vis-item-content')[0];
        let translate = inner.style.transform;
        translate = translate.substring(translate.indexOf('(') + 1, translate.lastIndexOf(')') - 2);
        const innerWidth = parseInt(width) - parseInt(translate);
        inner.style.width = innerWidth + 'px';
      });
    });
  }
  getAllMachineTypes() {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_25__.__awaiter)(this, void 0, void 0, function* () {
      const result = yield (0,rxjs__WEBPACK_IMPORTED_MODULE_26__.lastValueFrom)(this._service.getAllMachineTypes());
      this.allMachineTypes.next(result);
      this.setGroupsOfTimeline(true, false);
    });
  }
  getAllProductionOrders() {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_25__.__awaiter)(this, void 0, void 0, function* () {
      const filteredMGs = JSON.parse(localStorage.getItem('filteredMachineGroups'));
      const result = yield (0,rxjs__WEBPACK_IMPORTED_MODULE_26__.lastValueFrom)(this._service.getProductionOrders(filteredMGs !== null && filteredMGs !== void 0 ? filteredMGs : [], this.pageOrderNumber));
      if (this.pageOrderNumber > 1) {
        this.productionOrdersDataSource$.getValue().data = this.productionOrdersDataSource$.getValue().data.concat(this.mapProductionOrders(result, this.pageOrderNumber));
      } else {
        this.productionOrdersDataSource$.getValue().data = this.mapProductionOrders(result, this.pageOrderNumber);
      }
    });
  }
  setGroupsOfTimeline(checkFilteredMachineGroups, filterUnoccupiedMachines) {
    var _a;
    if (!checkFilteredMachineGroups && !filterUnoccupiedMachines) return;
    const filteredMgsIds = JSON.parse(localStorage.getItem('filteredMachineGroups'));
    const filteredMgs = lodash__WEBPACK_IMPORTED_MODULE_2__.cloneDeep(this.allMachineTypes.value).filter(x => filteredMgsIds === null || filteredMgsIds === void 0 ? void 0 : filteredMgsIds.includes(x.id));
    const idsOfOccupiedMachines = (_a = this.items) === null || _a === void 0 ? void 0 : _a.map(x => x === null || x === void 0 ? void 0 : x.group);
    let machineTypes = lodash__WEBPACK_IMPORTED_MODULE_2__.cloneDeep(this.allMachineTypes.value);
    if ((machineTypes === null || machineTypes === void 0 ? void 0 : machineTypes.length) > 0) {
      if (this.groups.length > 0) {
        this.groups = [];
      }
      if (filterUnoccupiedMachines) {
        let machines = machineTypes.flatMap(x => x.cdMachines);
        machines = machines.filter(m => idsOfOccupiedMachines.includes(m.id));
        if (checkFilteredMachineGroups && filteredMgsIds) {
          machines = machines.filter(x => filteredMgsIds.includes(x.machineTypeId));
        }
        machineTypes = machineTypes.filter(mt => machines.map(m => m.machineTypeId).includes(mt.id));
        machineTypes.forEach(mt => {
          mt.cdMachines = machines.filter(m => m.machineTypeId === mt.id);
        });
        machineTypes.forEach(x => {
          var _a;
          (_a = x.cdMachines) === null || _a === void 0 ? void 0 : _a.forEach(m => {
            this.groups.push({
              id: m.id,
              content: m.name
            });
          });
          this.groups.push({
            id: x.id * 999,
            content: x.name,
            nestedGroups: x.cdMachines.map(y => y.id),
            showNested: true
          });
        });
        this.items = this.items.filter(x => this.groups.map(g => g.id).includes(x.group));
        return;
      }
      if (checkFilteredMachineGroups && (filteredMgsIds === null || filteredMgsIds === void 0 ? void 0 : filteredMgsIds.length) > 0) {
        filteredMgs.forEach(x => {
          var _a;
          (_a = x.cdMachines) === null || _a === void 0 ? void 0 : _a.forEach(m => {
            this.groups.push({
              id: m.id,
              content: m.name
            });
          });
          this.groups.push({
            id: x.id * 999,
            content: x.name,
            nestedGroups: x.cdMachines.map(y => y.id),
            showNested: true
          });
        });
      } else {
        machineTypes.forEach(x => {
          var _a;
          (_a = x.cdMachines) === null || _a === void 0 ? void 0 : _a.forEach(m => {
            this.groups.push({
              id: m.id,
              content: m.name
            });
          });
          this.groups.push({
            id: x.id * 999,
            content: x.name,
            nestedGroups: x.cdMachines.map(y => y.id),
            showNested: true
          });
        });
      }
    }
  }
  constructTimelineItemFromMachineOccupation(mc) {
    var _a, _b, _c, _d, _e;
    if (mc.plannedStartDateTime !== null && mc.plannedStartDateTime !== undefined && mc.plannedEndDateTime !== null && mc.plannedEndDateTime !== undefined && mc.plannedEndDateTime >= mc.plannedStartDateTime && !this.items.some(x => (x === null || x === void 0 ? void 0 : x.id) === mc.id)) {
      const machineType = this.allMachineTypes.value.find(x => x.cdMachines.find(y => y.id === mc.machineId));
      const machine = (_a = machineType === null || machineType === void 0 ? void 0 : machineType.cdMachines) === null || _a === void 0 ? void 0 : _a.find(m => m.id === mc.machineId);
      const step = mc.productionSteps[0];
      step.machineType = machineType;
      let amountOfSubMachineOccupation = 0;
      if (((_b = mc.subMachineOccupation) === null || _b === void 0 ? void 0 : _b.length) > 0) {
        amountOfSubMachineOccupation = mc.subMachineOccupation.map(x => {
          var _a;
          return (_a = x.productionOrder) === null || _a === void 0 ? void 0 : _a.amount;
        }).reduce(function (a, b) {
          return a + b;
        });
      }
      if (mc.plannedStartDateTime === mc.plannedEndDateTime) {
        mc.plannedEndDateTime = moment__WEBPACK_IMPORTED_MODULE_3___default()(mc.plannedStartDateTime).add(1, 'minute');
      }
      const item = {
        id: mc.id,
        content: mc.name,
        group: mc.machineId ? mc.machineId : step.machineTypeId * 999,
        type: 'range',
        className: 'colored',
        start: mc.plannedStartDateTime,
        end: mc.plannedEndDateTime,
        editable: {
          updateTime: true,
          remove: true,
          updateGroup: false
        },
        amount: ((_c = mc.subMachineOccupation) === null || _c === void 0 ? void 0 : _c.length) > 0 ? amountOfSubMachineOccupation : mc.productionOrder.amount,
        unit: mc.productionOrder.unitString,
        productionStepId: step.id,
        productionStep: step,
        productionStepSequence: step.sequence,
        productionOrder: mc.productionOrder,
        machine: machine,
        product: (_d = step.product) === null || _d === void 0 ? void 0 : _d.name
      };
      if (((_e = mc.subMachineOccupations) === null || _e === void 0 ? void 0 : _e.length) > 0) {
        mc.subMachineOccupations.forEach(x => {
          const subItem = this.constructTimelineItemFromMachineOccupation(x);
          if (subItem) {
            if (!item.subMachineOccupations) {
              item.subMachineOccupations = [subItem];
            } else {
              item.subMachineOccupations.push(subItem);
            }
          }
        });
      }
      return item;
    }
  }
  setTimelineItems(machineOccupations) {
    const unsavedItems = this.getUnsavedItems(this.items);
    this.items.length = 0;
    machineOccupations.forEach(mc => {
      const item = this.constructTimelineItemFromMachineOccupation(mc);
      if (item) {
        this.items.push(item);
      }
    });
    this.items = this.items.concat(unsavedItems);
    this.timeline.setItems(this.items);
  }
  getAssignedMachineOccupations() {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_25__.__awaiter)(this, void 0, void 0, function* () {
      let result = yield (0,rxjs__WEBPACK_IMPORTED_MODULE_27__.firstValueFrom)(this._service.getAssignedMachineOccupations());
      const filteredMgsIds = JSON.parse(localStorage.getItem('filteredMachineGroups'));
      if (filteredMgsIds && (filteredMgsIds === null || filteredMgsIds === void 0 ? void 0 : filteredMgsIds.length) > 0) {
        result = result.filter(x => filteredMgsIds === null || filteredMgsIds === void 0 ? void 0 : filteredMgsIds.includes(x.productionSteps[0].machineTypeId));
      }
      this.machineOccupations.next(result);
    });
  }
  getOptions() {
    const today = new Date(new Date(Date.now()).setHours(0, 0, 0, 0));
    const tomorrow = new Date(new Date(Date.now()).setHours(23, 59, 59, 999) + 1);
    this.options = {
      onInitialDrawComplete: () => this.setTimelineItems(this.machineOccupations.value),
      stack: true,
      start: today,
      end: tomorrow,
      itemsAlwaysDraggable: true,
      editable: {
        remove: true,
        updateTime: true,
        updateGroup: false
      },
      orientation: 'top',
      showMajorLabels: true,
      zoomable: true,
      xss: {
        disabled: true
      },
      template: item => {
        return (0,_shared_utils_getTemplate_utils__WEBPACK_IMPORTED_MODULE_15__.getTemplate)(item, _assets_templates_vis_item_template_json__WEBPACK_IMPORTED_MODULE_6__);
      },
      showTooltips: true,
      autoResize: true,
      showWeekScale: true,
      onRemove: item => this.openDeleteDialog(item),
      tooltip: {
        followMouse: true,
        delay: 5,
        template: function (item) {
          const newItem = item;
          return '<p>Auftragsnummer: ' + newItem.content + '</p>' + '<p> Artikelnummer: ' + newItem.product + '</p>';
        }
      },
      horizontalScroll: true,
      verticalScroll: true,
      zoomKey: 'shiftKey',
      zoomMin: 300000,
      zoomMax: 31536000000,
      snap: null,
      onMove: item => this.onMoveItem(item),
      height: this.height + 'px',
      margin: {
        item: {
          horizontal: 0
        }
      },
      multiselectPerGroup: true,
      selectable: true,
      multiselect: true
    };
  }
  onMoveItem(item) {
    var _a;
    const itemBeforeMoving = this.items.find(x => x.id === item.id);
    const movedItem = item;
    const arr = this.items;
    let previousItems = arr.filter(x => {
      var _a, _b, _c, _d;
      return (x.productionOrder.id === movedItem.productionOrder.id || ((_a = x.subMachineOccupations) === null || _a === void 0 ? void 0 : _a.some(mo => mo.productionOrder.id === movedItem.productionOrder.id)) || ((_b = movedItem.subMachineOccupations) === null || _b === void 0 ? void 0 : _b.some(mo => mo.productionOrder.id === x.productionOrder.id)) || ((_c = x.productionOrder) === null || _c === void 0 ? void 0 : _c.parentProductionOrderId) === movedItem.productionOrder.id || ((_d = movedItem.productionOrder) === null || _d === void 0 ? void 0 : _d.parentProductionOrderId) === x.productionOrder.id) && x.productionStepSequence < movedItem.productionStepSequence;
    });
    let nextItems = arr.filter(x => {
      var _a, _b, _c, _d;
      return (x.productionOrder.id === movedItem.productionOrder.id || ((_a = x.subMachineOccupations) === null || _a === void 0 ? void 0 : _a.some(mo => mo.productionOrder.id === movedItem.productionOrder.id)) || ((_b = movedItem.subMachineOccupations) === null || _b === void 0 ? void 0 : _b.some(mo => mo.productionOrder.id === x.productionOrder.id)) || ((_c = x.productionOrder) === null || _c === void 0 ? void 0 : _c.parentProductionOrderId) === movedItem.productionOrder.id || ((_d = movedItem.productionOrder) === null || _d === void 0 ? void 0 : _d.parentProductionOrderId) === x.productionOrder.id) && x.productionStepSequence > movedItem.productionStepSequence;
    });
    //wenn das gezogene Element ein Sammelauftrag ist
    if (movedItem.subMachineOccupations && ((_a = movedItem.subMachineOccupations) === null || _a === void 0 ? void 0 : _a.length) > 0) {
      //1. Sammelaufträge
      //2. Teilaufträge im Sammelauftrag mit anderen Teilaufträgen
      previousItems = arr.filter(x => {
        var _a;
        return (((_a = x.subMachineOccupations) === null || _a === void 0 ? void 0 : _a.some(mo => movedItem.subMachineOccupations.map(smo => smo.productionOrder.id).includes(mo.productionOrder.id))) || movedItem.subMachineOccupations.some(mo => mo.productionOrder.id === x.productionOrder.id)) && x.productionStepSequence < movedItem.productionStepSequence;
      });
      nextItems = arr.filter(x => {
        var _a;
        return (((_a = x.subMachineOccupations) === null || _a === void 0 ? void 0 : _a.some(mo => movedItem.subMachineOccupations.map(smo => smo.productionOrder.id).includes(mo.productionOrder.id))) || movedItem.subMachineOccupations.some(mo => mo.productionOrder.id === x.productionOrder.id)) && x.productionStepSequence > movedItem.productionStepSequence;
      });
      //wenn das gezogene Element ein normales Element ist
    } else {
      //1.normale Elemente mit einander (auf gleicher Ebene)
      //2.normales Element mit Sammelaufträge
      previousItems = arr.filter(x => {
        var _a;
        return (x.productionOrder.id === movedItem.productionOrder.id || ((_a = x.subMachineOccupations) === null || _a === void 0 ? void 0 : _a.some(mo => mo.productionOrder.id === movedItem.productionOrder.id))) && x.productionStepSequence < movedItem.productionStepSequence;
      });
      nextItems = arr.filter(x => {
        var _a;
        return (x.productionOrder.id === movedItem.productionOrder.id || ((_a = x.subMachineOccupations) === null || _a === void 0 ? void 0 : _a.some(mo => mo.productionOrder.id === movedItem.productionOrder.id))) && x.productionStepSequence > movedItem.productionStepSequence;
      });
    }
    if ((previousItems && (previousItems === null || previousItems === void 0 ? void 0 : previousItems.length) > 0 || nextItems && (nextItems === null || nextItems === void 0 ? void 0 : nextItems.length) > 0) && (previousItems.some(x => moment__WEBPACK_IMPORTED_MODULE_3___default()(x.start).toDate() > moment__WEBPACK_IMPORTED_MODULE_3___default()(movedItem.start).toDate()) || nextItems.some(x => moment__WEBPACK_IMPORTED_MODULE_3___default()(x.start).toDate() < moment__WEBPACK_IMPORTED_MODULE_3___default()(movedItem.start).toDate())) && this.barsConstraints.checked) {
      this.items = this.items.filter(x => x.id !== item.id);
      this.items.push(itemBeforeMoving);
      this.timeline.setItems(this.items);
      this.toastr.warning('Bitte die Reihenfolge der Arbeitsgänge beachten!', 'Ungültiges Datum');
    } else {
      this.items.find(x => x.id === item.id).start = item.start;
      this.items.find(x => x.id === item.id).end = item.end;
      this.timeline.setItems(this.items);
    }
  }
  getSubOrdersInformation(productionStep) {
    var _a;
    let subOrdersInCollectionItems = this.items.filter(i => {
      var _a;
      return ((_a = i.subMachineOccupations) === null || _a === void 0 ? void 0 : _a.length) > 0;
    }).flatMap(x => x.subMachineOccupations);
    subOrdersInCollectionItems = subOrdersInCollectionItems === null || subOrdersInCollectionItems === void 0 ? void 0 : subOrdersInCollectionItems.filter(x => {
      var _a, _b, _c;
      return ((_a = x.productionStep) === null || _a === void 0 ? void 0 : _a.id) === (productionStep === null || productionStep === void 0 ? void 0 : productionStep.id) && ((_c = (_b = this.selectedOrder) === null || _b === void 0 ? void 0 : _b.subProductionOrders) === null || _c === void 0 ? void 0 : _c.some(y => y.id === x.productionOrder.id));
    });
    const plannedSubordersItems = this.items.filter(x => {
      var _a, _b, _c;
      return ((_b = (_a = this.selectedOrder) === null || _a === void 0 ? void 0 : _a.subProductionOrders) === null || _b === void 0 ? void 0 : _b.some(y => y.id === x.productionOrder.id)) && ((_c = x.productionStep) === null || _c === void 0 ? void 0 : _c.id) === (productionStep === null || productionStep === void 0 ? void 0 : productionStep.id);
    }).concat(subOrdersInCollectionItems);
    const subOrders = (_a = this.selectedOrder) === null || _a === void 0 ? void 0 : _a.subProductionOrders;
    const obj = {
      subordersAmount: subOrders === null || subOrders === void 0 ? void 0 : subOrders.length,
      plannedSubordersAmount: plannedSubordersItems === null || plannedSubordersItems === void 0 ? void 0 : plannedSubordersItems.length
    };
    return obj;
  }
  getProductionStepsOfProduct(productionOrder) {
    var _a, _b;
    this.selectedOrder = productionOrder;
    if (productionOrder.subProductionOrders && ((_a = productionOrder.subProductionOrders) === null || _a === void 0 ? void 0 : _a.length) > 0 && ((_b = productionOrder.subProductionOrders) === null || _b === void 0 ? void 0 : _b.some(x => x.productId !== productionOrder.productId))) {
      return;
    }
    const filteredMachineGroupsIds = JSON.parse(localStorage.getItem('filteredMachineGroups'));
    const filteredMachineGroups = lodash__WEBPACK_IMPORTED_MODULE_2__.cloneDeep(this.allMachineTypes.value).filter(x => filteredMachineGroupsIds === null || filteredMachineGroupsIds === void 0 ? void 0 : filteredMachineGroupsIds.includes(x.id));
    this._service.getProductionStepsOfProduct(productionOrder.productId, productionOrder.id).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_28__.take)(1), (0,rxjs__WEBPACK_IMPORTED_MODULE_29__.tap)(result => result.sort((a, b) => a.sequence < b.sequence ? -1 : 1))).subscribe(res => {
      var _a, _b, _c, _d, _e;
      this.allStepsOfProduct = res;
      const machineOccupations = this.machineOccupations.value.filter(x => x.productionOrderId === productionOrder.id || x.productionOrder.parentProductionOrderId === productionOrder.id);
      const stepIdsOfUnsavedItems = (_b = (_a = this.getUnsavedItems(this.items)) === null || _a === void 0 ? void 0 : _a.filter(x => x.productionOrder.id === productionOrder.id || x.productionOrder.parentProductionOrderId === productionOrder.id)) === null || _b === void 0 ? void 0 : _b.map(x => x.productionStepId);
      let stepIdsOfOccupations = machineOccupations.flatMap(y => y.productionSteps).map(s => s.id).concat(stepIdsOfUnsavedItems);
      let steps = res.filter(x => !filteredMachineGroups.length || filteredMachineGroups.some(y => y.id === x.machineTypeId));
      const temporarilyDeletedItemsOfSelectedOrder = this.temporarilyDeletedItems.filter(x => {
        var _a;
        return ((_a = x.productionOrder) === null || _a === void 0 ? void 0 : _a.id) === productionOrder.id || x.productionOrder.parentProductionOrderId === productionOrder.id;
      });
      const stepsIdsOfTempDeletedItems = (_c = temporarilyDeletedItemsOfSelectedOrder.map(x => {
        var _a;
        return (_a = x.productionStep) === null || _a === void 0 ? void 0 : _a.id;
      })) !== null && _c !== void 0 ? _c : [];
      this.plannedSteps.next([]);
      if (((_d = productionOrder.subProductionOrders) === null || _d === void 0 ? void 0 : _d.length) > 0) {
        //TODO fix the list of ags / check the other steps
        this.items = this.items.filter(x => !this.machineOccupations.value.some(mo => mo.id === x.id));
        this.machineOccupations.value.forEach(x => {
          if (this.constructTimelineItemFromMachineOccupation(x)) {
            this.items.push(this.constructTimelineItemFromMachineOccupation(x));
          }
        });
        const itemsOfSelectedOrder = (_e = this.items) === null || _e === void 0 ? void 0 : _e.filter(x => {
          var _a, _b, _c;
          return ((_a = x.productionOrder) === null || _a === void 0 ? void 0 : _a.parentProductionOrderId) === this.selectedOrder.id || ((_b = x.subMachineOccupations) === null || _b === void 0 ? void 0 : _b.length) > 0 && ((_c = x.productionOrder) === null || _c === void 0 ? void 0 : _c.id) === this.selectedOrder.id;
        });
        const subOrdersInCollectionItems = itemsOfSelectedOrder.filter(i => {
          var _a;
          return ((_a = i.subMachineOccupations) === null || _a === void 0 ? void 0 : _a.length) > 0;
        }).flatMap(x => x.subMachineOccupations);
        const itemsWithoutCollectionOrders = itemsOfSelectedOrder.filter(x => {
          var _a;
          return ((_a = x.subMachineOccupations) === null || _a === void 0 ? void 0 : _a.length) === 0 || !x.subMachineOccupations;
        });
        const plannedSubordersItems = subOrdersInCollectionItems.concat(itemsWithoutCollectionOrders);
        stepIdsOfOccupations = plannedSubordersItems.map(x => x.productionStepId);
        const uniqueStepIds = [...new Set(stepIdsOfOccupations)];
        uniqueStepIds.forEach(id => {
          var _a, _b;
          //TODO test with Raico Data
          const stepsLengthOfTempDeleted = (_a = stepsIdsOfTempDeletedItems.filter(s => s === id)) === null || _a === void 0 ? void 0 : _a.length;
          if (stepIdsOfOccupations.filter(x => x === id).length - stepsLengthOfTempDeleted === ((_b = productionOrder.subProductionOrders) === null || _b === void 0 ? void 0 : _b.length)) {
            const step = steps.find(s => s.id === id);
            if (step) {
              this.plannedSteps.value.push(step);
              steps = steps.filter(x => x.id !== id);
            }
          }
        });
      } else {
        steps.filter(x => stepIdsOfOccupations.includes(x.id)).forEach(s => {
          if (!(stepsIdsOfTempDeletedItems === null || stepsIdsOfTempDeletedItems === void 0 ? void 0 : stepsIdsOfTempDeletedItems.includes(s.id))) {
            this.plannedSteps.value.push(s);
          }
        });
        steps = steps.filter(x => !stepIdsOfOccupations.includes(x.id) || stepsIdsOfTempDeletedItems.includes(x.id));
      }
      this.productionSteps.next(steps.sort((a, b) => a.sequence < b.sequence ? -1 : 1));
      if (this.setViewSelectedOrderPlanToggle === true) {
        this.viewAndEditPlanOfSelectedOrder(null, false);
      }
      if (this.planningModeOfSelectedOrder.checked) {
        this.viewAndEditPlanOfSelectedOrder(null, true);
      }
    });
  }
  handleDragStart(event, productionStep) {
    var _a, _b, _c, _d, _e;
    if (this.setViewSelectedOrderPlanToggle) {
      this.toastr.info('Bitte wechseln Sie die Ansicht', 'Readonly Ansicht');
      return;
    }
    const machineGroup = this.groups.find(x => x.id === productionStep.machineTypeId * 999);
    machineGroup.className = 'green-bg';
    machineGroup.showNested = true;
    (_a = machineGroup.nestedGroups) === null || _a === void 0 ? void 0 : _a.forEach(y => {
      const group = this.groups.find(x => x.id === y);
      group.visible = true;
      group.className = 'green-bg';
    });
    if (!this.planningModeOfSelectedOrder.checked) {
      this.groups.filter(x => {
        var _a;
        return x.id !== machineGroup.id && ((_a = x.nestedGroups) === null || _a === void 0 ? void 0 : _a.length) > 0;
      }).forEach(x => {
        if (x.showNested === true) {
          this.shownGroups.push(x);
        }
        x.showNested = false;
      });
    }
    this.timeline.setGroups(this.groups);
    // FIXME Raico spezifisch muss beim Datenimport gemacht werden
    const productionDurationPerSecond = productionStep.productionDuration;
    const setupTime = productionStep.setupTime;
    const startDate = new Date();
    const endDate = new Date(Date.UTC(startDate.getUTCFullYear(), startDate.getUTCMonth(), startDate.getUTCDate(), startDate.getUTCHours(), startDate.getUTCMinutes() + (productionDurationPerSecond * this.selectedOrder.amount + setupTime) / 60));
    const endSetupDate = new Date(Date.UTC(startDate.getUTCFullYear(), startDate.getUTCMonth(), startDate.getUTCDate(), startDate.getUTCHours(), startDate.getUTCMinutes() + setupTime / 60));
    const item = {
      start: new Date(),
      end: endDate,
      id: Math.floor(Math.random() * (10000 - 0 + 1)).toString(),
      type: 'range',
      editable: {
        updateTime: true,
        remove: true,
        updateGroup: false
      },
      productionStepId: productionStep.id,
      productionStep: productionStep,
      content: this.selectedOrder.name.toString(),
      product: (_c = (_b = this.selectedOrder) === null || _b === void 0 ? void 0 : _b.product) === null || _c === void 0 ? void 0 : _c.name,
      amount: this.selectedOrder.amount,
      unit: this.selectedOrder.unitString,
      group: productionStep.machineTypeId * 999,
      className: 'colored',
      title: '<p>Auftragsnummer: ' + this.selectedOrder.name + '</p>' + '<p> Artikelnummer: ' + ((_e = (_d = this.selectedOrder) === null || _d === void 0 ? void 0 : _d.product) === null || _e === void 0 ? void 0 : _e.name) + '</p>',
      onRemove: item => this.openDeleteDialog(item),
      setupTime: endSetupDate,
      progress: 0,
      productionOrder: this.selectedOrder,
      productionStepSequence: productionStep.sequence
    };
    event.dataTransfer.setData('text', JSON.stringify(item));
    this.addedItem = item;
    // set event.target ID with item ID
    event.target.id = item.id;
  }
  handleDragEnd(event, groupId) {
    if (this.setViewSelectedOrderPlanToggle) {
      return;
    }
    const parentGroup = this.groups.find(x => x.id === groupId);
    parentGroup.className = '';
    parentGroup.nestedGroups.forEach(y => {
      this.groups.find(x => x.id === y).className = '';
    });
    this.groups.forEach(x => {
      var _a;
      if (((_a = x.nestedGroups) === null || _a === void 0 ? void 0 : _a.length) > 0 && this.shownGroups.map(sg => sg.id).includes(x.id)) {
        x.showNested = true;
        x.nestedGroups.forEach(y => this.groups.find(g => g.id === y).visible = true);
      }
    });
    this.timeline.setGroups(this.groups);
  }
  setupArrows() {
    if (this.myArrow) {
      this.items.forEach(x => {
        const arr = this.myArrow.getArrow(x.id);
        if (arr) {
          this.myArrow.removeArrow(x.id);
        }
      });
      this.arrowArray = [];
    }
    const options = {
      followRelationships: true,
      color: '#b5c4d2'
    };
    let items = this.items;
    const orderIdSet = [...new Set(items.map(x => x.content))];
    items = items.sort((a, b) => a.productionStepSequence < b.productionStepSequence ? -1 : a.productionStepSequence > b.productionStepSequence ? 1 : 0);
    for (const x of orderIdSet) {
      const filteredItems = items.filter(y => y.content === x);
      for (let i = 0; i < filteredItems.length - 1; i++) {
        this.arrowArray.push({
          id: filteredItems[i].id,
          id_item_1: filteredItems[i].id,
          id_item_2: filteredItems[i + 1].id
        });
      }
    }
    if (this.arrowArray.length > 0) {
      if (this.myArrow) {
        this.arrowArray.forEach(x => this.myArrow.addArrow(x));
      } else {
        this.myArrow = new node_modules_timeline_arrows_arrow_js__WEBPACK_IMPORTED_MODULE_4__["default"](this.timeline, this.arrowArray, options);
      }
    }
  }
  onDrop(props) {
    var _a;
    const allowedGroup = this.groups.find(x => x.id === this.addedItem.group);
    if (allowedGroup.nestedGroups.every(y => y !== props.group) && props.group !== allowedGroup.id) {
      return;
    }
    if (allowedGroup.nestedGroups.includes(props.group)) {
      const machineId = props.group;
      const machineType = this.allMachineTypes.value.find(x => x.cdMachines.find(y => y.id === machineId));
      const machine = (_a = machineType === null || machineType === void 0 ? void 0 : machineType.cdMachines) === null || _a === void 0 ? void 0 : _a.find(m => m.id === machineId);
      this.addedItem.machine = machine;
    } else {
      this.addedItem.machine = null;
    }
    this.addedItem.group = props.group;
    const timeDifference = this.addedItem.end.getTime() - this.addedItem.start.getTime();
    this.addedItem.start = props.time;
    this.addedItem.end = new Date(this.addedItem.start.getUTCFullYear(), this.addedItem.start.getUTCMonth(), this.addedItem.start.getUTCDate(), this.addedItem.start.getUTCHours(), this.addedItem.start.getUTCMinutes() + timeDifference / 60000);
    //could be needed later
    // if(this.items.some(x => x.group === this.addedItem.group)) {
    //   const itemsOfGroup = this.items.filter(x => x.group === this.addedItem.group);
    //
    //
    //   let maxDate = new Date(Math.max.apply(null,itemsOfGroup.map(x => moment(x.end).toDate() )));
    //
    //   this.addedItem.start = new Date(maxDate);
    //   this.addedItem.end = new Date(maxDate.getUTCFullYear(),maxDate.getUTCMonth(),maxDate.getUTCDate(),maxDate.getUTCHours(),maxDate.getUTCMinutes() + (timeDifference / 60000));
    // }
    if (this.items.some(x => x.content === this.addedItem.content)) {
      const previousItems = this.getPreviousItems(this.addedItem);
      const nextItems = this.getNextItems(this.addedItem);
      const previousItem = previousItems.length > 0 ? previousItems.reduce((x, y) => x.productionStepSequence > y.productionStepSequence ? x : y) : undefined;
      const nextItem = nextItems.length > 0 ? nextItems.reduce((x, y) => x.productionStepSequence < y.productionStepSequence ? x : y) : undefined;
      const endDateOfPreItem = previousItem === null || previousItem === void 0 ? void 0 : previousItem.end;
      const startDateOfNextItem = nextItem === null || nextItem === void 0 ? void 0 : nextItem.start;
      if (endDateOfPreItem && startDateOfNextItem) {
        if (moment__WEBPACK_IMPORTED_MODULE_3___default()(props.time).isBetween(endDateOfPreItem, startDateOfNextItem)) {
          this.addedItem.start = moment__WEBPACK_IMPORTED_MODULE_3___default()(props.time).toDate();
        } else {
          const diff = moment__WEBPACK_IMPORTED_MODULE_3___default()(nextItem.start).diff(previousItem.start);
          this.addedItem.start = moment__WEBPACK_IMPORTED_MODULE_3___default()(previousItem.start).add(diff / 2, 'milliseconds').toDate();
        }
      } else if (!startDateOfNextItem) {
        if (moment__WEBPACK_IMPORTED_MODULE_3___default()(props.time).isSameOrAfter(moment__WEBPACK_IMPORTED_MODULE_3___default()(endDateOfPreItem))) {
          this.addedItem.start = moment__WEBPACK_IMPORTED_MODULE_3___default()(props.time).toDate();
        } else {
          this.addedItem.start = moment__WEBPACK_IMPORTED_MODULE_3___default()(endDateOfPreItem).add(5, 'minutes').toDate();
        }
      } else if (!endDateOfPreItem) {
        if (moment__WEBPACK_IMPORTED_MODULE_3___default()(props.time).isSameOrBefore(moment__WEBPACK_IMPORTED_MODULE_3___default()(startDateOfNextItem))) {
          this.addedItem.start = moment__WEBPACK_IMPORTED_MODULE_3___default()(props.time).toDate();
        } else {
          this.addedItem.start = moment__WEBPACK_IMPORTED_MODULE_3___default()(startDateOfNextItem).subtract(timeDifference, 'milliseconds').toDate();
        }
      } else {
        this.addedItem.start = moment__WEBPACK_IMPORTED_MODULE_3___default()(props.time).toDate();
      }
      this.addedItem.end = moment__WEBPACK_IMPORTED_MODULE_3___default()(this.addedItem.start).add(timeDifference, 'milliseconds').toDate();
    }
    this.openSubordersPlanningDialog(this.addedItem);
    this.handleDragEnd(props.event, allowedGroup.id);
    this.timeline.focus(this.addedItem.id);
  }
  restoreListItemAndRemoveTimelineItemManySelection(item) {
    var _a, _b, _c, _d;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_25__.__awaiter)(this, void 0, void 0, function* () {
      const itemSelection = this.timeline.getSelection();
      if ((itemSelection === null || itemSelection === void 0 ? void 0 : itemSelection.length) > 1) {
        itemSelection.forEach(i => {
          const foundItem = this.items.find(x => x.id === i);
          if (this.machineOccupations.value.map(mo => mo.id).includes(Number(foundItem.id))) {
            this.temporarilyDeletedItems.push(foundItem);
          }
        });
      } else {
        if (this.machineOccupations.value.map(mo => mo.id).includes(item.id)) {
          this.temporarilyDeletedItems.push(item);
        }
      }
      const restoredStep = item.productionStep;
      restoredStep.machineType = this.allMachineTypes.value.find(x => x.id === restoredStep.machineTypeId);
      this.items = this.items.filter(x => !itemSelection.includes(x.id));
      if (this.selectedOrder && (((_a = this.selectedOrder) === null || _a === void 0 ? void 0 : _a.id) === ((_b = item.productionOrder) === null || _b === void 0 ? void 0 : _b.id) || ((_c = item.productionOrder) === null || _c === void 0 ? void 0 : _c.parentProductionOrderId) === ((_d = this.selectedOrder) === null || _d === void 0 ? void 0 : _d.id))) {
        if (restoredStep && !this.productionSteps.value.map(x => x.id).includes(restoredStep === null || restoredStep === void 0 ? void 0 : restoredStep.id)) {
          const newStepsList = this.productionSteps.value.concat(restoredStep);
          this.plannedSteps.next(this.plannedSteps.value.filter(x => x.id !== restoredStep.id));
          this.productionSteps.next(newStepsList.sort((a, b) => a.sequence < b.sequence ? -1 : 1));
        }
      }
      this.timeline.setItems(this.items);
      this.timeline.fit();
      this.ref.detectChanges();
    });
  }
  setViewModeToDay() {
    const today = new Date(new Date(Date.now()).setHours(0, 0, 0, 0));
    const tomorrow = new Date(new Date(Date.now()).setHours(23, 59, 59, 999) + 1);
    const options = {
      start: today,
      end: tomorrow
    };
    this.timeline.setOptions(options);
  }
  setViewModeToWeek() {
    const curr = new Date();
    const first = curr.getDate() - curr.getDay() + 1;
    const last = first + 6;
    const start = new Date(curr.setDate(first)).setHours(0, 0, 0, 0);
    const end = new Date(curr.setDate(last)).setHours(23, 59, 59, 999);
    const options = {
      start: start,
      end: end
    };
    this.timeline.setOptions(options);
  }
  setViewModeToMonth() {
    const curr = new Date();
    const first = curr.getDate() - curr.getDay() + 1;
    const start = new Date(curr.setDate(first)).setHours(0, 0, 0, 0);
    const end = new Date(curr.setMonth(curr.getMonth() + 1, first + 2)).setHours(23, 59, 59, 999);
    const options = {
      start: start,
      end: end
    };
    this.timeline.setOptions(options);
  }
  fitTimeline() {
    this.timeline.fit();
  }
  moveToNow() {
    this.timeline.moveTo(moment__WEBPACK_IMPORTED_MODULE_3___default()().toDate());
  }
  collapseAll() {
    this.groups.forEach(gr => {
      gr.showNested = false;
    });
    this.timeline.setGroups(this.groups);
  }
  expandAll() {
    this.groups.forEach(gr => {
      gr.showNested = true;
      gr.visible = true;
    });
    this.timeline.setGroups(this.groups);
  }
  openSubordersPlanningDialog(mainOrderItem) {
    var _a;
    let subOrdersInCollectionItems = this.items.filter(i => {
      var _a;
      return ((_a = i.subMachineOccupations) === null || _a === void 0 ? void 0 : _a.length) > 0;
    }).flatMap(x => x.subMachineOccupations);
    subOrdersInCollectionItems = subOrdersInCollectionItems === null || subOrdersInCollectionItems === void 0 ? void 0 : subOrdersInCollectionItems.filter(x => {
      var _a, _b, _c, _d;
      return ((_a = x.productionStep) === null || _a === void 0 ? void 0 : _a.name) === ((_b = mainOrderItem === null || mainOrderItem === void 0 ? void 0 : mainOrderItem.productionStep) === null || _b === void 0 ? void 0 : _b.name) && ((_d = (_c = mainOrderItem.productionOrder) === null || _c === void 0 ? void 0 : _c.subProductionOrders) === null || _d === void 0 ? void 0 : _d.map(y => y.id).includes(x.productionOrder.id));
    });
    const plannedSubordersItems = this.items.filter(x => {
      var _a, _b, _c, _d;
      return ((_b = (_a = mainOrderItem.productionOrder) === null || _a === void 0 ? void 0 : _a.subProductionOrders) === null || _b === void 0 ? void 0 : _b.map(y => y.id).includes(x.productionOrder.id)) && ((_c = x.productionStep) === null || _c === void 0 ? void 0 : _c.name) === ((_d = mainOrderItem === null || mainOrderItem === void 0 ? void 0 : mainOrderItem.productionStep) === null || _d === void 0 ? void 0 : _d.name);
    }).concat(subOrdersInCollectionItems);
    const subOrders = (_a = mainOrderItem.productionOrder) === null || _a === void 0 ? void 0 : _a.subProductionOrders;
    const dialogConfig = new _angular_material_dialog__WEBPACK_IMPORTED_MODULE_30__.MatDialogConfig();
    dialogConfig.autoFocus = true;
    dialogConfig.data = {
      subordersAmount: subOrders === null || subOrders === void 0 ? void 0 : subOrders.length,
      plannedSubordersItems: plannedSubordersItems
    };
    if (!subOrders || (subOrders === null || subOrders === void 0 ? void 0 : subOrders.length) === 0) {
      dialogConfig.data = {
        subordersAmount: 0
      };
    }
    const dialogRef = this.dialog.open(_suborders_planning_dialog_suborders_planning_dialog_component__WEBPACK_IMPORTED_MODULE_14__.SubordersPlanningDialogComponent, dialogConfig);
    dialogRef.afterClosed().subscribe(data => {
      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;
      const testItems = [];
      if (data !== null && data !== undefined) {
        const productionDuration = ((_a = mainOrderItem.productionStep) === null || _a === void 0 ? void 0 : _a.productionDuration) / 60;
        let setupTime = ((_b = mainOrderItem.productionStep) === null || _b === void 0 ? void 0 : _b.setupTime) / 60;
        const newItem = lodash__WEBPACK_IMPORTED_MODULE_2__.cloneDeep(mainOrderItem);
        let endDate;
        if (data.collectiveOrder) {
          endDate = moment__WEBPACK_IMPORTED_MODULE_3___default()(newItem.start).add(productionDuration, 'minutes').toDate();
        } else {
          endDate = moment__WEBPACK_IMPORTED_MODULE_3___default()(newItem.start).add(productionDuration * ((_c = newItem.productionOrder) === null || _c === void 0 ? void 0 : _c.amount), 'minutes').toDate();
        }
        if (data.setupTimeChecked) {
          endDate = moment__WEBPACK_IMPORTED_MODULE_3___default()(endDate).add(setupTime, 'minutes').toDate();
        } else {
          setupTime = 0;
        }
        if (moment__WEBPACK_IMPORTED_MODULE_3___default()(endDate).isSame(newItem.start)) {
          endDate = moment__WEBPACK_IMPORTED_MODULE_3___default()(newItem.start).add(1, 'minute').toDate();
        }
        newItem.end = endDate;
        newItem.title = '<p>Auftragsnummer: ' + ((_d = newItem.productionOrder) === null || _d === void 0 ? void 0 : _d.name) + '</p>' + '<p> Artikelnummer: ' + newItem.product + '</p>';
        if ((subOrders === null || subOrders === void 0 ? void 0 : subOrders.length) === 0) {
          this.items.push(newItem);
          this.plannedSteps.value.push(this.productionSteps.value.find(s => s.id === mainOrderItem.productionStepId));
          this.productionSteps.next(this.productionSteps.value.filter(x => x.id !== newItem.productionStepId));
          this.timeline.setItems(this.items);
          this.timeline.focus(newItem.id, {
            animation: true
          });
        } else {
          const collectionOrdersSize = data.collectionOrdersAmount;
          const ordersAmountToBePlanned = data.ordersAmountToBePlanned;
          const ordersLeft = (_f = (_e = mainOrderItem.productionOrder) === null || _e === void 0 ? void 0 : _e.subProductionOrders) === null || _f === void 0 ? void 0 : _f.filter(o => !plannedSubordersItems.map(x => x.productionOrder.id).includes(o.id)).sort((a, b) => a.id > b.id ? 1 : a.id < b.id ? -1 : 0);
          let ordersLeftPlanned = ordersLeft.sort((a, b) => a.id < b.id ? -1 : a.id > b.id ? 1 : 0);
          if ((subOrders === null || subOrders === void 0 ? void 0 : subOrders.length) > 0) {
            const startDate = newItem.start;
            if (ordersLeft === 1 || ordersAmountToBePlanned === 1) {
              newItem.content = ordersLeft[0].name.toString();
              newItem.amount = ordersLeft[0].amount;
              newItem.productionOrder = ordersLeft[0];
              newItem.end = moment__WEBPACK_IMPORTED_MODULE_3___default()(startDate).add(productionDuration * ordersLeft[0].amount, 'minutes');
              if (moment__WEBPACK_IMPORTED_MODULE_3___default()(newItem.end).isSame(newItem.start)) {
                newItem.end = moment__WEBPACK_IMPORTED_MODULE_3___default()(newItem.start).add(1, 'minute').toDate();
              }
              newItem.title = '<p>Auftragsnummer: ' + ordersLeft[0].name + '</p>' + '<p> Artikelnummer: ' + newItem.product + '</p>';
              this.items.push(newItem);
              this.timeline.setItems(this.items);
              this.timeline.focus(newItem.id, {
                animation: true
              });
            } else if (collectionOrdersSize > 1 && ordersAmountToBePlanned > 1 && collectionOrdersSize <= ordersAmountToBePlanned && data.collectiveOrder) {
              const collectiveItemsAmount = Math.floor(ordersAmountToBePlanned / collectionOrdersSize);
              newItem.end = moment__WEBPACK_IMPORTED_MODULE_3___default()(newItem.start).add(productionDuration + setupTime, 'minutes');
              const timeDifference = moment__WEBPACK_IMPORTED_MODULE_3___default()(newItem.end).valueOf() - moment__WEBPACK_IMPORTED_MODULE_3___default()(newItem.start).valueOf();
              const parentItemsList = [];
              for (let i = 0; i < collectiveItemsAmount; ++i) {
                const parentItem = lodash__WEBPACK_IMPORTED_MODULE_2__.cloneDeep(newItem);
                parentItem.id = Math.floor(Math.random() * (10000 + 1)).toString();
                for (let j = 0; j < collectionOrdersSize; ++j) {
                  const collectiveItem = lodash__WEBPACK_IMPORTED_MODULE_2__.cloneDeep(newItem);
                  const id = Math.floor(Math.random() * (10000 + 1)).toString();
                  collectiveItem.content = ordersLeftPlanned[0].name.toString();
                  collectiveItem.amount = ordersLeftPlanned[0].amount;
                  collectiveItem.productionOrder = ordersLeftPlanned[0];
                  collectiveItem.id = id.toString();
                  if (!parentItem.subMachineOccupations) {
                    parentItem.subMachineOccupations = [collectiveItem];
                    parentItem.amount = collectiveItem.amount;
                  } else {
                    if (((_g = parentItem.subMachineOccupations) === null || _g === void 0 ? void 0 : _g.length) < collectionOrdersSize) {
                      (_h = parentItem.subMachineOccupations) === null || _h === void 0 ? void 0 : _h.push(collectiveItem);
                      parentItem.amount += collectiveItem.amount;
                    } else {
                      this.toastr.warning('Der Sammelauftrag ist voll', 'Sammelauftragswarnung');
                    }
                  }
                  if (i > 0) {
                    const previousItem = parentItemsList[i - 1];
                    const startDateOfNextItem = moment__WEBPACK_IMPORTED_MODULE_3___default()(previousItem.end).add(5, 'minutes');
                    const endDateOfNextItem = moment__WEBPACK_IMPORTED_MODULE_3___default()(startDateOfNextItem).add(timeDifference, 'milliseconds');
                    parentItem.start = startDateOfNextItem;
                    parentItem.end = endDateOfNextItem;
                  }
                  ordersLeftPlanned = ordersLeftPlanned.filter(x => x.id !== ordersLeftPlanned[0].id);
                }
                parentItem.content = 'Sammelauftrag ' + collectionOrdersSize;
                this.items.push(parentItem);
                parentItemsList.push(parentItem);
                testItems.push(parentItem);
              }
              const ordersLeftToBePlanned = ordersAmountToBePlanned % collectionOrdersSize;
              if (ordersLeftToBePlanned > 0) {
                const parentItem = lodash__WEBPACK_IMPORTED_MODULE_2__.cloneDeep(newItem);
                const startDateOfLastItem = moment__WEBPACK_IMPORTED_MODULE_3___default().max(parentItemsList.map(x => moment__WEBPACK_IMPORTED_MODULE_3___default()(x.end))).add(5, 'minutes');
                const endDateOfLastItem = moment__WEBPACK_IMPORTED_MODULE_3___default()(startDateOfLastItem).add(timeDifference, 'milliseconds');
                parentItem.start = startDateOfLastItem;
                parentItem.end = endDateOfLastItem;
                parentItem.amount = 0;
                for (let k = 0; k < ordersLeftToBePlanned; ++k) {
                  const collectiveItem = lodash__WEBPACK_IMPORTED_MODULE_2__.cloneDeep(newItem);
                  const id = Math.floor(Math.random() * (10000 + 1)).toString();
                  collectiveItem.content = ordersLeftPlanned[0].name.toString();
                  collectiveItem.amount = ordersLeftPlanned[0].amount;
                  parentItem.amount += ordersLeftPlanned[0].amount;
                  collectiveItem.productionOrder = ordersLeftPlanned[0];
                  collectiveItem.id = id.toString();
                  if (!parentItem.subMachineOccupations) {
                    parentItem.subMachineOccupations = [collectiveItem];
                  } else {
                    if (((_j = parentItem.subMachineOccupations) === null || _j === void 0 ? void 0 : _j.length) < collectionOrdersSize) {
                      (_k = parentItem.subMachineOccupations) === null || _k === void 0 ? void 0 : _k.push(collectiveItem);
                    } else {
                      this.toastr.warning('Der Sammelauftrag ist voll', 'Sammelauftragswarnung');
                    }
                  }
                  ordersLeftPlanned = ordersLeftPlanned.filter(x => x.id !== ordersLeftPlanned[0].id);
                }
                parentItem.content = 'Sammelauftrag ' + ordersLeftToBePlanned;
                this.items.push(parentItem);
                testItems.push(parentItem);
              }
              this.timeline.setItems(this.items);
              this.timeline.focus(testItems.map(i => i.id), {
                animation: true
              });
            } else if (!data.collectiveOrder && ordersAmountToBePlanned > 1) {
              const addedItems = [];
              for (let i = 0; i < data.ordersAmountToBePlanned; ++i) {
                let previousItems = this.items.filter(x => {
                  var _a, _b, _c, _d;
                  return ((_a = x.productionOrder) === null || _a === void 0 ? void 0 : _a.parentProductionOrderId) === ((_b = newItem.productionOrder) === null || _b === void 0 ? void 0 : _b.id) && ((_c = x.productionStep) === null || _c === void 0 ? void 0 : _c.sequence) < ((_d = newItem.productionStep) === null || _d === void 0 ? void 0 : _d.sequence);
                });
                const maxSequenceOfPreviousItems = Math.max(...previousItems.map(item => {
                  var _a;
                  return (_a = item.productionStep) === null || _a === void 0 ? void 0 : _a.sequence;
                }));
                previousItems = previousItems.filter(x => {
                  var _a;
                  return ((_a = x.productionStep) === null || _a === void 0 ? void 0 : _a.sequence) === maxSequenceOfPreviousItems;
                }).map(y => moment__WEBPACK_IMPORTED_MODULE_3___default()(y.start));
                let nextItems = this.items.filter(x => {
                  var _a, _b, _c, _d;
                  return ((_a = x.productionOrder) === null || _a === void 0 ? void 0 : _a.parentProductionOrderId) === ((_b = newItem.productionOrder) === null || _b === void 0 ? void 0 : _b.id) && ((_c = x.productionStep) === null || _c === void 0 ? void 0 : _c.sequence) > ((_d = newItem.productionStep) === null || _d === void 0 ? void 0 : _d.sequence);
                });
                const minSequenceOfNextItems = Math.min(...nextItems.map(item => {
                  var _a;
                  return (_a = item.productionStep) === null || _a === void 0 ? void 0 : _a.sequence;
                }));
                nextItems = nextItems.filter(x => {
                  var _a;
                  return ((_a = x.productionStep) === null || _a === void 0 ? void 0 : _a.sequence) === minSequenceOfNextItems;
                }).map(y => moment__WEBPACK_IMPORTED_MODULE_3___default()(y.start));
                const minStart = (previousItems === null || previousItems === void 0 ? void 0 : previousItems.length) > 0 ? moment__WEBPACK_IMPORTED_MODULE_3___default().min(previousItems) : moment__WEBPACK_IMPORTED_MODULE_3___default().invalid();
                const maxStart = (nextItems === null || nextItems === void 0 ? void 0 : nextItems.length) > 0 ? moment__WEBPACK_IMPORTED_MODULE_3___default().min(nextItems) : moment__WEBPACK_IMPORTED_MODULE_3___default().invalid();
                let startDate = moment__WEBPACK_IMPORTED_MODULE_3___default()(newItem.start);
                let endDate = moment__WEBPACK_IMPORTED_MODULE_3___default()(startDate).add(productionDuration * ordersLeft[i].amount + setupTime, 'minutes');
                if (endDate.isSame(startDate)) {
                  endDate = moment__WEBPACK_IMPORTED_MODULE_3___default()(startDate).add(1, 'minute');
                }
                const timeDifference = endDate.toDate().getTime() - startDate.toDate().getTime();
                if (!moment__WEBPACK_IMPORTED_MODULE_3___default()(startDate).isBetween(minStart, maxStart)) {
                  if (minStart.isValid() && moment__WEBPACK_IMPORTED_MODULE_3___default()(startDate).isBefore(minStart)) {
                    startDate = minStart.add(5, 'minutes');
                  } else if (maxStart.isValid() && moment__WEBPACK_IMPORTED_MODULE_3___default()(startDate).isAfter(maxStart)) {
                    startDate = maxStart.subtract(5, 'minute');
                  }
                }
                endDate = moment__WEBPACK_IMPORTED_MODULE_3___default()(startDate).add(timeDifference, 'milliseconds');
                const id = Math.floor(Math.random() * (10000 + 1)).toString();
                newItem.content = ordersLeft[i].name.toString();
                newItem.amount = ordersLeft[i].amount;
                newItem.productionOrder = ordersLeft[i];
                newItem.id = id.toString();
                newItem.start = startDate.toDate();
                newItem.end = endDate.toDate();
                newItem.title = '<p>Auftragsnummer: ' + ordersLeft[i].name + '</p>' + '<p> Artikelnummer: ' + newItem.product + '</p>';
                if (i > 0) {
                  const previousItem = addedItems[i - 1];
                  startDate = previousItem.end;
                  endDate = moment__WEBPACK_IMPORTED_MODULE_3___default()(startDate).add(productionDuration * ordersLeft[i].amount, 'minutes');
                  if (moment__WEBPACK_IMPORTED_MODULE_3___default()(startDate).isSame(endDate)) {
                    endDate = moment__WEBPACK_IMPORTED_MODULE_3___default()(startDate).add(1, 'minute');
                  }
                  newItem.start = moment__WEBPACK_IMPORTED_MODULE_3___default()(startDate).toDate();
                  newItem.end = moment__WEBPACK_IMPORTED_MODULE_3___default()(endDate).toDate();
                }
                const itemToAdd = lodash__WEBPACK_IMPORTED_MODULE_2__.cloneDeep(newItem);
                addedItems.push(itemToAdd);
              }
              this.items = this.items.concat(addedItems);
              this.timeline.setItems(this.items);
              this.timeline.focus(addedItems.map(x => x.id), {
                animation: true
              });
            }
            //count the planned suborders
            const nonCollectiveOrders = this.items.filter(i => {
              var _a, _b, _c;
              return (((_a = i.productionOrder) === null || _a === void 0 ? void 0 : _a.parentProductionOrderId) === ((_b = mainOrderItem.productionOrder) === null || _b === void 0 ? void 0 : _b.id) || i.productionOrder.id === ((_c = mainOrderItem.productionOrder) === null || _c === void 0 ? void 0 : _c.id) && !i.subMachineOccupations) && i.productionStepId === mainOrderItem.productionStepId;
            });
            const collectiveOrders = (_l = this.items.filter(i => {
              var _a, _b;
              return i.productionOrder.id === ((_a = mainOrderItem.productionOrder) === null || _a === void 0 ? void 0 : _a.id) && ((_b = i.subMachineOccupations) === null || _b === void 0 ? void 0 : _b.length) > 0 && i.productionStepId === mainOrderItem.productionStepId;
            })) === null || _l === void 0 ? void 0 : _l.flatMap(smo => smo.subMachineOccupations);
            if (nonCollectiveOrders.length + collectiveOrders.length === ((_o = (_m = mainOrderItem.productionOrder) === null || _m === void 0 ? void 0 : _m.subProductionOrders) === null || _o === void 0 ? void 0 : _o.length)) {
              this.plannedSteps.value.push(this.productionSteps.value.find(s => s.id === mainOrderItem.productionStepId));
              this.productionSteps.next(this.productionSteps.value.filter(x => x.id !== mainOrderItem.productionStepId));
            }
          }
        }
      }
      const element = document.querySelector('.mousedown');
      element.classList.remove('mousedown');
      this.productionSteps.next(this.productionSteps.value);
    });
  }
  openFilterDialog() {
    var _a;
    const dialogConfig = new _angular_material_dialog__WEBPACK_IMPORTED_MODULE_30__.MatDialogConfig();
    dialogConfig.autoFocus = true;
    dialogConfig.data = {
      machineGroups: (_a = this.allMachineTypes) === null || _a === void 0 ? void 0 : _a.value,
      allStepsOfProduct: this.allStepsOfProduct
    };
    const dialogRef = this.dialog.open(_filter_dialog_filter_dialog_component__WEBPACK_IMPORTED_MODULE_11__.FilterDialogComponent, dialogConfig);
    this.isScrollable = false;
    dialogRef.afterClosed().subscribe(data => {
      var _a;
      if (data !== null && data !== undefined) {
        this.pageOrderNumber = 1;
        this.pageStepNumber = 1;
        this.pageOrderOfStepNumber = 1;
        this.scrolledOrdersToBottom.next(false);
        this.scrolledStepsToBottom.next(false);
        this.scrolledOrdersOfStepsToBottom.next(false);
        if (this.searchOrdersInput) {
          this.searchOrdersInput.searchInput.nativeElement.value = '';
          this.searchTextForProductionOrders$.next('');
        }
        if (this.searchProductionStepsInput) {
          this.searchProductionStepsInput.searchInput.nativeElement.value = '';
          this.searchTextForAllProductionSteps$.next('');
        }
        if (this.setUnoccupiedMachinesToggleChecked) {
          this.setUnoccupiedMachinesToggleChecked = false;
        }
        if (this.setViewSelectedOrderPlanToggle || this.setViewAndEditSelectedOrderPlanToggle) {
          this.selectedOrder = null;
          this.productionSteps.next([]);
          this.plannedSteps.next([]);
          this.setViewSelectedOrderPlanToggle = false;
          this.setViewAndEditSelectedOrderPlanToggle = false;
        }
        this.getAllMachineTypes().then(() => {
          var _a, _b;
          if (((_b = (_a = this.allMachineTypes) === null || _a === void 0 ? void 0 : _a.value) === null || _b === void 0 ? void 0 : _b.length) > 0) {
            this.timeline.setGroups(this.groups);
            //reload machineOccupations
            this.getAssignedMachineOccupations().then(() => {
              this.setTimelineItems(this.machineOccupations.value);
            });
          }
        });
        this._service.getProductionOrders(JSON.parse(localStorage.getItem('filteredMachineGroups')), 1).subscribe(y => {
          this.gotProductionOrders = true;
          this.itemsPerPage[this.pageOrderNumber - 1] = y.length;
          this.productionOrdersDataSource$.getValue().data = this.mapProductionOrders(y, 1);
          this.ordersListHtml = (0,_shared_utils_getListItemsHtml_utils__WEBPACK_IMPORTED_MODULE_17__.getListItemsHtml)(this.productionOrdersDataSource$.getValue().data, this.contractsTemplate, this.contractsFormat);
          this.ref.detectChanges();
          //selectedOrder isn't available now, because it was filtered
          if (this.selectedOrder) {
            if (y.some(x => x.id === this.selectedOrder.id)) {
              this.getProductionStepsOfProduct(this.selectedOrder);
            } else {
              this.selectedOrder = null;
              this.productionSteps.next([]);
              this.plannedSteps.next([]);
            }
          }
        });
        //reload allProductionSteps
        this._service.getAllProductionSteps((_a = JSON.parse(localStorage.getItem('filteredMachineGroups'))) !== null && _a !== void 0 ? _a : [], this.pageStepNumber, this.searchTextForAllProductionSteps$.value).subscribe(x => {
          var _a, _b;
          this.allProductionSteps.next(x);
          this.stepsListHtml = (0,_shared_utils_getListItemsHtml_utils__WEBPACK_IMPORTED_MODULE_17__.getListItemsHtml)(this.allProductionSteps.getValue(), this.allProductionStepsTemplate, this.allProductionStepsFormat);
          //selectedStep isn't available now, because it was filtered
          if (this.selectedStep) {
            if ((_b = (_a = this.allProductionSteps) === null || _a === void 0 ? void 0 : _a.value) === null || _b === void 0 ? void 0 : _b.every(x => this.selectedStep.id !== x.id)) {
              this.ordersOfStepDataSource$.getValue().data = [];
              this.selectedStep = null;
            }
          }
        });
        this.ref.detectChanges();
      }
    });
    this.isScrollable = true;
  }
  openViewSettingsDialog() {
    const dialogConfig = new _angular_material_dialog__WEBPACK_IMPORTED_MODULE_30__.MatDialogConfig();
    dialogConfig.autoFocus = true;
    this.dialog.open(_view_settings_view_settings_dialog_component__WEBPACK_IMPORTED_MODULE_13__.ViewSettingsDialogComponent, dialogConfig);
  }
  getAllOrdersAndRefreshLists() {
    this.getAllProductionOrders().then(() => {
      if (this.selectedOrder && !this.productionOrdersDataSource$.value.data.map(o => o.id).includes(this.selectedOrder.id)) {
        this.selectedOrder = null;
        this.productionSteps.next([]);
        this.plannedSteps.next([]);
      }
      if (this.selectedOrder && this.productionOrdersDataSource$.value.data.map(o => o.id).includes(this.selectedOrder.id)) {
        this.getProductionStepsOfProduct(this.selectedOrder);
      }
      this.ref.detectChanges();
    });
  }
  openCustomizationDialog(props) {
    if (this.setViewSelectedOrderPlanToggle === true) {
      return;
    }
    if (props.event instanceof MouseEvent) {
      const dialogConfig = new _angular_material_dialog__WEBPACK_IMPORTED_MODULE_30__.MatDialogConfig();
      const selectedItem = this.items.find(x => x.id === props.item);
      if (selectedItem === null || selectedItem === undefined) {
        return;
      }
      this.setGroupsOfTimeline(true, false);
      const groupOfItem = this.groups.find(g => g.id === selectedItem.group);
      let allowedGroups = [];
      if (groupOfItem.nestedGroups) {
        allowedGroups = allowedGroups.concat(this.groups.filter(g => groupOfItem.nestedGroups.includes(g.id)));
        allowedGroups.push(groupOfItem);
      } else {
        const parentGroup = this.groups.find(x => {
          var _a;
          return (_a = x.nestedGroups) === null || _a === void 0 ? void 0 : _a.includes(groupOfItem.id);
        });
        allowedGroups = allowedGroups.concat(this.groups.filter(g => parentGroup.nestedGroups.includes(g.id)));
        allowedGroups.push(parentGroup);
      }
      dialogConfig.disableClose = true;
      dialogConfig.autoFocus = true;
      const previousItems = this.items.filter(x => x.content === selectedItem.content && x.productionStepSequence < selectedItem.productionStepSequence);
      const nextItems = this.items.filter(x => x.content === selectedItem.content && x.productionStepSequence > selectedItem.productionStepSequence);
      const minRange = new Date(Math.max.apply(null, previousItems.map(x => moment__WEBPACK_IMPORTED_MODULE_3___default()(x.start).toDate())));
      const maxRange = new Date(Math.min.apply(null, nextItems.map(x => moment__WEBPACK_IMPORTED_MODULE_3___default()(x.start).toDate())));
      dialogConfig.data = {
        item: selectedItem,
        minRange: minRange,
        maxRange: maxRange,
        allowedGroups: allowedGroups
      };
      const dialogRef = this.dialog.open(_customization_dialog_customization_dialog_component__WEBPACK_IMPORTED_MODULE_10__.CustomizationDialogComponent, dialogConfig);
      dialogRef.afterClosed().subscribe(data => {
        var _a;
        if (data !== null && data !== undefined) {
          if (typeof data.deleteItem === 'boolean' && data.deleteItem === true) {
            this.items = this.items.filter(x => x.id !== selectedItem.id);
            this.timeline.setItems(this.items);
            this.restoreListItemAndRemoveTimelineItemManySelection(selectedItem);
            return;
          }
          const machine = data.machine;
          if (machine && selectedItem.group !== machine && allowedGroups.some(x => x.id === machine)) {
            this.items.find(x => x.id === selectedItem.id).group = machine;
            const mo = (_a = this.machineOccupations) === null || _a === void 0 ? void 0 : _a.value;
            const machineOccupationOfITem = mo === null || mo === void 0 ? void 0 : mo.find(x => x.id === selectedItem.id);
            if (machineOccupationOfITem) {
              machineOccupationOfITem.machineId = machine;
              this.machineOccupations.next(mo);
            }
            this.timeline.setItems(this.items);
            if (this.setUnoccupiedMachinesToggleChecked) {
              this.setGroupsOfTimeline(true, this.setUnoccupiedMachinesToggleChecked);
              this.timeline.setGroups(this.groups);
            }
            if (this.setViewAndEditSelectedOrderPlanToggle) {
              this.viewAndEditPlanOfSelectedOrder(null, true);
            }
          }
          if (data.durationPercentOfDate !== null && data.durationPercentOfDate !== undefined && data.durationPercentOfDate > 0) {
            const timeDifference = new Date(selectedItem.end).valueOf() - new Date(selectedItem.start).valueOf();
            const increasedDuration = timeDifference * data.durationPercentOfDate / 100;
            const newDate = moment__WEBPACK_IMPORTED_MODULE_3___default()(moment__WEBPACK_IMPORTED_MODULE_3___default()(selectedItem.end).valueOf() + increasedDuration).toDate();
            this.items.find(x => x.id === selectedItem.id).end = newDate;
            this.timeline.setItems(this.items);
            return;
          } else if (data.startDate !== selectedItem.start || data.endDate !== selectedItem.end) {
            if (data.startDate > data.endDate) return;
            const followingItems = this.items.filter(x => x.start >= selectedItem.end && Math.trunc(+x.content) === Math.trunc(+selectedItem.content));
            this.items.find(x => x.id === selectedItem.id).start = data.startDate;
            this.items.find(x => x.id === selectedItem.id).end = data.endDate;
            if (followingItems.length > 0) {
              const timeDifference = new Date(data.endDate).valueOf() - new Date(followingItems[0].start).valueOf();
              followingItems.forEach(x => {
                if (timeDifference > 0) {
                  x.start = moment__WEBPACK_IMPORTED_MODULE_3___default()(new Date(x.start).valueOf() + timeDifference).toDate();
                  x.end = moment__WEBPACK_IMPORTED_MODULE_3___default()(new Date(x.end).valueOf() + timeDifference).toDate();
                }
              });
            }
            this.timeline.setItems(this.items);
          }
        }
      });
    }
  }
  getPreviousItems(item) {
    return this.items.filter(x => x.content === item.content && x.productionStepSequence < item.productionStepSequence);
  }
  getNextItems(item) {
    return this.items.filter(x => x.content === item.content && x.productionStepSequence > item.productionStepSequence);
  }
  getMachineOccupationsAndSetupTimeline() {
    this.getAssignedMachineOccupations().then(() => {
      this.items = [];
      if (this.planningModeOfSelectedOrder.checked) {
        this.setTimelineItems(this.machineOccupations.value.filter(x => x.productionOrder.id === this.selectedOrder.id || x.productionOrder.parentProductionOrderId === this.selectedOrder.id));
      } else {
        this.setTimelineItems(this.machineOccupations.value);
      }
    });
  }
  saveChanges() {
    const createBody = [];
    const updateBody = [];
    const toDelete = this.temporarilyDeletedItems;
    this.isScrollable = false;
    if (toDelete !== null && toDelete !== undefined && toDelete.length > 0) {
      this._service.deleteMachineOccupations(toDelete.map(x => x.id)).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_28__.take)(1)).subscribe({
        next: () => {
          this.toastr.success(toDelete.length + ' items deleted', 'Delete response');
          if (toDelete.some(x => {
            var _a, _b, _c;
            return x.content === ((_a = this.selectedOrder) === null || _a === void 0 ? void 0 : _a.id.toString()) || ((_b = x.productionOrder) === null || _b === void 0 ? void 0 : _b.parentProductionOrderId) === ((_c = this.selectedOrder) === null || _c === void 0 ? void 0 : _c.id);
          })) {
            this.getProductionStepsOfProduct(this.selectedOrder);
          }
          this.temporarilyDeletedItems = [];
          this.getMachineOccupationsAndSetupTimeline();
        },
        error: () => {
          this.toastr.error('Elements could not be deleted!', 'Delete response');
        }
      });
    }
    this.items.forEach(item => {
      var _a, _b, _c, _d, _e, _f, _g;
      if (moment__WEBPACK_IMPORTED_MODULE_3___default()(item.start).isSame(moment__WEBPACK_IMPORTED_MODULE_3___default()(item.end))) {
        item.end = moment__WEBPACK_IMPORTED_MODULE_3___default()(item.start).add(1, 'minute').toDate();
      }
      if (this.groups.some(x => x.id === item.group)) {
        if (this.machineOccupations.value.some(x => x.id === item.id)) {
          const subMachineOccupation = [];
          ((_a = item.subMachineOccupations) === null || _a === void 0 ? void 0 : _a.length) > 0 ? item.subMachineOccupations.forEach(mo => {
            var _a, _b;
            if (moment__WEBPACK_IMPORTED_MODULE_3___default()(mo.start).isSame(moment__WEBPACK_IMPORTED_MODULE_3___default()(mo.end))) {
              mo.end = moment__WEBPACK_IMPORTED_MODULE_3___default()(mo.start).add(1, 'minute');
            }
            subMachineOccupation.push({
              id: mo.id,
              plannedStartDateTime: moment__WEBPACK_IMPORTED_MODULE_3___default()(mo.start).utc(true),
              plannedEndDateTime: moment__WEBPACK_IMPORTED_MODULE_3___default()(mo.end).utc(true),
              machineId: ((_b = (_a = this.groups.find(x => x.id === mo.group)) === null || _a === void 0 ? void 0 : _a.nestedGroups) === null || _b === void 0 ? void 0 : _b.length) > 0 ? null : mo.group
            });
          }) : [];
          updateBody.push({
            id: item.id,
            plannedStartDateTime: moment__WEBPACK_IMPORTED_MODULE_3___default()(item.start).utc(true),
            plannedEndDateTime: moment__WEBPACK_IMPORTED_MODULE_3___default()(item.end).utc(true),
            machineId: ((_c = (_b = this.groups.find(x => x.id === item.group)) === null || _b === void 0 ? void 0 : _b.nestedGroups) === null || _c === void 0 ? void 0 : _c.length) > 0 || item.machine === undefined ? null : item.group,
            subMachineOccupation: subMachineOccupation
          });
        } else {
          const subMachineOccupation = [];
          ((_d = item.subMachineOccupations) === null || _d === void 0 ? void 0 : _d.length) > 0 ? item.subMachineOccupations.forEach(mo => {
            var _a, _b, _c;
            if (moment__WEBPACK_IMPORTED_MODULE_3___default()(mo.start).isSame(moment__WEBPACK_IMPORTED_MODULE_3___default()(mo.end))) {
              mo.end = moment__WEBPACK_IMPORTED_MODULE_3___default()(mo.start).add(1, 'minute');
            }
            subMachineOccupation.push({
              name: mo.content,
              machineId: ((_b = (_a = this.groups.find(x => x.id === mo.group)) === null || _a === void 0 ? void 0 : _a.nestedGroups) === null || _b === void 0 ? void 0 : _b.length) > 0 ? null : mo.group,
              productionOrderId: (_c = mo.productionOrder) === null || _c === void 0 ? void 0 : _c.id,
              plannedStartDateTime: moment__WEBPACK_IMPORTED_MODULE_3___default()(mo.start).utc(true),
              plannedEndDateTime: moment__WEBPACK_IMPORTED_MODULE_3___default()(mo.end).utc(true),
              productionSteps: [mo.productionStep]
            });
          }) : [];
          createBody.push({
            name: item.content,
            machineId: ((_f = (_e = this.groups.find(x => x.id === item.group)) === null || _e === void 0 ? void 0 : _e.nestedGroups) === null || _f === void 0 ? void 0 : _f.length) > 0 ? null : item.group,
            productionOrderId: (_g = item.productionOrder) === null || _g === void 0 ? void 0 : _g.id,
            plannedStartDateTime: moment__WEBPACK_IMPORTED_MODULE_3___default()(item.start).utc(true),
            plannedEndDateTime: moment__WEBPACK_IMPORTED_MODULE_3___default()(item.end).utc(true),
            productionSteps: [item.productionStep],
            subMachineOccupations: subMachineOccupation
          });
        }
      }
    });
    if (createBody.length > 0) {
      this._service.postMachineOccupation(createBody).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_28__.take)(1)).subscribe({
        next: () => {
          this.getMachineOccupationsAndSetupTimeline();
          this.toastr.success((createBody === null || createBody === void 0 ? void 0 : createBody.length) + ' items created', 'Creation response');
        },
        error: error => {
          console.error('There was an error!', error);
          this.toastr.error(error, 'Creation response');
        }
      });
    }
    if (updateBody.length > 0) {
      this._service.putMachineOccupation(updateBody).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_28__.take)(1)).subscribe({
        next: () => {
          this.toastr.success((updateBody === null || updateBody === void 0 ? void 0 : updateBody.length) + ' items edited', 'Update response');
          this.getMachineOccupationsAndSetupTimeline();
          this.isScrollable = true;
        },
        error: error => {
          this.toastr.error(error, 'Update response');
        }
      });
    }
    if ((toDelete === null || toDelete === void 0 ? void 0 : toDelete.length) > 0 || (createBody === null || createBody === void 0 ? void 0 : createBody.length) > 0) {
      this.getAllOrdersAndRefreshLists();
    }
  }
  resetDeletedMachineOccupations() {
    var _a, _b;
    if (((_a = this.machineOccupations) === null || _a === void 0 ? void 0 : _a.value) && this.machineOccupations.value.length > 0) {
      this.setTimelineItems(this.machineOccupations.value);
      if (this.selectedOrder) {
        this.getProductionStepsOfProduct(this.selectedOrder);
      }
      if (this.selectedStep) {
        const items = this.temporarilyDeletedItems.filter(x => x.productionStep.id === this.selectedStep.id);
        if (items && (items === null || items === void 0 ? void 0 : items.length) > 0) {
          //TODO foreach item in items , restore order and check if order is subOrder or parentOrder
          for (const item of items) {
            const orderToRemove = item.productionOrder;
            if (orderToRemove.parentProductionOrderId) {
              const order = (_b = this.ordersOfStepDataSource$.value.data) === null || _b === void 0 ? void 0 : _b.find(x => (x === null || x === void 0 ? void 0 : x.id) === orderToRemove.parentProductionOrderId);
              order.subProductionOrders = order.subProductionOrders.filter(o => o.id !== orderToRemove.id);
              order.children = order.children.filter(c => c.id !== orderToRemove.id);
              this.ordersOfStepDataSource$.value.data = this.ordersOfStepDataSource$.value.data;
            } else {
              this.ordersOfStepDataSource$.value.data = this.ordersOfStepDataSource$.value.data.filter(x => x.id !== orderToRemove.id);
            }
          }
        }
      }
      this.temporarilyDeletedItems = [];
    }
  }
  setOrderView() {
    this.orderViewSelected = true;
    this.productionStepViewSelected = false;
  }
  setProductionStepView() {
    this.orderViewSelected = false;
    this.productionStepViewSelected = true;
    this.getAllProductionSteps();
    if (this.selectedStep) {
      this.getOrdersOfStep(this.selectedStep);
    }
  }
  getAllProductionSteps() {
    const filteredMGs = JSON.parse(localStorage.getItem('filteredMachineGroups'));
    this._service.getAllProductionSteps(filteredMGs, this.pageStepNumber, this.searchTextForAllProductionSteps$.value).subscribe(x => {
      this.allProductionSteps.next(x);
      this.stepsListHtml = (0,_shared_utils_getListItemsHtml_utils__WEBPACK_IMPORTED_MODULE_17__.getListItemsHtml)(x, this.allProductionStepsTemplate, this.allProductionStepsFormat);
      this.ref.detectChanges();
    });
    return this.allProductionSteps;
  }
  getOrdersOfStep(productionStep) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_25__.__awaiter)(this, void 0, void 0, function* () {
      const result = yield (0,rxjs__WEBPACK_IMPORTED_MODULE_26__.lastValueFrom)(this._service.getOrdersOfProductionStep(productionStep.name, productionStep.machineTypeId, this.pageOrderOfStepNumber, this.searchTextForOrdersOfStep$.value));
      this.ordersOfStep.next(result);
      this.selectedStep = productionStep;
      this.ordersOfStepDataSource$.getValue().data = this.mapProductionOrders(result, this.pageOrderOfStepNumber);
    });
  }
  onListMouseDown(event) {
    event.target.closest('.iisys-mat-list-item').classList.add('mousedown');
  }
  onListMouseUp(event) {
    event.target.closest('.iisys-mat-list-item').classList.remove('mousedown');
  }
  filterUnoccupiedMachines(event) {
    this.x1 = event === null || event === void 0 ? void 0 : event.checked;
    if (event.checked) {
      this.setUnoccupiedMachinesToggleChecked = true;
      if (this.setViewSelectedOrderPlanToggle || this.setViewAndEditSelectedOrderPlanToggle) {
        this.setViewSelectedOrderPlanToggle = false;
        this.setViewAndEditSelectedOrderPlanToggle = false;
        this.planningModeOfSelectedOrder.checked = false;
        this.showAllMachines.checked = false;
        this.timeline.setItems(this.items);
      }
      this.setGroupsOfTimeline(true, true);
      this.timeline.setGroups(this.groups);
    } else {
      this.setUnoccupiedMachinesToggleChecked = false;
      this.setGroupsOfTimeline(true, false);
      this.timeline.setGroups(this.groups);
      this.setTimelineItems(this.machineOccupations.value);
    }
  }
  showAllMachinesInThePlanningOfSelectedOrder(event) {
    if (this.planningModeOfSelectedOrder.checked && event.checked) {
      const machineTypeIdsOfSelectedOrder = this.groups.filter(x => {
        var _a;
        return ((_a = x.nestedGroups) === null || _a === void 0 ? void 0 : _a.length) > 0 || Number.isInteger(x.id % 999);
      }).map(g => g.id / 999);
      let machineTypes = lodash__WEBPACK_IMPORTED_MODULE_2__.cloneDeep(this.allMachineTypes.value);
      machineTypes = machineTypes.filter(mt => machineTypeIdsOfSelectedOrder.includes(mt.id));
      if (machineTypes && (machineTypes === null || machineTypes === void 0 ? void 0 : machineTypes.length) > 0) {
        if (this.groups.length > 0) {
          this.groups = [];
        }
        machineTypes.forEach(x => {
          var _a;
          (_a = x.cdMachines) === null || _a === void 0 ? void 0 : _a.forEach(m => {
            this.groups.push({
              id: m.id,
              content: m.name
            });
          });
          this.groups.push({
            id: x.id * 999,
            content: x.name,
            nestedGroups: x.cdMachines.map(y => y.id),
            showNested: true
          });
        });
        const itemsOfOrder = this.items.filter(x => {
          var _a, _b, _c;
          return ((_a = this.selectedOrder) === null || _a === void 0 ? void 0 : _a.name) === x.content || ((_c = (_b = this.selectedOrder) === null || _b === void 0 ? void 0 : _b.subProductionOrders) === null || _c === void 0 ? void 0 : _c.map(so => so.name).includes(x.content));
        });
        this.timeline.setItems(itemsOfOrder);
        this.timeline.setGroups(this.groups);
      }
    } else {
      this.viewAndEditPlanOfSelectedOrder(null, true);
    }
  }
  viewAndEditPlanOfSelectedOrder(event, allowEditing) {
    if ((event === null || event === void 0 ? void 0 : event.checked) || (event === null || event === undefined) && this.setViewSelectedOrderPlanToggle === true || !event && allowEditing) {
      if (!this.checkSelectedOrderPlanToggle()) {
        if (allowEditing) {
          this.x3 = true;
          this.setViewAndEditSelectedOrderPlanToggle = true;
          this.setViewSelectedOrderPlanToggle = false;
        } else {
          this.x2 = event === null || event === void 0 ? void 0 : event.checked;
          this.planningModeOfSelectedOrder.checked = false;
          this.setViewAndEditSelectedOrderPlanToggle = false;
          this.setViewSelectedOrderPlanToggle = true;
        }
        this.setUnoccupiedMachinesToggleChecked = false;
        const filteredMgsIds = JSON.parse(localStorage.getItem('filteredMachineGroups'));
        this.setTimelineItems(this.machineOccupations.value);
        const itemsOfOrder = this.items.filter(x => {
          var _a, _b, _c, _d;
          return ((_a = x.subMachineOccupations) === null || _a === void 0 ? void 0 : _a.length) > 0 && x.subMachineOccupations.map(mo => mo.content).some(c => this.selectedOrder.subProductionOrders.map(o => o.name).includes(c)) || ((_b = this.selectedOrder) === null || _b === void 0 ? void 0 : _b.name) === x.content || ((_d = (_c = this.selectedOrder) === null || _c === void 0 ? void 0 : _c.subProductionOrders) === null || _d === void 0 ? void 0 : _d.map(o => o.name).includes(x.content));
        });
        const idsOfOccupiedMachines = itemsOfOrder.filter(y => y.machine).map(x => x.group);
        const idsOfMachineTypes = itemsOfOrder.filter(x => !x.machine).map(y => y.group / 999);
        let machineTypes = lodash__WEBPACK_IMPORTED_MODULE_2__.cloneDeep(this.allMachineTypes.value);
        const machineTypesOfNotPlannedSteps = machineTypes.filter(x => this.productionSteps.value.map(ps => ps.machineTypeId).includes(x.id));
        let machines = machineTypes.flatMap(x => x.cdMachines);
        if (allowEditing) {
          machines = machines.filter(m => idsOfOccupiedMachines.includes(m.id) || machineTypesOfNotPlannedSteps.map(y => y.id).includes(m.machineTypeId));
        } else {
          machines = machines.filter(m => idsOfOccupiedMachines.includes(m.id));
        }
        if (filteredMgsIds) {
          machineTypes = machineTypes.filter(mt => filteredMgsIds.includes(mt.id));
          machines = machines.filter(x => filteredMgsIds.includes(x.machineTypeId));
        }
        machineTypes = machineTypes.filter(mt => machines.map(m => m.machineTypeId).includes(mt.id) || idsOfMachineTypes.includes(mt.id));
        if (machineTypes && (machineTypes === null || machineTypes === void 0 ? void 0 : machineTypes.length) > 0) {
          if (this.groups.length > 0) {
            this.groups = [];
          }
          machineTypes.forEach(mt => {
            mt.cdMachines = machines.filter(m => m.machineTypeId === mt.id);
          });
          machineTypes.forEach(x => {
            var _a;
            (_a = x.cdMachines) === null || _a === void 0 ? void 0 : _a.forEach(m => {
              this.groups.push({
                id: m.id,
                content: m.name
              });
            });
            this.groups.push({
              id: x.id * 999,
              content: x.name,
              nestedGroups: x.cdMachines.map(y => y.id),
              showNested: true
            });
          });
          itemsOfOrder.forEach(i => {
            allowEditing ? i.editable = {
              updateTime: true,
              remove: true,
              updateGroup: false
            } : i.editable = false;
          });
          this.items = itemsOfOrder;
          this.timeline.setItems(this.items);
          this.timeline.setGroups(this.groups);
        } else {
          this.toastr.info('Es gibt keine passende Machinengruppen bzw. Maschinen für diese Kondition', 'Keine Ergebnisse');
          this.setGroupsOfTimeline(true, false);
          this.timeline.setItems([]);
          this.timeline.setGroups([]);
        }
      }
    } else {
      this.x2 = false;
      this.x3 = false;
      this.showAllMachines.checked = false;
      this.setViewSelectedOrderPlanToggle = false;
      this.setViewAndEditSelectedOrderPlanToggle = false;
      this.setGroupsOfTimeline(true, false);
      this.timeline.setGroups(this.groups);
      this.setTimelineItems(this.machineOccupations.value);
    }
  }
  getUnsavedItems(items) {
    const unsavedItems = [];
    items.forEach(i => {
      if (!this.machineOccupations.value.map(mo => mo.id).includes(i === null || i === void 0 ? void 0 : i.id)) {
        unsavedItems.push(i);
      }
    });
    return unsavedItems;
  }
  checkSelectedOrderPlanToggle() {
    return !this.selectedOrder;
  }
  mapProductionOrders(subscription, pageNumber) {
    const orders = this.productionOrdersDataSource$.getValue().data;
    let i = 0;
    const totalPreviousItems = this.itemsPerPage.slice(0, pageNumber - 1).reduce((a, b) => a + b, 0);
    return subscription.map(x => {
      let j = 0;
      const order = orders.find(y => x.id === y.id);
      return {
        name: x.name,
        amount: x.amount,
        product: x.product,
        unitString: x.unitString,
        deadline: x.deadline,
        id: x.id,
        productId: x.productId,
        status: x.status,
        externalId: x.externalId,
        priority: x.priority,
        versionNr: x.versionNr,
        machineOccupations: x.machineOccupations,
        createDateTime: x.createDateTime,
        updateDateTime: x.updateDateTime,
        subProductionOrders: x.subProductionOrders,
        customerOrder: x.customerOrder,
        customerOrderId: x.customerOrderId,
        keyValueMapProductionOrders: x.keyValueMapProductionOrders,
        parentProductionOrderId: x.parentProductionOrderId,
        children: x.subProductionOrders.map(child => {
          return {
            name: child.name,
            amount: child.amount,
            product: child.product,
            unitString: child.unitString,
            deadline: child.deadline,
            id: child.id,
            productId: child.productId,
            status: child.status,
            externalId: child.externalId,
            priority: child.priority,
            versionNr: child.versionNr,
            machineOccupations: child.machineOccupations,
            createDateTime: child.createDateTime,
            updateDateTime: child.updateDateTime,
            subProductionOrders: child.subProductionOrders,
            customerOrder: child.customerOrder,
            customerOrderId: child.customerOrderId,
            keyValueMapProductionOrders: child.keyValueMapProductionOrders,
            parentProductionOrderId: child.parentProductionOrderId,
            children: child.subProductionOrders,
            index: j++,
            isCollapsed: order ? order.isCollapsed : true
          };
        }),
        index: totalPreviousItems === 0 ? i++ : totalPreviousItems + i++,
        isCollapsed: order ? order.isCollapsed : true
      };
    });
  }
  openDeleteDialog(item) {
    var _a;
    const itemSelectionIds = this.timeline.getSelection();
    const selectedItems = (_a = this.items) === null || _a === void 0 ? void 0 : _a.filter(x => itemSelectionIds === null || itemSelectionIds === void 0 ? void 0 : itemSelectionIds.includes(x.id));
    const dialogConfig = new _angular_material_dialog__WEBPACK_IMPORTED_MODULE_30__.MatDialogConfig();
    dialogConfig.autoFocus = true;
    dialogConfig.data = {
      selectedItems: selectedItems !== null && selectedItems !== void 0 ? selectedItems : []
    };
    const dialogRef = this.dialog.open(_delete_dialog_delete_dialog_component__WEBPACK_IMPORTED_MODULE_16__.DeleteDialogComponent);
    const subSelection = dialogRef.componentInstance.onSelectionDelete.subscribe(() => {
      this.restoreListItemAndRemoveTimelineItemManySelection(item);
    });
    const subNextBars = dialogRef.componentInstance.onNextBarsDelete.subscribe(() => {
      this.removeAllOrNextMachineOccupations(false, item);
    });
    const subAll = dialogRef.componentInstance.onPlanningDelete.subscribe(() => {
      this.removeAllOrNextMachineOccupations(true, item);
    });
    dialogRef.afterClosed().subscribe(() => {
      subSelection.unsubscribe();
      subNextBars.unsubscribe();
      subAll.unsubscribe();
    });
  }
  removeAllOrNextMachineOccupations(allMacineOccupations, item) {
    var _a;
    const itemSelectionIds = this.timeline.getSelection();
    const selectedItems = (_a = this.items) === null || _a === void 0 ? void 0 : _a.filter(x => itemSelectionIds === null || itemSelectionIds === void 0 ? void 0 : itemSelectionIds.includes(x.id));
    if (!selectedItems || selectedItems.length < 1) {
      this.toastr.error('Keine Balken ausgewählt', 'Keine Auswahl');
      return;
    }
    if (selectedItems && selectedItems.length > 0) {
      const selectedItemParentId = [...new Set()];
      selectedItems.forEach(x => {
        var _a, _b;
        if ((_a = x.productionOrder) === null || _a === void 0 ? void 0 : _a.parentProductionOrderId) {
          selectedItemParentId.push((_b = x.productionOrder) === null || _b === void 0 ? void 0 : _b.parentProductionOrderId);
        }
      });
      const ordersOfSelectedItems = [...new Set(selectedItems.map(x => {
        var _a;
        return (_a = x.productionOrder) === null || _a === void 0 ? void 0 : _a.id;
      }))];
      let toDelete = [];
      ordersOfSelectedItems.forEach(o => {
        var _a, _b, _c, _d;
        if (allMacineOccupations) {
          //alle Balken der Planung (Auftrag) löschen
          toDelete = this.items.filter(x => {
            var _a, _b, _c, _d;
            return ((_a = x.productionOrder) === null || _a === void 0 ? void 0 : _a.id) === o || ((_b = x.productionOrder) === null || _b === void 0 ? void 0 : _b.parentProductionOrderId) === o || ((_c = x.productionOrder) === null || _c === void 0 ? void 0 : _c.parentProductionOrderId) == selectedItemParentId || ((_d = x.productionOrder) === null || _d === void 0 ? void 0 : _d.id) == selectedItemParentId;
          });
        } else {
          //die nächsten Balken löschen
          const firstItemOfSelection = selectedItems.find(x => {
            var _a;
            return ((_a = x.productionOrder) === null || _a === void 0 ? void 0 : _a.id) === o && Math.min(x.productionStepSequence);
          });
          toDelete = this.items.filter(x => {
            var _a, _b, _c;
            return (((_a = x.productionOrder) === null || _a === void 0 ? void 0 : _a.id) === o || ((_b = x.productionOrder) === null || _b === void 0 ? void 0 : _b.parentProductionOrderId) == selectedItemParentId || ((_c = x.productionOrder) === null || _c === void 0 ? void 0 : _c.id) == selectedItemParentId) && x.start >= firstItemOfSelection.start;
          });
        }
        if (toDelete && toDelete.length > 0) {
          toDelete.forEach(i => {
            if (this.machineOccupations.value.map(mo => mo.id).includes(i.id)) {
              this.temporarilyDeletedItems.push(i);
            }
          });
          this.items = this.items.filter(x => !toDelete.map(x => x.id).includes(x.id));
          const restoredSteps = toDelete.map(x => x.productionStep);
          restoredSteps === null || restoredSteps === void 0 ? void 0 : restoredSteps.forEach(s => {
            s.machineType = this.allMachineTypes.value.find(x => x.id === s.machineTypeId);
          });
          if (this.selectedOrder && (((_a = this.selectedOrder) === null || _a === void 0 ? void 0 : _a.id) === ((_b = item.productionOrder) === null || _b === void 0 ? void 0 : _b.id) || ((_c = item.productionOrder) === null || _c === void 0 ? void 0 : _c.parentProductionOrderId) === ((_d = this.selectedOrder) === null || _d === void 0 ? void 0 : _d.id))) {
            if (restoredSteps && (!this.productionSteps.value.map(x => x.id).every(y => restoredSteps === null || restoredSteps === void 0 ? void 0 : restoredSteps.map(step => step.id).includes(y)) || this.productionSteps.value.length === 0)) {
              const newStepsList = this.productionSteps.value;
              restoredSteps === null || restoredSteps === void 0 ? void 0 : restoredSteps.forEach(s => {
                if (!this.productionSteps.value.map(x => x.id).includes(s.id)) {
                  newStepsList.push(s);
                }
              });
              this.plannedSteps.next(this.plannedSteps.value.filter(x => !restoredSteps.map(s => s.id).includes(x.id)));
              this.productionSteps.next(newStepsList.sort((a, b) => a.sequence < b.sequence ? -1 : 1));
            }
          }
        }
      });
      this.timeline.setItems(this.items);
      this.timeline.fit();
      this.ref.detectChanges();
    }
  }
  onSearchProductionOrders(event) {
    this.searchTextForProductionOrders$.next(event.target.value);
    clearTimeout(this.timerForProductionOrdersSearch);
    this.timerForProductionOrdersSearch = setTimeout(() => {
      var _a;
      this.gotProductionOrders = false;
      this._service.getProductionOrders((_a = JSON.parse(localStorage.getItem('filteredMachineGroups'))) !== null && _a !== void 0 ? _a : [], 1, event.target.value).subscribe(y => {
        this.gotProductionOrders = true;
        this.pageOrderNumber = 1;
        this.scrolledOrdersToBottom.next(false);
        if (this.scrollSubscription1) {
          this.scrollSubscription1.unsubscribe();
        }
        this.productionOrdersDataSource$.getValue().data = this.mapProductionOrders(y.length > 0 ? y : [], 1);
        this.ordersListHtml = (0,_shared_utils_getListItemsHtml_utils__WEBPACK_IMPORTED_MODULE_17__.getListItemsHtml)(this.productionOrdersDataSource$.getValue().data, this.contractsTemplate, this.contractsFormat);
        this.ref.detectChanges();
      });
    }, 500);
  }
  onSearchAllProductionSteps(event) {
    this.searchTextForAllProductionSteps$.next(event.target.value);
    clearTimeout(this.timerForAllStepsSearch);
    this.timerForAllStepsSearch = setTimeout(() => {
      var _a;
      this.loading = true;
      this._service.getAllProductionSteps((_a = JSON.parse(localStorage.getItem('filteredMachineGroups'))) !== null && _a !== void 0 ? _a : [], 1, this.searchTextForAllProductionSteps$.value).subscribe(y => {
        this.pageStepNumber = 1;
        this.scrolledStepsToBottom.next(false);
        this.allProductionSteps.next(y.length > 0 ? y : []);
        this.stepsListHtml = (0,_shared_utils_getListItemsHtml_utils__WEBPACK_IMPORTED_MODULE_17__.getListItemsHtml)(this.allProductionSteps.getValue(), this.allProductionStepsTemplate, this.allProductionStepsFormat);
        this.loading = false;
        this.ref.detectChanges();
      });
    }, 500);
  }
  onSearchOrdersOfStep(event) {
    if (!this.selectedStep) {
      return;
    }
    this.searchTextForOrdersOfStep$.next(event.target.value);
    clearTimeout(this.timerForAllStepsSearch);
    this.timerForAllStepsSearch = setTimeout(() => {
      this.loading = true;
      this._service.getOrdersOfProductionStep(this.selectedStep.name, this.selectedStep.machineTypeId, this.pageOrderOfStepNumber, this.searchTextForOrdersOfStep$.value).subscribe(y => {
        this.ordersOfStep.next(y);
        this.ordersOfStepDataSource$.getValue().data = this.mapProductionOrders(y, this.pageOrderOfStepNumber);
        this.loading = false;
        this.ref.detectChanges();
      });
    }, 500);
  }
};
VisTimelineComponent.ctorParameters = () => [{
  type: _production_data_service__WEBPACK_IMPORTED_MODULE_12__.ProductionDataService
}, {
  type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_30__.MatDialog
}, {
  type: ngx_toastr__WEBPACK_IMPORTED_MODULE_31__.ToastrService
}, {
  type: _angular_core__WEBPACK_IMPORTED_MODULE_32__.ChangeDetectorRef
}];
VisTimelineComponent.propDecorators = {
  barsConstraints: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_32__.ViewChild,
    args: ['barsConstraints']
  }],
  planningModeOfSelectedOrder: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_32__.ViewChild,
    args: ['planningModeOfSelectedOrder']
  }],
  showAllMachines: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_32__.ViewChild,
    args: ['showAllMachines']
  }],
  timelineContainer: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_32__.ViewChild,
    args: ['timeline', {
      static: true
    }]
  }],
  scroller1: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_32__.ViewChild,
    args: ['scroller1']
  }],
  scroller2: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_32__.ViewChild,
    args: ['scroller2']
  }],
  scroller3: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_32__.ViewChild,
    args: ['scroller3']
  }],
  myElement: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_32__.ViewChild,
    args: ['myElement']
  }],
  searchOrdersInput: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_32__.ViewChild,
    args: ['searchOrdersInput', {
      static: false
    }]
  }],
  searchProductionStepsInput: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_32__.ViewChild,
    args: ['searchProductionStepsInput', {
      static: false
    }]
  }]
};
VisTimelineComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_25__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_32__.Component)({
  selector: 'app-vis-timeline',
  template: _vis_timeline_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_32__.ViewEncapsulation.None,
  styles: [(_vis_timeline_component_scss_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
}), (0,tslib__WEBPACK_IMPORTED_MODULE_25__.__metadata)("design:paramtypes", [_production_data_service__WEBPACK_IMPORTED_MODULE_12__.ProductionDataService, _angular_material_dialog__WEBPACK_IMPORTED_MODULE_30__.MatDialog, ngx_toastr__WEBPACK_IMPORTED_MODULE_31__.ToastrService, _angular_core__WEBPACK_IMPORTED_MODULE_32__.ChangeDetectorRef])], VisTimelineComponent);


/***/ }),

/***/ 8068:
/*!**********************************************************!*\
  !*** ./apps/web-app/src/app/shared/pipes/pipe.module.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PipeModule": () => (/* binding */ PipeModule)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 4929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 2560);
/* harmony import */ var _sanitizeHtml_pipe__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sanitizeHtml.pipe */ 9182);



let PipeModule = class PipeModule {};
PipeModule = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule)({
  declarations: [_sanitizeHtml_pipe__WEBPACK_IMPORTED_MODULE_0__.SanitizeHtmlPipe],
  exports: [_sanitizeHtml_pipe__WEBPACK_IMPORTED_MODULE_0__.SanitizeHtmlPipe],
  providers: [_sanitizeHtml_pipe__WEBPACK_IMPORTED_MODULE_0__.SanitizeHtmlPipe]
})], PipeModule);


/***/ }),

/***/ 9182:
/*!****************************************************************!*\
  !*** ./apps/web-app/src/app/shared/pipes/sanitizeHtml.pipe.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SanitizeHtmlPipe": () => (/* binding */ SanitizeHtmlPipe)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 4929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 2560);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/platform-browser */ 4497);



let SanitizeHtmlPipe = class SanitizeHtmlPipe {
  constructor(_sanitizer) {
    this._sanitizer = _sanitizer;
  }
  transform(v) {
    return this._sanitizer.bypassSecurityTrustHtml(v);
  }
};
SanitizeHtmlPipe.ctorParameters = () => [{
  type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_0__.DomSanitizer
}];
SanitizeHtmlPipe = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Pipe)({
  name: 'sanitizeHtml'
}), (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__metadata)("design:paramtypes", [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_0__.DomSanitizer])], SanitizeHtmlPipe);


/***/ }),

/***/ 8814:
/*!*********************************************************************!*\
  !*** ./apps/web-app/src/app/shared/utils/getListItemsHtml.utils.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getListItemsHtml": () => (/* binding */ getListItemsHtml)
/* harmony export */ });
/* harmony import */ var _getTemplate_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getTemplate.utils */ 1452);

function getListItemsHtml(items, json, getElement) {
  const listItems = [];
  for (let i = 0; i < (items.data !== undefined ? items.data.length : items.length); i++) {
    listItems.push((0,_getTemplate_utils__WEBPACK_IMPORTED_MODULE_0__.getTemplate)(getElement(items.data !== undefined ? items.data[i] : items[i]), json));
  }
  return listItems;
}

/***/ }),

/***/ 1452:
/*!****************************************************************!*\
  !*** ./apps/web-app/src/app/shared/utils/getTemplate.utils.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getTemplate": () => (/* binding */ getTemplate)
/* harmony export */ });
function getTemplate(item, jsonTemplate) {
  function getDescendantProp(obj, desc) {
    const arr = desc.split('.');
    while (arr.length && (obj = obj[arr.shift()]));
    return desc !== 'empty' ? obj : '';
  }
  let template = '<div ' + (item.id !== undefined ? 'id="' + item.id + '"' : '') + 'class="progress-wrapper">';
  for (const t of jsonTemplate) {
    if (Object.prototype.hasOwnProperty.call(t, 'group')) {
      template += `<${t.htmltag} ` + (t.class !== '' ? `class="${t.class}">` : `>`);
      for (const tg of t.group) {
        template += `<${tg.htmltag}>${tg.label.length > 0 && item.empty !== undefined ? tg.label[item.empty] : tg.label}  ${getDescendantProp(item, tg.key)} </${tg.htmltag}>`;
      }
      template += `</${t.htmltag}>`;
    } else {
      template += `<${t.htmltag} ` + (t.class !== '' ? `class="${t.class}">` : `>`) + `${t.label}  ${getDescendantProp(item, t.key)} </${t.htmltag}>`;
    }
  }
  template += '</div>';
  return template;
}

/***/ }),

/***/ 4363:
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm/internal/firstValueFrom.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "firstValueFrom": () => (/* binding */ firstValueFrom)
/* harmony export */ });
/* harmony import */ var _util_EmptyError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/EmptyError */ 4423);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Subscriber */ 9904);


function firstValueFrom(source, config) {
  const hasConfig = typeof config === 'object';
  return new Promise((resolve, reject) => {
    const subscriber = new _Subscriber__WEBPACK_IMPORTED_MODULE_0__.SafeSubscriber({
      next: value => {
        resolve(value);
        subscriber.unsubscribe();
      },
      error: reject,
      complete: () => {
        if (hasConfig) {
          resolve(config.defaultValue);
        } else {
          reject(new _util_EmptyError__WEBPACK_IMPORTED_MODULE_1__.EmptyError());
        }
      }
    });
    source.subscribe(subscriber);
  });
}

/***/ }),

/***/ 8611:
/*!**************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm/internal/lastValueFrom.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "lastValueFrom": () => (/* binding */ lastValueFrom)
/* harmony export */ });
/* harmony import */ var _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/EmptyError */ 4423);

function lastValueFrom(source, config) {
  const hasConfig = typeof config === 'object';
  return new Promise((resolve, reject) => {
    let _hasValue = false;
    let _value;
    source.subscribe({
      next: value => {
        _value = value;
        _hasValue = true;
      },
      error: reject,
      complete: () => {
        if (_hasValue) {
          resolve(_value);
        } else if (hasConfig) {
          resolve(config.defaultValue);
        } else {
          reject(new _util_EmptyError__WEBPACK_IMPORTED_MODULE_0__.EmptyError());
        }
      }
    });
  });
}

/***/ }),

/***/ 8653:
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm/internal/observable/interval.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "interval": () => (/* binding */ interval)
/* harmony export */ });
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scheduler/async */ 6936);
/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./timer */ 8947);


function interval(period = 0, scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_0__.asyncScheduler) {
  if (period < 0) {
    period = 0;
  }
  return (0,_timer__WEBPACK_IMPORTED_MODULE_1__.timer)(period, period, scheduler);
}

/***/ }),

/***/ 2196:
/*!***********************************************!*\
  !*** ./node_modules/timeline-arrows/arrow.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Arrow)
/* harmony export */ });
/**
 * timeline-arrows
 * https://github.com/javdome/timeline-arrows
 *
 * Class to easily draw lines to connect items in the vis Timeline module.
 *
 * @version 4.6.0
 * @date    2024-03-24
 *
 * @copyright (c) Javi Domenech (javdome@gmail.com) 
 *
 *
 * @license
 * timeline-arrows is dual licensed under both
 *
 *   1. The Apache 2.0 License
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   and
 *
 *   2. The MIT License
 *      http://opensource.org/licenses/MIT
 *
 * timeline-arrows may be distributed under either license.
 */

// @ts-check

/**
 * @typedef {(number | string)} VisIdType Timeline view item id. Equivalent to vis.IdType.
 */

/**
 * @typedef {(number | string)} ArrowIdType arrow id.
 */

/**
 * @typedef ArrowSpec Arrow specification
 * @property {ArrowIdType} id arrow id
 * @property {VisIdType} id_item_1 start timeline item id
 * @property {VisIdType} id_item_2 end timeline item id
 * @property {string} [title] optional arrow title
 */

/**
 * @typedef ArrowOptions Arrow configuration options
 * @property {boolean} [followRelationships] if true, arrows can point backwards and will follow the relationships set in the data
 * @property {(el: SVGPathElement, title: string) => string } [tooltipConfig] if arrows have a `title` property, the default behavior will add a title attribute that shows on hover. However, you might not want to use the title attribute, but instead your own tooltip configuration.
        This method takes two arguments, `el` - the arrow - and `title` - the content of the `title` property set in the arrow data.
 * @property {string} [color] arrow color
 * @property {number} [strokeWidth] arrow thickness in pixels
 * @property {boolean} [hideWhenItemsNotVisible] if true, arrows will be hidden when both items is not visible due to timeline zoom.
 */

/** Arrow set for a vis.js Timeline. */
class Arrow {
  /**
   * Creates arrows.
   * @param {*} timeline timeline object
   * @param {ArrowSpec[]} dependencies arrows
   * @param {ArrowOptions} [options] 
   */
  constructor(timeline, dependencies, options) {
    this._svg = document.createElementNS("http://www.w3.org/2000/svg", "svg");
    this._timeline = timeline;

    /** @private @type {boolean | undefined} if true, arrows can point backwards and will follow the relationships set in the data */
    this._followRelationships = options?.followRelationships;
    /** @private @type {((el: SVGPathElement, title: string) => string) | undefined } */
    this._tooltipConfig = options?.tooltipConfig;

    /** @private @type {string} color */
    this._arrowsColor = options?.color ? options.color : "#9c0000";
    /** @private @type {number} arrow thickness in pixels */
    this._arrowsStrokeWidth = options?.strokeWidth ?? 3;

    /** @private @type {boolean} if true, arrows will be hidden when both items is not visible due to timeline zoom  */
    this._hideWhenItemsNotVisible = options?.hideWhenItemsNotVisible ?? true;

    /** @private @type {SVGMarkerElement} */
    this._arrowHead = document.createElementNS("http://www.w3.org/2000/svg", "marker");
    /** @private @type {SVGPathElement} */
    this._arrowHeadPath = document.createElementNS("http://www.w3.org/2000/svg", "path");
    this._dependency = [...dependencies];

    /** @private @type {SVGPathElement[]} */
    this._dependencyPath = [];

    /** @private @type {string} */
    this._arrowHeadId = `arrowhead-${Math.random().toString(36).substring(2)}`;
    this._initialize();
  }
  _initialize() {
    //Configures the SVG layer and add it to timeline
    this._svg.style.position = "absolute";
    this._svg.style.top = "0px";
    this._svg.style.height = "100%";
    this._svg.style.width = "100%";
    this._svg.style.display = "block";
    this._svg.style.zIndex = "1"; // Should it be above or below? (1 for above, -1 for below)
    this._svg.style.pointerEvents = "none"; // To click through, if we decide to put it above other elements.
    this._timeline.dom.center.appendChild(this._svg);

    //Configure the arrowHead
    this._arrowHead.setAttribute("id", this._arrowHeadId);
    this._arrowHead.setAttribute("viewBox", "-10 -5 10 10");
    this._arrowHead.setAttribute("refX", "-7");
    this._arrowHead.setAttribute("refY", "0");
    this._arrowHead.setAttribute("markerUnits", "strokeWidth");
    this._arrowHead.setAttribute("markerWidth", "3");
    this._arrowHead.setAttribute("markerHeight", "3");
    this._arrowHead.setAttribute("orient", "auto-start-reverse");
    //Configure the path of the arrowHead (arrowHeadPath)
    this._arrowHeadPath.setAttribute("d", "M 0 0 L -10 -5 L -7.5 0 L -10 5 z");
    this._arrowHeadPath.style.fill = this._arrowsColor;
    this._arrowHead.appendChild(this._arrowHeadPath);
    this._svg.appendChild(this._arrowHead);
    //Create paths for the started dependency array
    for (let i = 0; i < this._dependency.length; i++) {
      this._createPath();
    }

    //NOTE: We hijack the on "changed" event to draw the arrows.
    this._timeline.on("changed", () => {
      this._drawDependencies();
    });
  }

  /** @private */
  _createPath() {
    //Add a new path to array dependencyPath and to svg
    let somePath = document.createElementNS("http://www.w3.org/2000/svg", "path");
    somePath.setAttribute("d", "M 0 0");
    somePath.style.stroke = this._arrowsColor;
    somePath.style.strokeWidth = this._arrowsStrokeWidth + "px";
    somePath.style.fill = "none";
    somePath.style.pointerEvents = "auto";
    this._dependencyPath.push(somePath);
    this._svg.appendChild(somePath);
  }

  /** @private */
  _drawDependencies() {
    //Create paths for the started dependency array
    for (let i = 0; i < this._dependency.length; i++) {
      this._drawArrows(this._dependency[i], i);
    }
  }

  /**
   * @private 
   * @param {ArrowSpec} dep arrow specification
   * @param {number} index arrow index
   */
  _drawArrows(dep, index) {
    //Checks if both items exist
    //if( (typeof this._timeline.itemsData._data[dep.id_item_1] !== "undefined") && (typeof this._timeline.itemsData._data[dep.id_item_2] !== "undefined") ) {

    const bothItemsExist = this._timeline.itemsData.get(dep.id_item_1) !== null && this._timeline.itemsData.get(dep.id_item_2) !== null;

    //Checks if at least one item is visible in screen
    let oneItemVisible = false; //Iniciamos a false
    //Checks if the groups of items are both visible
    let groupOf_1_isVisible = false; //Iniciamos a false
    let groupOf_2_isVisible = false; //Iniciamos a false
    if (bothItemsExist) {
      const visibleItems = this._timeline.getVisibleItems();
      for (let k = 0; k < visibleItems.length; k++) {
        if (dep.id_item_1 == visibleItems[k]) oneItemVisible = true;
        if (dep.id_item_2 == visibleItems[k]) oneItemVisible = true;
      }
      let groupOf_1 = this._timeline.itemsData.get(dep.id_item_1).group; //let groupOf_1 = items.get(dep.id_item_1).group;

      let groupOf_2 = this._timeline.itemsData.get(dep.id_item_2).group; //let groupOf_2 = items.get(dep.id_item_2).group;

      if (this._timeline.groupsData.get(groupOf_1)) groupOf_1_isVisible = true;
      if (this._timeline.groupsData.get(groupOf_2)) groupOf_2_isVisible = true;

      // If groups are null then they are not visible.
      if (groupOf_1 == null) {
        groupOf_1_isVisible = false;
      }
      if (groupOf_2 == null) {
        groupOf_2_isVisible = false;
      }
    }
    if (groupOf_1_isVisible && groupOf_2_isVisible && (oneItemVisible || !this._hideWhenItemsNotVisible) && bothItemsExist) {
      var item_1 = this._getItemPos(this._timeline.itemSet.items[dep.id_item_1]);
      var item_2 = this._getItemPos(this._timeline.itemSet.items[dep.id_item_2]);
      if (!this._followRelationships && item_2.mid_x < item_1.mid_x) {
        [item_1, item_2] = [item_2, item_1]; // As demo, we put an arrow between item 0 and item1, from the one that is more on left to the one more on right.
      }

      var curveLen = item_1.height * 2; // Length of straight Bezier segment out of the item.

      if (this._followRelationships && item_2.mid_x < item_1.mid_x) {
        item_2.right += 10; // Space for the arrowhead.
        this._dependencyPath[index].setAttribute("marker-start", `url(#${this._arrowHeadId})`);
        this._dependencyPath[index].setAttribute("marker-end", "");
        this._dependencyPath[index].setAttribute("d", "M " + item_2.right + " " + item_2.mid_y + " C " + (item_2.right + curveLen) + " " + item_2.mid_y + " " + (item_1.left - curveLen) + " " + item_1.mid_y + " " + item_1.left + " " + item_1.mid_y);
      } else {
        item_2.left -= 10; // Space for the arrowhead.
        this._dependencyPath[index].setAttribute("marker-end", `url(#${this._arrowHeadId})`);
        this._dependencyPath[index].setAttribute("marker-start", "");
        this._dependencyPath[index].setAttribute("d", "M " + item_1.right + " " + item_1.mid_y + " C " + (item_1.right + curveLen) + " " + item_1.mid_y + " " + (item_2.left - curveLen) + " " + item_2.mid_y + " " + item_2.left + " " + item_2.mid_y);
      }

      // Adding the title if property title has been added in the dependency
      if (dep.hasOwnProperty("title")) {
        this._tooltipConfig ? this._tooltipConfig(this._dependencyPath[index], dep.title ?? '') : this._dependencyPath[index].innerHTML = "<title>" + dep.title + "</title>";
      }
    } else {
      this._dependencyPath[index].setAttribute("marker-end", "");
      this._dependencyPath[index].setAttribute("d", "M 0 0");
    }
  }

  /** @private Función que recibe in Item y devuelve la posición en pantalla del item. */
  _getItemPos(item) {
    let left_x = item.left;
    let top_y;
    if (this._timeline.options.orientation.item == "top") {
      top_y = item.parent.top + item.top;
    } else {
      top_y = item.parent.top + item.parent.height - item.top - item.height;
    }
    return {
      left: left_x,
      top: top_y,
      right: left_x + item.width,
      bottom: top_y + item.height,
      mid_x: left_x + item.width / 2,
      mid_y: top_y + item.height / 2,
      width: item.width,
      height: item.height
    };
  }

  /**
   * Adds arrow between two timeline items.
   * @param {ArrowSpec} dep item dependency
   */
  addArrow(dep) {
    this._dependency.push(dep);
    this._createPath();
    this._timeline.redraw();
  }

  /**
   * Get arrow by ID.
   * @param {ArrowIdType} id arrow ID
   * @returns {ArrowSpec | null} arrow spec, or null
   */
  getArrow(id) {
    return this._dependency.find(dep => dep.id === id) ?? null;
  }

  /**
   * Get all Id arrows.
   *
   * @return {(ArrowIdType)[]} list of id arrows
   */
  getIdArrows() {
    return this._dependency.map(dep => dep.id);
  }

  /**
   * Finds arrow with the given id and removes it.
   * Función que recibe el id de una flecha y la elimina.
   * @param {ArrowIdType} id arrow id
   */
  removeArrow(id) {
    const index = this._dependency.findIndex(dep => dep.id === id);
    if (index >= 0) {
      //var list = document.getElementsByTagName("path"); //FALTA QUE ESTA SELECCION LA HAGA PARA EL DOM DEL TIMELINE INSTANCIADO!!!!
      const list = document.querySelectorAll("#" + this._timeline.dom.container.id + " path");
      this._dependency.splice(index, 1); //Elimino del array dependency
      this._dependencyPath.splice(index, 1); //Elimino del array dependencyPath

      list[index + 1].parentNode?.removeChild(list[index + 1]); //Lo elimino del dom
    }
  }

  /**
   * Finds all arrows related to one view item and removes them all.
   * Función que recibe el id de un item y elimina la flecha.
   * @param {VisIdType} id view item id
   * @returns {(ArrowIdType)[]} list of removed arrow ids
   */
  removeItemArrows(id) {
    let listOfRemovedArrows = [];
    for (let i = 0; i < this._dependency.length; i++) {
      if (this._dependency[i].id_item_1 == id || this._dependency[i].id_item_2 == id) {
        listOfRemovedArrows.push(this._dependency[i].id);
        this.removeArrow(this._dependency[i].id);
        i--;
      }
    }
    return listOfRemovedArrows;
  }

  /**
   * Removes the arrows between item 1 and item 2.
   * @param {VisIdType} itemId1 item id
   * @param {VisIdType} itemId2 item id
   * @returns {(ArrowIdType)[]} id of the removed arrow 
   */
  removeArrowsBetweenItems(itemId1, itemId2) {
    let listOfRemovedArrows = [];
    let ArrowsToDelete = this._dependency.filter(dep => dep.id_item_1 == itemId1 && dep.id_item_2 == itemId2);
    ArrowsToDelete.forEach(dep => {
      listOfRemovedArrows.push(dep.id);
      this.removeArrow(dep.id);
    });
    return listOfRemovedArrows;
  }

  /**
   * For backward compatibility
   * @deprecated use the removeItemArrows method instead.
   */
  removeArrowbyItemId(id) {
    this.removeItemArrows(id);
  }
}

/***/ }),

/***/ 8586:
/*!****************************************************!*\
  !*** ./node_modules/vis-data/peer/umd/vis-data.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports) {

/**
 * vis-data
 * http://visjs.org/
 *
 * Manage unstructured data using DataSet. Add, update, and remove data, and listen for changes in the data.
 *
 * @version 7.1.9
 * @date    2023-11-24T17:53:34.179Z
 *
 * @copyright (c) 2011-2017 Almende B.V, http://almende.com
 * @copyright (c) 2017-2019 visjs contributors, https://github.com/visjs
 *
 * @license
 * vis.js is dual licensed under both
 *
 *   1. The Apache 2.0 License
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   and
 *
 *   2. The MIT License
 *      http://opensource.org/licenses/MIT
 *
 * vis.js may be distributed under either license.
 */

(function (global, factory) {
   true ? factory(exports) : 0;
})(this, function (exports) {
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};
  function getDefaultExportFromCjs(x) {
    return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
  }
  var defineProperty$f = {
    exports: {}
  };
  var check = function (it) {
    return it && it.Math === Math && it;
  };

  // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
  var global$p =
  // eslint-disable-next-line es/no-global-this -- safe
  check(typeof globalThis == 'object' && globalThis) || check(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == 'object' && self) || check(typeof commonjsGlobal == 'object' && commonjsGlobal) ||
  // eslint-disable-next-line no-new-func -- fallback
  function () {
    return this;
  }() || commonjsGlobal || Function('return this')();
  var fails$u = function (exec) {
    try {
      return !!exec();
    } catch (error) {
      return true;
    }
  };
  var fails$t = fails$u;
  var functionBindNative = !fails$t(function () {
    // eslint-disable-next-line es/no-function-prototype-bind -- safe
    var test = function () {/* empty */}.bind();
    // eslint-disable-next-line no-prototype-builtins -- safe
    return typeof test != 'function' || test.hasOwnProperty('prototype');
  });
  var NATIVE_BIND$4 = functionBindNative;
  var FunctionPrototype$4 = Function.prototype;
  var apply$6 = FunctionPrototype$4.apply;
  var call$k = FunctionPrototype$4.call;

  // eslint-disable-next-line es/no-reflect -- safe
  var functionApply = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND$4 ? call$k.bind(apply$6) : function () {
    return call$k.apply(apply$6, arguments);
  });
  var NATIVE_BIND$3 = functionBindNative;
  var FunctionPrototype$3 = Function.prototype;
  var call$j = FunctionPrototype$3.call;
  var uncurryThisWithBind = NATIVE_BIND$3 && FunctionPrototype$3.bind.bind(call$j, call$j);
  var functionUncurryThis = NATIVE_BIND$3 ? uncurryThisWithBind : function (fn) {
    return function () {
      return call$j.apply(fn, arguments);
    };
  };
  var uncurryThis$q = functionUncurryThis;
  var toString$9 = uncurryThis$q({}.toString);
  var stringSlice$1 = uncurryThis$q(''.slice);
  var classofRaw$2 = function (it) {
    return stringSlice$1(toString$9(it), 8, -1);
  };
  var classofRaw$1 = classofRaw$2;
  var uncurryThis$p = functionUncurryThis;
  var functionUncurryThisClause = function (fn) {
    // Nashorn bug:
    //   https://github.com/zloirock/core-js/issues/1128
    //   https://github.com/zloirock/core-js/issues/1130
    if (classofRaw$1(fn) === 'Function') return uncurryThis$p(fn);
  };
  var documentAll$2 = typeof document == 'object' && document.all;

  // https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot
  // eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing
  var IS_HTMLDDA = typeof documentAll$2 == 'undefined' && documentAll$2 !== undefined;
  var documentAll_1 = {
    all: documentAll$2,
    IS_HTMLDDA: IS_HTMLDDA
  };
  var $documentAll$1 = documentAll_1;
  var documentAll$1 = $documentAll$1.all;

  // `IsCallable` abstract operation
  // https://tc39.es/ecma262/#sec-iscallable
  var isCallable$m = $documentAll$1.IS_HTMLDDA ? function (argument) {
    return typeof argument == 'function' || argument === documentAll$1;
  } : function (argument) {
    return typeof argument == 'function';
  };
  var objectGetOwnPropertyDescriptor = {};
  var fails$s = fails$u;

  // Detect IE8's incomplete defineProperty implementation
  var descriptors = !fails$s(function () {
    // eslint-disable-next-line es/no-object-defineproperty -- required for testing
    return Object.defineProperty({}, 1, {
      get: function () {
        return 7;
      }
    })[1] !== 7;
  });
  var NATIVE_BIND$2 = functionBindNative;
  var call$i = Function.prototype.call;
  var functionCall = NATIVE_BIND$2 ? call$i.bind(call$i) : function () {
    return call$i.apply(call$i, arguments);
  };
  var objectPropertyIsEnumerable = {};
  var $propertyIsEnumerable$1 = {}.propertyIsEnumerable;
  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
  var getOwnPropertyDescriptor$7 = Object.getOwnPropertyDescriptor;

  // Nashorn ~ JDK8 bug
  var NASHORN_BUG = getOwnPropertyDescriptor$7 && !$propertyIsEnumerable$1.call({
    1: 2
  }, 1);

  // `Object.prototype.propertyIsEnumerable` method implementation
  // https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
  objectPropertyIsEnumerable.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
    var descriptor = getOwnPropertyDescriptor$7(this, V);
    return !!descriptor && descriptor.enumerable;
  } : $propertyIsEnumerable$1;
  var createPropertyDescriptor$7 = function (bitmap, value) {
    return {
      enumerable: !(bitmap & 1),
      configurable: !(bitmap & 2),
      writable: !(bitmap & 4),
      value: value
    };
  };
  var uncurryThis$o = functionUncurryThis;
  var fails$r = fails$u;
  var classof$f = classofRaw$2;
  var $Object$4 = Object;
  var split = uncurryThis$o(''.split);

  // fallback for non-array-like ES3 and non-enumerable old V8 strings
  var indexedObject = fails$r(function () {
    // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
    // eslint-disable-next-line no-prototype-builtins -- safe
    return !$Object$4('z').propertyIsEnumerable(0);
  }) ? function (it) {
    return classof$f(it) === 'String' ? split(it, '') : $Object$4(it);
  } : $Object$4;

  // we can't use just `it == null` since of `document.all` special case
  // https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec
  var isNullOrUndefined$6 = function (it) {
    return it === null || it === undefined;
  };
  var isNullOrUndefined$5 = isNullOrUndefined$6;
  var $TypeError$g = TypeError;

  // `RequireObjectCoercible` abstract operation
  // https://tc39.es/ecma262/#sec-requireobjectcoercible
  var requireObjectCoercible$3 = function (it) {
    if (isNullOrUndefined$5(it)) throw new $TypeError$g("Can't call method on " + it);
    return it;
  };

  // toObject with fallback for non-array-like ES3 strings
  var IndexedObject$3 = indexedObject;
  var requireObjectCoercible$2 = requireObjectCoercible$3;
  var toIndexedObject$a = function (it) {
    return IndexedObject$3(requireObjectCoercible$2(it));
  };
  var isCallable$l = isCallable$m;
  var $documentAll = documentAll_1;
  var documentAll = $documentAll.all;
  var isObject$h = $documentAll.IS_HTMLDDA ? function (it) {
    return typeof it == 'object' ? it !== null : isCallable$l(it) || it === documentAll;
  } : function (it) {
    return typeof it == 'object' ? it !== null : isCallable$l(it);
  };
  var path$o = {};
  var path$n = path$o;
  var global$o = global$p;
  var isCallable$k = isCallable$m;
  var aFunction = function (variable) {
    return isCallable$k(variable) ? variable : undefined;
  };
  var getBuiltIn$f = function (namespace, method) {
    return arguments.length < 2 ? aFunction(path$n[namespace]) || aFunction(global$o[namespace]) : path$n[namespace] && path$n[namespace][method] || global$o[namespace] && global$o[namespace][method];
  };
  var uncurryThis$n = functionUncurryThis;
  var objectIsPrototypeOf = uncurryThis$n({}.isPrototypeOf);
  var engineUserAgent = typeof navigator != 'undefined' && String(navigator.userAgent) || '';
  var global$n = global$p;
  var userAgent$5 = engineUserAgent;
  var process$3 = global$n.process;
  var Deno$1 = global$n.Deno;
  var versions = process$3 && process$3.versions || Deno$1 && Deno$1.version;
  var v8 = versions && versions.v8;
  var match, version;
  if (v8) {
    match = v8.split('.');
    // in old Chrome, versions of V8 isn't V8 = Chrome / 10
    // but their correct versions are not interesting for us
    version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
  }

  // BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
  // so check `userAgent` even if `.v8` exists, but 0
  if (!version && userAgent$5) {
    match = userAgent$5.match(/Edge\/(\d+)/);
    if (!match || match[1] >= 74) {
      match = userAgent$5.match(/Chrome\/(\d+)/);
      if (match) version = +match[1];
    }
  }
  var engineV8Version = version;

  /* eslint-disable es/no-symbol -- required for testing */
  var V8_VERSION$3 = engineV8Version;
  var fails$q = fails$u;
  var global$m = global$p;
  var $String$5 = global$m.String;

  // eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
  var symbolConstructorDetection = !!Object.getOwnPropertySymbols && !fails$q(function () {
    var symbol = Symbol('symbol detection');
    // Chrome 38 Symbol has incorrect toString conversion
    // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
    // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,
    // of course, fail.
    return !$String$5(symbol) || !(Object(symbol) instanceof Symbol) ||
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && V8_VERSION$3 && V8_VERSION$3 < 41;
  });

  /* eslint-disable es/no-symbol -- required for testing */
  var NATIVE_SYMBOL$5 = symbolConstructorDetection;
  var useSymbolAsUid = NATIVE_SYMBOL$5 && !Symbol.sham && typeof Symbol.iterator == 'symbol';
  var getBuiltIn$e = getBuiltIn$f;
  var isCallable$j = isCallable$m;
  var isPrototypeOf$k = objectIsPrototypeOf;
  var USE_SYMBOL_AS_UID$1 = useSymbolAsUid;
  var $Object$3 = Object;
  var isSymbol$5 = USE_SYMBOL_AS_UID$1 ? function (it) {
    return typeof it == 'symbol';
  } : function (it) {
    var $Symbol = getBuiltIn$e('Symbol');
    return isCallable$j($Symbol) && isPrototypeOf$k($Symbol.prototype, $Object$3(it));
  };
  var $String$4 = String;
  var tryToString$6 = function (argument) {
    try {
      return $String$4(argument);
    } catch (error) {
      return 'Object';
    }
  };
  var isCallable$i = isCallable$m;
  var tryToString$5 = tryToString$6;
  var $TypeError$f = TypeError;

  // `Assert: IsCallable(argument) is true`
  var aCallable$e = function (argument) {
    if (isCallable$i(argument)) return argument;
    throw new $TypeError$f(tryToString$5(argument) + ' is not a function');
  };
  var aCallable$d = aCallable$e;
  var isNullOrUndefined$4 = isNullOrUndefined$6;

  // `GetMethod` abstract operation
  // https://tc39.es/ecma262/#sec-getmethod
  var getMethod$3 = function (V, P) {
    var func = V[P];
    return isNullOrUndefined$4(func) ? undefined : aCallable$d(func);
  };
  var call$h = functionCall;
  var isCallable$h = isCallable$m;
  var isObject$g = isObject$h;
  var $TypeError$e = TypeError;

  // `OrdinaryToPrimitive` abstract operation
  // https://tc39.es/ecma262/#sec-ordinarytoprimitive
  var ordinaryToPrimitive$1 = function (input, pref) {
    var fn, val;
    if (pref === 'string' && isCallable$h(fn = input.toString) && !isObject$g(val = call$h(fn, input))) return val;
    if (isCallable$h(fn = input.valueOf) && !isObject$g(val = call$h(fn, input))) return val;
    if (pref !== 'string' && isCallable$h(fn = input.toString) && !isObject$g(val = call$h(fn, input))) return val;
    throw new $TypeError$e("Can't convert object to primitive value");
  };
  var shared$7 = {
    exports: {}
  };
  var isPure = true;
  var global$l = global$p;

  // eslint-disable-next-line es/no-object-defineproperty -- safe
  var defineProperty$e = Object.defineProperty;
  var defineGlobalProperty$1 = function (key, value) {
    try {
      defineProperty$e(global$l, key, {
        value: value,
        configurable: true,
        writable: true
      });
    } catch (error) {
      global$l[key] = value;
    }
    return value;
  };
  var global$k = global$p;
  var defineGlobalProperty = defineGlobalProperty$1;
  var SHARED = '__core-js_shared__';
  var store$3 = global$k[SHARED] || defineGlobalProperty(SHARED, {});
  var sharedStore = store$3;
  var store$2 = sharedStore;
  (shared$7.exports = function (key, value) {
    return store$2[key] || (store$2[key] = value !== undefined ? value : {});
  })('versions', []).push({
    version: '3.33.2',
    mode: 'pure',
    copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',
    license: 'https://github.com/zloirock/core-js/blob/v3.33.2/LICENSE',
    source: 'https://github.com/zloirock/core-js'
  });
  var sharedExports = shared$7.exports;
  var requireObjectCoercible$1 = requireObjectCoercible$3;
  var $Object$2 = Object;

  // `ToObject` abstract operation
  // https://tc39.es/ecma262/#sec-toobject
  var toObject$e = function (argument) {
    return $Object$2(requireObjectCoercible$1(argument));
  };
  var uncurryThis$m = functionUncurryThis;
  var toObject$d = toObject$e;
  var hasOwnProperty = uncurryThis$m({}.hasOwnProperty);

  // `HasOwnProperty` abstract operation
  // https://tc39.es/ecma262/#sec-hasownproperty
  // eslint-disable-next-line es/no-object-hasown -- safe
  var hasOwnProperty_1 = Object.hasOwn || function hasOwn(it, key) {
    return hasOwnProperty(toObject$d(it), key);
  };
  var uncurryThis$l = functionUncurryThis;
  var id$1 = 0;
  var postfix = Math.random();
  var toString$8 = uncurryThis$l(1.0.toString);
  var uid$4 = function (key) {
    return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString$8(++id$1 + postfix, 36);
  };
  var global$j = global$p;
  var shared$6 = sharedExports;
  var hasOwn$j = hasOwnProperty_1;
  var uid$3 = uid$4;
  var NATIVE_SYMBOL$4 = symbolConstructorDetection;
  var USE_SYMBOL_AS_UID = useSymbolAsUid;
  var Symbol$3 = global$j.Symbol;
  var WellKnownSymbolsStore$2 = shared$6('wks');
  var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol$3['for'] || Symbol$3 : Symbol$3 && Symbol$3.withoutSetter || uid$3;
  var wellKnownSymbol$n = function (name) {
    if (!hasOwn$j(WellKnownSymbolsStore$2, name)) {
      WellKnownSymbolsStore$2[name] = NATIVE_SYMBOL$4 && hasOwn$j(Symbol$3, name) ? Symbol$3[name] : createWellKnownSymbol('Symbol.' + name);
    }
    return WellKnownSymbolsStore$2[name];
  };
  var call$g = functionCall;
  var isObject$f = isObject$h;
  var isSymbol$4 = isSymbol$5;
  var getMethod$2 = getMethod$3;
  var ordinaryToPrimitive = ordinaryToPrimitive$1;
  var wellKnownSymbol$m = wellKnownSymbol$n;
  var $TypeError$d = TypeError;
  var TO_PRIMITIVE = wellKnownSymbol$m('toPrimitive');

  // `ToPrimitive` abstract operation
  // https://tc39.es/ecma262/#sec-toprimitive
  var toPrimitive$6 = function (input, pref) {
    if (!isObject$f(input) || isSymbol$4(input)) return input;
    var exoticToPrim = getMethod$2(input, TO_PRIMITIVE);
    var result;
    if (exoticToPrim) {
      if (pref === undefined) pref = 'default';
      result = call$g(exoticToPrim, input, pref);
      if (!isObject$f(result) || isSymbol$4(result)) return result;
      throw new $TypeError$d("Can't convert object to primitive value");
    }
    if (pref === undefined) pref = 'number';
    return ordinaryToPrimitive(input, pref);
  };
  var toPrimitive$5 = toPrimitive$6;
  var isSymbol$3 = isSymbol$5;

  // `ToPropertyKey` abstract operation
  // https://tc39.es/ecma262/#sec-topropertykey
  var toPropertyKey$4 = function (argument) {
    var key = toPrimitive$5(argument, 'string');
    return isSymbol$3(key) ? key : key + '';
  };
  var global$i = global$p;
  var isObject$e = isObject$h;
  var document$3 = global$i.document;
  // typeof document.createElement is 'object' in old IE
  var EXISTS$1 = isObject$e(document$3) && isObject$e(document$3.createElement);
  var documentCreateElement$1 = function (it) {
    return EXISTS$1 ? document$3.createElement(it) : {};
  };
  var DESCRIPTORS$h = descriptors;
  var fails$p = fails$u;
  var createElement$1 = documentCreateElement$1;

  // Thanks to IE8 for its funny defineProperty
  var ie8DomDefine = !DESCRIPTORS$h && !fails$p(function () {
    // eslint-disable-next-line es/no-object-defineproperty -- required for testing
    return Object.defineProperty(createElement$1('div'), 'a', {
      get: function () {
        return 7;
      }
    }).a !== 7;
  });
  var DESCRIPTORS$g = descriptors;
  var call$f = functionCall;
  var propertyIsEnumerableModule$2 = objectPropertyIsEnumerable;
  var createPropertyDescriptor$6 = createPropertyDescriptor$7;
  var toIndexedObject$9 = toIndexedObject$a;
  var toPropertyKey$3 = toPropertyKey$4;
  var hasOwn$i = hasOwnProperty_1;
  var IE8_DOM_DEFINE$1 = ie8DomDefine;

  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
  var $getOwnPropertyDescriptor$2 = Object.getOwnPropertyDescriptor;

  // `Object.getOwnPropertyDescriptor` method
  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
  objectGetOwnPropertyDescriptor.f = DESCRIPTORS$g ? $getOwnPropertyDescriptor$2 : function getOwnPropertyDescriptor(O, P) {
    O = toIndexedObject$9(O);
    P = toPropertyKey$3(P);
    if (IE8_DOM_DEFINE$1) try {
      return $getOwnPropertyDescriptor$2(O, P);
    } catch (error) {/* empty */}
    if (hasOwn$i(O, P)) return createPropertyDescriptor$6(!call$f(propertyIsEnumerableModule$2.f, O, P), O[P]);
  };
  var fails$o = fails$u;
  var isCallable$g = isCallable$m;
  var replacement = /#|\.prototype\./;
  var isForced$2 = function (feature, detection) {
    var value = data[normalize(feature)];
    return value === POLYFILL ? true : value === NATIVE ? false : isCallable$g(detection) ? fails$o(detection) : !!detection;
  };
  var normalize = isForced$2.normalize = function (string) {
    return String(string).replace(replacement, '.').toLowerCase();
  };
  var data = isForced$2.data = {};
  var NATIVE = isForced$2.NATIVE = 'N';
  var POLYFILL = isForced$2.POLYFILL = 'P';
  var isForced_1 = isForced$2;
  var uncurryThis$k = functionUncurryThisClause;
  var aCallable$c = aCallable$e;
  var NATIVE_BIND$1 = functionBindNative;
  var bind$i = uncurryThis$k(uncurryThis$k.bind);

  // optional / simple context binding
  var functionBindContext = function (fn, that) {
    aCallable$c(fn);
    return that === undefined ? fn : NATIVE_BIND$1 ? bind$i(fn, that) : function /* ...args */
    () {
      return fn.apply(that, arguments);
    };
  };
  var objectDefineProperty = {};
  var DESCRIPTORS$f = descriptors;
  var fails$n = fails$u;

  // V8 ~ Chrome 36-
  // https://bugs.chromium.org/p/v8/issues/detail?id=3334
  var v8PrototypeDefineBug = DESCRIPTORS$f && fails$n(function () {
    // eslint-disable-next-line es/no-object-defineproperty -- required for testing
    return Object.defineProperty(function () {/* empty */}, 'prototype', {
      value: 42,
      writable: false
    }).prototype !== 42;
  });
  var isObject$d = isObject$h;
  var $String$3 = String;
  var $TypeError$c = TypeError;

  // `Assert: Type(argument) is Object`
  var anObject$d = function (argument) {
    if (isObject$d(argument)) return argument;
    throw new $TypeError$c($String$3(argument) + ' is not an object');
  };
  var DESCRIPTORS$e = descriptors;
  var IE8_DOM_DEFINE = ie8DomDefine;
  var V8_PROTOTYPE_DEFINE_BUG$1 = v8PrototypeDefineBug;
  var anObject$c = anObject$d;
  var toPropertyKey$2 = toPropertyKey$4;
  var $TypeError$b = TypeError;
  // eslint-disable-next-line es/no-object-defineproperty -- safe
  var $defineProperty$1 = Object.defineProperty;
  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
  var $getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;
  var ENUMERABLE = 'enumerable';
  var CONFIGURABLE$1 = 'configurable';
  var WRITABLE = 'writable';

  // `Object.defineProperty` method
  // https://tc39.es/ecma262/#sec-object.defineproperty
  objectDefineProperty.f = DESCRIPTORS$e ? V8_PROTOTYPE_DEFINE_BUG$1 ? function defineProperty(O, P, Attributes) {
    anObject$c(O);
    P = toPropertyKey$2(P);
    anObject$c(Attributes);
    if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
      var current = $getOwnPropertyDescriptor$1(O, P);
      if (current && current[WRITABLE]) {
        O[P] = Attributes.value;
        Attributes = {
          configurable: CONFIGURABLE$1 in Attributes ? Attributes[CONFIGURABLE$1] : current[CONFIGURABLE$1],
          enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
          writable: false
        };
      }
    }
    return $defineProperty$1(O, P, Attributes);
  } : $defineProperty$1 : function defineProperty(O, P, Attributes) {
    anObject$c(O);
    P = toPropertyKey$2(P);
    anObject$c(Attributes);
    if (IE8_DOM_DEFINE) try {
      return $defineProperty$1(O, P, Attributes);
    } catch (error) {/* empty */}
    if ('get' in Attributes || 'set' in Attributes) throw new $TypeError$b('Accessors not supported');
    if ('value' in Attributes) O[P] = Attributes.value;
    return O;
  };
  var DESCRIPTORS$d = descriptors;
  var definePropertyModule$4 = objectDefineProperty;
  var createPropertyDescriptor$5 = createPropertyDescriptor$7;
  var createNonEnumerableProperty$9 = DESCRIPTORS$d ? function (object, key, value) {
    return definePropertyModule$4.f(object, key, createPropertyDescriptor$5(1, value));
  } : function (object, key, value) {
    object[key] = value;
    return object;
  };
  var global$h = global$p;
  var apply$5 = functionApply;
  var uncurryThis$j = functionUncurryThisClause;
  var isCallable$f = isCallable$m;
  var getOwnPropertyDescriptor$6 = objectGetOwnPropertyDescriptor.f;
  var isForced$1 = isForced_1;
  var path$m = path$o;
  var bind$h = functionBindContext;
  var createNonEnumerableProperty$8 = createNonEnumerableProperty$9;
  var hasOwn$h = hasOwnProperty_1;
  var wrapConstructor = function (NativeConstructor) {
    var Wrapper = function (a, b, c) {
      if (this instanceof Wrapper) {
        switch (arguments.length) {
          case 0:
            return new NativeConstructor();
          case 1:
            return new NativeConstructor(a);
          case 2:
            return new NativeConstructor(a, b);
        }
        return new NativeConstructor(a, b, c);
      }
      return apply$5(NativeConstructor, this, arguments);
    };
    Wrapper.prototype = NativeConstructor.prototype;
    return Wrapper;
  };

  /*
    options.target         - name of the target object
    options.global         - target is the global object
    options.stat           - export as static methods of target
    options.proto          - export as prototype methods of target
    options.real           - real prototype method for the `pure` version
    options.forced         - export even if the native feature is available
    options.bind           - bind methods to the target, required for the `pure` version
    options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version
    options.unsafe         - use the simple assignment of property instead of delete + defineProperty
    options.sham           - add a flag to not completely full polyfills
    options.enumerable     - export as enumerable property
    options.dontCallGetSet - prevent calling a getter on target
    options.name           - the .name of the function if it does not match the key
  */
  var _export = function (options, source) {
    var TARGET = options.target;
    var GLOBAL = options.global;
    var STATIC = options.stat;
    var PROTO = options.proto;
    var nativeSource = GLOBAL ? global$h : STATIC ? global$h[TARGET] : (global$h[TARGET] || {}).prototype;
    var target = GLOBAL ? path$m : path$m[TARGET] || createNonEnumerableProperty$8(path$m, TARGET, {})[TARGET];
    var targetPrototype = target.prototype;
    var FORCED, USE_NATIVE, VIRTUAL_PROTOTYPE;
    var key, sourceProperty, targetProperty, nativeProperty, resultProperty, descriptor;
    for (key in source) {
      FORCED = isForced$1(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
      // contains in native
      USE_NATIVE = !FORCED && nativeSource && hasOwn$h(nativeSource, key);
      targetProperty = target[key];
      if (USE_NATIVE) if (options.dontCallGetSet) {
        descriptor = getOwnPropertyDescriptor$6(nativeSource, key);
        nativeProperty = descriptor && descriptor.value;
      } else nativeProperty = nativeSource[key];

      // export native or implementation
      sourceProperty = USE_NATIVE && nativeProperty ? nativeProperty : source[key];
      if (USE_NATIVE && typeof targetProperty == typeof sourceProperty) continue;

      // bind methods to global for calling from export context
      if (options.bind && USE_NATIVE) resultProperty = bind$h(sourceProperty, global$h);
      // wrap global constructors for prevent changes in this version
      else if (options.wrap && USE_NATIVE) resultProperty = wrapConstructor(sourceProperty);
      // make static versions for prototype methods
      else if (PROTO && isCallable$f(sourceProperty)) resultProperty = uncurryThis$j(sourceProperty);
      // default case
      else resultProperty = sourceProperty;

      // add a flag to not completely full polyfills
      if (options.sham || sourceProperty && sourceProperty.sham || targetProperty && targetProperty.sham) {
        createNonEnumerableProperty$8(resultProperty, 'sham', true);
      }
      createNonEnumerableProperty$8(target, key, resultProperty);
      if (PROTO) {
        VIRTUAL_PROTOTYPE = TARGET + 'Prototype';
        if (!hasOwn$h(path$m, VIRTUAL_PROTOTYPE)) {
          createNonEnumerableProperty$8(path$m, VIRTUAL_PROTOTYPE, {});
        }
        // export virtual prototype methods
        createNonEnumerableProperty$8(path$m[VIRTUAL_PROTOTYPE], key, sourceProperty);
        // export real prototype methods
        if (options.real && targetPrototype && (FORCED || !targetPrototype[key])) {
          createNonEnumerableProperty$8(targetPrototype, key, sourceProperty);
        }
      }
    }
  };
  var $$P = _export;
  var DESCRIPTORS$c = descriptors;
  var defineProperty$d = objectDefineProperty.f;

  // `Object.defineProperty` method
  // https://tc39.es/ecma262/#sec-object.defineproperty
  // eslint-disable-next-line es/no-object-defineproperty -- safe
  $$P({
    target: 'Object',
    stat: true,
    forced: Object.defineProperty !== defineProperty$d,
    sham: !DESCRIPTORS$c
  }, {
    defineProperty: defineProperty$d
  });
  var path$l = path$o;
  var Object$4 = path$l.Object;
  var defineProperty$c = defineProperty$f.exports = function defineProperty(it, key, desc) {
    return Object$4.defineProperty(it, key, desc);
  };
  if (Object$4.defineProperty.sham) defineProperty$c.sham = true;
  var definePropertyExports = defineProperty$f.exports;
  var parent$18 = definePropertyExports;
  var defineProperty$b = parent$18;
  var parent$17 = defineProperty$b;
  var defineProperty$a = parent$17;
  var parent$16 = defineProperty$a;
  var defineProperty$9 = parent$16;
  var defineProperty$8 = defineProperty$9;
  var _Object$defineProperty$1 = /*@__PURE__*/getDefaultExportFromCjs(defineProperty$8);
  var classof$e = classofRaw$2;

  // `IsArray` abstract operation
  // https://tc39.es/ecma262/#sec-isarray
  // eslint-disable-next-line es/no-array-isarray -- safe
  var isArray$e = Array.isArray || function isArray(argument) {
    return classof$e(argument) === 'Array';
  };
  var ceil = Math.ceil;
  var floor$1 = Math.floor;

  // `Math.trunc` method
  // https://tc39.es/ecma262/#sec-math.trunc
  // eslint-disable-next-line es/no-math-trunc -- safe
  var mathTrunc = Math.trunc || function trunc(x) {
    var n = +x;
    return (n > 0 ? floor$1 : ceil)(n);
  };
  var trunc = mathTrunc;

  // `ToIntegerOrInfinity` abstract operation
  // https://tc39.es/ecma262/#sec-tointegerorinfinity
  var toIntegerOrInfinity$4 = function (argument) {
    var number = +argument;
    // eslint-disable-next-line no-self-compare -- NaN check
    return number !== number || number === 0 ? 0 : trunc(number);
  };
  var toIntegerOrInfinity$3 = toIntegerOrInfinity$4;
  var min$2 = Math.min;

  // `ToLength` abstract operation
  // https://tc39.es/ecma262/#sec-tolength
  var toLength$1 = function (argument) {
    return argument > 0 ? min$2(toIntegerOrInfinity$3(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
  };

  var toLength = toLength$1;

  // `LengthOfArrayLike` abstract operation
  // https://tc39.es/ecma262/#sec-lengthofarraylike
  var lengthOfArrayLike$d = function (obj) {
    return toLength(obj.length);
  };
  var $TypeError$a = TypeError;
  var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991

  var doesNotExceedSafeInteger$4 = function (it) {
    if (it > MAX_SAFE_INTEGER) throw $TypeError$a('Maximum allowed index exceeded');
    return it;
  };
  var toPropertyKey$1 = toPropertyKey$4;
  var definePropertyModule$3 = objectDefineProperty;
  var createPropertyDescriptor$4 = createPropertyDescriptor$7;
  var createProperty$6 = function (object, key, value) {
    var propertyKey = toPropertyKey$1(key);
    if (propertyKey in object) definePropertyModule$3.f(object, propertyKey, createPropertyDescriptor$4(0, value));else object[propertyKey] = value;
  };
  var wellKnownSymbol$l = wellKnownSymbol$n;
  var TO_STRING_TAG$4 = wellKnownSymbol$l('toStringTag');
  var test$2 = {};
  test$2[TO_STRING_TAG$4] = 'z';
  var toStringTagSupport = String(test$2) === '[object z]';
  var TO_STRING_TAG_SUPPORT$2 = toStringTagSupport;
  var isCallable$e = isCallable$m;
  var classofRaw = classofRaw$2;
  var wellKnownSymbol$k = wellKnownSymbol$n;
  var TO_STRING_TAG$3 = wellKnownSymbol$k('toStringTag');
  var $Object$1 = Object;

  // ES3 wrong here
  var CORRECT_ARGUMENTS = classofRaw(function () {
    return arguments;
  }()) === 'Arguments';

  // fallback for IE11 Script Access Denied error
  var tryGet = function (it, key) {
    try {
      return it[key];
    } catch (error) {/* empty */}
  };

  // getting tag from ES6+ `Object.prototype.toString`
  var classof$d = TO_STRING_TAG_SUPPORT$2 ? classofRaw : function (it) {
    var O, tag, result;
    return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = $Object$1(it), TO_STRING_TAG$3)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) === 'Object' && isCallable$e(O.callee) ? 'Arguments' : result;
  };
  var uncurryThis$i = functionUncurryThis;
  var isCallable$d = isCallable$m;
  var store$1 = sharedStore;
  var functionToString = uncurryThis$i(Function.toString);

  // this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
  if (!isCallable$d(store$1.inspectSource)) {
    store$1.inspectSource = function (it) {
      return functionToString(it);
    };
  }
  var inspectSource$2 = store$1.inspectSource;
  var uncurryThis$h = functionUncurryThis;
  var fails$m = fails$u;
  var isCallable$c = isCallable$m;
  var classof$c = classof$d;
  var getBuiltIn$d = getBuiltIn$f;
  var inspectSource$1 = inspectSource$2;
  var noop = function () {/* empty */};
  var empty = [];
  var construct$4 = getBuiltIn$d('Reflect', 'construct');
  var constructorRegExp = /^\s*(?:class|function)\b/;
  var exec$1 = uncurryThis$h(constructorRegExp.exec);
  var INCORRECT_TO_STRING = !constructorRegExp.test(noop);
  var isConstructorModern = function isConstructor(argument) {
    if (!isCallable$c(argument)) return false;
    try {
      construct$4(noop, empty, argument);
      return true;
    } catch (error) {
      return false;
    }
  };
  var isConstructorLegacy = function isConstructor(argument) {
    if (!isCallable$c(argument)) return false;
    switch (classof$c(argument)) {
      case 'AsyncFunction':
      case 'GeneratorFunction':
      case 'AsyncGeneratorFunction':
        return false;
    }
    try {
      // we can't check .prototype since constructors produced by .bind haven't it
      // `Function#toString` throws on some built-it function in some legacy engines
      // (for example, `DOMQuad` and similar in FF41-)
      return INCORRECT_TO_STRING || !!exec$1(constructorRegExp, inspectSource$1(argument));
    } catch (error) {
      return true;
    }
  };
  isConstructorLegacy.sham = true;

  // `IsConstructor` abstract operation
  // https://tc39.es/ecma262/#sec-isconstructor
  var isConstructor$4 = !construct$4 || fails$m(function () {
    var called;
    return isConstructorModern(isConstructorModern.call) || !isConstructorModern(Object) || !isConstructorModern(function () {
      called = true;
    }) || called;
  }) ? isConstructorLegacy : isConstructorModern;
  var isArray$d = isArray$e;
  var isConstructor$3 = isConstructor$4;
  var isObject$c = isObject$h;
  var wellKnownSymbol$j = wellKnownSymbol$n;
  var SPECIES$5 = wellKnownSymbol$j('species');
  var $Array$3 = Array;

  // a part of `ArraySpeciesCreate` abstract operation
  // https://tc39.es/ecma262/#sec-arrayspeciescreate
  var arraySpeciesConstructor$1 = function (originalArray) {
    var C;
    if (isArray$d(originalArray)) {
      C = originalArray.constructor;
      // cross-realm fallback
      if (isConstructor$3(C) && (C === $Array$3 || isArray$d(C.prototype))) C = undefined;else if (isObject$c(C)) {
        C = C[SPECIES$5];
        if (C === null) C = undefined;
      }
    }
    return C === undefined ? $Array$3 : C;
  };
  var arraySpeciesConstructor = arraySpeciesConstructor$1;

  // `ArraySpeciesCreate` abstract operation
  // https://tc39.es/ecma262/#sec-arrayspeciescreate
  var arraySpeciesCreate$4 = function (originalArray, length) {
    return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
  };
  var fails$l = fails$u;
  var wellKnownSymbol$i = wellKnownSymbol$n;
  var V8_VERSION$2 = engineV8Version;
  var SPECIES$4 = wellKnownSymbol$i('species');
  var arrayMethodHasSpeciesSupport$5 = function (METHOD_NAME) {
    // We can't use this feature detection in V8 since it causes
    // deoptimization and serious performance degradation
    // https://github.com/zloirock/core-js/issues/677
    return V8_VERSION$2 >= 51 || !fails$l(function () {
      var array = [];
      var constructor = array.constructor = {};
      constructor[SPECIES$4] = function () {
        return {
          foo: 1
        };
      };
      return array[METHOD_NAME](Boolean).foo !== 1;
    });
  };
  var $$O = _export;
  var fails$k = fails$u;
  var isArray$c = isArray$e;
  var isObject$b = isObject$h;
  var toObject$c = toObject$e;
  var lengthOfArrayLike$c = lengthOfArrayLike$d;
  var doesNotExceedSafeInteger$3 = doesNotExceedSafeInteger$4;
  var createProperty$5 = createProperty$6;
  var arraySpeciesCreate$3 = arraySpeciesCreate$4;
  var arrayMethodHasSpeciesSupport$4 = arrayMethodHasSpeciesSupport$5;
  var wellKnownSymbol$h = wellKnownSymbol$n;
  var V8_VERSION$1 = engineV8Version;
  var IS_CONCAT_SPREADABLE = wellKnownSymbol$h('isConcatSpreadable');

  // We can't use this feature detection in V8 since it causes
  // deoptimization and serious performance degradation
  // https://github.com/zloirock/core-js/issues/679
  var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION$1 >= 51 || !fails$k(function () {
    var array = [];
    array[IS_CONCAT_SPREADABLE] = false;
    return array.concat()[0] !== array;
  });
  var isConcatSpreadable = function (O) {
    if (!isObject$b(O)) return false;
    var spreadable = O[IS_CONCAT_SPREADABLE];
    return spreadable !== undefined ? !!spreadable : isArray$c(O);
  };
  var FORCED$6 = !IS_CONCAT_SPREADABLE_SUPPORT || !arrayMethodHasSpeciesSupport$4('concat');

  // `Array.prototype.concat` method
  // https://tc39.es/ecma262/#sec-array.prototype.concat
  // with adding support of @@isConcatSpreadable and @@species
  $$O({
    target: 'Array',
    proto: true,
    arity: 1,
    forced: FORCED$6
  }, {
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    concat: function concat(arg) {
      var O = toObject$c(this);
      var A = arraySpeciesCreate$3(O, 0);
      var n = 0;
      var i, k, length, len, E;
      for (i = -1, length = arguments.length; i < length; i++) {
        E = i === -1 ? O : arguments[i];
        if (isConcatSpreadable(E)) {
          len = lengthOfArrayLike$c(E);
          doesNotExceedSafeInteger$3(n + len);
          for (k = 0; k < len; k++, n++) if (k in E) createProperty$5(A, n, E[k]);
        } else {
          doesNotExceedSafeInteger$3(n + 1);
          createProperty$5(A, n++, E);
        }
      }
      A.length = n;
      return A;
    }
  });
  var classof$b = classof$d;
  var $String$2 = String;
  var toString$7 = function (argument) {
    if (classof$b(argument) === 'Symbol') throw new TypeError('Cannot convert a Symbol value to a string');
    return $String$2(argument);
  };
  var objectDefineProperties = {};
  var toIntegerOrInfinity$2 = toIntegerOrInfinity$4;
  var max$3 = Math.max;
  var min$1 = Math.min;

  // Helper for a popular repeating case of the spec:
  // Let integer be ? ToInteger(index).
  // If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
  var toAbsoluteIndex$4 = function (index, length) {
    var integer = toIntegerOrInfinity$2(index);
    return integer < 0 ? max$3(integer + length, 0) : min$1(integer, length);
  };
  var toIndexedObject$8 = toIndexedObject$a;
  var toAbsoluteIndex$3 = toAbsoluteIndex$4;
  var lengthOfArrayLike$b = lengthOfArrayLike$d;

  // `Array.prototype.{ indexOf, includes }` methods implementation
  var createMethod$3 = function (IS_INCLUDES) {
    return function ($this, el, fromIndex) {
      var O = toIndexedObject$8($this);
      var length = lengthOfArrayLike$b(O);
      var index = toAbsoluteIndex$3(fromIndex, length);
      var value;
      // Array#includes uses SameValueZero equality algorithm
      // eslint-disable-next-line no-self-compare -- NaN check
      if (IS_INCLUDES && el !== el) while (length > index) {
        value = O[index++];
        // eslint-disable-next-line no-self-compare -- NaN check
        if (value !== value) return true;
        // Array#indexOf ignores holes, Array#includes - not
      } else for (; length > index; index++) {
        if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
      }
      return !IS_INCLUDES && -1;
    };
  };
  var arrayIncludes = {
    // `Array.prototype.includes` method
    // https://tc39.es/ecma262/#sec-array.prototype.includes
    includes: createMethod$3(true),
    // `Array.prototype.indexOf` method
    // https://tc39.es/ecma262/#sec-array.prototype.indexof
    indexOf: createMethod$3(false)
  };
  var hiddenKeys$6 = {};
  var uncurryThis$g = functionUncurryThis;
  var hasOwn$g = hasOwnProperty_1;
  var toIndexedObject$7 = toIndexedObject$a;
  var indexOf = arrayIncludes.indexOf;
  var hiddenKeys$5 = hiddenKeys$6;
  var push$c = uncurryThis$g([].push);
  var objectKeysInternal = function (object, names) {
    var O = toIndexedObject$7(object);
    var i = 0;
    var result = [];
    var key;
    for (key in O) !hasOwn$g(hiddenKeys$5, key) && hasOwn$g(O, key) && push$c(result, key);
    // Don't enum bug & hidden keys
    while (names.length > i) if (hasOwn$g(O, key = names[i++])) {
      ~indexOf(result, key) || push$c(result, key);
    }
    return result;
  };

  // IE8- don't enum bug keys
  var enumBugKeys$3 = ['constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString', 'valueOf'];
  var internalObjectKeys$1 = objectKeysInternal;
  var enumBugKeys$2 = enumBugKeys$3;

  // `Object.keys` method
  // https://tc39.es/ecma262/#sec-object.keys
  // eslint-disable-next-line es/no-object-keys -- safe
  var objectKeys$3 = Object.keys || function keys(O) {
    return internalObjectKeys$1(O, enumBugKeys$2);
  };
  var DESCRIPTORS$b = descriptors;
  var V8_PROTOTYPE_DEFINE_BUG = v8PrototypeDefineBug;
  var definePropertyModule$2 = objectDefineProperty;
  var anObject$b = anObject$d;
  var toIndexedObject$6 = toIndexedObject$a;
  var objectKeys$2 = objectKeys$3;

  // `Object.defineProperties` method
  // https://tc39.es/ecma262/#sec-object.defineproperties
  // eslint-disable-next-line es/no-object-defineproperties -- safe
  objectDefineProperties.f = DESCRIPTORS$b && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {
    anObject$b(O);
    var props = toIndexedObject$6(Properties);
    var keys = objectKeys$2(Properties);
    var length = keys.length;
    var index = 0;
    var key;
    while (length > index) definePropertyModule$2.f(O, key = keys[index++], props[key]);
    return O;
  };
  var getBuiltIn$c = getBuiltIn$f;
  var html$2 = getBuiltIn$c('document', 'documentElement');
  var shared$5 = sharedExports;
  var uid$2 = uid$4;
  var keys$7 = shared$5('keys');
  var sharedKey$4 = function (key) {
    return keys$7[key] || (keys$7[key] = uid$2(key));
  };

  /* global ActiveXObject -- old IE, WSH */
  var anObject$a = anObject$d;
  var definePropertiesModule$1 = objectDefineProperties;
  var enumBugKeys$1 = enumBugKeys$3;
  var hiddenKeys$4 = hiddenKeys$6;
  var html$1 = html$2;
  var documentCreateElement = documentCreateElement$1;
  var sharedKey$3 = sharedKey$4;
  var GT = '>';
  var LT = '<';
  var PROTOTYPE$1 = 'prototype';
  var SCRIPT = 'script';
  var IE_PROTO$1 = sharedKey$3('IE_PROTO');
  var EmptyConstructor = function () {/* empty */};
  var scriptTag = function (content) {
    return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
  };

  // Create object with fake `null` prototype: use ActiveX Object with cleared prototype
  var NullProtoObjectViaActiveX = function (activeXDocument) {
    activeXDocument.write(scriptTag(''));
    activeXDocument.close();
    var temp = activeXDocument.parentWindow.Object;
    activeXDocument = null; // avoid memory leak
    return temp;
  };

  // Create object with fake `null` prototype: use iframe Object with cleared prototype
  var NullProtoObjectViaIFrame = function () {
    // Thrash, waste and sodomy: IE GC bug
    var iframe = documentCreateElement('iframe');
    var JS = 'java' + SCRIPT + ':';
    var iframeDocument;
    iframe.style.display = 'none';
    html$1.appendChild(iframe);
    // https://github.com/zloirock/core-js/issues/475
    iframe.src = String(JS);
    iframeDocument = iframe.contentWindow.document;
    iframeDocument.open();
    iframeDocument.write(scriptTag('document.F=Object'));
    iframeDocument.close();
    return iframeDocument.F;
  };

  // Check for document.domain and active x support
  // No need to use active x approach when document.domain is not set
  // see https://github.com/es-shims/es5-shim/issues/150
  // variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
  // avoid IE GC bug
  var activeXDocument;
  var NullProtoObject = function () {
    try {
      activeXDocument = new ActiveXObject('htmlfile');
    } catch (error) {/* ignore */}
    NullProtoObject = typeof document != 'undefined' ? document.domain && activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) // old IE
    : NullProtoObjectViaIFrame() : NullProtoObjectViaActiveX(activeXDocument); // WSH
    var length = enumBugKeys$1.length;
    while (length--) delete NullProtoObject[PROTOTYPE$1][enumBugKeys$1[length]];
    return NullProtoObject();
  };
  hiddenKeys$4[IE_PROTO$1] = true;

  // `Object.create` method
  // https://tc39.es/ecma262/#sec-object.create
  // eslint-disable-next-line es/no-object-create -- safe
  var objectCreate = Object.create || function create(O, Properties) {
    var result;
    if (O !== null) {
      EmptyConstructor[PROTOTYPE$1] = anObject$a(O);
      result = new EmptyConstructor();
      EmptyConstructor[PROTOTYPE$1] = null;
      // add "__proto__" for Object.getPrototypeOf polyfill
      result[IE_PROTO$1] = O;
    } else result = NullProtoObject();
    return Properties === undefined ? result : definePropertiesModule$1.f(result, Properties);
  };
  var objectGetOwnPropertyNames = {};
  var internalObjectKeys = objectKeysInternal;
  var enumBugKeys = enumBugKeys$3;
  var hiddenKeys$3 = enumBugKeys.concat('length', 'prototype');

  // `Object.getOwnPropertyNames` method
  // https://tc39.es/ecma262/#sec-object.getownpropertynames
  // eslint-disable-next-line es/no-object-getownpropertynames -- safe
  objectGetOwnPropertyNames.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
    return internalObjectKeys(O, hiddenKeys$3);
  };
  var objectGetOwnPropertyNamesExternal = {};
  var toAbsoluteIndex$2 = toAbsoluteIndex$4;
  var lengthOfArrayLike$a = lengthOfArrayLike$d;
  var createProperty$4 = createProperty$6;
  var $Array$2 = Array;
  var max$2 = Math.max;
  var arraySliceSimple = function (O, start, end) {
    var length = lengthOfArrayLike$a(O);
    var k = toAbsoluteIndex$2(start, length);
    var fin = toAbsoluteIndex$2(end === undefined ? length : end, length);
    var result = $Array$2(max$2(fin - k, 0));
    var n = 0;
    for (; k < fin; k++, n++) createProperty$4(result, n, O[k]);
    result.length = n;
    return result;
  };

  /* eslint-disable es/no-object-getownpropertynames -- safe */
  var classof$a = classofRaw$2;
  var toIndexedObject$5 = toIndexedObject$a;
  var $getOwnPropertyNames$1 = objectGetOwnPropertyNames.f;
  var arraySlice$6 = arraySliceSimple;
  var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
  var getWindowNames = function (it) {
    try {
      return $getOwnPropertyNames$1(it);
    } catch (error) {
      return arraySlice$6(windowNames);
    }
  };

  // fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
  objectGetOwnPropertyNamesExternal.f = function getOwnPropertyNames(it) {
    return windowNames && classof$a(it) === 'Window' ? getWindowNames(it) : $getOwnPropertyNames$1(toIndexedObject$5(it));
  };
  var objectGetOwnPropertySymbols = {};

  // eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
  objectGetOwnPropertySymbols.f = Object.getOwnPropertySymbols;
  var createNonEnumerableProperty$7 = createNonEnumerableProperty$9;
  var defineBuiltIn$6 = function (target, key, value, options) {
    if (options && options.enumerable) target[key] = value;else createNonEnumerableProperty$7(target, key, value);
    return target;
  };
  var defineProperty$7 = objectDefineProperty;
  var defineBuiltInAccessor$3 = function (target, name, descriptor) {
    return defineProperty$7.f(target, name, descriptor);
  };
  var wellKnownSymbolWrapped = {};
  var wellKnownSymbol$g = wellKnownSymbol$n;
  wellKnownSymbolWrapped.f = wellKnownSymbol$g;
  var path$k = path$o;
  var hasOwn$f = hasOwnProperty_1;
  var wrappedWellKnownSymbolModule$1 = wellKnownSymbolWrapped;
  var defineProperty$6 = objectDefineProperty.f;
  var wellKnownSymbolDefine = function (NAME) {
    var Symbol = path$k.Symbol || (path$k.Symbol = {});
    if (!hasOwn$f(Symbol, NAME)) defineProperty$6(Symbol, NAME, {
      value: wrappedWellKnownSymbolModule$1.f(NAME)
    });
  };
  var call$e = functionCall;
  var getBuiltIn$b = getBuiltIn$f;
  var wellKnownSymbol$f = wellKnownSymbol$n;
  var defineBuiltIn$5 = defineBuiltIn$6;
  var symbolDefineToPrimitive = function () {
    var Symbol = getBuiltIn$b('Symbol');
    var SymbolPrototype = Symbol && Symbol.prototype;
    var valueOf = SymbolPrototype && SymbolPrototype.valueOf;
    var TO_PRIMITIVE = wellKnownSymbol$f('toPrimitive');
    if (SymbolPrototype && !SymbolPrototype[TO_PRIMITIVE]) {
      // `Symbol.prototype[@@toPrimitive]` method
      // https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive
      // eslint-disable-next-line no-unused-vars -- required for .length
      defineBuiltIn$5(SymbolPrototype, TO_PRIMITIVE, function (hint) {
        return call$e(valueOf, this);
      }, {
        arity: 1
      });
    }
  };
  var TO_STRING_TAG_SUPPORT$1 = toStringTagSupport;
  var classof$9 = classof$d;

  // `Object.prototype.toString` method implementation
  // https://tc39.es/ecma262/#sec-object.prototype.tostring
  var objectToString = TO_STRING_TAG_SUPPORT$1 ? {}.toString : function toString() {
    return '[object ' + classof$9(this) + ']';
  };
  var TO_STRING_TAG_SUPPORT = toStringTagSupport;
  var defineProperty$5 = objectDefineProperty.f;
  var createNonEnumerableProperty$6 = createNonEnumerableProperty$9;
  var hasOwn$e = hasOwnProperty_1;
  var toString$6 = objectToString;
  var wellKnownSymbol$e = wellKnownSymbol$n;
  var TO_STRING_TAG$2 = wellKnownSymbol$e('toStringTag');
  var setToStringTag$7 = function (it, TAG, STATIC, SET_METHOD) {
    if (it) {
      var target = STATIC ? it : it.prototype;
      if (!hasOwn$e(target, TO_STRING_TAG$2)) {
        defineProperty$5(target, TO_STRING_TAG$2, {
          configurable: true,
          value: TAG
        });
      }
      if (SET_METHOD && !TO_STRING_TAG_SUPPORT) {
        createNonEnumerableProperty$6(target, 'toString', toString$6);
      }
    }
  };
  var global$g = global$p;
  var isCallable$b = isCallable$m;
  var WeakMap$1 = global$g.WeakMap;
  var weakMapBasicDetection = isCallable$b(WeakMap$1) && /native code/.test(String(WeakMap$1));
  var NATIVE_WEAK_MAP = weakMapBasicDetection;
  var global$f = global$p;
  var isObject$a = isObject$h;
  var createNonEnumerableProperty$5 = createNonEnumerableProperty$9;
  var hasOwn$d = hasOwnProperty_1;
  var shared$4 = sharedStore;
  var sharedKey$2 = sharedKey$4;
  var hiddenKeys$2 = hiddenKeys$6;
  var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
  var TypeError$3 = global$f.TypeError;
  var WeakMap = global$f.WeakMap;
  var set$4, get, has;
  var enforce = function (it) {
    return has(it) ? get(it) : set$4(it, {});
  };
  var getterFor = function (TYPE) {
    return function (it) {
      var state;
      if (!isObject$a(it) || (state = get(it)).type !== TYPE) {
        throw new TypeError$3('Incompatible receiver, ' + TYPE + ' required');
      }
      return state;
    };
  };
  if (NATIVE_WEAK_MAP || shared$4.state) {
    var store = shared$4.state || (shared$4.state = new WeakMap());
    /* eslint-disable no-self-assign -- prototype methods protection */
    store.get = store.get;
    store.has = store.has;
    store.set = store.set;
    /* eslint-enable no-self-assign -- prototype methods protection */
    set$4 = function (it, metadata) {
      if (store.has(it)) throw new TypeError$3(OBJECT_ALREADY_INITIALIZED);
      metadata.facade = it;
      store.set(it, metadata);
      return metadata;
    };
    get = function (it) {
      return store.get(it) || {};
    };
    has = function (it) {
      return store.has(it);
    };
  } else {
    var STATE = sharedKey$2('state');
    hiddenKeys$2[STATE] = true;
    set$4 = function (it, metadata) {
      if (hasOwn$d(it, STATE)) throw new TypeError$3(OBJECT_ALREADY_INITIALIZED);
      metadata.facade = it;
      createNonEnumerableProperty$5(it, STATE, metadata);
      return metadata;
    };
    get = function (it) {
      return hasOwn$d(it, STATE) ? it[STATE] : {};
    };
    has = function (it) {
      return hasOwn$d(it, STATE);
    };
  }
  var internalState = {
    set: set$4,
    get: get,
    has: has,
    enforce: enforce,
    getterFor: getterFor
  };
  var bind$g = functionBindContext;
  var uncurryThis$f = functionUncurryThis;
  var IndexedObject$2 = indexedObject;
  var toObject$b = toObject$e;
  var lengthOfArrayLike$9 = lengthOfArrayLike$d;
  var arraySpeciesCreate$2 = arraySpeciesCreate$4;
  var push$b = uncurryThis$f([].push);

  // `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation
  var createMethod$2 = function (TYPE) {
    var IS_MAP = TYPE === 1;
    var IS_FILTER = TYPE === 2;
    var IS_SOME = TYPE === 3;
    var IS_EVERY = TYPE === 4;
    var IS_FIND_INDEX = TYPE === 6;
    var IS_FILTER_REJECT = TYPE === 7;
    var NO_HOLES = TYPE === 5 || IS_FIND_INDEX;
    return function ($this, callbackfn, that, specificCreate) {
      var O = toObject$b($this);
      var self = IndexedObject$2(O);
      var boundFunction = bind$g(callbackfn, that);
      var length = lengthOfArrayLike$9(self);
      var index = 0;
      var create = specificCreate || arraySpeciesCreate$2;
      var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;
      var value, result;
      for (; length > index; index++) if (NO_HOLES || index in self) {
        value = self[index];
        result = boundFunction(value, index, O);
        if (TYPE) {
          if (IS_MAP) target[index] = result; // map
          else if (result) switch (TYPE) {
            case 3:
              return true;
            // some
            case 5:
              return value;
            // find
            case 6:
              return index;
            // findIndex
            case 2:
              push$b(target, value);
            // filter
          } else switch (TYPE) {
            case 4:
              return false;
            // every
            case 7:
              push$b(target, value);
            // filterReject
          }
        }
      }

      return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
    };
  };
  var arrayIteration = {
    // `Array.prototype.forEach` method
    // https://tc39.es/ecma262/#sec-array.prototype.foreach
    forEach: createMethod$2(0),
    // `Array.prototype.map` method
    // https://tc39.es/ecma262/#sec-array.prototype.map
    map: createMethod$2(1),
    // `Array.prototype.filter` method
    // https://tc39.es/ecma262/#sec-array.prototype.filter
    filter: createMethod$2(2),
    // `Array.prototype.some` method
    // https://tc39.es/ecma262/#sec-array.prototype.some
    some: createMethod$2(3),
    // `Array.prototype.every` method
    // https://tc39.es/ecma262/#sec-array.prototype.every
    every: createMethod$2(4),
    // `Array.prototype.find` method
    // https://tc39.es/ecma262/#sec-array.prototype.find
    find: createMethod$2(5),
    // `Array.prototype.findIndex` method
    // https://tc39.es/ecma262/#sec-array.prototype.findIndex
    findIndex: createMethod$2(6),
    // `Array.prototype.filterReject` method
    // https://github.com/tc39/proposal-array-filtering
    filterReject: createMethod$2(7)
  };
  var $$N = _export;
  var global$e = global$p;
  var call$d = functionCall;
  var uncurryThis$e = functionUncurryThis;
  var DESCRIPTORS$a = descriptors;
  var NATIVE_SYMBOL$3 = symbolConstructorDetection;
  var fails$j = fails$u;
  var hasOwn$c = hasOwnProperty_1;
  var isPrototypeOf$j = objectIsPrototypeOf;
  var anObject$9 = anObject$d;
  var toIndexedObject$4 = toIndexedObject$a;
  var toPropertyKey = toPropertyKey$4;
  var $toString = toString$7;
  var createPropertyDescriptor$3 = createPropertyDescriptor$7;
  var nativeObjectCreate = objectCreate;
  var objectKeys$1 = objectKeys$3;
  var getOwnPropertyNamesModule$2 = objectGetOwnPropertyNames;
  var getOwnPropertyNamesExternal = objectGetOwnPropertyNamesExternal;
  var getOwnPropertySymbolsModule$3 = objectGetOwnPropertySymbols;
  var getOwnPropertyDescriptorModule$2 = objectGetOwnPropertyDescriptor;
  var definePropertyModule$1 = objectDefineProperty;
  var definePropertiesModule = objectDefineProperties;
  var propertyIsEnumerableModule$1 = objectPropertyIsEnumerable;
  var defineBuiltIn$4 = defineBuiltIn$6;
  var defineBuiltInAccessor$2 = defineBuiltInAccessor$3;
  var shared$3 = sharedExports;
  var sharedKey$1 = sharedKey$4;
  var hiddenKeys$1 = hiddenKeys$6;
  var uid$1 = uid$4;
  var wellKnownSymbol$d = wellKnownSymbol$n;
  var wrappedWellKnownSymbolModule = wellKnownSymbolWrapped;
  var defineWellKnownSymbol$l = wellKnownSymbolDefine;
  var defineSymbolToPrimitive$1 = symbolDefineToPrimitive;
  var setToStringTag$6 = setToStringTag$7;
  var InternalStateModule$5 = internalState;
  var $forEach$1 = arrayIteration.forEach;
  var HIDDEN = sharedKey$1('hidden');
  var SYMBOL = 'Symbol';
  var PROTOTYPE = 'prototype';
  var setInternalState$5 = InternalStateModule$5.set;
  var getInternalState$2 = InternalStateModule$5.getterFor(SYMBOL);
  var ObjectPrototype$2 = Object[PROTOTYPE];
  var $Symbol = global$e.Symbol;
  var SymbolPrototype = $Symbol && $Symbol[PROTOTYPE];
  var RangeError = global$e.RangeError;
  var TypeError$2 = global$e.TypeError;
  var QObject = global$e.QObject;
  var nativeGetOwnPropertyDescriptor$1 = getOwnPropertyDescriptorModule$2.f;
  var nativeDefineProperty = definePropertyModule$1.f;
  var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
  var nativePropertyIsEnumerable = propertyIsEnumerableModule$1.f;
  var push$a = uncurryThis$e([].push);
  var AllSymbols = shared$3('symbols');
  var ObjectPrototypeSymbols = shared$3('op-symbols');
  var WellKnownSymbolsStore$1 = shared$3('wks');

  // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
  var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

  // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
  var fallbackDefineProperty = function (O, P, Attributes) {
    var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor$1(ObjectPrototype$2, P);
    if (ObjectPrototypeDescriptor) delete ObjectPrototype$2[P];
    nativeDefineProperty(O, P, Attributes);
    if (ObjectPrototypeDescriptor && O !== ObjectPrototype$2) {
      nativeDefineProperty(ObjectPrototype$2, P, ObjectPrototypeDescriptor);
    }
  };
  var setSymbolDescriptor = DESCRIPTORS$a && fails$j(function () {
    return nativeObjectCreate(nativeDefineProperty({}, 'a', {
      get: function () {
        return nativeDefineProperty(this, 'a', {
          value: 7
        }).a;
      }
    })).a !== 7;
  }) ? fallbackDefineProperty : nativeDefineProperty;
  var wrap = function (tag, description) {
    var symbol = AllSymbols[tag] = nativeObjectCreate(SymbolPrototype);
    setInternalState$5(symbol, {
      type: SYMBOL,
      tag: tag,
      description: description
    });
    if (!DESCRIPTORS$a) symbol.description = description;
    return symbol;
  };
  var $defineProperty = function defineProperty(O, P, Attributes) {
    if (O === ObjectPrototype$2) $defineProperty(ObjectPrototypeSymbols, P, Attributes);
    anObject$9(O);
    var key = toPropertyKey(P);
    anObject$9(Attributes);
    if (hasOwn$c(AllSymbols, key)) {
      if (!Attributes.enumerable) {
        if (!hasOwn$c(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor$3(1, {}));
        O[HIDDEN][key] = true;
      } else {
        if (hasOwn$c(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
        Attributes = nativeObjectCreate(Attributes, {
          enumerable: createPropertyDescriptor$3(0, false)
        });
      }
      return setSymbolDescriptor(O, key, Attributes);
    }
    return nativeDefineProperty(O, key, Attributes);
  };
  var $defineProperties = function defineProperties(O, Properties) {
    anObject$9(O);
    var properties = toIndexedObject$4(Properties);
    var keys = objectKeys$1(properties).concat($getOwnPropertySymbols(properties));
    $forEach$1(keys, function (key) {
      if (!DESCRIPTORS$a || call$d($propertyIsEnumerable, properties, key)) $defineProperty(O, key, properties[key]);
    });
    return O;
  };
  var $create = function create(O, Properties) {
    return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
  };
  var $propertyIsEnumerable = function propertyIsEnumerable(V) {
    var P = toPropertyKey(V);
    var enumerable = call$d(nativePropertyIsEnumerable, this, P);
    if (this === ObjectPrototype$2 && hasOwn$c(AllSymbols, P) && !hasOwn$c(ObjectPrototypeSymbols, P)) return false;
    return enumerable || !hasOwn$c(this, P) || !hasOwn$c(AllSymbols, P) || hasOwn$c(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;
  };
  var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
    var it = toIndexedObject$4(O);
    var key = toPropertyKey(P);
    if (it === ObjectPrototype$2 && hasOwn$c(AllSymbols, key) && !hasOwn$c(ObjectPrototypeSymbols, key)) return;
    var descriptor = nativeGetOwnPropertyDescriptor$1(it, key);
    if (descriptor && hasOwn$c(AllSymbols, key) && !(hasOwn$c(it, HIDDEN) && it[HIDDEN][key])) {
      descriptor.enumerable = true;
    }
    return descriptor;
  };
  var $getOwnPropertyNames = function getOwnPropertyNames(O) {
    var names = nativeGetOwnPropertyNames(toIndexedObject$4(O));
    var result = [];
    $forEach$1(names, function (key) {
      if (!hasOwn$c(AllSymbols, key) && !hasOwn$c(hiddenKeys$1, key)) push$a(result, key);
    });
    return result;
  };
  var $getOwnPropertySymbols = function (O) {
    var IS_OBJECT_PROTOTYPE = O === ObjectPrototype$2;
    var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject$4(O));
    var result = [];
    $forEach$1(names, function (key) {
      if (hasOwn$c(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwn$c(ObjectPrototype$2, key))) {
        push$a(result, AllSymbols[key]);
      }
    });
    return result;
  };

  // `Symbol` constructor
  // https://tc39.es/ecma262/#sec-symbol-constructor
  if (!NATIVE_SYMBOL$3) {
    $Symbol = function Symbol() {
      if (isPrototypeOf$j(SymbolPrototype, this)) throw new TypeError$2('Symbol is not a constructor');
      var description = !arguments.length || arguments[0] === undefined ? undefined : $toString(arguments[0]);
      var tag = uid$1(description);
      var setter = function (value) {
        var $this = this === undefined ? global$e : this;
        if ($this === ObjectPrototype$2) call$d(setter, ObjectPrototypeSymbols, value);
        if (hasOwn$c($this, HIDDEN) && hasOwn$c($this[HIDDEN], tag)) $this[HIDDEN][tag] = false;
        var descriptor = createPropertyDescriptor$3(1, value);
        try {
          setSymbolDescriptor($this, tag, descriptor);
        } catch (error) {
          if (!(error instanceof RangeError)) throw error;
          fallbackDefineProperty($this, tag, descriptor);
        }
      };
      if (DESCRIPTORS$a && USE_SETTER) setSymbolDescriptor(ObjectPrototype$2, tag, {
        configurable: true,
        set: setter
      });
      return wrap(tag, description);
    };
    SymbolPrototype = $Symbol[PROTOTYPE];
    defineBuiltIn$4(SymbolPrototype, 'toString', function toString() {
      return getInternalState$2(this).tag;
    });
    defineBuiltIn$4($Symbol, 'withoutSetter', function (description) {
      return wrap(uid$1(description), description);
    });
    propertyIsEnumerableModule$1.f = $propertyIsEnumerable;
    definePropertyModule$1.f = $defineProperty;
    definePropertiesModule.f = $defineProperties;
    getOwnPropertyDescriptorModule$2.f = $getOwnPropertyDescriptor;
    getOwnPropertyNamesModule$2.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
    getOwnPropertySymbolsModule$3.f = $getOwnPropertySymbols;
    wrappedWellKnownSymbolModule.f = function (name) {
      return wrap(wellKnownSymbol$d(name), name);
    };
    if (DESCRIPTORS$a) {
      // https://github.com/tc39/proposal-Symbol-description
      defineBuiltInAccessor$2(SymbolPrototype, 'description', {
        configurable: true,
        get: function description() {
          return getInternalState$2(this).description;
        }
      });
    }
  }
  $$N({
    global: true,
    constructor: true,
    wrap: true,
    forced: !NATIVE_SYMBOL$3,
    sham: !NATIVE_SYMBOL$3
  }, {
    Symbol: $Symbol
  });
  $forEach$1(objectKeys$1(WellKnownSymbolsStore$1), function (name) {
    defineWellKnownSymbol$l(name);
  });
  $$N({
    target: SYMBOL,
    stat: true,
    forced: !NATIVE_SYMBOL$3
  }, {
    useSetter: function () {
      USE_SETTER = true;
    },
    useSimple: function () {
      USE_SETTER = false;
    }
  });
  $$N({
    target: 'Object',
    stat: true,
    forced: !NATIVE_SYMBOL$3,
    sham: !DESCRIPTORS$a
  }, {
    // `Object.create` method
    // https://tc39.es/ecma262/#sec-object.create
    create: $create,
    // `Object.defineProperty` method
    // https://tc39.es/ecma262/#sec-object.defineproperty
    defineProperty: $defineProperty,
    // `Object.defineProperties` method
    // https://tc39.es/ecma262/#sec-object.defineproperties
    defineProperties: $defineProperties,
    // `Object.getOwnPropertyDescriptor` method
    // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
    getOwnPropertyDescriptor: $getOwnPropertyDescriptor
  });
  $$N({
    target: 'Object',
    stat: true,
    forced: !NATIVE_SYMBOL$3
  }, {
    // `Object.getOwnPropertyNames` method
    // https://tc39.es/ecma262/#sec-object.getownpropertynames
    getOwnPropertyNames: $getOwnPropertyNames
  });

  // `Symbol.prototype[@@toPrimitive]` method
  // https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive
  defineSymbolToPrimitive$1();

  // `Symbol.prototype[@@toStringTag]` property
  // https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag
  setToStringTag$6($Symbol, SYMBOL);
  hiddenKeys$1[HIDDEN] = true;
  var NATIVE_SYMBOL$2 = symbolConstructorDetection;

  /* eslint-disable es/no-symbol -- safe */
  var symbolRegistryDetection = NATIVE_SYMBOL$2 && !!Symbol['for'] && !!Symbol.keyFor;
  var $$M = _export;
  var getBuiltIn$a = getBuiltIn$f;
  var hasOwn$b = hasOwnProperty_1;
  var toString$5 = toString$7;
  var shared$2 = sharedExports;
  var NATIVE_SYMBOL_REGISTRY$1 = symbolRegistryDetection;
  var StringToSymbolRegistry = shared$2('string-to-symbol-registry');
  var SymbolToStringRegistry$1 = shared$2('symbol-to-string-registry');

  // `Symbol.for` method
  // https://tc39.es/ecma262/#sec-symbol.for
  $$M({
    target: 'Symbol',
    stat: true,
    forced: !NATIVE_SYMBOL_REGISTRY$1
  }, {
    'for': function (key) {
      var string = toString$5(key);
      if (hasOwn$b(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
      var symbol = getBuiltIn$a('Symbol')(string);
      StringToSymbolRegistry[string] = symbol;
      SymbolToStringRegistry$1[symbol] = string;
      return symbol;
    }
  });
  var $$L = _export;
  var hasOwn$a = hasOwnProperty_1;
  var isSymbol$2 = isSymbol$5;
  var tryToString$4 = tryToString$6;
  var shared$1 = sharedExports;
  var NATIVE_SYMBOL_REGISTRY = symbolRegistryDetection;
  var SymbolToStringRegistry = shared$1('symbol-to-string-registry');

  // `Symbol.keyFor` method
  // https://tc39.es/ecma262/#sec-symbol.keyfor
  $$L({
    target: 'Symbol',
    stat: true,
    forced: !NATIVE_SYMBOL_REGISTRY
  }, {
    keyFor: function keyFor(sym) {
      if (!isSymbol$2(sym)) throw new TypeError(tryToString$4(sym) + ' is not a symbol');
      if (hasOwn$a(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
    }
  });
  var uncurryThis$d = functionUncurryThis;
  var arraySlice$5 = uncurryThis$d([].slice);
  var uncurryThis$c = functionUncurryThis;
  var isArray$b = isArray$e;
  var isCallable$a = isCallable$m;
  var classof$8 = classofRaw$2;
  var toString$4 = toString$7;
  var push$9 = uncurryThis$c([].push);
  var getJsonReplacerFunction = function (replacer) {
    if (isCallable$a(replacer)) return replacer;
    if (!isArray$b(replacer)) return;
    var rawLength = replacer.length;
    var keys = [];
    for (var i = 0; i < rawLength; i++) {
      var element = replacer[i];
      if (typeof element == 'string') push$9(keys, element);else if (typeof element == 'number' || classof$8(element) === 'Number' || classof$8(element) === 'String') push$9(keys, toString$4(element));
    }
    var keysLength = keys.length;
    var root = true;
    return function (key, value) {
      if (root) {
        root = false;
        return value;
      }
      if (isArray$b(this)) return value;
      for (var j = 0; j < keysLength; j++) if (keys[j] === key) return value;
    };
  };
  var $$K = _export;
  var getBuiltIn$9 = getBuiltIn$f;
  var apply$4 = functionApply;
  var call$c = functionCall;
  var uncurryThis$b = functionUncurryThis;
  var fails$i = fails$u;
  var isCallable$9 = isCallable$m;
  var isSymbol$1 = isSymbol$5;
  var arraySlice$4 = arraySlice$5;
  var getReplacerFunction = getJsonReplacerFunction;
  var NATIVE_SYMBOL$1 = symbolConstructorDetection;
  var $String$1 = String;
  var $stringify = getBuiltIn$9('JSON', 'stringify');
  var exec = uncurryThis$b(/./.exec);
  var charAt$2 = uncurryThis$b(''.charAt);
  var charCodeAt$1 = uncurryThis$b(''.charCodeAt);
  var replace$1 = uncurryThis$b(''.replace);
  var numberToString = uncurryThis$b(1.0.toString);
  var tester = /[\uD800-\uDFFF]/g;
  var low = /^[\uD800-\uDBFF]$/;
  var hi = /^[\uDC00-\uDFFF]$/;
  var WRONG_SYMBOLS_CONVERSION = !NATIVE_SYMBOL$1 || fails$i(function () {
    var symbol = getBuiltIn$9('Symbol')('stringify detection');
    // MS Edge converts symbol values to JSON as {}
    return $stringify([symbol]) !== '[null]'
    // WebKit converts symbol values to JSON as null
    || $stringify({
      a: symbol
    }) !== '{}'
    // V8 throws on boxed symbols
    || $stringify(Object(symbol)) !== '{}';
  });

  // https://github.com/tc39/proposal-well-formed-stringify
  var ILL_FORMED_UNICODE = fails$i(function () {
    return $stringify('\uDF06\uD834') !== '"\\udf06\\ud834"' || $stringify('\uDEAD') !== '"\\udead"';
  });
  var stringifyWithSymbolsFix = function (it, replacer) {
    var args = arraySlice$4(arguments);
    var $replacer = getReplacerFunction(replacer);
    if (!isCallable$9($replacer) && (it === undefined || isSymbol$1(it))) return; // IE8 returns string on undefined
    args[1] = function (key, value) {
      // some old implementations (like WebKit) could pass numbers as keys
      if (isCallable$9($replacer)) value = call$c($replacer, this, $String$1(key), value);
      if (!isSymbol$1(value)) return value;
    };
    return apply$4($stringify, null, args);
  };
  var fixIllFormed = function (match, offset, string) {
    var prev = charAt$2(string, offset - 1);
    var next = charAt$2(string, offset + 1);
    if (exec(low, match) && !exec(hi, next) || exec(hi, match) && !exec(low, prev)) {
      return '\\u' + numberToString(charCodeAt$1(match, 0), 16);
    }
    return match;
  };
  if ($stringify) {
    // `JSON.stringify` method
    // https://tc39.es/ecma262/#sec-json.stringify
    $$K({
      target: 'JSON',
      stat: true,
      arity: 3,
      forced: WRONG_SYMBOLS_CONVERSION || ILL_FORMED_UNICODE
    }, {
      // eslint-disable-next-line no-unused-vars -- required for `.length`
      stringify: function stringify(it, replacer, space) {
        var args = arraySlice$4(arguments);
        var result = apply$4(WRONG_SYMBOLS_CONVERSION ? stringifyWithSymbolsFix : $stringify, null, args);
        return ILL_FORMED_UNICODE && typeof result == 'string' ? replace$1(result, tester, fixIllFormed) : result;
      }
    });
  }
  var $$J = _export;
  var NATIVE_SYMBOL = symbolConstructorDetection;
  var fails$h = fails$u;
  var getOwnPropertySymbolsModule$2 = objectGetOwnPropertySymbols;
  var toObject$a = toObject$e;

  // V8 ~ Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
  // https://bugs.chromium.org/p/v8/issues/detail?id=3443
  var FORCED$5 = !NATIVE_SYMBOL || fails$h(function () {
    getOwnPropertySymbolsModule$2.f(1);
  });

  // `Object.getOwnPropertySymbols` method
  // https://tc39.es/ecma262/#sec-object.getownpropertysymbols
  $$J({
    target: 'Object',
    stat: true,
    forced: FORCED$5
  }, {
    getOwnPropertySymbols: function getOwnPropertySymbols(it) {
      var $getOwnPropertySymbols = getOwnPropertySymbolsModule$2.f;
      return $getOwnPropertySymbols ? $getOwnPropertySymbols(toObject$a(it)) : [];
    }
  });
  var defineWellKnownSymbol$k = wellKnownSymbolDefine;

  // `Symbol.asyncIterator` well-known symbol
  // https://tc39.es/ecma262/#sec-symbol.asynciterator
  defineWellKnownSymbol$k('asyncIterator');
  var defineWellKnownSymbol$j = wellKnownSymbolDefine;

  // `Symbol.hasInstance` well-known symbol
  // https://tc39.es/ecma262/#sec-symbol.hasinstance
  defineWellKnownSymbol$j('hasInstance');
  var defineWellKnownSymbol$i = wellKnownSymbolDefine;

  // `Symbol.isConcatSpreadable` well-known symbol
  // https://tc39.es/ecma262/#sec-symbol.isconcatspreadable
  defineWellKnownSymbol$i('isConcatSpreadable');
  var defineWellKnownSymbol$h = wellKnownSymbolDefine;

  // `Symbol.iterator` well-known symbol
  // https://tc39.es/ecma262/#sec-symbol.iterator
  defineWellKnownSymbol$h('iterator');
  var defineWellKnownSymbol$g = wellKnownSymbolDefine;

  // `Symbol.match` well-known symbol
  // https://tc39.es/ecma262/#sec-symbol.match
  defineWellKnownSymbol$g('match');
  var defineWellKnownSymbol$f = wellKnownSymbolDefine;

  // `Symbol.matchAll` well-known symbol
  // https://tc39.es/ecma262/#sec-symbol.matchall
  defineWellKnownSymbol$f('matchAll');
  var defineWellKnownSymbol$e = wellKnownSymbolDefine;

  // `Symbol.replace` well-known symbol
  // https://tc39.es/ecma262/#sec-symbol.replace
  defineWellKnownSymbol$e('replace');
  var defineWellKnownSymbol$d = wellKnownSymbolDefine;

  // `Symbol.search` well-known symbol
  // https://tc39.es/ecma262/#sec-symbol.search
  defineWellKnownSymbol$d('search');
  var defineWellKnownSymbol$c = wellKnownSymbolDefine;

  // `Symbol.species` well-known symbol
  // https://tc39.es/ecma262/#sec-symbol.species
  defineWellKnownSymbol$c('species');
  var defineWellKnownSymbol$b = wellKnownSymbolDefine;

  // `Symbol.split` well-known symbol
  // https://tc39.es/ecma262/#sec-symbol.split
  defineWellKnownSymbol$b('split');
  var defineWellKnownSymbol$a = wellKnownSymbolDefine;
  var defineSymbolToPrimitive = symbolDefineToPrimitive;

  // `Symbol.toPrimitive` well-known symbol
  // https://tc39.es/ecma262/#sec-symbol.toprimitive
  defineWellKnownSymbol$a('toPrimitive');

  // `Symbol.prototype[@@toPrimitive]` method
  // https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive
  defineSymbolToPrimitive();
  var getBuiltIn$8 = getBuiltIn$f;
  var defineWellKnownSymbol$9 = wellKnownSymbolDefine;
  var setToStringTag$5 = setToStringTag$7;

  // `Symbol.toStringTag` well-known symbol
  // https://tc39.es/ecma262/#sec-symbol.tostringtag
  defineWellKnownSymbol$9('toStringTag');

  // `Symbol.prototype[@@toStringTag]` property
  // https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag
  setToStringTag$5(getBuiltIn$8('Symbol'), 'Symbol');
  var defineWellKnownSymbol$8 = wellKnownSymbolDefine;

  // `Symbol.unscopables` well-known symbol
  // https://tc39.es/ecma262/#sec-symbol.unscopables
  defineWellKnownSymbol$8('unscopables');
  var global$d = global$p;
  var setToStringTag$4 = setToStringTag$7;

  // JSON[@@toStringTag] property
  // https://tc39.es/ecma262/#sec-json-@@tostringtag
  setToStringTag$4(global$d.JSON, 'JSON', true);
  var path$j = path$o;
  var symbol$5 = path$j.Symbol;
  var iterators = {};
  var DESCRIPTORS$9 = descriptors;
  var hasOwn$9 = hasOwnProperty_1;
  var FunctionPrototype$2 = Function.prototype;
  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
  var getDescriptor = DESCRIPTORS$9 && Object.getOwnPropertyDescriptor;
  var EXISTS = hasOwn$9(FunctionPrototype$2, 'name');
  // additional protection from minified / mangled / dropped function names
  var PROPER = EXISTS && function something() {/* empty */}.name === 'something';
  var CONFIGURABLE = EXISTS && (!DESCRIPTORS$9 || DESCRIPTORS$9 && getDescriptor(FunctionPrototype$2, 'name').configurable);
  var functionName = {
    EXISTS: EXISTS,
    PROPER: PROPER,
    CONFIGURABLE: CONFIGURABLE
  };
  var fails$g = fails$u;
  var correctPrototypeGetter = !fails$g(function () {
    function F() {/* empty */}
    F.prototype.constructor = null;
    // eslint-disable-next-line es/no-object-getprototypeof -- required for testing
    return Object.getPrototypeOf(new F()) !== F.prototype;
  });
  var hasOwn$8 = hasOwnProperty_1;
  var isCallable$8 = isCallable$m;
  var toObject$9 = toObject$e;
  var sharedKey = sharedKey$4;
  var CORRECT_PROTOTYPE_GETTER$1 = correctPrototypeGetter;
  var IE_PROTO = sharedKey('IE_PROTO');
  var $Object = Object;
  var ObjectPrototype$1 = $Object.prototype;

  // `Object.getPrototypeOf` method
  // https://tc39.es/ecma262/#sec-object.getprototypeof
  // eslint-disable-next-line es/no-object-getprototypeof -- safe
  var objectGetPrototypeOf = CORRECT_PROTOTYPE_GETTER$1 ? $Object.getPrototypeOf : function (O) {
    var object = toObject$9(O);
    if (hasOwn$8(object, IE_PROTO)) return object[IE_PROTO];
    var constructor = object.constructor;
    if (isCallable$8(constructor) && object instanceof constructor) {
      return constructor.prototype;
    }
    return object instanceof $Object ? ObjectPrototype$1 : null;
  };
  var fails$f = fails$u;
  var isCallable$7 = isCallable$m;
  var isObject$9 = isObject$h;
  var create$b = objectCreate;
  var getPrototypeOf$7 = objectGetPrototypeOf;
  var defineBuiltIn$3 = defineBuiltIn$6;
  var wellKnownSymbol$c = wellKnownSymbol$n;
  var ITERATOR$4 = wellKnownSymbol$c('iterator');
  var BUGGY_SAFARI_ITERATORS$1 = false;

  // `%IteratorPrototype%` object
  // https://tc39.es/ecma262/#sec-%iteratorprototype%-object
  var IteratorPrototype$1, PrototypeOfArrayIteratorPrototype, arrayIterator;

  /* eslint-disable es/no-array-prototype-keys -- safe */
  if ([].keys) {
    arrayIterator = [].keys();
    // Safari 8 has buggy iterators w/o `next`
    if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS$1 = true;else {
      PrototypeOfArrayIteratorPrototype = getPrototypeOf$7(getPrototypeOf$7(arrayIterator));
      if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype$1 = PrototypeOfArrayIteratorPrototype;
    }
  }
  var NEW_ITERATOR_PROTOTYPE = !isObject$9(IteratorPrototype$1) || fails$f(function () {
    var test = {};
    // FF44- legacy iterators case
    return IteratorPrototype$1[ITERATOR$4].call(test) !== test;
  });
  if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype$1 = {};else IteratorPrototype$1 = create$b(IteratorPrototype$1);

  // `%IteratorPrototype%[@@iterator]()` method
  // https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator
  if (!isCallable$7(IteratorPrototype$1[ITERATOR$4])) {
    defineBuiltIn$3(IteratorPrototype$1, ITERATOR$4, function () {
      return this;
    });
  }
  var iteratorsCore = {
    IteratorPrototype: IteratorPrototype$1,
    BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS$1
  };
  var IteratorPrototype = iteratorsCore.IteratorPrototype;
  var create$a = objectCreate;
  var createPropertyDescriptor$2 = createPropertyDescriptor$7;
  var setToStringTag$3 = setToStringTag$7;
  var Iterators$5 = iterators;
  var returnThis$1 = function () {
    return this;
  };
  var iteratorCreateConstructor = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
    var TO_STRING_TAG = NAME + ' Iterator';
    IteratorConstructor.prototype = create$a(IteratorPrototype, {
      next: createPropertyDescriptor$2(+!ENUMERABLE_NEXT, next)
    });
    setToStringTag$3(IteratorConstructor, TO_STRING_TAG, false, true);
    Iterators$5[TO_STRING_TAG] = returnThis$1;
    return IteratorConstructor;
  };
  var uncurryThis$a = functionUncurryThis;
  var aCallable$b = aCallable$e;
  var functionUncurryThisAccessor = function (object, key, method) {
    try {
      // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
      return uncurryThis$a(aCallable$b(Object.getOwnPropertyDescriptor(object, key)[method]));
    } catch (error) {/* empty */}
  };
  var isCallable$6 = isCallable$m;
  var $String = String;
  var $TypeError$9 = TypeError;
  var aPossiblePrototype$1 = function (argument) {
    if (typeof argument == 'object' || isCallable$6(argument)) return argument;
    throw new $TypeError$9("Can't set " + $String(argument) + ' as a prototype');
  };

  /* eslint-disable no-proto -- safe */
  var uncurryThisAccessor = functionUncurryThisAccessor;
  var anObject$8 = anObject$d;
  var aPossiblePrototype = aPossiblePrototype$1;

  // `Object.setPrototypeOf` method
  // https://tc39.es/ecma262/#sec-object.setprototypeof
  // Works with __proto__ only. Old v8 can't work with null proto objects.
  // eslint-disable-next-line es/no-object-setprototypeof -- safe
  var objectSetPrototypeOf = Object.setPrototypeOf || ('__proto__' in {} ? function () {
    var CORRECT_SETTER = false;
    var test = {};
    var setter;
    try {
      setter = uncurryThisAccessor(Object.prototype, '__proto__', 'set');
      setter(test, []);
      CORRECT_SETTER = test instanceof Array;
    } catch (error) {/* empty */}
    return function setPrototypeOf(O, proto) {
      anObject$8(O);
      aPossiblePrototype(proto);
      if (CORRECT_SETTER) setter(O, proto);else O.__proto__ = proto;
      return O;
    };
  }() : undefined);
  var $$I = _export;
  var call$b = functionCall;
  var FunctionName = functionName;
  var createIteratorConstructor = iteratorCreateConstructor;
  var getPrototypeOf$6 = objectGetPrototypeOf;
  var setToStringTag$2 = setToStringTag$7;
  var defineBuiltIn$2 = defineBuiltIn$6;
  var wellKnownSymbol$b = wellKnownSymbol$n;
  var Iterators$4 = iterators;
  var IteratorsCore = iteratorsCore;
  var PROPER_FUNCTION_NAME = FunctionName.PROPER;
  FunctionName.CONFIGURABLE;
  IteratorsCore.IteratorPrototype;
  var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
  var ITERATOR$3 = wellKnownSymbol$b('iterator');
  var KEYS = 'keys';
  var VALUES = 'values';
  var ENTRIES = 'entries';
  var returnThis = function () {
    return this;
  };
  var iteratorDefine = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
    createIteratorConstructor(IteratorConstructor, NAME, next);
    var getIterationMethod = function (KIND) {
      if (KIND === DEFAULT && defaultIterator) return defaultIterator;
      if (!BUGGY_SAFARI_ITERATORS && KIND && KIND in IterablePrototype) return IterablePrototype[KIND];
      switch (KIND) {
        case KEYS:
          return function keys() {
            return new IteratorConstructor(this, KIND);
          };
        case VALUES:
          return function values() {
            return new IteratorConstructor(this, KIND);
          };
        case ENTRIES:
          return function entries() {
            return new IteratorConstructor(this, KIND);
          };
      }
      return function () {
        return new IteratorConstructor(this);
      };
    };
    var TO_STRING_TAG = NAME + ' Iterator';
    var INCORRECT_VALUES_NAME = false;
    var IterablePrototype = Iterable.prototype;
    var nativeIterator = IterablePrototype[ITERATOR$3] || IterablePrototype['@@iterator'] || DEFAULT && IterablePrototype[DEFAULT];
    var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
    var anyNativeIterator = NAME === 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
    var CurrentIteratorPrototype, methods, KEY;

    // fix native
    if (anyNativeIterator) {
      CurrentIteratorPrototype = getPrototypeOf$6(anyNativeIterator.call(new Iterable()));
      if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
        // Set @@toStringTag to native iterators
        setToStringTag$2(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
        Iterators$4[TO_STRING_TAG] = returnThis;
      }
    }

    // fix Array.prototype.{ values, @@iterator }.name in V8 / FF
    if (PROPER_FUNCTION_NAME && DEFAULT === VALUES && nativeIterator && nativeIterator.name !== VALUES) {
      {
        INCORRECT_VALUES_NAME = true;
        defaultIterator = function values() {
          return call$b(nativeIterator, this);
        };
      }
    }

    // export additional methods
    if (DEFAULT) {
      methods = {
        values: getIterationMethod(VALUES),
        keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
        entries: getIterationMethod(ENTRIES)
      };
      if (FORCED) for (KEY in methods) {
        if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
          defineBuiltIn$2(IterablePrototype, KEY, methods[KEY]);
        }
      } else $$I({
        target: NAME,
        proto: true,
        forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME
      }, methods);
    }

    // define iterator
    if (FORCED && IterablePrototype[ITERATOR$3] !== defaultIterator) {
      defineBuiltIn$2(IterablePrototype, ITERATOR$3, defaultIterator, {
        name: DEFAULT
      });
    }
    Iterators$4[NAME] = defaultIterator;
    return methods;
  };

  // `CreateIterResultObject` abstract operation
  // https://tc39.es/ecma262/#sec-createiterresultobject
  var createIterResultObject$3 = function (value, done) {
    return {
      value: value,
      done: done
    };
  };
  var toIndexedObject$3 = toIndexedObject$a;
  var Iterators$3 = iterators;
  var InternalStateModule$4 = internalState;
  objectDefineProperty.f;
  var defineIterator$2 = iteratorDefine;
  var createIterResultObject$2 = createIterResultObject$3;
  var ARRAY_ITERATOR = 'Array Iterator';
  var setInternalState$4 = InternalStateModule$4.set;
  var getInternalState$1 = InternalStateModule$4.getterFor(ARRAY_ITERATOR);

  // `Array.prototype.entries` method
  // https://tc39.es/ecma262/#sec-array.prototype.entries
  // `Array.prototype.keys` method
  // https://tc39.es/ecma262/#sec-array.prototype.keys
  // `Array.prototype.values` method
  // https://tc39.es/ecma262/#sec-array.prototype.values
  // `Array.prototype[@@iterator]` method
  // https://tc39.es/ecma262/#sec-array.prototype-@@iterator
  // `CreateArrayIterator` internal method
  // https://tc39.es/ecma262/#sec-createarrayiterator
  defineIterator$2(Array, 'Array', function (iterated, kind) {
    setInternalState$4(this, {
      type: ARRAY_ITERATOR,
      target: toIndexedObject$3(iterated),
      // target
      index: 0,
      // next index
      kind: kind // kind
    });
    // `%ArrayIteratorPrototype%.next` method
    // https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
  }, function () {
    var state = getInternalState$1(this);
    var target = state.target;
    var index = state.index++;
    if (!target || index >= target.length) {
      state.target = undefined;
      return createIterResultObject$2(undefined, true);
    }
    switch (state.kind) {
      case 'keys':
        return createIterResultObject$2(index, false);
      case 'values':
        return createIterResultObject$2(target[index], false);
    }
    return createIterResultObject$2([index, target[index]], false);
  }, 'values');

  // argumentsList[@@iterator] is %ArrayProto_values%
  // https://tc39.es/ecma262/#sec-createunmappedargumentsobject
  // https://tc39.es/ecma262/#sec-createmappedargumentsobject
  Iterators$3.Arguments = Iterators$3.Array;

  // iterable DOM collections
  // flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
  var domIterables = {
    CSSRuleList: 0,
    CSSStyleDeclaration: 0,
    CSSValueList: 0,
    ClientRectList: 0,
    DOMRectList: 0,
    DOMStringList: 0,
    DOMTokenList: 1,
    DataTransferItemList: 0,
    FileList: 0,
    HTMLAllCollection: 0,
    HTMLCollection: 0,
    HTMLFormElement: 0,
    HTMLSelectElement: 0,
    MediaList: 0,
    MimeTypeArray: 0,
    NamedNodeMap: 0,
    NodeList: 1,
    PaintRequestList: 0,
    Plugin: 0,
    PluginArray: 0,
    SVGLengthList: 0,
    SVGNumberList: 0,
    SVGPathSegList: 0,
    SVGPointList: 0,
    SVGStringList: 0,
    SVGTransformList: 0,
    SourceBufferList: 0,
    StyleSheetList: 0,
    TextTrackCueList: 0,
    TextTrackList: 0,
    TouchList: 0
  };
  var DOMIterables$4 = domIterables;
  var global$c = global$p;
  var classof$7 = classof$d;
  var createNonEnumerableProperty$4 = createNonEnumerableProperty$9;
  var Iterators$2 = iterators;
  var wellKnownSymbol$a = wellKnownSymbol$n;
  var TO_STRING_TAG$1 = wellKnownSymbol$a('toStringTag');
  for (var COLLECTION_NAME in DOMIterables$4) {
    var Collection = global$c[COLLECTION_NAME];
    var CollectionPrototype = Collection && Collection.prototype;
    if (CollectionPrototype && classof$7(CollectionPrototype) !== TO_STRING_TAG$1) {
      createNonEnumerableProperty$4(CollectionPrototype, TO_STRING_TAG$1, COLLECTION_NAME);
    }
    Iterators$2[COLLECTION_NAME] = Iterators$2.Array;
  }
  var parent$15 = symbol$5;
  var symbol$4 = parent$15;
  var wellKnownSymbol$9 = wellKnownSymbol$n;
  var defineProperty$4 = objectDefineProperty.f;
  var METADATA$1 = wellKnownSymbol$9('metadata');
  var FunctionPrototype$1 = Function.prototype;

  // Function.prototype[@@metadata]
  // https://github.com/tc39/proposal-decorator-metadata
  if (FunctionPrototype$1[METADATA$1] === undefined) {
    defineProperty$4(FunctionPrototype$1, METADATA$1, {
      value: null
    });
  }
  var defineWellKnownSymbol$7 = wellKnownSymbolDefine;

  // `Symbol.asyncDispose` well-known symbol
  // https://github.com/tc39/proposal-async-explicit-resource-management
  defineWellKnownSymbol$7('asyncDispose');
  var defineWellKnownSymbol$6 = wellKnownSymbolDefine;

  // `Symbol.dispose` well-known symbol
  // https://github.com/tc39/proposal-explicit-resource-management
  defineWellKnownSymbol$6('dispose');
  var defineWellKnownSymbol$5 = wellKnownSymbolDefine;

  // `Symbol.metadata` well-known symbol
  // https://github.com/tc39/proposal-decorators
  defineWellKnownSymbol$5('metadata');
  var parent$14 = symbol$4;
  var symbol$3 = parent$14;
  var getBuiltIn$7 = getBuiltIn$f;
  var uncurryThis$9 = functionUncurryThis;
  var Symbol$2 = getBuiltIn$7('Symbol');
  var keyFor = Symbol$2.keyFor;
  var thisSymbolValue$1 = uncurryThis$9(Symbol$2.prototype.valueOf);

  // `Symbol.isRegisteredSymbol` method
  // https://tc39.es/proposal-symbol-predicates/#sec-symbol-isregisteredsymbol
  var symbolIsRegistered = Symbol$2.isRegisteredSymbol || function isRegisteredSymbol(value) {
    try {
      return keyFor(thisSymbolValue$1(value)) !== undefined;
    } catch (error) {
      return false;
    }
  };
  var $$H = _export;
  var isRegisteredSymbol$1 = symbolIsRegistered;

  // `Symbol.isRegisteredSymbol` method
  // https://tc39.es/proposal-symbol-predicates/#sec-symbol-isregisteredsymbol
  $$H({
    target: 'Symbol',
    stat: true
  }, {
    isRegisteredSymbol: isRegisteredSymbol$1
  });
  var shared = sharedExports;
  var getBuiltIn$6 = getBuiltIn$f;
  var uncurryThis$8 = functionUncurryThis;
  var isSymbol = isSymbol$5;
  var wellKnownSymbol$8 = wellKnownSymbol$n;
  var Symbol$1 = getBuiltIn$6('Symbol');
  var $isWellKnownSymbol = Symbol$1.isWellKnownSymbol;
  var getOwnPropertyNames = getBuiltIn$6('Object', 'getOwnPropertyNames');
  var thisSymbolValue = uncurryThis$8(Symbol$1.prototype.valueOf);
  var WellKnownSymbolsStore = shared('wks');
  for (var i = 0, symbolKeys = getOwnPropertyNames(Symbol$1), symbolKeysLength = symbolKeys.length; i < symbolKeysLength; i++) {
    // some old engines throws on access to some keys like `arguments` or `caller`
    try {
      var symbolKey = symbolKeys[i];
      if (isSymbol(Symbol$1[symbolKey])) wellKnownSymbol$8(symbolKey);
    } catch (error) {/* empty */}
  }

  // `Symbol.isWellKnownSymbol` method
  // https://tc39.es/proposal-symbol-predicates/#sec-symbol-iswellknownsymbol
  // We should patch it for newly added well-known symbols. If it's not required, this module just will not be injected
  var symbolIsWellKnown = function isWellKnownSymbol(value) {
    if ($isWellKnownSymbol && $isWellKnownSymbol(value)) return true;
    try {
      var symbol = thisSymbolValue(value);
      for (var j = 0, keys = getOwnPropertyNames(WellKnownSymbolsStore), keysLength = keys.length; j < keysLength; j++) {
        // eslint-disable-next-line eqeqeq -- polyfilled symbols case
        if (WellKnownSymbolsStore[keys[j]] == symbol) return true;
      }
    } catch (error) {/* empty */}
    return false;
  };
  var $$G = _export;
  var isWellKnownSymbol$1 = symbolIsWellKnown;

  // `Symbol.isWellKnownSymbol` method
  // https://tc39.es/proposal-symbol-predicates/#sec-symbol-iswellknownsymbol
  // We should patch it for newly added well-known symbols. If it's not required, this module just will not be injected
  $$G({
    target: 'Symbol',
    stat: true,
    forced: true
  }, {
    isWellKnownSymbol: isWellKnownSymbol$1
  });
  var defineWellKnownSymbol$4 = wellKnownSymbolDefine;

  // `Symbol.matcher` well-known symbol
  // https://github.com/tc39/proposal-pattern-matching
  defineWellKnownSymbol$4('matcher');
  var defineWellKnownSymbol$3 = wellKnownSymbolDefine;

  // `Symbol.observable` well-known symbol
  // https://github.com/tc39/proposal-observable
  defineWellKnownSymbol$3('observable');
  var $$F = _export;
  var isRegisteredSymbol = symbolIsRegistered;

  // `Symbol.isRegistered` method
  // obsolete version of https://tc39.es/proposal-symbol-predicates/#sec-symbol-isregisteredsymbol
  $$F({
    target: 'Symbol',
    stat: true,
    name: 'isRegisteredSymbol'
  }, {
    isRegistered: isRegisteredSymbol
  });
  var $$E = _export;
  var isWellKnownSymbol = symbolIsWellKnown;

  // `Symbol.isWellKnown` method
  // obsolete version of https://tc39.es/proposal-symbol-predicates/#sec-symbol-iswellknownsymbol
  // We should patch it for newly added well-known symbols. If it's not required, this module just will not be injected
  $$E({
    target: 'Symbol',
    stat: true,
    name: 'isWellKnownSymbol',
    forced: true
  }, {
    isWellKnown: isWellKnownSymbol
  });

  // TODO: Remove from `core-js@4`
  var defineWellKnownSymbol$2 = wellKnownSymbolDefine;

  // `Symbol.metadataKey` well-known symbol
  // https://github.com/tc39/proposal-decorator-metadata
  defineWellKnownSymbol$2('metadataKey');

  // TODO: remove from `core-js@4`
  var defineWellKnownSymbol$1 = wellKnownSymbolDefine;

  // `Symbol.patternMatch` well-known symbol
  // https://github.com/tc39/proposal-pattern-matching
  defineWellKnownSymbol$1('patternMatch');

  // TODO: remove from `core-js@4`
  var defineWellKnownSymbol = wellKnownSymbolDefine;
  defineWellKnownSymbol('replaceAll');
  var parent$13 = symbol$3;

  // TODO: Remove from `core-js@4`

  var symbol$2 = parent$13;
  var symbol$1 = symbol$2;
  var _Symbol$1 = /*@__PURE__*/getDefaultExportFromCjs(symbol$1);
  var uncurryThis$7 = functionUncurryThis;
  var toIntegerOrInfinity$1 = toIntegerOrInfinity$4;
  var toString$3 = toString$7;
  var requireObjectCoercible = requireObjectCoercible$3;
  var charAt$1 = uncurryThis$7(''.charAt);
  var charCodeAt = uncurryThis$7(''.charCodeAt);
  var stringSlice = uncurryThis$7(''.slice);
  var createMethod$1 = function (CONVERT_TO_STRING) {
    return function ($this, pos) {
      var S = toString$3(requireObjectCoercible($this));
      var position = toIntegerOrInfinity$1(pos);
      var size = S.length;
      var first, second;
      if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
      first = charCodeAt(S, position);
      return first < 0xD800 || first > 0xDBFF || position + 1 === size || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF ? CONVERT_TO_STRING ? charAt$1(S, position) : first : CONVERT_TO_STRING ? stringSlice(S, position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
    };
  };
  var stringMultibyte = {
    // `String.prototype.codePointAt` method
    // https://tc39.es/ecma262/#sec-string.prototype.codepointat
    codeAt: createMethod$1(false),
    // `String.prototype.at` method
    // https://github.com/mathiasbynens/String.prototype.at
    charAt: createMethod$1(true)
  };
  var charAt = stringMultibyte.charAt;
  var toString$2 = toString$7;
  var InternalStateModule$3 = internalState;
  var defineIterator$1 = iteratorDefine;
  var createIterResultObject$1 = createIterResultObject$3;
  var STRING_ITERATOR = 'String Iterator';
  var setInternalState$3 = InternalStateModule$3.set;
  var getInternalState = InternalStateModule$3.getterFor(STRING_ITERATOR);

  // `String.prototype[@@iterator]` method
  // https://tc39.es/ecma262/#sec-string.prototype-@@iterator
  defineIterator$1(String, 'String', function (iterated) {
    setInternalState$3(this, {
      type: STRING_ITERATOR,
      string: toString$2(iterated),
      index: 0
    });
    // `%StringIteratorPrototype%.next` method
    // https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next
  }, function next() {
    var state = getInternalState(this);
    var string = state.string;
    var index = state.index;
    var point;
    if (index >= string.length) return createIterResultObject$1(undefined, true);
    point = charAt(string, index);
    state.index += point.length;
    return createIterResultObject$1(point, false);
  });
  var WrappedWellKnownSymbolModule$1 = wellKnownSymbolWrapped;
  var iterator$5 = WrappedWellKnownSymbolModule$1.f('iterator');
  var parent$12 = iterator$5;
  var iterator$4 = parent$12;
  var parent$11 = iterator$4;
  var iterator$3 = parent$11;
  var parent$10 = iterator$3;
  var iterator$2 = parent$10;
  var iterator$1 = iterator$2;
  var _Symbol$iterator$1 = /*@__PURE__*/getDefaultExportFromCjs(iterator$1);
  function _typeof$1(o) {
    "@babel/helpers - typeof";

    return _typeof$1 = "function" == typeof _Symbol$1 && "symbol" == typeof _Symbol$iterator$1 ? function (o) {
      return typeof o;
    } : function (o) {
      return o && "function" == typeof _Symbol$1 && o.constructor === _Symbol$1 && o !== _Symbol$1.prototype ? "symbol" : typeof o;
    }, _typeof$1(o);
  }
  var WrappedWellKnownSymbolModule = wellKnownSymbolWrapped;
  var toPrimitive$4 = WrappedWellKnownSymbolModule.f('toPrimitive');
  var parent$$ = toPrimitive$4;
  var toPrimitive$3 = parent$$;
  var parent$_ = toPrimitive$3;
  var toPrimitive$2 = parent$_;
  var parent$Z = toPrimitive$2;
  var toPrimitive$1 = parent$Z;
  var toPrimitive = toPrimitive$1;
  var _Symbol$toPrimitive = /*@__PURE__*/getDefaultExportFromCjs(toPrimitive);
  function _toPrimitive(input, hint) {
    if (_typeof$1(input) !== "object" || input === null) return input;
    var prim = input[_Symbol$toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (_typeof$1(res) !== "object") return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  }
  function _toPropertyKey(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof$1(key) === "symbol" ? key : String(key);
  }
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      _Object$defineProperty$1(target, _toPropertyKey(descriptor.key), descriptor);
    }
  }
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    _Object$defineProperty$1(Constructor, "prototype", {
      writable: false
    });
    return Constructor;
  }
  function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) {
      _Object$defineProperty$1(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }
    return obj;
  }
  var uncurryThis$6 = functionUncurryThis;
  var aCallable$a = aCallable$e;
  var isObject$8 = isObject$h;
  var hasOwn$7 = hasOwnProperty_1;
  var arraySlice$3 = arraySlice$5;
  var NATIVE_BIND = functionBindNative;
  var $Function = Function;
  var concat$6 = uncurryThis$6([].concat);
  var join = uncurryThis$6([].join);
  var factories = {};
  var construct$3 = function (C, argsLength, args) {
    if (!hasOwn$7(factories, argsLength)) {
      var list = [];
      var i = 0;
      for (; i < argsLength; i++) list[i] = 'a[' + i + ']';
      factories[argsLength] = $Function('C,a', 'return new C(' + join(list, ',') + ')');
    }
    return factories[argsLength](C, args);
  };

  // `Function.prototype.bind` method implementation
  // https://tc39.es/ecma262/#sec-function.prototype.bind
  // eslint-disable-next-line es/no-function-prototype-bind -- detection
  var functionBind = NATIVE_BIND ? $Function.bind : function bind(that /* , ...args */) {
    var F = aCallable$a(this);
    var Prototype = F.prototype;
    var partArgs = arraySlice$3(arguments, 1);
    var boundFunction = function bound( /* args... */
    ) {
      var args = concat$6(partArgs, arraySlice$3(arguments));
      return this instanceof boundFunction ? construct$3(F, args.length, args) : F.apply(that, args);
    };
    if (isObject$8(Prototype)) boundFunction.prototype = Prototype;
    return boundFunction;
  };

  // TODO: Remove from `core-js@4`
  var $$D = _export;
  var bind$f = functionBind;

  // `Function.prototype.bind` method
  // https://tc39.es/ecma262/#sec-function.prototype.bind
  // eslint-disable-next-line es/no-function-prototype-bind -- detection
  $$D({
    target: 'Function',
    proto: true,
    forced: Function.bind !== bind$f
  }, {
    bind: bind$f
  });
  var global$b = global$p;
  var path$i = path$o;
  var getBuiltInPrototypeMethod$g = function (CONSTRUCTOR, METHOD) {
    var Namespace = path$i[CONSTRUCTOR + 'Prototype'];
    var pureMethod = Namespace && Namespace[METHOD];
    if (pureMethod) return pureMethod;
    var NativeConstructor = global$b[CONSTRUCTOR];
    var NativePrototype = NativeConstructor && NativeConstructor.prototype;
    return NativePrototype && NativePrototype[METHOD];
  };
  var getBuiltInPrototypeMethod$f = getBuiltInPrototypeMethod$g;
  var bind$e = getBuiltInPrototypeMethod$f('Function', 'bind');
  var isPrototypeOf$i = objectIsPrototypeOf;
  var method$f = bind$e;
  var FunctionPrototype = Function.prototype;
  var bind$d = function (it) {
    var own = it.bind;
    return it === FunctionPrototype || isPrototypeOf$i(FunctionPrototype, it) && own === FunctionPrototype.bind ? method$f : own;
  };
  var parent$Y = bind$d;
  var bind$c = parent$Y;
  var bind$b = bind$c;
  var _bindInstanceProperty$1 = /*@__PURE__*/getDefaultExportFromCjs(bind$b);
  var aCallable$9 = aCallable$e;
  var toObject$8 = toObject$e;
  var IndexedObject$1 = indexedObject;
  var lengthOfArrayLike$8 = lengthOfArrayLike$d;
  var $TypeError$8 = TypeError;

  // `Array.prototype.{ reduce, reduceRight }` methods implementation
  var createMethod = function (IS_RIGHT) {
    return function (that, callbackfn, argumentsLength, memo) {
      aCallable$9(callbackfn);
      var O = toObject$8(that);
      var self = IndexedObject$1(O);
      var length = lengthOfArrayLike$8(O);
      var index = IS_RIGHT ? length - 1 : 0;
      var i = IS_RIGHT ? -1 : 1;
      if (argumentsLength < 2) while (true) {
        if (index in self) {
          memo = self[index];
          index += i;
          break;
        }
        index += i;
        if (IS_RIGHT ? index < 0 : length <= index) {
          throw new $TypeError$8('Reduce of empty array with no initial value');
        }
      }
      for (; IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {
        memo = callbackfn(memo, self[index], index, O);
      }
      return memo;
    };
  };
  var arrayReduce = {
    // `Array.prototype.reduce` method
    // https://tc39.es/ecma262/#sec-array.prototype.reduce
    left: createMethod(false),
    // `Array.prototype.reduceRight` method
    // https://tc39.es/ecma262/#sec-array.prototype.reduceright
    right: createMethod(true)
  };
  var fails$e = fails$u;
  var arrayMethodIsStrict$4 = function (METHOD_NAME, argument) {
    var method = [][METHOD_NAME];
    return !!method && fails$e(function () {
      // eslint-disable-next-line no-useless-call -- required for testing
      method.call(null, argument || function () {
        return 1;
      }, 1);
    });
  };
  var global$a = global$p;
  var classof$6 = classofRaw$2;
  var engineIsNode = classof$6(global$a.process) === 'process';
  var $$C = _export;
  var $reduce = arrayReduce.left;
  var arrayMethodIsStrict$3 = arrayMethodIsStrict$4;
  var CHROME_VERSION = engineV8Version;
  var IS_NODE$4 = engineIsNode;

  // Chrome 80-82 has a critical bug
  // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982
  var CHROME_BUG = !IS_NODE$4 && CHROME_VERSION > 79 && CHROME_VERSION < 83;
  var FORCED$4 = CHROME_BUG || !arrayMethodIsStrict$3('reduce');

  // `Array.prototype.reduce` method
  // https://tc39.es/ecma262/#sec-array.prototype.reduce
  $$C({
    target: 'Array',
    proto: true,
    forced: FORCED$4
  }, {
    reduce: function reduce(callbackfn /* , initialValue */) {
      var length = arguments.length;
      return $reduce(this, callbackfn, length, length > 1 ? arguments[1] : undefined);
    }
  });
  var getBuiltInPrototypeMethod$e = getBuiltInPrototypeMethod$g;
  var reduce$3 = getBuiltInPrototypeMethod$e('Array', 'reduce');
  var isPrototypeOf$h = objectIsPrototypeOf;
  var method$e = reduce$3;
  var ArrayPrototype$f = Array.prototype;
  var reduce$2 = function (it) {
    var own = it.reduce;
    return it === ArrayPrototype$f || isPrototypeOf$h(ArrayPrototype$f, it) && own === ArrayPrototype$f.reduce ? method$e : own;
  };
  var parent$X = reduce$2;
  var reduce$1 = parent$X;
  var reduce = reduce$1;
  var _reduceInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(reduce);
  var $$B = _export;
  var $filter = arrayIteration.filter;
  var arrayMethodHasSpeciesSupport$3 = arrayMethodHasSpeciesSupport$5;
  var HAS_SPECIES_SUPPORT$3 = arrayMethodHasSpeciesSupport$3('filter');

  // `Array.prototype.filter` method
  // https://tc39.es/ecma262/#sec-array.prototype.filter
  // with adding support of @@species
  $$B({
    target: 'Array',
    proto: true,
    forced: !HAS_SPECIES_SUPPORT$3
  }, {
    filter: function filter(callbackfn /* , thisArg */) {
      return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    }
  });
  var getBuiltInPrototypeMethod$d = getBuiltInPrototypeMethod$g;
  var filter$3 = getBuiltInPrototypeMethod$d('Array', 'filter');
  var isPrototypeOf$g = objectIsPrototypeOf;
  var method$d = filter$3;
  var ArrayPrototype$e = Array.prototype;
  var filter$2 = function (it) {
    var own = it.filter;
    return it === ArrayPrototype$e || isPrototypeOf$g(ArrayPrototype$e, it) && own === ArrayPrototype$e.filter ? method$d : own;
  };
  var parent$W = filter$2;
  var filter$1 = parent$W;
  var filter = filter$1;
  var _filterInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(filter);
  var $$A = _export;
  var $map = arrayIteration.map;
  var arrayMethodHasSpeciesSupport$2 = arrayMethodHasSpeciesSupport$5;
  var HAS_SPECIES_SUPPORT$2 = arrayMethodHasSpeciesSupport$2('map');

  // `Array.prototype.map` method
  // https://tc39.es/ecma262/#sec-array.prototype.map
  // with adding support of @@species
  $$A({
    target: 'Array',
    proto: true,
    forced: !HAS_SPECIES_SUPPORT$2
  }, {
    map: function map(callbackfn /* , thisArg */) {
      return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    }
  });
  var getBuiltInPrototypeMethod$c = getBuiltInPrototypeMethod$g;
  var map$6 = getBuiltInPrototypeMethod$c('Array', 'map');
  var isPrototypeOf$f = objectIsPrototypeOf;
  var method$c = map$6;
  var ArrayPrototype$d = Array.prototype;
  var map$5 = function (it) {
    var own = it.map;
    return it === ArrayPrototype$d || isPrototypeOf$f(ArrayPrototype$d, it) && own === ArrayPrototype$d.map ? method$c : own;
  };
  var parent$V = map$5;
  var map$4 = parent$V;
  var map$3 = map$4;
  var _mapInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(map$3);
  var isArray$a = isArray$e;
  var lengthOfArrayLike$7 = lengthOfArrayLike$d;
  var doesNotExceedSafeInteger$2 = doesNotExceedSafeInteger$4;
  var bind$a = functionBindContext;

  // `FlattenIntoArray` abstract operation
  // https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
  var flattenIntoArray$1 = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {
    var targetIndex = start;
    var sourceIndex = 0;
    var mapFn = mapper ? bind$a(mapper, thisArg) : false;
    var element, elementLen;
    while (sourceIndex < sourceLen) {
      if (sourceIndex in source) {
        element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];
        if (depth > 0 && isArray$a(element)) {
          elementLen = lengthOfArrayLike$7(element);
          targetIndex = flattenIntoArray$1(target, original, element, elementLen, targetIndex, depth - 1) - 1;
        } else {
          doesNotExceedSafeInteger$2(targetIndex + 1);
          target[targetIndex] = element;
        }
        targetIndex++;
      }
      sourceIndex++;
    }
    return targetIndex;
  };
  var flattenIntoArray_1 = flattenIntoArray$1;
  var $$z = _export;
  var flattenIntoArray = flattenIntoArray_1;
  var aCallable$8 = aCallable$e;
  var toObject$7 = toObject$e;
  var lengthOfArrayLike$6 = lengthOfArrayLike$d;
  var arraySpeciesCreate$1 = arraySpeciesCreate$4;

  // `Array.prototype.flatMap` method
  // https://tc39.es/ecma262/#sec-array.prototype.flatmap
  $$z({
    target: 'Array',
    proto: true
  }, {
    flatMap: function flatMap(callbackfn /* , thisArg */) {
      var O = toObject$7(this);
      var sourceLen = lengthOfArrayLike$6(O);
      var A;
      aCallable$8(callbackfn);
      A = arraySpeciesCreate$1(O, 0);
      A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
      return A;
    }
  });
  var getBuiltInPrototypeMethod$b = getBuiltInPrototypeMethod$g;
  var flatMap$3 = getBuiltInPrototypeMethod$b('Array', 'flatMap');
  var isPrototypeOf$e = objectIsPrototypeOf;
  var method$b = flatMap$3;
  var ArrayPrototype$c = Array.prototype;
  var flatMap$2 = function (it) {
    var own = it.flatMap;
    return it === ArrayPrototype$c || isPrototypeOf$e(ArrayPrototype$c, it) && own === ArrayPrototype$c.flatMap ? method$b : own;
  };
  var parent$U = flatMap$2;
  var flatMap$1 = parent$U;
  var flatMap = flatMap$1;
  var _flatMapInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(flatMap);

  /**
   * Create new data pipe.
   *
   * @param from - The source data set or data view.
   * @remarks
   * Example usage:
   * ```typescript
   * interface AppItem {
   *   whoami: string;
   *   appData: unknown;
   *   visData: VisItem;
   * }
   * interface VisItem {
   *   id: number;
   *   label: string;
   *   color: string;
   *   x: number;
   *   y: number;
   * }
   *
   * const ds1 = new DataSet<AppItem, "whoami">([], { fieldId: "whoami" });
   * const ds2 = new DataSet<VisItem, "id">();
   *
   * const pipe = createNewDataPipeFrom(ds1)
   *   .filter((item): boolean => item.enabled === true)
   *   .map<VisItem, "id">((item): VisItem => item.visData)
   *   .to(ds2);
   *
   * pipe.start();
   * ```
   * @returns A factory whose methods can be used to configure the pipe.
   */
  function createNewDataPipeFrom(from) {
    return new DataPipeUnderConstruction(from);
  }
  /**
   * Internal implementation of the pipe. This should be accessible only through
   * `createNewDataPipeFrom` from the outside.
   *
   * @typeParam SI - Source item type.
   * @typeParam SP - Source item type's id property name.
   * @typeParam TI - Target item type.
   * @typeParam TP - Target item type's id property name.
   */
  var SimpleDataPipe = /*#__PURE__*/function () {
    /**
     * Create a new data pipe.
     *
     * @param _source - The data set or data view that will be observed.
     * @param _transformers - An array of transforming functions to be used to
     * filter or transform the items in the pipe.
     * @param _target - The data set or data view that will receive the items.
     */
    function SimpleDataPipe(_source, _transformers, _target) {
      var _context, _context2, _context3;
      _classCallCheck(this, SimpleDataPipe);
      /**
       * Bound listeners for use with `DataInterface['on' | 'off']`.
       */
      _defineProperty(this, "_listeners", {
        add: _bindInstanceProperty$1(_context = this._add).call(_context, this),
        remove: _bindInstanceProperty$1(_context2 = this._remove).call(_context2, this),
        update: _bindInstanceProperty$1(_context3 = this._update).call(_context3, this)
      });
      this._source = _source;
      this._transformers = _transformers;
      this._target = _target;
    }
    /** @inheritDoc */
    _createClass(SimpleDataPipe, [{
      key: "all",
      value: function all() {
        this._target.update(this._transformItems(this._source.get()));
        return this;
      }
      /** @inheritDoc */
    }, {
      key: "start",
      value: function start() {
        this._source.on("add", this._listeners.add);
        this._source.on("remove", this._listeners.remove);
        this._source.on("update", this._listeners.update);
        return this;
      }
      /** @inheritDoc */
    }, {
      key: "stop",
      value: function stop() {
        this._source.off("add", this._listeners.add);
        this._source.off("remove", this._listeners.remove);
        this._source.off("update", this._listeners.update);
        return this;
      }
      /**
       * Apply the transformers to the items.
       *
       * @param items - The items to be transformed.
       * @returns The transformed items.
       */
    }, {
      key: "_transformItems",
      value: function _transformItems(items) {
        var _context4;
        return _reduceInstanceProperty(_context4 = this._transformers).call(_context4, function (items, transform) {
          return transform(items);
        }, items);
      }
      /**
       * Handle an add event.
       *
       * @param _name - Ignored.
       * @param payload - The payload containing the ids of the added items.
       */
    }, {
      key: "_add",
      value: function _add(_name, payload) {
        if (payload == null) {
          return;
        }
        this._target.add(this._transformItems(this._source.get(payload.items)));
      }
      /**
       * Handle an update event.
       *
       * @param _name - Ignored.
       * @param payload - The payload containing the ids of the updated items.
       */
    }, {
      key: "_update",
      value: function _update(_name, payload) {
        if (payload == null) {
          return;
        }
        this._target.update(this._transformItems(this._source.get(payload.items)));
      }
      /**
       * Handle a remove event.
       *
       * @param _name - Ignored.
       * @param payload - The payload containing the data of the removed items.
       */
    }, {
      key: "_remove",
      value: function _remove(_name, payload) {
        if (payload == null) {
          return;
        }
        this._target.remove(this._transformItems(payload.oldData));
      }
    }]);
    return SimpleDataPipe;
  }();
  /**
   * Internal implementation of the pipe factory. This should be accessible
   * only through `createNewDataPipeFrom` from the outside.
   *
   * @typeParam TI - Target item type.
   * @typeParam TP - Target item type's id property name.
   */
  var DataPipeUnderConstruction = /*#__PURE__*/function () {
    /**
     * Create a new data pipe factory. This is an internal constructor that
     * should never be called from outside of this file.
     *
     * @param _source - The source data set or data view for this pipe.
     */
    function DataPipeUnderConstruction(_source) {
      _classCallCheck(this, DataPipeUnderConstruction);
      /**
       * Array transformers used to transform items within the pipe. This is typed
       * as any for the sake of simplicity.
       */
      _defineProperty(this, "_transformers", []);
      this._source = _source;
    }
    /**
     * Filter the items.
     *
     * @param callback - A filtering function that returns true if given item
     * should be piped and false if not.
     * @returns This factory for further configuration.
     */
    _createClass(DataPipeUnderConstruction, [{
      key: "filter",
      value: function filter(callback) {
        this._transformers.push(function (input) {
          return _filterInstanceProperty(input).call(input, callback);
        });
        return this;
      }
      /**
       * Map each source item to a new type.
       *
       * @param callback - A mapping function that takes a source item and returns
       * corresponding mapped item.
       * @typeParam TI - Target item type.
       * @typeParam TP - Target item type's id property name.
       * @returns This factory for further configuration.
       */
    }, {
      key: "map",
      value: function map(callback) {
        this._transformers.push(function (input) {
          return _mapInstanceProperty(input).call(input, callback);
        });
        return this;
      }
      /**
       * Map each source item to zero or more items of a new type.
       *
       * @param callback - A mapping function that takes a source item and returns
       * an array of corresponding mapped items.
       * @typeParam TI - Target item type.
       * @typeParam TP - Target item type's id property name.
       * @returns This factory for further configuration.
       */
    }, {
      key: "flatMap",
      value: function flatMap(callback) {
        this._transformers.push(function (input) {
          return _flatMapInstanceProperty(input).call(input, callback);
        });
        return this;
      }
      /**
       * Connect this pipe to given data set.
       *
       * @param target - The data set that will receive the items from this pipe.
       * @returns The pipe connected between given data sets and performing
       * configured transformation on the processed items.
       */
    }, {
      key: "to",
      value: function to(target) {
        return new SimpleDataPipe(this._source, this._transformers, target);
      }
    }]);
    return DataPipeUnderConstruction;
  }();
  var call$a = functionCall;
  var anObject$7 = anObject$d;
  var getMethod$1 = getMethod$3;
  var iteratorClose$2 = function (iterator, kind, value) {
    var innerResult, innerError;
    anObject$7(iterator);
    try {
      innerResult = getMethod$1(iterator, 'return');
      if (!innerResult) {
        if (kind === 'throw') throw value;
        return value;
      }
      innerResult = call$a(innerResult, iterator);
    } catch (error) {
      innerError = true;
      innerResult = error;
    }
    if (kind === 'throw') throw value;
    if (innerError) throw innerResult;
    anObject$7(innerResult);
    return value;
  };
  var anObject$6 = anObject$d;
  var iteratorClose$1 = iteratorClose$2;

  // call something on iterator step with safe closing on error
  var callWithSafeIterationClosing$1 = function (iterator, fn, value, ENTRIES) {
    try {
      return ENTRIES ? fn(anObject$6(value)[0], value[1]) : fn(value);
    } catch (error) {
      iteratorClose$1(iterator, 'throw', error);
    }
  };
  var wellKnownSymbol$7 = wellKnownSymbol$n;
  var Iterators$1 = iterators;
  var ITERATOR$2 = wellKnownSymbol$7('iterator');
  var ArrayPrototype$b = Array.prototype;

  // check on default Array iterator
  var isArrayIteratorMethod$2 = function (it) {
    return it !== undefined && (Iterators$1.Array === it || ArrayPrototype$b[ITERATOR$2] === it);
  };
  var classof$5 = classof$d;
  var getMethod = getMethod$3;
  var isNullOrUndefined$3 = isNullOrUndefined$6;
  var Iterators = iterators;
  var wellKnownSymbol$6 = wellKnownSymbol$n;
  var ITERATOR$1 = wellKnownSymbol$6('iterator');
  var getIteratorMethod$9 = function (it) {
    if (!isNullOrUndefined$3(it)) return getMethod(it, ITERATOR$1) || getMethod(it, '@@iterator') || Iterators[classof$5(it)];
  };
  var call$9 = functionCall;
  var aCallable$7 = aCallable$e;
  var anObject$5 = anObject$d;
  var tryToString$3 = tryToString$6;
  var getIteratorMethod$8 = getIteratorMethod$9;
  var $TypeError$7 = TypeError;
  var getIterator$8 = function (argument, usingIterator) {
    var iteratorMethod = arguments.length < 2 ? getIteratorMethod$8(argument) : usingIterator;
    if (aCallable$7(iteratorMethod)) return anObject$5(call$9(iteratorMethod, argument));
    throw new $TypeError$7(tryToString$3(argument) + ' is not iterable');
  };
  var bind$9 = functionBindContext;
  var call$8 = functionCall;
  var toObject$6 = toObject$e;
  var callWithSafeIterationClosing = callWithSafeIterationClosing$1;
  var isArrayIteratorMethod$1 = isArrayIteratorMethod$2;
  var isConstructor$2 = isConstructor$4;
  var lengthOfArrayLike$5 = lengthOfArrayLike$d;
  var createProperty$3 = createProperty$6;
  var getIterator$7 = getIterator$8;
  var getIteratorMethod$7 = getIteratorMethod$9;
  var $Array$1 = Array;

  // `Array.from` method implementation
  // https://tc39.es/ecma262/#sec-array.from
  var arrayFrom = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = toObject$6(arrayLike);
    var IS_CONSTRUCTOR = isConstructor$2(this);
    var argumentsLength = arguments.length;
    var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    if (mapping) mapfn = bind$9(mapfn, argumentsLength > 2 ? arguments[2] : undefined);
    var iteratorMethod = getIteratorMethod$7(O);
    var index = 0;
    var length, result, step, iterator, next, value;
    // if the target is not iterable or it's an array with the default iterator - use a simple case
    if (iteratorMethod && !(this === $Array$1 && isArrayIteratorMethod$1(iteratorMethod))) {
      iterator = getIterator$7(O, iteratorMethod);
      next = iterator.next;
      result = IS_CONSTRUCTOR ? new this() : [];
      for (; !(step = call$8(next, iterator)).done; index++) {
        value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
        createProperty$3(result, index, value);
      }
    } else {
      length = lengthOfArrayLike$5(O);
      result = IS_CONSTRUCTOR ? new this(length) : $Array$1(length);
      for (; length > index; index++) {
        value = mapping ? mapfn(O[index], index) : O[index];
        createProperty$3(result, index, value);
      }
    }
    result.length = index;
    return result;
  };
  var wellKnownSymbol$5 = wellKnownSymbol$n;
  var ITERATOR = wellKnownSymbol$5('iterator');
  var SAFE_CLOSING = false;
  try {
    var called = 0;
    var iteratorWithReturn = {
      next: function () {
        return {
          done: !!called++
        };
      },
      'return': function () {
        SAFE_CLOSING = true;
      }
    };
    iteratorWithReturn[ITERATOR] = function () {
      return this;
    };
    // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing
    Array.from(iteratorWithReturn, function () {
      throw 2;
    });
  } catch (error) {/* empty */}
  var checkCorrectnessOfIteration$2 = function (exec, SKIP_CLOSING) {
    try {
      if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
    } catch (error) {
      return false;
    } // workaround of old WebKit + `eval` bug
    var ITERATION_SUPPORT = false;
    try {
      var object = {};
      object[ITERATOR] = function () {
        return {
          next: function () {
            return {
              done: ITERATION_SUPPORT = true
            };
          }
        };
      };
      exec(object);
    } catch (error) {/* empty */}
    return ITERATION_SUPPORT;
  };
  var $$y = _export;
  var from$6 = arrayFrom;
  var checkCorrectnessOfIteration$1 = checkCorrectnessOfIteration$2;
  var INCORRECT_ITERATION = !checkCorrectnessOfIteration$1(function (iterable) {
    // eslint-disable-next-line es/no-array-from -- required for testing
    Array.from(iterable);
  });

  // `Array.from` method
  // https://tc39.es/ecma262/#sec-array.from
  $$y({
    target: 'Array',
    stat: true,
    forced: INCORRECT_ITERATION
  }, {
    from: from$6
  });
  var path$h = path$o;
  var from$5 = path$h.Array.from;
  var parent$T = from$5;
  var from$4 = parent$T;
  var from$3 = from$4;
  var _Array$from$1 = /*@__PURE__*/getDefaultExportFromCjs(from$3);
  var getIteratorMethod$6 = getIteratorMethod$9;
  var getIteratorMethod_1 = getIteratorMethod$6;
  var parent$S = getIteratorMethod_1;
  var getIteratorMethod$5 = parent$S;
  var parent$R = getIteratorMethod$5;
  var getIteratorMethod$4 = parent$R;
  var parent$Q = getIteratorMethod$4;
  var getIteratorMethod$3 = parent$Q;
  var getIteratorMethod$2 = getIteratorMethod$3;
  var _getIteratorMethod$1 = /*@__PURE__*/getDefaultExportFromCjs(getIteratorMethod$2);
  var getIteratorMethod$1 = getIteratorMethod$2;
  var _getIteratorMethod = /*@__PURE__*/getDefaultExportFromCjs(getIteratorMethod$1);
  var $$x = _export;
  var isArray$9 = isArray$e;

  // `Array.isArray` method
  // https://tc39.es/ecma262/#sec-array.isarray
  $$x({
    target: 'Array',
    stat: true
  }, {
    isArray: isArray$9
  });
  var path$g = path$o;
  var isArray$8 = path$g.Array.isArray;
  var parent$P = isArray$8;
  var isArray$7 = parent$P;
  var parent$O = isArray$7;
  var isArray$6 = parent$O;
  var parent$N = isArray$6;
  var isArray$5 = parent$N;
  var isArray$4 = isArray$5;
  var _Array$isArray$1 = /*@__PURE__*/getDefaultExportFromCjs(isArray$4);
  function _arrayWithHoles(arr) {
    if (_Array$isArray$1(arr)) return arr;
  }
  var DESCRIPTORS$8 = descriptors;
  var isArray$3 = isArray$e;
  var $TypeError$6 = TypeError;
  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
  var getOwnPropertyDescriptor$5 = Object.getOwnPropertyDescriptor;

  // Safari < 13 does not throw an error in this case
  var SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS$8 && !function () {
    // makes no sense without proper strict mode support
    if (this !== undefined) return true;
    try {
      // eslint-disable-next-line es/no-object-defineproperty -- safe
      Object.defineProperty([], 'length', {
        writable: false
      }).length = 1;
    } catch (error) {
      return error instanceof TypeError;
    }
  }();
  var arraySetLength = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function (O, length) {
    if (isArray$3(O) && !getOwnPropertyDescriptor$5(O, 'length').writable) {
      throw new $TypeError$6('Cannot set read only .length');
    }
    return O.length = length;
  } : function (O, length) {
    return O.length = length;
  };
  var $$w = _export;
  var toObject$5 = toObject$e;
  var lengthOfArrayLike$4 = lengthOfArrayLike$d;
  var setArrayLength$1 = arraySetLength;
  var doesNotExceedSafeInteger$1 = doesNotExceedSafeInteger$4;
  var fails$d = fails$u;
  var INCORRECT_TO_LENGTH = fails$d(function () {
    return [].push.call({
      length: 0x100000000
    }, 1) !== 4294967297;
  });

  // V8 and Safari <= 15.4, FF < 23 throws InternalError
  // https://bugs.chromium.org/p/v8/issues/detail?id=12681
  var properErrorOnNonWritableLength = function () {
    try {
      // eslint-disable-next-line es/no-object-defineproperty -- safe
      Object.defineProperty([], 'length', {
        writable: false
      }).push();
    } catch (error) {
      return error instanceof TypeError;
    }
  };
  var FORCED$3 = INCORRECT_TO_LENGTH || !properErrorOnNonWritableLength();

  // `Array.prototype.push` method
  // https://tc39.es/ecma262/#sec-array.prototype.push
  $$w({
    target: 'Array',
    proto: true,
    arity: 1,
    forced: FORCED$3
  }, {
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    push: function push(item) {
      var O = toObject$5(this);
      var len = lengthOfArrayLike$4(O);
      var argCount = arguments.length;
      doesNotExceedSafeInteger$1(len + argCount);
      for (var i = 0; i < argCount; i++) {
        O[len] = arguments[i];
        len++;
      }
      setArrayLength$1(O, len);
      return len;
    }
  });
  var getBuiltInPrototypeMethod$a = getBuiltInPrototypeMethod$g;
  var push$8 = getBuiltInPrototypeMethod$a('Array', 'push');
  var isPrototypeOf$d = objectIsPrototypeOf;
  var method$a = push$8;
  var ArrayPrototype$a = Array.prototype;
  var push$7 = function (it) {
    var own = it.push;
    return it === ArrayPrototype$a || isPrototypeOf$d(ArrayPrototype$a, it) && own === ArrayPrototype$a.push ? method$a : own;
  };
  var parent$M = push$7;
  var push$6 = parent$M;
  var parent$L = push$6;
  var push$5 = parent$L;
  var parent$K = push$5;
  var push$4 = parent$K;
  var push$3 = push$4;
  var _pushInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(push$3);
  function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof _Symbol$1 && _getIteratorMethod$1(r) || r["@@iterator"];
    if (null != t) {
      var e,
        n,
        i,
        u,
        a = [],
        f = !0,
        o = !1;
      try {
        if (i = (t = t.call(r)).next, 0 === l) {
          if (Object(t) !== t) return;
          f = !1;
        } else for (; !(f = (e = i.call(t)).done) && (_pushInstanceProperty(a).call(a, e.value), a.length !== l); f = !0);
      } catch (r) {
        o = !0, n = r;
      } finally {
        try {
          if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
        } finally {
          if (o) throw n;
        }
      }
      return a;
    }
  }
  var $$v = _export;
  var isArray$2 = isArray$e;
  var isConstructor$1 = isConstructor$4;
  var isObject$7 = isObject$h;
  var toAbsoluteIndex$1 = toAbsoluteIndex$4;
  var lengthOfArrayLike$3 = lengthOfArrayLike$d;
  var toIndexedObject$2 = toIndexedObject$a;
  var createProperty$2 = createProperty$6;
  var wellKnownSymbol$4 = wellKnownSymbol$n;
  var arrayMethodHasSpeciesSupport$1 = arrayMethodHasSpeciesSupport$5;
  var nativeSlice = arraySlice$5;
  var HAS_SPECIES_SUPPORT$1 = arrayMethodHasSpeciesSupport$1('slice');
  var SPECIES$3 = wellKnownSymbol$4('species');
  var $Array = Array;
  var max$1 = Math.max;

  // `Array.prototype.slice` method
  // https://tc39.es/ecma262/#sec-array.prototype.slice
  // fallback for not array-like ES3 strings and DOM objects
  $$v({
    target: 'Array',
    proto: true,
    forced: !HAS_SPECIES_SUPPORT$1
  }, {
    slice: function slice(start, end) {
      var O = toIndexedObject$2(this);
      var length = lengthOfArrayLike$3(O);
      var k = toAbsoluteIndex$1(start, length);
      var fin = toAbsoluteIndex$1(end === undefined ? length : end, length);
      // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible
      var Constructor, result, n;
      if (isArray$2(O)) {
        Constructor = O.constructor;
        // cross-realm fallback
        if (isConstructor$1(Constructor) && (Constructor === $Array || isArray$2(Constructor.prototype))) {
          Constructor = undefined;
        } else if (isObject$7(Constructor)) {
          Constructor = Constructor[SPECIES$3];
          if (Constructor === null) Constructor = undefined;
        }
        if (Constructor === $Array || Constructor === undefined) {
          return nativeSlice(O, k, fin);
        }
      }
      result = new (Constructor === undefined ? $Array : Constructor)(max$1(fin - k, 0));
      for (n = 0; k < fin; k++, n++) if (k in O) createProperty$2(result, n, O[k]);
      result.length = n;
      return result;
    }
  });
  var getBuiltInPrototypeMethod$9 = getBuiltInPrototypeMethod$g;
  var slice$6 = getBuiltInPrototypeMethod$9('Array', 'slice');
  var isPrototypeOf$c = objectIsPrototypeOf;
  var method$9 = slice$6;
  var ArrayPrototype$9 = Array.prototype;
  var slice$5 = function (it) {
    var own = it.slice;
    return it === ArrayPrototype$9 || isPrototypeOf$c(ArrayPrototype$9, it) && own === ArrayPrototype$9.slice ? method$9 : own;
  };
  var parent$J = slice$5;
  var slice$4 = parent$J;
  var parent$I = slice$4;
  var slice$3 = parent$I;
  var parent$H = slice$3;
  var slice$2 = parent$H;
  var slice$1 = slice$2;
  var _sliceInstanceProperty$1 = /*@__PURE__*/getDefaultExportFromCjs(slice$1);
  var parent$G = from$4;
  var from$2 = parent$G;
  var parent$F = from$2;
  var from$1 = parent$F;
  var from = from$1;
  var _Array$from = /*@__PURE__*/getDefaultExportFromCjs(from);
  function _arrayLikeToArray$4(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
    return arr2;
  }
  function _unsupportedIterableToArray$4(o, minLen) {
    var _context;
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray$4(o, minLen);
    var n = _sliceInstanceProperty$1(_context = Object.prototype.toString.call(o)).call(_context, 8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return _Array$from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$4(o, minLen);
  }
  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray$4(arr, i) || _nonIterableRest();
  }
  function _arrayWithoutHoles(arr) {
    if (_Array$isArray$1(arr)) return _arrayLikeToArray$4(arr);
  }
  function _iterableToArray(iter) {
    if (typeof _Symbol$1 !== "undefined" && _getIteratorMethod$1(iter) != null || iter["@@iterator"] != null) return _Array$from(iter);
  }
  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray$4(arr) || _nonIterableSpread();
  }
  var symbol = symbol$4;
  var _Symbol = /*@__PURE__*/getDefaultExportFromCjs(symbol);
  var getBuiltInPrototypeMethod$8 = getBuiltInPrototypeMethod$g;
  var concat$5 = getBuiltInPrototypeMethod$8('Array', 'concat');
  var isPrototypeOf$b = objectIsPrototypeOf;
  var method$8 = concat$5;
  var ArrayPrototype$8 = Array.prototype;
  var concat$4 = function (it) {
    var own = it.concat;
    return it === ArrayPrototype$8 || isPrototypeOf$b(ArrayPrototype$8, it) && own === ArrayPrototype$8.concat ? method$8 : own;
  };
  var parent$E = concat$4;
  var concat$3 = parent$E;
  var concat$2 = concat$3;
  var _concatInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(concat$2);
  var slice = slice$4;
  var _sliceInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(slice);
  var getBuiltIn$5 = getBuiltIn$f;
  var uncurryThis$5 = functionUncurryThis;
  var getOwnPropertyNamesModule$1 = objectGetOwnPropertyNames;
  var getOwnPropertySymbolsModule$1 = objectGetOwnPropertySymbols;
  var anObject$4 = anObject$d;
  var concat$1 = uncurryThis$5([].concat);

  // all object keys, includes non-enumerable and symbols
  var ownKeys$7 = getBuiltIn$5('Reflect', 'ownKeys') || function ownKeys(it) {
    var keys = getOwnPropertyNamesModule$1.f(anObject$4(it));
    var getOwnPropertySymbols = getOwnPropertySymbolsModule$1.f;
    return getOwnPropertySymbols ? concat$1(keys, getOwnPropertySymbols(it)) : keys;
  };
  var $$u = _export;
  var ownKeys$6 = ownKeys$7;

  // `Reflect.ownKeys` method
  // https://tc39.es/ecma262/#sec-reflect.ownkeys
  $$u({
    target: 'Reflect',
    stat: true
  }, {
    ownKeys: ownKeys$6
  });
  var path$f = path$o;
  var ownKeys$5 = path$f.Reflect.ownKeys;
  var parent$D = ownKeys$5;
  var ownKeys$4 = parent$D;
  var ownKeys$3 = ownKeys$4;
  var _Reflect$ownKeys = /*@__PURE__*/getDefaultExportFromCjs(ownKeys$3);
  var isArray$1 = isArray$7;
  var _Array$isArray = /*@__PURE__*/getDefaultExportFromCjs(isArray$1);
  var $$t = _export;
  var toObject$4 = toObject$e;
  var nativeKeys = objectKeys$3;
  var fails$c = fails$u;
  var FAILS_ON_PRIMITIVES$2 = fails$c(function () {
    nativeKeys(1);
  });

  // `Object.keys` method
  // https://tc39.es/ecma262/#sec-object.keys
  $$t({
    target: 'Object',
    stat: true,
    forced: FAILS_ON_PRIMITIVES$2
  }, {
    keys: function keys(it) {
      return nativeKeys(toObject$4(it));
    }
  });
  var path$e = path$o;
  var keys$6 = path$e.Object.keys;
  var parent$C = keys$6;
  var keys$5 = parent$C;
  var keys$4 = keys$5;
  var _Object$keys = /*@__PURE__*/getDefaultExportFromCjs(keys$4);
  var $forEach = arrayIteration.forEach;
  var arrayMethodIsStrict$2 = arrayMethodIsStrict$4;
  var STRICT_METHOD$2 = arrayMethodIsStrict$2('forEach');

  // `Array.prototype.forEach` method implementation
  // https://tc39.es/ecma262/#sec-array.prototype.foreach
  var arrayForEach = !STRICT_METHOD$2 ? function forEach(callbackfn /* , thisArg */) {
    return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    // eslint-disable-next-line es/no-array-prototype-foreach -- safe
  } : [].forEach;
  var $$s = _export;
  var forEach$8 = arrayForEach;

  // `Array.prototype.forEach` method
  // https://tc39.es/ecma262/#sec-array.prototype.foreach
  // eslint-disable-next-line es/no-array-prototype-foreach -- safe
  $$s({
    target: 'Array',
    proto: true,
    forced: [].forEach !== forEach$8
  }, {
    forEach: forEach$8
  });
  var getBuiltInPrototypeMethod$7 = getBuiltInPrototypeMethod$g;
  var forEach$7 = getBuiltInPrototypeMethod$7('Array', 'forEach');
  var parent$B = forEach$7;
  var forEach$6 = parent$B;
  var classof$4 = classof$d;
  var hasOwn$6 = hasOwnProperty_1;
  var isPrototypeOf$a = objectIsPrototypeOf;
  var method$7 = forEach$6;
  var ArrayPrototype$7 = Array.prototype;
  var DOMIterables$3 = {
    DOMTokenList: true,
    NodeList: true
  };
  var forEach$5 = function (it) {
    var own = it.forEach;
    return it === ArrayPrototype$7 || isPrototypeOf$a(ArrayPrototype$7, it) && own === ArrayPrototype$7.forEach || hasOwn$6(DOMIterables$3, classof$4(it)) ? method$7 : own;
  };
  var forEach$4 = forEach$5;
  var _forEachInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(forEach$4);
  var $$r = _export;
  var uncurryThis$4 = functionUncurryThis;
  var isArray = isArray$e;
  var nativeReverse = uncurryThis$4([].reverse);
  var test$1 = [1, 2];

  // `Array.prototype.reverse` method
  // https://tc39.es/ecma262/#sec-array.prototype.reverse
  // fix for Safari 12.0 bug
  // https://bugs.webkit.org/show_bug.cgi?id=188794
  $$r({
    target: 'Array',
    proto: true,
    forced: String(test$1) === String(test$1.reverse())
  }, {
    reverse: function reverse() {
      // eslint-disable-next-line no-self-assign -- dirty hack
      if (isArray(this)) this.length = this.length;
      return nativeReverse(this);
    }
  });
  var getBuiltInPrototypeMethod$6 = getBuiltInPrototypeMethod$g;
  var reverse$6 = getBuiltInPrototypeMethod$6('Array', 'reverse');
  var isPrototypeOf$9 = objectIsPrototypeOf;
  var method$6 = reverse$6;
  var ArrayPrototype$6 = Array.prototype;
  var reverse$5 = function (it) {
    var own = it.reverse;
    return it === ArrayPrototype$6 || isPrototypeOf$9(ArrayPrototype$6, it) && own === ArrayPrototype$6.reverse ? method$6 : own;
  };
  var parent$A = reverse$5;
  var reverse$4 = parent$A;
  var reverse$3 = reverse$4;
  var _reverseInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(reverse$3);
  var tryToString$2 = tryToString$6;
  var $TypeError$5 = TypeError;
  var deletePropertyOrThrow$2 = function (O, P) {
    if (!delete O[P]) throw new $TypeError$5('Cannot delete property ' + tryToString$2(P) + ' of ' + tryToString$2(O));
  };
  var $$q = _export;
  var toObject$3 = toObject$e;
  var toAbsoluteIndex = toAbsoluteIndex$4;
  var toIntegerOrInfinity = toIntegerOrInfinity$4;
  var lengthOfArrayLike$2 = lengthOfArrayLike$d;
  var setArrayLength = arraySetLength;
  var doesNotExceedSafeInteger = doesNotExceedSafeInteger$4;
  var arraySpeciesCreate = arraySpeciesCreate$4;
  var createProperty$1 = createProperty$6;
  var deletePropertyOrThrow$1 = deletePropertyOrThrow$2;
  var arrayMethodHasSpeciesSupport = arrayMethodHasSpeciesSupport$5;
  var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');
  var max = Math.max;
  var min = Math.min;

  // `Array.prototype.splice` method
  // https://tc39.es/ecma262/#sec-array.prototype.splice
  // with adding support of @@species
  $$q({
    target: 'Array',
    proto: true,
    forced: !HAS_SPECIES_SUPPORT
  }, {
    splice: function splice(start, deleteCount /* , ...items */) {
      var O = toObject$3(this);
      var len = lengthOfArrayLike$2(O);
      var actualStart = toAbsoluteIndex(start, len);
      var argumentsLength = arguments.length;
      var insertCount, actualDeleteCount, A, k, from, to;
      if (argumentsLength === 0) {
        insertCount = actualDeleteCount = 0;
      } else if (argumentsLength === 1) {
        insertCount = 0;
        actualDeleteCount = len - actualStart;
      } else {
        insertCount = argumentsLength - 2;
        actualDeleteCount = min(max(toIntegerOrInfinity(deleteCount), 0), len - actualStart);
      }
      doesNotExceedSafeInteger(len + insertCount - actualDeleteCount);
      A = arraySpeciesCreate(O, actualDeleteCount);
      for (k = 0; k < actualDeleteCount; k++) {
        from = actualStart + k;
        if (from in O) createProperty$1(A, k, O[from]);
      }
      A.length = actualDeleteCount;
      if (insertCount < actualDeleteCount) {
        for (k = actualStart; k < len - actualDeleteCount; k++) {
          from = k + actualDeleteCount;
          to = k + insertCount;
          if (from in O) O[to] = O[from];else deletePropertyOrThrow$1(O, to);
        }
        for (k = len; k > len - actualDeleteCount + insertCount; k--) deletePropertyOrThrow$1(O, k - 1);
      } else if (insertCount > actualDeleteCount) {
        for (k = len - actualDeleteCount; k > actualStart; k--) {
          from = k + actualDeleteCount - 1;
          to = k + insertCount - 1;
          if (from in O) O[to] = O[from];else deletePropertyOrThrow$1(O, to);
        }
      }
      for (k = 0; k < insertCount; k++) {
        O[k + actualStart] = arguments[k + 2];
      }
      setArrayLength(O, len - actualDeleteCount + insertCount);
      return A;
    }
  });
  var getBuiltInPrototypeMethod$5 = getBuiltInPrototypeMethod$g;
  var splice$3 = getBuiltInPrototypeMethod$5('Array', 'splice');
  var isPrototypeOf$8 = objectIsPrototypeOf;
  var method$5 = splice$3;
  var ArrayPrototype$5 = Array.prototype;
  var splice$2 = function (it) {
    var own = it.splice;
    return it === ArrayPrototype$5 || isPrototypeOf$8(ArrayPrototype$5, it) && own === ArrayPrototype$5.splice ? method$5 : own;
  };
  var parent$z = splice$2;
  var splice$1 = parent$z;
  var splice = splice$1;
  var _spliceInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(splice);
  var DESCRIPTORS$7 = descriptors;
  var uncurryThis$3 = functionUncurryThis;
  var call$7 = functionCall;
  var fails$b = fails$u;
  var objectKeys = objectKeys$3;
  var getOwnPropertySymbolsModule = objectGetOwnPropertySymbols;
  var propertyIsEnumerableModule = objectPropertyIsEnumerable;
  var toObject$2 = toObject$e;
  var IndexedObject = indexedObject;

  // eslint-disable-next-line es/no-object-assign -- safe
  var $assign = Object.assign;
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  var defineProperty$3 = Object.defineProperty;
  var concat = uncurryThis$3([].concat);

  // `Object.assign` method
  // https://tc39.es/ecma262/#sec-object.assign
  var objectAssign = !$assign || fails$b(function () {
    // should have correct order of operations (Edge bug)
    if (DESCRIPTORS$7 && $assign({
      b: 1
    }, $assign(defineProperty$3({}, 'a', {
      enumerable: true,
      get: function () {
        defineProperty$3(this, 'b', {
          value: 3,
          enumerable: false
        });
      }
    }), {
      b: 2
    })).b !== 1) return true;
    // should work with symbols and should have deterministic property order (V8 bug)
    var A = {};
    var B = {};
    // eslint-disable-next-line es/no-symbol -- safe
    var symbol = Symbol('assign detection');
    var alphabet = 'abcdefghijklmnopqrst';
    A[symbol] = 7;
    alphabet.split('').forEach(function (chr) {
      B[chr] = chr;
    });
    return $assign({}, A)[symbol] !== 7 || objectKeys($assign({}, B)).join('') !== alphabet;
  }) ? function assign(target, source) {
    // eslint-disable-line no-unused-vars -- required for `.length`
    var T = toObject$2(target);
    var argumentsLength = arguments.length;
    var index = 1;
    var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
    var propertyIsEnumerable = propertyIsEnumerableModule.f;
    while (argumentsLength > index) {
      var S = IndexedObject(arguments[index++]);
      var keys = getOwnPropertySymbols ? concat(objectKeys(S), getOwnPropertySymbols(S)) : objectKeys(S);
      var length = keys.length;
      var j = 0;
      var key;
      while (length > j) {
        key = keys[j++];
        if (!DESCRIPTORS$7 || call$7(propertyIsEnumerable, S, key)) T[key] = S[key];
      }
    }
    return T;
  } : $assign;
  var $$p = _export;
  var assign$5 = objectAssign;

  // `Object.assign` method
  // https://tc39.es/ecma262/#sec-object.assign
  // eslint-disable-next-line es/no-object-assign -- required for testing
  $$p({
    target: 'Object',
    stat: true,
    arity: 2,
    forced: Object.assign !== assign$5
  }, {
    assign: assign$5
  });
  var path$d = path$o;
  var assign$4 = path$d.Object.assign;
  var parent$y = assign$4;
  var assign$3 = parent$y;
  var assign$2 = assign$3;
  var _Object$assign = /*@__PURE__*/getDefaultExportFromCjs(assign$2);
  var $$o = _export;
  var fails$a = fails$u;
  var toObject$1 = toObject$e;
  var nativeGetPrototypeOf = objectGetPrototypeOf;
  var CORRECT_PROTOTYPE_GETTER = correctPrototypeGetter;
  var FAILS_ON_PRIMITIVES$1 = fails$a(function () {
    nativeGetPrototypeOf(1);
  });

  // `Object.getPrototypeOf` method
  // https://tc39.es/ecma262/#sec-object.getprototypeof
  $$o({
    target: 'Object',
    stat: true,
    forced: FAILS_ON_PRIMITIVES$1,
    sham: !CORRECT_PROTOTYPE_GETTER
  }, {
    getPrototypeOf: function getPrototypeOf(it) {
      return nativeGetPrototypeOf(toObject$1(it));
    }
  });
  var path$c = path$o;
  var getPrototypeOf$5 = path$c.Object.getPrototypeOf;
  var parent$x = getPrototypeOf$5;
  var getPrototypeOf$4 = parent$x;

  // TODO: Remove from `core-js@4`
  var $$n = _export;
  var DESCRIPTORS$6 = descriptors;
  var create$9 = objectCreate;

  // `Object.create` method
  // https://tc39.es/ecma262/#sec-object.create
  $$n({
    target: 'Object',
    stat: true,
    sham: !DESCRIPTORS$6
  }, {
    create: create$9
  });
  var path$b = path$o;
  var Object$3 = path$b.Object;
  var create$8 = function create(P, D) {
    return Object$3.create(P, D);
  };
  var parent$w = create$8;
  var create$7 = parent$w;
  var create$6 = create$7;
  var _Object$create$1 = /*@__PURE__*/getDefaultExportFromCjs(create$6);
  var path$a = path$o;
  var apply$3 = functionApply;

  // eslint-disable-next-line es/no-json -- safe
  if (!path$a.JSON) path$a.JSON = {
    stringify: JSON.stringify
  };

  // eslint-disable-next-line no-unused-vars -- required for `.length`
  var stringify$2 = function stringify(it, replacer, space) {
    return apply$3(path$a.JSON.stringify, null, arguments);
  };
  var parent$v = stringify$2;
  var stringify$1 = parent$v;
  var stringify = stringify$1;
  var _JSON$stringify = /*@__PURE__*/getDefaultExportFromCjs(stringify);

  /* global Bun -- Deno case */
  var engineIsBun = typeof Bun == 'function' && Bun && typeof Bun.version == 'string';
  var $TypeError$4 = TypeError;
  var validateArgumentsLength$2 = function (passed, required) {
    if (passed < required) throw new $TypeError$4('Not enough arguments');
    return passed;
  };
  var global$9 = global$p;
  var apply$2 = functionApply;
  var isCallable$5 = isCallable$m;
  var ENGINE_IS_BUN = engineIsBun;
  var USER_AGENT = engineUserAgent;
  var arraySlice$2 = arraySlice$5;
  var validateArgumentsLength$1 = validateArgumentsLength$2;
  var Function$2 = global$9.Function;
  // dirty IE9- and Bun 0.3.0- checks
  var WRAP = /MSIE .\./.test(USER_AGENT) || ENGINE_IS_BUN && function () {
    var version = global$9.Bun.version.split('.');
    return version.length < 3 || version[0] === '0' && (version[1] < 3 || version[1] === '3' && version[2] === '0');
  }();

  // IE9- / Bun 0.3.0- setTimeout / setInterval / setImmediate additional parameters fix
  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timers
  // https://github.com/oven-sh/bun/issues/1633
  var schedulersFix$2 = function (scheduler, hasTimeArg) {
    var firstParamIndex = hasTimeArg ? 2 : 1;
    return WRAP ? function (handler, timeout /* , ...arguments */) {
      var boundArgs = validateArgumentsLength$1(arguments.length, 1) > firstParamIndex;
      var fn = isCallable$5(handler) ? handler : Function$2(handler);
      var params = boundArgs ? arraySlice$2(arguments, firstParamIndex) : [];
      var callback = boundArgs ? function () {
        apply$2(fn, this, params);
      } : fn;
      return hasTimeArg ? scheduler(callback, timeout) : scheduler(callback);
    } : scheduler;
  };
  var $$m = _export;
  var global$8 = global$p;
  var schedulersFix$1 = schedulersFix$2;
  var setInterval = schedulersFix$1(global$8.setInterval, true);

  // Bun / IE9- setInterval additional parameters fix
  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-setinterval
  $$m({
    global: true,
    bind: true,
    forced: global$8.setInterval !== setInterval
  }, {
    setInterval: setInterval
  });
  var $$l = _export;
  var global$7 = global$p;
  var schedulersFix = schedulersFix$2;
  var setTimeout$3 = schedulersFix(global$7.setTimeout, true);

  // Bun / IE9- setTimeout additional parameters fix
  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-settimeout
  $$l({
    global: true,
    bind: true,
    forced: global$7.setTimeout !== setTimeout$3
  }, {
    setTimeout: setTimeout$3
  });
  var path$9 = path$o;
  var setTimeout$2 = path$9.setTimeout;
  var setTimeout$1 = setTimeout$2;
  var _setTimeout = /*@__PURE__*/getDefaultExportFromCjs(setTimeout$1);
  var componentEmitter = {
    exports: {}
  };
  (function (module) {
    function Emitter(object) {
      if (object) {
        return mixin(object);
      }
      this._callbacks = new Map();
    }
    function mixin(object) {
      Object.assign(object, Emitter.prototype);
      object._callbacks = new Map();
      return object;
    }
    Emitter.prototype.on = function (event, listener) {
      const callbacks = this._callbacks.get(event) ?? [];
      callbacks.push(listener);
      this._callbacks.set(event, callbacks);
      return this;
    };
    Emitter.prototype.once = function (event, listener) {
      const on = (...arguments_) => {
        this.off(event, on);
        listener.apply(this, arguments_);
      };
      on.fn = listener;
      this.on(event, on);
      return this;
    };
    Emitter.prototype.off = function (event, listener) {
      if (event === undefined && listener === undefined) {
        this._callbacks.clear();
        return this;
      }
      if (listener === undefined) {
        this._callbacks.delete(event);
        return this;
      }
      const callbacks = this._callbacks.get(event);
      if (callbacks) {
        for (const [index, callback] of callbacks.entries()) {
          if (callback === listener || callback.fn === listener) {
            callbacks.splice(index, 1);
            break;
          }
        }
        if (callbacks.length === 0) {
          this._callbacks.delete(event);
        } else {
          this._callbacks.set(event, callbacks);
        }
      }
      return this;
    };
    Emitter.prototype.emit = function (event, ...arguments_) {
      const callbacks = this._callbacks.get(event);
      if (callbacks) {
        // Create a copy of the callbacks array to avoid issues if it's modified during iteration
        const callbacksCopy = [...callbacks];
        for (const callback of callbacksCopy) {
          callback.apply(this, arguments_);
        }
      }
      return this;
    };
    Emitter.prototype.listeners = function (event) {
      return this._callbacks.get(event) ?? [];
    };
    Emitter.prototype.listenerCount = function (event) {
      if (event) {
        return this.listeners(event).length;
      }
      let totalCount = 0;
      for (const callbacks of this._callbacks.values()) {
        totalCount += callbacks.length;
      }
      return totalCount;
    };
    Emitter.prototype.hasListeners = function (event) {
      return this.listenerCount(event) > 0;
    };

    // Aliases
    Emitter.prototype.addEventListener = Emitter.prototype.on;
    Emitter.prototype.removeListener = Emitter.prototype.off;
    Emitter.prototype.removeEventListener = Emitter.prototype.off;
    Emitter.prototype.removeAllListeners = Emitter.prototype.off;
    {
      module.exports = Emitter;
    }
  })(componentEmitter);
  var componentEmitterExports = componentEmitter.exports;
  var Emitter = /*@__PURE__*/getDefaultExportFromCjs(componentEmitterExports);

  /*! Hammer.JS - v2.0.17-rc - 2019-12-16
   * http://naver.github.io/egjs
   *
   * Forked By Naver egjs
   * Copyright (c) hammerjs
   * Licensed under the MIT license */
  function _extends() {
    _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends.apply(this, arguments);
  }
  function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }
  function _assertThisInitialized$1(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
  }

  /**
   * @private
   * extend object.
   * means that properties in dest will be overwritten by the ones in src.
   * @param {Object} target
   * @param {...Object} objects_to_assign
   * @returns {Object} target
   */
  var assign;
  if (typeof Object.assign !== 'function') {
    assign = function assign(target) {
      if (target === undefined || target === null) {
        throw new TypeError('Cannot convert undefined or null to object');
      }
      var output = Object(target);
      for (var index = 1; index < arguments.length; index++) {
        var source = arguments[index];
        if (source !== undefined && source !== null) {
          for (var nextKey in source) {
            if (source.hasOwnProperty(nextKey)) {
              output[nextKey] = source[nextKey];
            }
          }
        }
      }
      return output;
    };
  } else {
    assign = Object.assign;
  }
  var assign$1 = assign;
  var VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];
  var TEST_ELEMENT = typeof document === "undefined" ? {
    style: {}
  } : document.createElement('div');
  var TYPE_FUNCTION = 'function';
  var round = Math.round,
    abs = Math.abs;
  var now = Date.now;

  /**
   * @private
   * get the prefixed property
   * @param {Object} obj
   * @param {String} property
   * @returns {String|Undefined} prefixed
   */

  function prefixed(obj, property) {
    var prefix;
    var prop;
    var camelProp = property[0].toUpperCase() + property.slice(1);
    var i = 0;
    while (i < VENDOR_PREFIXES.length) {
      prefix = VENDOR_PREFIXES[i];
      prop = prefix ? prefix + camelProp : property;
      if (prop in obj) {
        return prop;
      }
      i++;
    }
    return undefined;
  }

  /* eslint-disable no-new-func, no-nested-ternary */
  var win;
  if (typeof window === "undefined") {
    // window is undefined in node.js
    win = {};
  } else {
    win = window;
  }
  var PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');
  var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;
  function getTouchActionProps() {
    if (!NATIVE_TOUCH_ACTION) {
      return false;
    }
    var touchMap = {};
    var cssSupports = win.CSS && win.CSS.supports;
    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function (val) {
      // If css.supports is not supported but there is native touch-action assume it supports
      // all values. This is the case for IE 10 and 11.
      return touchMap[val] = cssSupports ? win.CSS.supports('touch-action', val) : true;
    });
    return touchMap;
  }
  var TOUCH_ACTION_COMPUTE = 'compute';
  var TOUCH_ACTION_AUTO = 'auto';
  var TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented

  var TOUCH_ACTION_NONE = 'none';
  var TOUCH_ACTION_PAN_X = 'pan-x';
  var TOUCH_ACTION_PAN_Y = 'pan-y';
  var TOUCH_ACTION_MAP = getTouchActionProps();
  var MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;
  var SUPPORT_TOUCH = ('ontouchstart' in win);
  var SUPPORT_POINTER_EVENTS = prefixed(win, 'PointerEvent') !== undefined;
  var SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);
  var INPUT_TYPE_TOUCH = 'touch';
  var INPUT_TYPE_PEN = 'pen';
  var INPUT_TYPE_MOUSE = 'mouse';
  var INPUT_TYPE_KINECT = 'kinect';
  var COMPUTE_INTERVAL = 25;
  var INPUT_START = 1;
  var INPUT_MOVE = 2;
  var INPUT_END = 4;
  var INPUT_CANCEL = 8;
  var DIRECTION_NONE = 1;
  var DIRECTION_LEFT = 2;
  var DIRECTION_RIGHT = 4;
  var DIRECTION_UP = 8;
  var DIRECTION_DOWN = 16;
  var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;
  var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;
  var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;
  var PROPS_XY = ['x', 'y'];
  var PROPS_CLIENT_XY = ['clientX', 'clientY'];

  /**
   * @private
   * walk objects and arrays
   * @param {Object} obj
   * @param {Function} iterator
   * @param {Object} context
   */
  function each(obj, iterator, context) {
    var i;
    if (!obj) {
      return;
    }
    if (obj.forEach) {
      obj.forEach(iterator, context);
    } else if (obj.length !== undefined) {
      i = 0;
      while (i < obj.length) {
        iterator.call(context, obj[i], i, obj);
        i++;
      }
    } else {
      for (i in obj) {
        obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);
      }
    }
  }

  /**
   * @private
   * let a boolean value also be a function that must return a boolean
   * this first item in args will be used as the context
   * @param {Boolean|Function} val
   * @param {Array} [args]
   * @returns {Boolean}
   */

  function boolOrFn(val, args) {
    if (typeof val === TYPE_FUNCTION) {
      return val.apply(args ? args[0] || undefined : undefined, args);
    }
    return val;
  }

  /**
   * @private
   * small indexOf wrapper
   * @param {String} str
   * @param {String} find
   * @returns {Boolean} found
   */
  function inStr(str, find) {
    return str.indexOf(find) > -1;
  }

  /**
   * @private
   * when the touchActions are collected they are not a valid value, so we need to clean things up. *
   * @param {String} actions
   * @returns {*}
   */

  function cleanTouchActions(actions) {
    // none
    if (inStr(actions, TOUCH_ACTION_NONE)) {
      return TOUCH_ACTION_NONE;
    }
    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);
    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y); // if both pan-x and pan-y are set (different recognizers
    // for different directions, e.g. horizontal pan but vertical swipe?)
    // we need none (as otherwise with pan-x pan-y combined none of these
    // recognizers will work, since the browser would handle all panning

    if (hasPanX && hasPanY) {
      return TOUCH_ACTION_NONE;
    } // pan-x OR pan-y

    if (hasPanX || hasPanY) {
      return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;
    } // manipulation

    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {
      return TOUCH_ACTION_MANIPULATION;
    }
    return TOUCH_ACTION_AUTO;
  }

  /**
   * @private
   * Touch Action
   * sets the touchAction property or uses the js alternative
   * @param {Manager} manager
   * @param {String} value
   * @constructor
   */

  var TouchAction = /*#__PURE__*/
  function () {
    function TouchAction(manager, value) {
      this.manager = manager;
      this.set(value);
    }
    /**
     * @private
     * set the touchAction value on the element or enable the polyfill
     * @param {String} value
     */

    var _proto = TouchAction.prototype;
    _proto.set = function set(value) {
      // find out the touch-action by the event handlers
      if (value === TOUCH_ACTION_COMPUTE) {
        value = this.compute();
      }
      if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {
        this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;
      }
      this.actions = value.toLowerCase().trim();
    };
    /**
     * @private
     * just re-set the touchAction value
     */

    _proto.update = function update() {
      this.set(this.manager.options.touchAction);
    };
    /**
     * @private
     * compute the value for the touchAction property based on the recognizer's settings
     * @returns {String} value
     */

    _proto.compute = function compute() {
      var actions = [];
      each(this.manager.recognizers, function (recognizer) {
        if (boolOrFn(recognizer.options.enable, [recognizer])) {
          actions = actions.concat(recognizer.getTouchAction());
        }
      });
      return cleanTouchActions(actions.join(' '));
    };
    /**
     * @private
     * this method is called on each input cycle and provides the preventing of the browser behavior
     * @param {Object} input
     */

    _proto.preventDefaults = function preventDefaults(input) {
      var srcEvent = input.srcEvent;
      var direction = input.offsetDirection; // if the touch action did prevented once this session

      if (this.manager.session.prevented) {
        srcEvent.preventDefault();
        return;
      }
      var actions = this.actions;
      var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];
      var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];
      var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];
      if (hasNone) {
        // do not prevent defaults if this is a tap gesture
        var isTapPointer = input.pointers.length === 1;
        var isTapMovement = input.distance < 2;
        var isTapTouchTime = input.deltaTime < 250;
        if (isTapPointer && isTapMovement && isTapTouchTime) {
          return;
        }
      }
      if (hasPanX && hasPanY) {
        // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent
        return;
      }
      if (hasNone || hasPanY && direction & DIRECTION_HORIZONTAL || hasPanX && direction & DIRECTION_VERTICAL) {
        return this.preventSrc(srcEvent);
      }
    };
    /**
     * @private
     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)
     * @param {Object} srcEvent
     */

    _proto.preventSrc = function preventSrc(srcEvent) {
      this.manager.session.prevented = true;
      srcEvent.preventDefault();
    };
    return TouchAction;
  }();

  /**
   * @private
   * find if a node is in the given parent
   * @method hasParent
   * @param {HTMLElement} node
   * @param {HTMLElement} parent
   * @return {Boolean} found
   */
  function hasParent(node, parent) {
    while (node) {
      if (node === parent) {
        return true;
      }
      node = node.parentNode;
    }
    return false;
  }

  /**
   * @private
   * get the center of all the pointers
   * @param {Array} pointers
   * @return {Object} center contains `x` and `y` properties
   */

  function getCenter(pointers) {
    var pointersLength = pointers.length; // no need to loop when only one touch

    if (pointersLength === 1) {
      return {
        x: round(pointers[0].clientX),
        y: round(pointers[0].clientY)
      };
    }
    var x = 0;
    var y = 0;
    var i = 0;
    while (i < pointersLength) {
      x += pointers[i].clientX;
      y += pointers[i].clientY;
      i++;
    }
    return {
      x: round(x / pointersLength),
      y: round(y / pointersLength)
    };
  }

  /**
   * @private
   * create a simple clone from the input used for storage of firstInput and firstMultiple
   * @param {Object} input
   * @returns {Object} clonedInputData
   */

  function simpleCloneInputData(input) {
    // make a simple copy of the pointers because we will get a reference if we don't
    // we only need clientXY for the calculations
    var pointers = [];
    var i = 0;
    while (i < input.pointers.length) {
      pointers[i] = {
        clientX: round(input.pointers[i].clientX),
        clientY: round(input.pointers[i].clientY)
      };
      i++;
    }
    return {
      timeStamp: now(),
      pointers: pointers,
      center: getCenter(pointers),
      deltaX: input.deltaX,
      deltaY: input.deltaY
    };
  }

  /**
   * @private
   * calculate the absolute distance between two points
   * @param {Object} p1 {x, y}
   * @param {Object} p2 {x, y}
   * @param {Array} [props] containing x and y keys
   * @return {Number} distance
   */

  function getDistance(p1, p2, props) {
    if (!props) {
      props = PROPS_XY;
    }
    var x = p2[props[0]] - p1[props[0]];
    var y = p2[props[1]] - p1[props[1]];
    return Math.sqrt(x * x + y * y);
  }

  /**
   * @private
   * calculate the angle between two coordinates
   * @param {Object} p1
   * @param {Object} p2
   * @param {Array} [props] containing x and y keys
   * @return {Number} angle
   */

  function getAngle(p1, p2, props) {
    if (!props) {
      props = PROPS_XY;
    }
    var x = p2[props[0]] - p1[props[0]];
    var y = p2[props[1]] - p1[props[1]];
    return Math.atan2(y, x) * 180 / Math.PI;
  }

  /**
   * @private
   * get the direction between two points
   * @param {Number} x
   * @param {Number} y
   * @return {Number} direction
   */

  function getDirection(x, y) {
    if (x === y) {
      return DIRECTION_NONE;
    }
    if (abs(x) >= abs(y)) {
      return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;
    }
    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;
  }
  function computeDeltaXY(session, input) {
    var center = input.center; // let { offsetDelta:offset = {}, prevDelta = {}, prevInput = {} } = session;
    // jscs throwing error on defalut destructured values and without defaults tests fail

    var offset = session.offsetDelta || {};
    var prevDelta = session.prevDelta || {};
    var prevInput = session.prevInput || {};
    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {
      prevDelta = session.prevDelta = {
        x: prevInput.deltaX || 0,
        y: prevInput.deltaY || 0
      };
      offset = session.offsetDelta = {
        x: center.x,
        y: center.y
      };
    }
    input.deltaX = prevDelta.x + (center.x - offset.x);
    input.deltaY = prevDelta.y + (center.y - offset.y);
  }

  /**
   * @private
   * calculate the velocity between two points. unit is in px per ms.
   * @param {Number} deltaTime
   * @param {Number} x
   * @param {Number} y
   * @return {Object} velocity `x` and `y`
   */
  function getVelocity(deltaTime, x, y) {
    return {
      x: x / deltaTime || 0,
      y: y / deltaTime || 0
    };
  }

  /**
   * @private
   * calculate the scale factor between two pointersets
   * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out
   * @param {Array} start array of pointers
   * @param {Array} end array of pointers
   * @return {Number} scale
   */

  function getScale(start, end) {
    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);
  }

  /**
   * @private
   * calculate the rotation degrees between two pointersets
   * @param {Array} start array of pointers
   * @param {Array} end array of pointers
   * @return {Number} rotation
   */

  function getRotation(start, end) {
    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);
  }

  /**
   * @private
   * velocity is calculated every x ms
   * @param {Object} session
   * @param {Object} input
   */

  function computeIntervalInputData(session, input) {
    var last = session.lastInterval || input;
    var deltaTime = input.timeStamp - last.timeStamp;
    var velocity;
    var velocityX;
    var velocityY;
    var direction;
    if (input.eventType !== INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {
      var deltaX = input.deltaX - last.deltaX;
      var deltaY = input.deltaY - last.deltaY;
      var v = getVelocity(deltaTime, deltaX, deltaY);
      velocityX = v.x;
      velocityY = v.y;
      velocity = abs(v.x) > abs(v.y) ? v.x : v.y;
      direction = getDirection(deltaX, deltaY);
      session.lastInterval = input;
    } else {
      // use latest velocity info if it doesn't overtake a minimum period
      velocity = last.velocity;
      velocityX = last.velocityX;
      velocityY = last.velocityY;
      direction = last.direction;
    }
    input.velocity = velocity;
    input.velocityX = velocityX;
    input.velocityY = velocityY;
    input.direction = direction;
  }

  /**
  * @private
   * extend the data with some usable properties like scale, rotate, velocity etc
   * @param {Object} manager
   * @param {Object} input
   */

  function computeInputData(manager, input) {
    var session = manager.session;
    var pointers = input.pointers;
    var pointersLength = pointers.length; // store the first input to calculate the distance and direction

    if (!session.firstInput) {
      session.firstInput = simpleCloneInputData(input);
    } // to compute scale and rotation we need to store the multiple touches

    if (pointersLength > 1 && !session.firstMultiple) {
      session.firstMultiple = simpleCloneInputData(input);
    } else if (pointersLength === 1) {
      session.firstMultiple = false;
    }
    var firstInput = session.firstInput,
      firstMultiple = session.firstMultiple;
    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;
    var center = input.center = getCenter(pointers);
    input.timeStamp = now();
    input.deltaTime = input.timeStamp - firstInput.timeStamp;
    input.angle = getAngle(offsetCenter, center);
    input.distance = getDistance(offsetCenter, center);
    computeDeltaXY(session, input);
    input.offsetDirection = getDirection(input.deltaX, input.deltaY);
    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);
    input.overallVelocityX = overallVelocity.x;
    input.overallVelocityY = overallVelocity.y;
    input.overallVelocity = abs(overallVelocity.x) > abs(overallVelocity.y) ? overallVelocity.x : overallVelocity.y;
    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;
    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;
    input.maxPointers = !session.prevInput ? input.pointers.length : input.pointers.length > session.prevInput.maxPointers ? input.pointers.length : session.prevInput.maxPointers;
    computeIntervalInputData(session, input); // find the correct target

    var target = manager.element;
    var srcEvent = input.srcEvent;
    var srcEventTarget;
    if (srcEvent.composedPath) {
      srcEventTarget = srcEvent.composedPath()[0];
    } else if (srcEvent.path) {
      srcEventTarget = srcEvent.path[0];
    } else {
      srcEventTarget = srcEvent.target;
    }
    if (hasParent(srcEventTarget, target)) {
      target = srcEventTarget;
    }
    input.target = target;
  }

  /**
   * @private
   * handle input events
   * @param {Manager} manager
   * @param {String} eventType
   * @param {Object} input
   */

  function inputHandler(manager, eventType, input) {
    var pointersLen = input.pointers.length;
    var changedPointersLen = input.changedPointers.length;
    var isFirst = eventType & INPUT_START && pointersLen - changedPointersLen === 0;
    var isFinal = eventType & (INPUT_END | INPUT_CANCEL) && pointersLen - changedPointersLen === 0;
    input.isFirst = !!isFirst;
    input.isFinal = !!isFinal;
    if (isFirst) {
      manager.session = {};
    } // source event is the normalized value of the domEvents
    // like 'touchstart, mouseup, pointerdown'

    input.eventType = eventType; // compute scale, rotation etc

    computeInputData(manager, input); // emit secret event

    manager.emit('hammer.input', input);
    manager.recognize(input);
    manager.session.prevInput = input;
  }

  /**
   * @private
   * split string on whitespace
   * @param {String} str
   * @returns {Array} words
   */
  function splitStr(str) {
    return str.trim().split(/\s+/g);
  }

  /**
   * @private
   * addEventListener with multiple events at once
   * @param {EventTarget} target
   * @param {String} types
   * @param {Function} handler
   */

  function addEventListeners(target, types, handler) {
    each(splitStr(types), function (type) {
      target.addEventListener(type, handler, false);
    });
  }

  /**
   * @private
   * removeEventListener with multiple events at once
   * @param {EventTarget} target
   * @param {String} types
   * @param {Function} handler
   */

  function removeEventListeners(target, types, handler) {
    each(splitStr(types), function (type) {
      target.removeEventListener(type, handler, false);
    });
  }

  /**
   * @private
   * get the window object of an element
   * @param {HTMLElement} element
   * @returns {DocumentView|Window}
   */
  function getWindowForElement(element) {
    var doc = element.ownerDocument || element;
    return doc.defaultView || doc.parentWindow || window;
  }

  /**
   * @private
   * create new input type manager
   * @param {Manager} manager
   * @param {Function} callback
   * @returns {Input}
   * @constructor
   */

  var Input = /*#__PURE__*/
  function () {
    function Input(manager, callback) {
      var self = this;
      this.manager = manager;
      this.callback = callback;
      this.element = manager.element;
      this.target = manager.options.inputTarget; // smaller wrapper around the handler, for the scope and the enabled state of the manager,
      // so when disabled the input events are completely bypassed.

      this.domHandler = function (ev) {
        if (boolOrFn(manager.options.enable, [manager])) {
          self.handler(ev);
        }
      };
      this.init();
    }
    /**
     * @private
     * should handle the inputEvent data and trigger the callback
     * @virtual
     */

    var _proto = Input.prototype;
    _proto.handler = function handler() {};
    /**
     * @private
     * bind the events
     */

    _proto.init = function init() {
      this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);
      this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);
      this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);
    };
    /**
     * @private
     * unbind the events
     */

    _proto.destroy = function destroy() {
      this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);
      this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);
      this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);
    };
    return Input;
  }();

  /**
   * @private
   * find if a array contains the object using indexOf or a simple polyFill
   * @param {Array} src
   * @param {String} find
   * @param {String} [findByKey]
   * @return {Boolean|Number} false when not found, or the index
   */
  function inArray(src, find, findByKey) {
    if (src.indexOf && !findByKey) {
      return src.indexOf(find);
    } else {
      var i = 0;
      while (i < src.length) {
        if (findByKey && src[i][findByKey] == find || !findByKey && src[i] === find) {
          // do not use === here, test fails
          return i;
        }
        i++;
      }
      return -1;
    }
  }
  var POINTER_INPUT_MAP = {
    pointerdown: INPUT_START,
    pointermove: INPUT_MOVE,
    pointerup: INPUT_END,
    pointercancel: INPUT_CANCEL,
    pointerout: INPUT_CANCEL
  }; // in IE10 the pointer types is defined as an enum

  var IE10_POINTER_TYPE_ENUM = {
    2: INPUT_TYPE_TOUCH,
    3: INPUT_TYPE_PEN,
    4: INPUT_TYPE_MOUSE,
    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816
  };

  var POINTER_ELEMENT_EVENTS = 'pointerdown';
  var POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel'; // IE10 has prefixed support, and case-sensitive

  if (win.MSPointerEvent && !win.PointerEvent) {
    POINTER_ELEMENT_EVENTS = 'MSPointerDown';
    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';
  }
  /**
   * @private
   * Pointer events input
   * @constructor
   * @extends Input
   */

  var PointerEventInput = /*#__PURE__*/
  function (_Input) {
    _inheritsLoose(PointerEventInput, _Input);
    function PointerEventInput() {
      var _this;
      var proto = PointerEventInput.prototype;
      proto.evEl = POINTER_ELEMENT_EVENTS;
      proto.evWin = POINTER_WINDOW_EVENTS;
      _this = _Input.apply(this, arguments) || this;
      _this.store = _this.manager.session.pointerEvents = [];
      return _this;
    }
    /**
     * @private
     * handle mouse events
     * @param {Object} ev
     */

    var _proto = PointerEventInput.prototype;
    _proto.handler = function handler(ev) {
      var store = this.store;
      var removePointer = false;
      var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');
      var eventType = POINTER_INPUT_MAP[eventTypeNormalized];
      var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;
      var isTouch = pointerType === INPUT_TYPE_TOUCH; // get index of the event in the store

      var storeIndex = inArray(store, ev.pointerId, 'pointerId'); // start and mouse must be down

      if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {
        if (storeIndex < 0) {
          store.push(ev);
          storeIndex = store.length - 1;
        }
      } else if (eventType & (INPUT_END | INPUT_CANCEL)) {
        removePointer = true;
      } // it not found, so the pointer hasn't been down (so it's probably a hover)

      if (storeIndex < 0) {
        return;
      } // update the event in the store

      store[storeIndex] = ev;
      this.callback(this.manager, eventType, {
        pointers: store,
        changedPointers: [ev],
        pointerType: pointerType,
        srcEvent: ev
      });
      if (removePointer) {
        // remove from the store
        store.splice(storeIndex, 1);
      }
    };
    return PointerEventInput;
  }(Input);

  /**
   * @private
   * convert array-like objects to real arrays
   * @param {Object} obj
   * @returns {Array}
   */
  function toArray(obj) {
    return Array.prototype.slice.call(obj, 0);
  }

  /**
   * @private
   * unique array with objects based on a key (like 'id') or just by the array's value
   * @param {Array} src [{id:1},{id:2},{id:1}]
   * @param {String} [key]
   * @param {Boolean} [sort=False]
   * @returns {Array} [{id:1},{id:2}]
   */

  function uniqueArray(src, key, sort) {
    var results = [];
    var values = [];
    var i = 0;
    while (i < src.length) {
      var val = key ? src[i][key] : src[i];
      if (inArray(values, val) < 0) {
        results.push(src[i]);
      }
      values[i] = val;
      i++;
    }
    if (sort) {
      if (!key) {
        results = results.sort();
      } else {
        results = results.sort(function (a, b) {
          return a[key] > b[key];
        });
      }
    }
    return results;
  }
  var TOUCH_INPUT_MAP = {
    touchstart: INPUT_START,
    touchmove: INPUT_MOVE,
    touchend: INPUT_END,
    touchcancel: INPUT_CANCEL
  };
  var TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';
  /**
   * @private
   * Multi-user touch events input
   * @constructor
   * @extends Input
   */

  var TouchInput = /*#__PURE__*/
  function (_Input) {
    _inheritsLoose(TouchInput, _Input);
    function TouchInput() {
      var _this;
      TouchInput.prototype.evTarget = TOUCH_TARGET_EVENTS;
      _this = _Input.apply(this, arguments) || this;
      _this.targetIds = {}; // this.evTarget = TOUCH_TARGET_EVENTS;

      return _this;
    }
    var _proto = TouchInput.prototype;
    _proto.handler = function handler(ev) {
      var type = TOUCH_INPUT_MAP[ev.type];
      var touches = getTouches.call(this, ev, type);
      if (!touches) {
        return;
      }
      this.callback(this.manager, type, {
        pointers: touches[0],
        changedPointers: touches[1],
        pointerType: INPUT_TYPE_TOUCH,
        srcEvent: ev
      });
    };
    return TouchInput;
  }(Input);
  function getTouches(ev, type) {
    var allTouches = toArray(ev.touches);
    var targetIds = this.targetIds; // when there is only one touch, the process can be simplified

    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {
      targetIds[allTouches[0].identifier] = true;
      return [allTouches, allTouches];
    }
    var i;
    var targetTouches;
    var changedTouches = toArray(ev.changedTouches);
    var changedTargetTouches = [];
    var target = this.target; // get target touches from touches

    targetTouches = allTouches.filter(function (touch) {
      return hasParent(touch.target, target);
    }); // collect touches

    if (type === INPUT_START) {
      i = 0;
      while (i < targetTouches.length) {
        targetIds[targetTouches[i].identifier] = true;
        i++;
      }
    } // filter changed touches to only contain touches that exist in the collected target ids

    i = 0;
    while (i < changedTouches.length) {
      if (targetIds[changedTouches[i].identifier]) {
        changedTargetTouches.push(changedTouches[i]);
      } // cleanup removed touches

      if (type & (INPUT_END | INPUT_CANCEL)) {
        delete targetIds[changedTouches[i].identifier];
      }
      i++;
    }
    if (!changedTargetTouches.length) {
      return;
    }
    return [
    // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'
    uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true), changedTargetTouches];
  }
  var MOUSE_INPUT_MAP = {
    mousedown: INPUT_START,
    mousemove: INPUT_MOVE,
    mouseup: INPUT_END
  };
  var MOUSE_ELEMENT_EVENTS = 'mousedown';
  var MOUSE_WINDOW_EVENTS = 'mousemove mouseup';
  /**
   * @private
   * Mouse events input
   * @constructor
   * @extends Input
   */

  var MouseInput = /*#__PURE__*/
  function (_Input) {
    _inheritsLoose(MouseInput, _Input);
    function MouseInput() {
      var _this;
      var proto = MouseInput.prototype;
      proto.evEl = MOUSE_ELEMENT_EVENTS;
      proto.evWin = MOUSE_WINDOW_EVENTS;
      _this = _Input.apply(this, arguments) || this;
      _this.pressed = false; // mousedown state

      return _this;
    }
    /**
     * @private
     * handle mouse events
     * @param {Object} ev
     */

    var _proto = MouseInput.prototype;
    _proto.handler = function handler(ev) {
      var eventType = MOUSE_INPUT_MAP[ev.type]; // on start we want to have the left mouse button down

      if (eventType & INPUT_START && ev.button === 0) {
        this.pressed = true;
      }
      if (eventType & INPUT_MOVE && ev.which !== 1) {
        eventType = INPUT_END;
      } // mouse must be down

      if (!this.pressed) {
        return;
      }
      if (eventType & INPUT_END) {
        this.pressed = false;
      }
      this.callback(this.manager, eventType, {
        pointers: [ev],
        changedPointers: [ev],
        pointerType: INPUT_TYPE_MOUSE,
        srcEvent: ev
      });
    };
    return MouseInput;
  }(Input);

  /**
   * @private
   * Combined touch and mouse input
   *
   * Touch has a higher priority then mouse, and while touching no mouse events are allowed.
   * This because touch devices also emit mouse events while doing a touch.
   *
   * @constructor
   * @extends Input
   */

  var DEDUP_TIMEOUT = 2500;
  var DEDUP_DISTANCE = 25;
  function setLastTouch(eventData) {
    var _eventData$changedPoi = eventData.changedPointers,
      touch = _eventData$changedPoi[0];
    if (touch.identifier === this.primaryTouch) {
      var lastTouch = {
        x: touch.clientX,
        y: touch.clientY
      };
      var lts = this.lastTouches;
      this.lastTouches.push(lastTouch);
      var removeLastTouch = function removeLastTouch() {
        var i = lts.indexOf(lastTouch);
        if (i > -1) {
          lts.splice(i, 1);
        }
      };
      setTimeout(removeLastTouch, DEDUP_TIMEOUT);
    }
  }
  function recordTouches(eventType, eventData) {
    if (eventType & INPUT_START) {
      this.primaryTouch = eventData.changedPointers[0].identifier;
      setLastTouch.call(this, eventData);
    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {
      setLastTouch.call(this, eventData);
    }
  }
  function isSyntheticEvent(eventData) {
    var x = eventData.srcEvent.clientX;
    var y = eventData.srcEvent.clientY;
    for (var i = 0; i < this.lastTouches.length; i++) {
      var t = this.lastTouches[i];
      var dx = Math.abs(x - t.x);
      var dy = Math.abs(y - t.y);
      if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {
        return true;
      }
    }
    return false;
  }
  var TouchMouseInput = /*#__PURE__*/
  function () {
    var TouchMouseInput = /*#__PURE__*/
    function (_Input) {
      _inheritsLoose(TouchMouseInput, _Input);
      function TouchMouseInput(_manager, callback) {
        var _this;
        _this = _Input.call(this, _manager, callback) || this;
        _this.handler = function (manager, inputEvent, inputData) {
          var isTouch = inputData.pointerType === INPUT_TYPE_TOUCH;
          var isMouse = inputData.pointerType === INPUT_TYPE_MOUSE;
          if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {
            return;
          } // when we're in a touch event, record touches to  de-dupe synthetic mouse event

          if (isTouch) {
            recordTouches.call(_assertThisInitialized$1(_assertThisInitialized$1(_this)), inputEvent, inputData);
          } else if (isMouse && isSyntheticEvent.call(_assertThisInitialized$1(_assertThisInitialized$1(_this)), inputData)) {
            return;
          }
          _this.callback(manager, inputEvent, inputData);
        };
        _this.touch = new TouchInput(_this.manager, _this.handler);
        _this.mouse = new MouseInput(_this.manager, _this.handler);
        _this.primaryTouch = null;
        _this.lastTouches = [];
        return _this;
      }
      /**
       * @private
       * handle mouse and touch events
       * @param {Hammer} manager
       * @param {String} inputEvent
       * @param {Object} inputData
       */

      var _proto = TouchMouseInput.prototype;

      /**
       * @private
       * remove the event listeners
       */
      _proto.destroy = function destroy() {
        this.touch.destroy();
        this.mouse.destroy();
      };
      return TouchMouseInput;
    }(Input);
    return TouchMouseInput;
  }();

  /**
   * @private
   * create new input type manager
   * called by the Manager constructor
   * @param {Hammer} manager
   * @returns {Input}
   */

  function createInputInstance(manager) {
    var Type; // let inputClass = manager.options.inputClass;

    var inputClass = manager.options.inputClass;
    if (inputClass) {
      Type = inputClass;
    } else if (SUPPORT_POINTER_EVENTS) {
      Type = PointerEventInput;
    } else if (SUPPORT_ONLY_TOUCH) {
      Type = TouchInput;
    } else if (!SUPPORT_TOUCH) {
      Type = MouseInput;
    } else {
      Type = TouchMouseInput;
    }
    return new Type(manager, inputHandler);
  }

  /**
   * @private
   * if the argument is an array, we want to execute the fn on each entry
   * if it aint an array we don't want to do a thing.
   * this is used by all the methods that accept a single and array argument.
   * @param {*|Array} arg
   * @param {String} fn
   * @param {Object} [context]
   * @returns {Boolean}
   */

  function invokeArrayArg(arg, fn, context) {
    if (Array.isArray(arg)) {
      each(arg, context[fn], context);
      return true;
    }
    return false;
  }
  var STATE_POSSIBLE = 1;
  var STATE_BEGAN = 2;
  var STATE_CHANGED = 4;
  var STATE_ENDED = 8;
  var STATE_RECOGNIZED = STATE_ENDED;
  var STATE_CANCELLED = 16;
  var STATE_FAILED = 32;

  /**
   * @private
   * get a unique id
   * @returns {number} uniqueId
   */
  var _uniqueId = 1;
  function uniqueId() {
    return _uniqueId++;
  }

  /**
   * @private
   * get a recognizer by name if it is bound to a manager
   * @param {Recognizer|String} otherRecognizer
   * @param {Recognizer} recognizer
   * @returns {Recognizer}
   */
  function getRecognizerByNameIfManager(otherRecognizer, recognizer) {
    var manager = recognizer.manager;
    if (manager) {
      return manager.get(otherRecognizer);
    }
    return otherRecognizer;
  }

  /**
   * @private
   * get a usable string, used as event postfix
   * @param {constant} state
   * @returns {String} state
   */

  function stateStr(state) {
    if (state & STATE_CANCELLED) {
      return 'cancel';
    } else if (state & STATE_ENDED) {
      return 'end';
    } else if (state & STATE_CHANGED) {
      return 'move';
    } else if (state & STATE_BEGAN) {
      return 'start';
    }
    return '';
  }

  /**
   * @private
   * Recognizer flow explained; *
   * All recognizers have the initial state of POSSIBLE when a input session starts.
   * The definition of a input session is from the first input until the last input, with all it's movement in it. *
   * Example session for mouse-input: mousedown -> mousemove -> mouseup
   *
   * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed
   * which determines with state it should be.
   *
   * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to
   * POSSIBLE to give it another change on the next cycle.
   *
   *               Possible
   *                  |
   *            +-----+---------------+
   *            |                     |
   *      +-----+-----+               |
   *      |           |               |
   *   Failed      Cancelled          |
   *                          +-------+------+
   *                          |              |
   *                      Recognized       Began
   *                                         |
   *                                      Changed
   *                                         |
   *                                  Ended/Recognized
   */

  /**
   * @private
   * Recognizer
   * Every recognizer needs to extend from this class.
   * @constructor
   * @param {Object} options
   */

  var Recognizer = /*#__PURE__*/
  function () {
    function Recognizer(options) {
      if (options === void 0) {
        options = {};
      }
      this.options = _extends({
        enable: true
      }, options);
      this.id = uniqueId();
      this.manager = null; // default is enable true

      this.state = STATE_POSSIBLE;
      this.simultaneous = {};
      this.requireFail = [];
    }
    /**
     * @private
     * set options
     * @param {Object} options
     * @return {Recognizer}
     */

    var _proto = Recognizer.prototype;
    _proto.set = function set(options) {
      assign$1(this.options, options); // also update the touchAction, in case something changed about the directions/enabled state

      this.manager && this.manager.touchAction.update();
      return this;
    };
    /**
     * @private
     * recognize simultaneous with an other recognizer.
     * @param {Recognizer} otherRecognizer
     * @returns {Recognizer} this
     */

    _proto.recognizeWith = function recognizeWith(otherRecognizer) {
      if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {
        return this;
      }
      var simultaneous = this.simultaneous;
      otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
      if (!simultaneous[otherRecognizer.id]) {
        simultaneous[otherRecognizer.id] = otherRecognizer;
        otherRecognizer.recognizeWith(this);
      }
      return this;
    };
    /**
     * @private
     * drop the simultaneous link. it doesnt remove the link on the other recognizer.
     * @param {Recognizer} otherRecognizer
     * @returns {Recognizer} this
     */

    _proto.dropRecognizeWith = function dropRecognizeWith(otherRecognizer) {
      if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {
        return this;
      }
      otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
      delete this.simultaneous[otherRecognizer.id];
      return this;
    };
    /**
     * @private
     * recognizer can only run when an other is failing
     * @param {Recognizer} otherRecognizer
     * @returns {Recognizer} this
     */

    _proto.requireFailure = function requireFailure(otherRecognizer) {
      if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {
        return this;
      }
      var requireFail = this.requireFail;
      otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
      if (inArray(requireFail, otherRecognizer) === -1) {
        requireFail.push(otherRecognizer);
        otherRecognizer.requireFailure(this);
      }
      return this;
    };
    /**
     * @private
     * drop the requireFailure link. it does not remove the link on the other recognizer.
     * @param {Recognizer} otherRecognizer
     * @returns {Recognizer} this
     */

    _proto.dropRequireFailure = function dropRequireFailure(otherRecognizer) {
      if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {
        return this;
      }
      otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
      var index = inArray(this.requireFail, otherRecognizer);
      if (index > -1) {
        this.requireFail.splice(index, 1);
      }
      return this;
    };
    /**
     * @private
     * has require failures boolean
     * @returns {boolean}
     */

    _proto.hasRequireFailures = function hasRequireFailures() {
      return this.requireFail.length > 0;
    };
    /**
     * @private
     * if the recognizer can recognize simultaneous with an other recognizer
     * @param {Recognizer} otherRecognizer
     * @returns {Boolean}
     */

    _proto.canRecognizeWith = function canRecognizeWith(otherRecognizer) {
      return !!this.simultaneous[otherRecognizer.id];
    };
    /**
     * @private
     * You should use `tryEmit` instead of `emit` directly to check
     * that all the needed recognizers has failed before emitting.
     * @param {Object} input
     */

    _proto.emit = function emit(input) {
      var self = this;
      var state = this.state;
      function emit(event) {
        self.manager.emit(event, input);
      } // 'panstart' and 'panmove'

      if (state < STATE_ENDED) {
        emit(self.options.event + stateStr(state));
      }
      emit(self.options.event); // simple 'eventName' events

      if (input.additionalEvent) {
        // additional event(panleft, panright, pinchin, pinchout...)
        emit(input.additionalEvent);
      } // panend and pancancel

      if (state >= STATE_ENDED) {
        emit(self.options.event + stateStr(state));
      }
    };
    /**
     * @private
     * Check that all the require failure recognizers has failed,
     * if true, it emits a gesture event,
     * otherwise, setup the state to FAILED.
     * @param {Object} input
     */

    _proto.tryEmit = function tryEmit(input) {
      if (this.canEmit()) {
        return this.emit(input);
      } // it's failing anyway

      this.state = STATE_FAILED;
    };
    /**
     * @private
     * can we emit?
     * @returns {boolean}
     */

    _proto.canEmit = function canEmit() {
      var i = 0;
      while (i < this.requireFail.length) {
        if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {
          return false;
        }
        i++;
      }
      return true;
    };
    /**
     * @private
     * update the recognizer
     * @param {Object} inputData
     */

    _proto.recognize = function recognize(inputData) {
      // make a new copy of the inputData
      // so we can change the inputData without messing up the other recognizers
      var inputDataClone = assign$1({}, inputData); // is is enabled and allow recognizing?

      if (!boolOrFn(this.options.enable, [this, inputDataClone])) {
        this.reset();
        this.state = STATE_FAILED;
        return;
      } // reset when we've reached the end

      if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {
        this.state = STATE_POSSIBLE;
      }
      this.state = this.process(inputDataClone); // the recognizer has recognized a gesture
      // so trigger an event

      if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {
        this.tryEmit(inputDataClone);
      }
    };
    /**
     * @private
     * return the state of the recognizer
     * the actual recognizing happens in this method
     * @virtual
     * @param {Object} inputData
     * @returns {constant} STATE
     */

    /* jshint ignore:start */

    _proto.process = function process(inputData) {};
    /* jshint ignore:end */

    /**
     * @private
     * return the preferred touch-action
     * @virtual
     * @returns {Array}
     */

    _proto.getTouchAction = function getTouchAction() {};
    /**
     * @private
     * called when the gesture isn't allowed to recognize
     * like when another is being recognized or it is disabled
     * @virtual
     */

    _proto.reset = function reset() {};
    return Recognizer;
  }();

  /**
   * @private
   * A tap is recognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur
   * between the given interval and position. The delay option can be used to recognize multi-taps without firing
   * a single tap.
   *
   * The eventData from the emitted event contains the property `tapCount`, which contains the amount of
   * multi-taps being recognized.
   * @constructor
   * @extends Recognizer
   */

  var TapRecognizer = /*#__PURE__*/
  function (_Recognizer) {
    _inheritsLoose(TapRecognizer, _Recognizer);
    function TapRecognizer(options) {
      var _this;
      if (options === void 0) {
        options = {};
      }
      _this = _Recognizer.call(this, _extends({
        event: 'tap',
        pointers: 1,
        taps: 1,
        interval: 300,
        // max time between the multi-tap taps
        time: 250,
        // max time of the pointer to be down (like finger on the screen)
        threshold: 9,
        // a minimal movement is ok, but keep it low
        posThreshold: 10
      }, options)) || this; // previous time and center,
      // used for tap counting

      _this.pTime = false;
      _this.pCenter = false;
      _this._timer = null;
      _this._input = null;
      _this.count = 0;
      return _this;
    }
    var _proto = TapRecognizer.prototype;
    _proto.getTouchAction = function getTouchAction() {
      return [TOUCH_ACTION_MANIPULATION];
    };
    _proto.process = function process(input) {
      var _this2 = this;
      var options = this.options;
      var validPointers = input.pointers.length === options.pointers;
      var validMovement = input.distance < options.threshold;
      var validTouchTime = input.deltaTime < options.time;
      this.reset();
      if (input.eventType & INPUT_START && this.count === 0) {
        return this.failTimeout();
      } // we only allow little movement
      // and we've reached an end event, so a tap is possible

      if (validMovement && validTouchTime && validPointers) {
        if (input.eventType !== INPUT_END) {
          return this.failTimeout();
        }
        var validInterval = this.pTime ? input.timeStamp - this.pTime < options.interval : true;
        var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;
        this.pTime = input.timeStamp;
        this.pCenter = input.center;
        if (!validMultiTap || !validInterval) {
          this.count = 1;
        } else {
          this.count += 1;
        }
        this._input = input; // if tap count matches we have recognized it,
        // else it has began recognizing...

        var tapCount = this.count % options.taps;
        if (tapCount === 0) {
          // no failing requirements, immediately trigger the tap event
          // or wait as long as the multitap interval to trigger
          if (!this.hasRequireFailures()) {
            return STATE_RECOGNIZED;
          } else {
            this._timer = setTimeout(function () {
              _this2.state = STATE_RECOGNIZED;
              _this2.tryEmit();
            }, options.interval);
            return STATE_BEGAN;
          }
        }
      }
      return STATE_FAILED;
    };
    _proto.failTimeout = function failTimeout() {
      var _this3 = this;
      this._timer = setTimeout(function () {
        _this3.state = STATE_FAILED;
      }, this.options.interval);
      return STATE_FAILED;
    };
    _proto.reset = function reset() {
      clearTimeout(this._timer);
    };
    _proto.emit = function emit() {
      if (this.state === STATE_RECOGNIZED) {
        this._input.tapCount = this.count;
        this.manager.emit(this.options.event, this._input);
      }
    };
    return TapRecognizer;
  }(Recognizer);

  /**
   * @private
   * This recognizer is just used as a base for the simple attribute recognizers.
   * @constructor
   * @extends Recognizer
   */

  var AttrRecognizer = /*#__PURE__*/
  function (_Recognizer) {
    _inheritsLoose(AttrRecognizer, _Recognizer);
    function AttrRecognizer(options) {
      if (options === void 0) {
        options = {};
      }
      return _Recognizer.call(this, _extends({
        pointers: 1
      }, options)) || this;
    }
    /**
     * @private
     * Used to check if it the recognizer receives valid input, like input.distance > 10.
     * @memberof AttrRecognizer
     * @param {Object} input
     * @returns {Boolean} recognized
     */

    var _proto = AttrRecognizer.prototype;
    _proto.attrTest = function attrTest(input) {
      var optionPointers = this.options.pointers;
      return optionPointers === 0 || input.pointers.length === optionPointers;
    };
    /**
     * @private
     * Process the input and return the state for the recognizer
     * @memberof AttrRecognizer
     * @param {Object} input
     * @returns {*} State
     */

    _proto.process = function process(input) {
      var state = this.state;
      var eventType = input.eventType;
      var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);
      var isValid = this.attrTest(input); // on cancel input and we've recognized before, return STATE_CANCELLED

      if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {
        return state | STATE_CANCELLED;
      } else if (isRecognized || isValid) {
        if (eventType & INPUT_END) {
          return state | STATE_ENDED;
        } else if (!(state & STATE_BEGAN)) {
          return STATE_BEGAN;
        }
        return state | STATE_CHANGED;
      }
      return STATE_FAILED;
    };
    return AttrRecognizer;
  }(Recognizer);

  /**
   * @private
   * direction cons to string
   * @param {constant} direction
   * @returns {String}
   */

  function directionStr(direction) {
    if (direction === DIRECTION_DOWN) {
      return 'down';
    } else if (direction === DIRECTION_UP) {
      return 'up';
    } else if (direction === DIRECTION_LEFT) {
      return 'left';
    } else if (direction === DIRECTION_RIGHT) {
      return 'right';
    }
    return '';
  }

  /**
   * @private
   * Pan
   * Recognized when the pointer is down and moved in the allowed direction.
   * @constructor
   * @extends AttrRecognizer
   */

  var PanRecognizer = /*#__PURE__*/
  function (_AttrRecognizer) {
    _inheritsLoose(PanRecognizer, _AttrRecognizer);
    function PanRecognizer(options) {
      var _this;
      if (options === void 0) {
        options = {};
      }
      _this = _AttrRecognizer.call(this, _extends({
        event: 'pan',
        threshold: 10,
        pointers: 1,
        direction: DIRECTION_ALL
      }, options)) || this;
      _this.pX = null;
      _this.pY = null;
      return _this;
    }
    var _proto = PanRecognizer.prototype;
    _proto.getTouchAction = function getTouchAction() {
      var direction = this.options.direction;
      var actions = [];
      if (direction & DIRECTION_HORIZONTAL) {
        actions.push(TOUCH_ACTION_PAN_Y);
      }
      if (direction & DIRECTION_VERTICAL) {
        actions.push(TOUCH_ACTION_PAN_X);
      }
      return actions;
    };
    _proto.directionTest = function directionTest(input) {
      var options = this.options;
      var hasMoved = true;
      var distance = input.distance;
      var direction = input.direction;
      var x = input.deltaX;
      var y = input.deltaY; // lock to axis?

      if (!(direction & options.direction)) {
        if (options.direction & DIRECTION_HORIZONTAL) {
          direction = x === 0 ? DIRECTION_NONE : x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;
          hasMoved = x !== this.pX;
          distance = Math.abs(input.deltaX);
        } else {
          direction = y === 0 ? DIRECTION_NONE : y < 0 ? DIRECTION_UP : DIRECTION_DOWN;
          hasMoved = y !== this.pY;
          distance = Math.abs(input.deltaY);
        }
      }
      input.direction = direction;
      return hasMoved && distance > options.threshold && direction & options.direction;
    };
    _proto.attrTest = function attrTest(input) {
      return AttrRecognizer.prototype.attrTest.call(this, input) && (
      // replace with a super call
      this.state & STATE_BEGAN || !(this.state & STATE_BEGAN) && this.directionTest(input));
    };
    _proto.emit = function emit(input) {
      this.pX = input.deltaX;
      this.pY = input.deltaY;
      var direction = directionStr(input.direction);
      if (direction) {
        input.additionalEvent = this.options.event + direction;
      }
      _AttrRecognizer.prototype.emit.call(this, input);
    };
    return PanRecognizer;
  }(AttrRecognizer);

  /**
   * @private
   * Swipe
   * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.
   * @constructor
   * @extends AttrRecognizer
   */

  var SwipeRecognizer = /*#__PURE__*/
  function (_AttrRecognizer) {
    _inheritsLoose(SwipeRecognizer, _AttrRecognizer);
    function SwipeRecognizer(options) {
      if (options === void 0) {
        options = {};
      }
      return _AttrRecognizer.call(this, _extends({
        event: 'swipe',
        threshold: 10,
        velocity: 0.3,
        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,
        pointers: 1
      }, options)) || this;
    }
    var _proto = SwipeRecognizer.prototype;
    _proto.getTouchAction = function getTouchAction() {
      return PanRecognizer.prototype.getTouchAction.call(this);
    };
    _proto.attrTest = function attrTest(input) {
      var direction = this.options.direction;
      var velocity;
      if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {
        velocity = input.overallVelocity;
      } else if (direction & DIRECTION_HORIZONTAL) {
        velocity = input.overallVelocityX;
      } else if (direction & DIRECTION_VERTICAL) {
        velocity = input.overallVelocityY;
      }
      return _AttrRecognizer.prototype.attrTest.call(this, input) && direction & input.offsetDirection && input.distance > this.options.threshold && input.maxPointers === this.options.pointers && abs(velocity) > this.options.velocity && input.eventType & INPUT_END;
    };
    _proto.emit = function emit(input) {
      var direction = directionStr(input.offsetDirection);
      if (direction) {
        this.manager.emit(this.options.event + direction, input);
      }
      this.manager.emit(this.options.event, input);
    };
    return SwipeRecognizer;
  }(AttrRecognizer);

  /**
   * @private
   * Pinch
   * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).
   * @constructor
   * @extends AttrRecognizer
   */

  var PinchRecognizer = /*#__PURE__*/
  function (_AttrRecognizer) {
    _inheritsLoose(PinchRecognizer, _AttrRecognizer);
    function PinchRecognizer(options) {
      if (options === void 0) {
        options = {};
      }
      return _AttrRecognizer.call(this, _extends({
        event: 'pinch',
        threshold: 0,
        pointers: 2
      }, options)) || this;
    }
    var _proto = PinchRecognizer.prototype;
    _proto.getTouchAction = function getTouchAction() {
      return [TOUCH_ACTION_NONE];
    };
    _proto.attrTest = function attrTest(input) {
      return _AttrRecognizer.prototype.attrTest.call(this, input) && (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);
    };
    _proto.emit = function emit(input) {
      if (input.scale !== 1) {
        var inOut = input.scale < 1 ? 'in' : 'out';
        input.additionalEvent = this.options.event + inOut;
      }
      _AttrRecognizer.prototype.emit.call(this, input);
    };
    return PinchRecognizer;
  }(AttrRecognizer);

  /**
   * @private
   * Rotate
   * Recognized when two or more pointer are moving in a circular motion.
   * @constructor
   * @extends AttrRecognizer
   */

  var RotateRecognizer = /*#__PURE__*/
  function (_AttrRecognizer) {
    _inheritsLoose(RotateRecognizer, _AttrRecognizer);
    function RotateRecognizer(options) {
      if (options === void 0) {
        options = {};
      }
      return _AttrRecognizer.call(this, _extends({
        event: 'rotate',
        threshold: 0,
        pointers: 2
      }, options)) || this;
    }
    var _proto = RotateRecognizer.prototype;
    _proto.getTouchAction = function getTouchAction() {
      return [TOUCH_ACTION_NONE];
    };
    _proto.attrTest = function attrTest(input) {
      return _AttrRecognizer.prototype.attrTest.call(this, input) && (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);
    };
    return RotateRecognizer;
  }(AttrRecognizer);

  /**
   * @private
   * Press
   * Recognized when the pointer is down for x ms without any movement.
   * @constructor
   * @extends Recognizer
   */

  var PressRecognizer = /*#__PURE__*/
  function (_Recognizer) {
    _inheritsLoose(PressRecognizer, _Recognizer);
    function PressRecognizer(options) {
      var _this;
      if (options === void 0) {
        options = {};
      }
      _this = _Recognizer.call(this, _extends({
        event: 'press',
        pointers: 1,
        time: 251,
        // minimal time of the pointer to be pressed
        threshold: 9
      }, options)) || this;
      _this._timer = null;
      _this._input = null;
      return _this;
    }
    var _proto = PressRecognizer.prototype;
    _proto.getTouchAction = function getTouchAction() {
      return [TOUCH_ACTION_AUTO];
    };
    _proto.process = function process(input) {
      var _this2 = this;
      var options = this.options;
      var validPointers = input.pointers.length === options.pointers;
      var validMovement = input.distance < options.threshold;
      var validTime = input.deltaTime > options.time;
      this._input = input; // we only allow little movement
      // and we've reached an end event, so a tap is possible

      if (!validMovement || !validPointers || input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime) {
        this.reset();
      } else if (input.eventType & INPUT_START) {
        this.reset();
        this._timer = setTimeout(function () {
          _this2.state = STATE_RECOGNIZED;
          _this2.tryEmit();
        }, options.time);
      } else if (input.eventType & INPUT_END) {
        return STATE_RECOGNIZED;
      }
      return STATE_FAILED;
    };
    _proto.reset = function reset() {
      clearTimeout(this._timer);
    };
    _proto.emit = function emit(input) {
      if (this.state !== STATE_RECOGNIZED) {
        return;
      }
      if (input && input.eventType & INPUT_END) {
        this.manager.emit(this.options.event + "up", input);
      } else {
        this._input.timeStamp = now();
        this.manager.emit(this.options.event, this._input);
      }
    };
    return PressRecognizer;
  }(Recognizer);
  var defaults = {
    /**
     * @private
     * set if DOM events are being triggered.
     * But this is slower and unused by simple implementations, so disabled by default.
     * @type {Boolean}
     * @default false
     */
    domEvents: false,
    /**
     * @private
     * The value for the touchAction property/fallback.
     * When set to `compute` it will magically set the correct value based on the added recognizers.
     * @type {String}
     * @default compute
     */
    touchAction: TOUCH_ACTION_COMPUTE,
    /**
     * @private
     * @type {Boolean}
     * @default true
     */
    enable: true,
    /**
     * @private
     * EXPERIMENTAL FEATURE -- can be removed/changed
     * Change the parent input target element.
     * If Null, then it is being set the to main element.
     * @type {Null|EventTarget}
     * @default null
     */
    inputTarget: null,
    /**
     * @private
     * force an input class
     * @type {Null|Function}
     * @default null
     */
    inputClass: null,
    /**
     * @private
     * Some CSS properties can be used to improve the working of Hammer.
     * Add them to this method and they will be set when creating a new Manager.
     * @namespace
     */
    cssProps: {
      /**
       * @private
       * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.
       * @type {String}
       * @default 'none'
       */
      userSelect: "none",
      /**
       * @private
       * Disable the Windows Phone grippers when pressing an element.
       * @type {String}
       * @default 'none'
       */
      touchSelect: "none",
      /**
       * @private
       * Disables the default callout shown when you touch and hold a touch target.
       * On iOS, when you touch and hold a touch target such as a link, Safari displays
       * a callout containing information about the link. This property allows you to disable that callout.
       * @type {String}
       * @default 'none'
       */
      touchCallout: "none",
      /**
       * @private
       * Specifies whether zooming is enabled. Used by IE10>
       * @type {String}
       * @default 'none'
       */
      contentZooming: "none",
      /**
       * @private
       * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.
       * @type {String}
       * @default 'none'
       */
      userDrag: "none",
      /**
       * @private
       * Overrides the highlight color shown when the user taps a link or a JavaScript
       * clickable element in iOS. This property obeys the alpha value, if specified.
       * @type {String}
       * @default 'rgba(0,0,0,0)'
       */
      tapHighlightColor: "rgba(0,0,0,0)"
    }
  };
  /**
   * @private
   * Default recognizer setup when calling `Hammer()`
   * When creating a new Manager these will be skipped.
   * This is separated with other defaults because of tree-shaking.
   * @type {Array}
   */

  var preset = [[RotateRecognizer, {
    enable: false
  }], [PinchRecognizer, {
    enable: false
  }, ['rotate']], [SwipeRecognizer, {
    direction: DIRECTION_HORIZONTAL
  }], [PanRecognizer, {
    direction: DIRECTION_HORIZONTAL
  }, ['swipe']], [TapRecognizer], [TapRecognizer, {
    event: 'doubletap',
    taps: 2
  }, ['tap']], [PressRecognizer]];
  var STOP = 1;
  var FORCED_STOP = 2;
  /**
   * @private
   * add/remove the css properties as defined in manager.options.cssProps
   * @param {Manager} manager
   * @param {Boolean} add
   */

  function toggleCssProps(manager, add) {
    var element = manager.element;
    if (!element.style) {
      return;
    }
    var prop;
    each(manager.options.cssProps, function (value, name) {
      prop = prefixed(element.style, name);
      if (add) {
        manager.oldCssProps[prop] = element.style[prop];
        element.style[prop] = value;
      } else {
        element.style[prop] = manager.oldCssProps[prop] || "";
      }
    });
    if (!add) {
      manager.oldCssProps = {};
    }
  }
  /**
   * @private
   * trigger dom event
   * @param {String} event
   * @param {Object} data
   */

  function triggerDomEvent(event, data) {
    var gestureEvent = document.createEvent("Event");
    gestureEvent.initEvent(event, true, true);
    gestureEvent.gesture = data;
    data.target.dispatchEvent(gestureEvent);
  }
  /**
  * @private
   * Manager
   * @param {HTMLElement} element
   * @param {Object} [options]
   * @constructor
   */

  var Manager = /*#__PURE__*/
  function () {
    function Manager(element, options) {
      var _this = this;
      this.options = assign$1({}, defaults, options || {});
      this.options.inputTarget = this.options.inputTarget || element;
      this.handlers = {};
      this.session = {};
      this.recognizers = [];
      this.oldCssProps = {};
      this.element = element;
      this.input = createInputInstance(this);
      this.touchAction = new TouchAction(this, this.options.touchAction);
      toggleCssProps(this, true);
      each(this.options.recognizers, function (item) {
        var recognizer = _this.add(new item[0](item[1]));
        item[2] && recognizer.recognizeWith(item[2]);
        item[3] && recognizer.requireFailure(item[3]);
      }, this);
    }
    /**
     * @private
     * set options
     * @param {Object} options
     * @returns {Manager}
     */

    var _proto = Manager.prototype;
    _proto.set = function set(options) {
      assign$1(this.options, options); // Options that need a little more setup

      if (options.touchAction) {
        this.touchAction.update();
      }
      if (options.inputTarget) {
        // Clean up existing event listeners and reinitialize
        this.input.destroy();
        this.input.target = options.inputTarget;
        this.input.init();
      }
      return this;
    };
    /**
     * @private
     * stop recognizing for this session.
     * This session will be discarded, when a new [input]start event is fired.
     * When forced, the recognizer cycle is stopped immediately.
     * @param {Boolean} [force]
     */

    _proto.stop = function stop(force) {
      this.session.stopped = force ? FORCED_STOP : STOP;
    };
    /**
     * @private
     * run the recognizers!
     * called by the inputHandler function on every movement of the pointers (touches)
     * it walks through all the recognizers and tries to detect the gesture that is being made
     * @param {Object} inputData
     */

    _proto.recognize = function recognize(inputData) {
      var session = this.session;
      if (session.stopped) {
        return;
      } // run the touch-action polyfill

      this.touchAction.preventDefaults(inputData);
      var recognizer;
      var recognizers = this.recognizers; // this holds the recognizer that is being recognized.
      // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED
      // if no recognizer is detecting a thing, it is set to `null`

      var curRecognizer = session.curRecognizer; // reset when the last recognizer is recognized
      // or when we're in a new session

      if (!curRecognizer || curRecognizer && curRecognizer.state & STATE_RECOGNIZED) {
        session.curRecognizer = null;
        curRecognizer = null;
      }
      var i = 0;
      while (i < recognizers.length) {
        recognizer = recognizers[i]; // find out if we are allowed try to recognize the input for this one.
        // 1.   allow if the session is NOT forced stopped (see the .stop() method)
        // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one
        //      that is being recognized.
        // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.
        //      this can be setup with the `recognizeWith()` method on the recognizer.

        if (session.stopped !== FORCED_STOP && (
        // 1
        !curRecognizer || recognizer === curRecognizer ||
        // 2
        recognizer.canRecognizeWith(curRecognizer))) {
          // 3
          recognizer.recognize(inputData);
        } else {
          recognizer.reset();
        } // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the
        // current active recognizer. but only if we don't already have an active recognizer

        if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {
          session.curRecognizer = recognizer;
          curRecognizer = recognizer;
        }
        i++;
      }
    };
    /**
     * @private
     * get a recognizer by its event name.
     * @param {Recognizer|String} recognizer
     * @returns {Recognizer|Null}
     */

    _proto.get = function get(recognizer) {
      if (recognizer instanceof Recognizer) {
        return recognizer;
      }
      var recognizers = this.recognizers;
      for (var i = 0; i < recognizers.length; i++) {
        if (recognizers[i].options.event === recognizer) {
          return recognizers[i];
        }
      }
      return null;
    };
    /**
     * @private add a recognizer to the manager
     * existing recognizers with the same event name will be removed
     * @param {Recognizer} recognizer
     * @returns {Recognizer|Manager}
     */

    _proto.add = function add(recognizer) {
      if (invokeArrayArg(recognizer, "add", this)) {
        return this;
      } // remove existing

      var existing = this.get(recognizer.options.event);
      if (existing) {
        this.remove(existing);
      }
      this.recognizers.push(recognizer);
      recognizer.manager = this;
      this.touchAction.update();
      return recognizer;
    };
    /**
     * @private
     * remove a recognizer by name or instance
     * @param {Recognizer|String} recognizer
     * @returns {Manager}
     */

    _proto.remove = function remove(recognizer) {
      if (invokeArrayArg(recognizer, "remove", this)) {
        return this;
      }
      var targetRecognizer = this.get(recognizer); // let's make sure this recognizer exists

      if (recognizer) {
        var recognizers = this.recognizers;
        var index = inArray(recognizers, targetRecognizer);
        if (index !== -1) {
          recognizers.splice(index, 1);
          this.touchAction.update();
        }
      }
      return this;
    };
    /**
     * @private
     * bind event
     * @param {String} events
     * @param {Function} handler
     * @returns {EventEmitter} this
     */

    _proto.on = function on(events, handler) {
      if (events === undefined || handler === undefined) {
        return this;
      }
      var handlers = this.handlers;
      each(splitStr(events), function (event) {
        handlers[event] = handlers[event] || [];
        handlers[event].push(handler);
      });
      return this;
    };
    /**
     * @private unbind event, leave emit blank to remove all handlers
     * @param {String} events
     * @param {Function} [handler]
     * @returns {EventEmitter} this
     */

    _proto.off = function off(events, handler) {
      if (events === undefined) {
        return this;
      }
      var handlers = this.handlers;
      each(splitStr(events), function (event) {
        if (!handler) {
          delete handlers[event];
        } else {
          handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);
        }
      });
      return this;
    };
    /**
     * @private emit event to the listeners
     * @param {String} event
     * @param {Object} data
     */

    _proto.emit = function emit(event, data) {
      // we also want to trigger dom events
      if (this.options.domEvents) {
        triggerDomEvent(event, data);
      } // no handlers, so skip it all

      var handlers = this.handlers[event] && this.handlers[event].slice();
      if (!handlers || !handlers.length) {
        return;
      }
      data.type = event;
      data.preventDefault = function () {
        data.srcEvent.preventDefault();
      };
      var i = 0;
      while (i < handlers.length) {
        handlers[i](data);
        i++;
      }
    };
    /**
     * @private
     * destroy the manager and unbinds all events
     * it doesn't unbind dom events, that is the user own responsibility
     */

    _proto.destroy = function destroy() {
      this.element && toggleCssProps(this, false);
      this.handlers = {};
      this.session = {};
      this.input.destroy();
      this.element = null;
    };
    return Manager;
  }();
  var SINGLE_TOUCH_INPUT_MAP = {
    touchstart: INPUT_START,
    touchmove: INPUT_MOVE,
    touchend: INPUT_END,
    touchcancel: INPUT_CANCEL
  };
  var SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';
  var SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';
  /**
   * @private
   * Touch events input
   * @constructor
   * @extends Input
   */

  var SingleTouchInput = /*#__PURE__*/
  function (_Input) {
    _inheritsLoose(SingleTouchInput, _Input);
    function SingleTouchInput() {
      var _this;
      var proto = SingleTouchInput.prototype;
      proto.evTarget = SINGLE_TOUCH_TARGET_EVENTS;
      proto.evWin = SINGLE_TOUCH_WINDOW_EVENTS;
      _this = _Input.apply(this, arguments) || this;
      _this.started = false;
      return _this;
    }
    var _proto = SingleTouchInput.prototype;
    _proto.handler = function handler(ev) {
      var type = SINGLE_TOUCH_INPUT_MAP[ev.type]; // should we handle the touch events?

      if (type === INPUT_START) {
        this.started = true;
      }
      if (!this.started) {
        return;
      }
      var touches = normalizeSingleTouches.call(this, ev, type); // when done, reset the started state

      if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {
        this.started = false;
      }
      this.callback(this.manager, type, {
        pointers: touches[0],
        changedPointers: touches[1],
        pointerType: INPUT_TYPE_TOUCH,
        srcEvent: ev
      });
    };
    return SingleTouchInput;
  }(Input);
  function normalizeSingleTouches(ev, type) {
    var all = toArray(ev.touches);
    var changed = toArray(ev.changedTouches);
    if (type & (INPUT_END | INPUT_CANCEL)) {
      all = uniqueArray(all.concat(changed), 'identifier', true);
    }
    return [all, changed];
  }

  /**
   * @private
   * wrap a method with a deprecation warning and stack trace
   * @param {Function} method
   * @param {String} name
   * @param {String} message
   * @returns {Function} A new function wrapping the supplied method.
   */
  function deprecate(method, name, message) {
    var deprecationMessage = "DEPRECATED METHOD: " + name + "\n" + message + " AT \n";
    return function () {
      var e = new Error('get-stack-trace');
      var stack = e && e.stack ? e.stack.replace(/^[^\(]+?[\n$]/gm, '').replace(/^\s+at\s+/gm, '').replace(/^Object.<anonymous>\s*\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';
      var log = window.console && (window.console.warn || window.console.log);
      if (log) {
        log.call(window.console, deprecationMessage, stack);
      }
      return method.apply(this, arguments);
    };
  }

  /**
   * @private
   * extend object.
   * means that properties in dest will be overwritten by the ones in src.
   * @param {Object} dest
   * @param {Object} src
   * @param {Boolean} [merge=false]
   * @returns {Object} dest
   */

  var extend = deprecate(function (dest, src, merge) {
    var keys = Object.keys(src);
    var i = 0;
    while (i < keys.length) {
      if (!merge || merge && dest[keys[i]] === undefined) {
        dest[keys[i]] = src[keys[i]];
      }
      i++;
    }
    return dest;
  }, 'extend', 'Use `assign`.');

  /**
   * @private
   * merge the values from src in the dest.
   * means that properties that exist in dest will not be overwritten by src
   * @param {Object} dest
   * @param {Object} src
   * @returns {Object} dest
   */

  var merge$1 = deprecate(function (dest, src) {
    return extend(dest, src, true);
  }, 'merge', 'Use `assign`.');

  /**
   * @private
   * simple class inheritance
   * @param {Function} child
   * @param {Function} base
   * @param {Object} [properties]
   */

  function inherit(child, base, properties) {
    var baseP = base.prototype;
    var childP;
    childP = child.prototype = Object.create(baseP);
    childP.constructor = child;
    childP._super = baseP;
    if (properties) {
      assign$1(childP, properties);
    }
  }

  /**
   * @private
   * simple function bind
   * @param {Function} fn
   * @param {Object} context
   * @returns {Function}
   */
  function bindFn(fn, context) {
    return function boundFn() {
      return fn.apply(context, arguments);
    };
  }

  /**
   * @private
   * Simple way to create a manager with a default set of recognizers.
   * @param {HTMLElement} element
   * @param {Object} [options]
   * @constructor
   */

  var Hammer = /*#__PURE__*/
  function () {
    var Hammer =
    /**
      * @private
      * @const {string}
      */
    function Hammer(element, options) {
      if (options === void 0) {
        options = {};
      }
      return new Manager(element, _extends({
        recognizers: preset.concat()
      }, options));
    };
    Hammer.VERSION = "2.0.17-rc";
    Hammer.DIRECTION_ALL = DIRECTION_ALL;
    Hammer.DIRECTION_DOWN = DIRECTION_DOWN;
    Hammer.DIRECTION_LEFT = DIRECTION_LEFT;
    Hammer.DIRECTION_RIGHT = DIRECTION_RIGHT;
    Hammer.DIRECTION_UP = DIRECTION_UP;
    Hammer.DIRECTION_HORIZONTAL = DIRECTION_HORIZONTAL;
    Hammer.DIRECTION_VERTICAL = DIRECTION_VERTICAL;
    Hammer.DIRECTION_NONE = DIRECTION_NONE;
    Hammer.DIRECTION_DOWN = DIRECTION_DOWN;
    Hammer.INPUT_START = INPUT_START;
    Hammer.INPUT_MOVE = INPUT_MOVE;
    Hammer.INPUT_END = INPUT_END;
    Hammer.INPUT_CANCEL = INPUT_CANCEL;
    Hammer.STATE_POSSIBLE = STATE_POSSIBLE;
    Hammer.STATE_BEGAN = STATE_BEGAN;
    Hammer.STATE_CHANGED = STATE_CHANGED;
    Hammer.STATE_ENDED = STATE_ENDED;
    Hammer.STATE_RECOGNIZED = STATE_RECOGNIZED;
    Hammer.STATE_CANCELLED = STATE_CANCELLED;
    Hammer.STATE_FAILED = STATE_FAILED;
    Hammer.Manager = Manager;
    Hammer.Input = Input;
    Hammer.TouchAction = TouchAction;
    Hammer.TouchInput = TouchInput;
    Hammer.MouseInput = MouseInput;
    Hammer.PointerEventInput = PointerEventInput;
    Hammer.TouchMouseInput = TouchMouseInput;
    Hammer.SingleTouchInput = SingleTouchInput;
    Hammer.Recognizer = Recognizer;
    Hammer.AttrRecognizer = AttrRecognizer;
    Hammer.Tap = TapRecognizer;
    Hammer.Pan = PanRecognizer;
    Hammer.Swipe = SwipeRecognizer;
    Hammer.Pinch = PinchRecognizer;
    Hammer.Rotate = RotateRecognizer;
    Hammer.Press = PressRecognizer;
    Hammer.on = addEventListeners;
    Hammer.off = removeEventListeners;
    Hammer.each = each;
    Hammer.merge = merge$1;
    Hammer.extend = extend;
    Hammer.bindFn = bindFn;
    Hammer.assign = assign$1;
    Hammer.inherit = inherit;
    Hammer.bindFn = bindFn;
    Hammer.prefixed = prefixed;
    Hammer.toArray = toArray;
    Hammer.inArray = inArray;
    Hammer.uniqueArray = uniqueArray;
    Hammer.splitStr = splitStr;
    Hammer.boolOrFn = boolOrFn;
    Hammer.hasParent = hasParent;
    Hammer.addEventListeners = addEventListeners;
    Hammer.removeEventListeners = removeEventListeners;
    Hammer.defaults = assign$1({}, defaults, {
      preset: preset
    });
    return Hammer;
  }();
  var RealHammer = Hammer;
  function _createForOfIteratorHelper$3(o, allowArrayLike) {
    var it = typeof _Symbol !== "undefined" && _getIteratorMethod(o) || o["@@iterator"];
    if (!it) {
      if (_Array$isArray(o) || (it = _unsupportedIterableToArray$3(o)) || allowArrayLike && o && typeof o.length === "number") {
        if (it) o = it;
        var i = 0;
        var F = function F() {};
        return {
          s: F,
          n: function n() {
            if (i >= o.length) return {
              done: true
            };
            return {
              done: false,
              value: o[i++]
            };
          },
          e: function e(_e) {
            throw _e;
          },
          f: F
        };
      }
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var normalCompletion = true,
      didErr = false,
      err;
    return {
      s: function s() {
        it = it.call(o);
      },
      n: function n() {
        var step = it.next();
        normalCompletion = step.done;
        return step;
      },
      e: function e(_e2) {
        didErr = true;
        err = _e2;
      },
      f: function f() {
        try {
          if (!normalCompletion && it.return != null) it.return();
        } finally {
          if (didErr) throw err;
        }
      }
    };
  }
  function _unsupportedIterableToArray$3(o, minLen) {
    var _context15;
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray$3(o, minLen);
    var n = _sliceInstanceProperty(_context15 = Object.prototype.toString.call(o)).call(_context15, 8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return _Array$from$1(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$3(o, minLen);
  }
  function _arrayLikeToArray$3(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
    return arr2;
  }

  /**
   * Use this symbol to delete properies in deepObjectAssign.
   */
  var DELETE = _Symbol("DELETE");
  /**
   * Pure version of deepObjectAssign, it doesn't modify any of it's arguments.
   *
   * @param base - The base object that fullfils the whole interface T.
   * @param updates - Updates that may change or delete props.
   * @returns A brand new instance with all the supplied objects deeply merged.
   */
  function pureDeepObjectAssign(base) {
    var _context;
    for (var _len = arguments.length, updates = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      updates[_key - 1] = arguments[_key];
    }
    return deepObjectAssign.apply(void 0, _concatInstanceProperty(_context = [{}, base]).call(_context, updates));
  }
  /**
   * Deep version of object assign with additional deleting by the DELETE symbol.
   *
   * @param values - Objects to be deeply merged.
   * @returns The first object from values.
   */
  function deepObjectAssign() {
    var merged = deepObjectAssignNonentry.apply(void 0, arguments);
    stripDelete(merged);
    return merged;
  }
  /**
   * Deep version of object assign with additional deleting by the DELETE symbol.
   *
   * @remarks
   * This doesn't strip the DELETE symbols so they may end up in the final object.
   * @param values - Objects to be deeply merged.
   * @returns The first object from values.
   */
  function deepObjectAssignNonentry() {
    for (var _len2 = arguments.length, values = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      values[_key2] = arguments[_key2];
    }
    if (values.length < 2) {
      return values[0];
    } else if (values.length > 2) {
      var _context2;
      return deepObjectAssignNonentry.apply(void 0, _concatInstanceProperty(_context2 = [deepObjectAssign(values[0], values[1])]).call(_context2, _toConsumableArray(_sliceInstanceProperty(values).call(values, 2))));
    }
    var a = values[0];
    var b = values[1];
    if (a instanceof Date && b instanceof Date) {
      a.setTime(b.getTime());
      return a;
    }
    var _iterator = _createForOfIteratorHelper$3(_Reflect$ownKeys(b)),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var prop = _step.value;
        if (!Object.prototype.propertyIsEnumerable.call(b, prop)) ;else if (b[prop] === DELETE) {
          delete a[prop];
        } else if (a[prop] !== null && b[prop] !== null && typeof a[prop] === "object" && typeof b[prop] === "object" && !_Array$isArray(a[prop]) && !_Array$isArray(b[prop])) {
          a[prop] = deepObjectAssignNonentry(a[prop], b[prop]);
        } else {
          a[prop] = clone(b[prop]);
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    return a;
  }
  /**
   * Deep clone given object or array. In case of primitive simply return.
   *
   * @param a - Anything.
   * @returns Deep cloned object/array or unchanged a.
   */
  function clone(a) {
    if (_Array$isArray(a)) {
      return _mapInstanceProperty(a).call(a, function (value) {
        return clone(value);
      });
    } else if (typeof a === "object" && a !== null) {
      if (a instanceof Date) {
        return new Date(a.getTime());
      }
      return deepObjectAssignNonentry({}, a);
    } else {
      return a;
    }
  }
  /**
   * Strip DELETE from given object.
   *
   * @param a - Object which may contain DELETE but won't after this is executed.
   */
  function stripDelete(a) {
    for (var _i = 0, _Object$keys$1 = _Object$keys(a); _i < _Object$keys$1.length; _i++) {
      var prop = _Object$keys$1[_i];
      if (a[prop] === DELETE) {
        delete a[prop];
      } else if (typeof a[prop] === "object" && a[prop] !== null) {
        stripDelete(a[prop]);
      }
    }
  }

  /**
   * Setup a mock hammer.js object, for unit testing.
   *
   * Inspiration: https://github.com/uber/deck.gl/pull/658
   *
   * @returns {{on: noop, off: noop, destroy: noop, emit: noop, get: get}}
   */
  function hammerMock() {
    var noop = function noop() {};
    return {
      on: noop,
      off: noop,
      destroy: noop,
      emit: noop,
      get() {
        return {
          set: noop
        };
      }
    };
  }
  var Hammer$1 = typeof window !== "undefined" ? window.Hammer || RealHammer : function () {
    // hammer.js is only available in a browser, not in node.js. Replacing it with a mock object.
    return hammerMock();
  };

  /**
   * Turn an element into an clickToUse element.
   * When not active, the element has a transparent overlay. When the overlay is
   * clicked, the mode is changed to active.
   * When active, the element is displayed with a blue border around it, and
   * the interactive contents of the element can be used. When clicked outside
   * the element, the elements mode is changed to inactive.
   *
   * @param {Element} container
   * @class Activator
   */
  function Activator$1(container) {
    var _this = this,
      _context3;
    this._cleanupQueue = [];
    this.active = false;
    this._dom = {
      container,
      overlay: document.createElement("div")
    };
    this._dom.overlay.classList.add("vis-overlay");
    this._dom.container.appendChild(this._dom.overlay);
    this._cleanupQueue.push(function () {
      _this._dom.overlay.parentNode.removeChild(_this._dom.overlay);
    });
    var hammer = Hammer$1(this._dom.overlay);
    hammer.on("tap", _bindInstanceProperty$1(_context3 = this._onTapOverlay).call(_context3, this));
    this._cleanupQueue.push(function () {
      hammer.destroy();
      // FIXME: cleaning up hammer instances doesn't work (Timeline not removed
      // from memory)
    });

    // block all touch events (except tap)
    var events = ["tap", "doubletap", "press", "pinch", "pan", "panstart", "panmove", "panend"];
    _forEachInstanceProperty(events).call(events, function (event) {
      hammer.on(event, function (event) {
        event.srcEvent.stopPropagation();
      });
    });

    // attach a click event to the window, in order to deactivate when clicking outside the timeline
    if (document && document.body) {
      this._onClick = function (event) {
        if (!_hasParent(event.target, container)) {
          _this.deactivate();
        }
      };
      document.body.addEventListener("click", this._onClick);
      this._cleanupQueue.push(function () {
        document.body.removeEventListener("click", _this._onClick);
      });
    }

    // prepare escape key listener for deactivating when active
    this._escListener = function (event) {
      if ("key" in event ? event.key === "Escape" : event.keyCode === 27 /* the keyCode is for IE11 */) {
        _this.deactivate();
      }
    };
  }

  // turn into an event emitter
  Emitter(Activator$1.prototype);

  // The currently active activator
  Activator$1.current = null;

  /**
   * Destroy the activator. Cleans up all created DOM and event listeners
   */
  Activator$1.prototype.destroy = function () {
    var _context4, _context5;
    this.deactivate();
    var _iterator2 = _createForOfIteratorHelper$3(_reverseInstanceProperty(_context4 = _spliceInstanceProperty(_context5 = this._cleanupQueue).call(_context5, 0)).call(_context4)),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var callback = _step2.value;
        callback();
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
  };

  /**
   * Activate the element
   * Overlay is hidden, element is decorated with a blue shadow border
   */
  Activator$1.prototype.activate = function () {
    // we allow only one active activator at a time
    if (Activator$1.current) {
      Activator$1.current.deactivate();
    }
    Activator$1.current = this;
    this.active = true;
    this._dom.overlay.style.display = "none";
    this._dom.container.classList.add("vis-active");
    this.emit("change");
    this.emit("activate");

    // ugly hack: bind ESC after emitting the events, as the Network rebinds all
    // keyboard events on a 'change' event
    document.body.addEventListener("keydown", this._escListener);
  };

  /**
   * Deactivate the element
   * Overlay is displayed on top of the element
   */
  Activator$1.prototype.deactivate = function () {
    this.active = false;
    this._dom.overlay.style.display = "block";
    this._dom.container.classList.remove("vis-active");
    document.body.removeEventListener("keydown", this._escListener);
    this.emit("change");
    this.emit("deactivate");
  };

  /**
   * Handle a tap event: activate the container
   *
   * @param {Event}  event   The event
   * @private
   */
  Activator$1.prototype._onTapOverlay = function (event) {
    // activate the container
    this.activate();
    event.srcEvent.stopPropagation();
  };

  /**
   * Test whether the element has the requested parent element somewhere in
   * its chain of parent nodes.
   *
   * @param {HTMLElement} element
   * @param {HTMLElement} parent
   * @returns {boolean} Returns true when the parent is found somewhere in the
   *                    chain of parent nodes.
   * @private
   */
  function _hasParent(element, parent) {
    while (element) {
      if (element === parent) {
        return true;
      }
      element = element.parentNode;
    }
    return false;
  }
  var isConstructor = isConstructor$4;
  var tryToString$1 = tryToString$6;
  var $TypeError$3 = TypeError;

  // `Assert: IsConstructor(argument) is true`
  var aConstructor$2 = function (argument) {
    if (isConstructor(argument)) return argument;
    throw new $TypeError$3(tryToString$1(argument) + ' is not a constructor');
  };
  var $$k = _export;
  var getBuiltIn$4 = getBuiltIn$f;
  var apply$1 = functionApply;
  var bind$8 = functionBind;
  var aConstructor$1 = aConstructor$2;
  var anObject$3 = anObject$d;
  var isObject$6 = isObject$h;
  var create$5 = objectCreate;
  var fails$9 = fails$u;
  var nativeConstruct = getBuiltIn$4('Reflect', 'construct');
  var ObjectPrototype = Object.prototype;
  var push$2 = [].push;

  // `Reflect.construct` method
  // https://tc39.es/ecma262/#sec-reflect.construct
  // MS Edge supports only 2 arguments and argumentsList argument is optional
  // FF Nightly sets third argument as `new.target`, but does not create `this` from it
  var NEW_TARGET_BUG = fails$9(function () {
    function F() {/* empty */}
    return !(nativeConstruct(function () {/* empty */}, [], F) instanceof F);
  });
  var ARGS_BUG = !fails$9(function () {
    nativeConstruct(function () {/* empty */});
  });
  var FORCED$2 = NEW_TARGET_BUG || ARGS_BUG;
  $$k({
    target: 'Reflect',
    stat: true,
    forced: FORCED$2,
    sham: FORCED$2
  }, {
    construct: function construct(Target, args /* , newTarget */) {
      aConstructor$1(Target);
      anObject$3(args);
      var newTarget = arguments.length < 3 ? Target : aConstructor$1(arguments[2]);
      if (ARGS_BUG && !NEW_TARGET_BUG) return nativeConstruct(Target, args, newTarget);
      if (Target === newTarget) {
        // w/o altered newTarget, optimization for 0-4 arguments
        switch (args.length) {
          case 0:
            return new Target();
          case 1:
            return new Target(args[0]);
          case 2:
            return new Target(args[0], args[1]);
          case 3:
            return new Target(args[0], args[1], args[2]);
          case 4:
            return new Target(args[0], args[1], args[2], args[3]);
        }
        // w/o altered newTarget, lot of arguments case
        var $args = [null];
        apply$1(push$2, $args, args);
        return new (apply$1(bind$8, Target, $args))();
      }
      // with altered newTarget, not support built-in constructors
      var proto = newTarget.prototype;
      var instance = create$5(isObject$6(proto) ? proto : ObjectPrototype);
      var result = apply$1(Target, instance, args);
      return isObject$6(result) ? result : instance;
    }
  });
  var path$8 = path$o;
  var construct$2 = path$8.Reflect.construct;
  var parent$u = construct$2;
  var construct$1 = parent$u;
  var construct = construct$1;
  var _Reflect$construct = /*@__PURE__*/getDefaultExportFromCjs(construct);
  var path$7 = path$o;
  var getOwnPropertySymbols$2 = path$7.Object.getOwnPropertySymbols;
  var parent$t = getOwnPropertySymbols$2;
  var getOwnPropertySymbols$1 = parent$t;
  var getOwnPropertySymbols = getOwnPropertySymbols$1;
  var _Object$getOwnPropertySymbols = /*@__PURE__*/getDefaultExportFromCjs(getOwnPropertySymbols);
  var getOwnPropertyDescriptor$4 = {
    exports: {}
  };
  var $$j = _export;
  var fails$8 = fails$u;
  var toIndexedObject$1 = toIndexedObject$a;
  var nativeGetOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;
  var DESCRIPTORS$5 = descriptors;
  var FORCED$1 = !DESCRIPTORS$5 || fails$8(function () {
    nativeGetOwnPropertyDescriptor(1);
  });

  // `Object.getOwnPropertyDescriptor` method
  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
  $$j({
    target: 'Object',
    stat: true,
    forced: FORCED$1,
    sham: !DESCRIPTORS$5
  }, {
    getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {
      return nativeGetOwnPropertyDescriptor(toIndexedObject$1(it), key);
    }
  });
  var path$6 = path$o;
  var Object$2 = path$6.Object;
  var getOwnPropertyDescriptor$3 = getOwnPropertyDescriptor$4.exports = function getOwnPropertyDescriptor(it, key) {
    return Object$2.getOwnPropertyDescriptor(it, key);
  };
  if (Object$2.getOwnPropertyDescriptor.sham) getOwnPropertyDescriptor$3.sham = true;
  var getOwnPropertyDescriptorExports = getOwnPropertyDescriptor$4.exports;
  var parent$s = getOwnPropertyDescriptorExports;
  var getOwnPropertyDescriptor$2 = parent$s;
  var getOwnPropertyDescriptor$1 = getOwnPropertyDescriptor$2;
  var _Object$getOwnPropertyDescriptor = /*@__PURE__*/getDefaultExportFromCjs(getOwnPropertyDescriptor$1);
  var $$i = _export;
  var DESCRIPTORS$4 = descriptors;
  var ownKeys$2 = ownKeys$7;
  var toIndexedObject = toIndexedObject$a;
  var getOwnPropertyDescriptorModule$1 = objectGetOwnPropertyDescriptor;
  var createProperty = createProperty$6;

  // `Object.getOwnPropertyDescriptors` method
  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
  $$i({
    target: 'Object',
    stat: true,
    sham: !DESCRIPTORS$4
  }, {
    getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
      var O = toIndexedObject(object);
      var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule$1.f;
      var keys = ownKeys$2(O);
      var result = {};
      var index = 0;
      var key, descriptor;
      while (keys.length > index) {
        descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);
        if (descriptor !== undefined) createProperty(result, key, descriptor);
      }
      return result;
    }
  });
  var path$5 = path$o;
  var getOwnPropertyDescriptors$2 = path$5.Object.getOwnPropertyDescriptors;
  var parent$r = getOwnPropertyDescriptors$2;
  var getOwnPropertyDescriptors$1 = parent$r;
  var getOwnPropertyDescriptors = getOwnPropertyDescriptors$1;
  var _Object$getOwnPropertyDescriptors = /*@__PURE__*/getDefaultExportFromCjs(getOwnPropertyDescriptors);
  var defineProperties$4 = {
    exports: {}
  };
  var $$h = _export;
  var DESCRIPTORS$3 = descriptors;
  var defineProperties$3 = objectDefineProperties.f;

  // `Object.defineProperties` method
  // https://tc39.es/ecma262/#sec-object.defineproperties
  // eslint-disable-next-line es/no-object-defineproperties -- safe
  $$h({
    target: 'Object',
    stat: true,
    forced: Object.defineProperties !== defineProperties$3,
    sham: !DESCRIPTORS$3
  }, {
    defineProperties: defineProperties$3
  });
  var path$4 = path$o;
  var Object$1 = path$4.Object;
  var defineProperties$2 = defineProperties$4.exports = function defineProperties(T, D) {
    return Object$1.defineProperties(T, D);
  };
  if (Object$1.defineProperties.sham) defineProperties$2.sham = true;
  var definePropertiesExports = defineProperties$4.exports;
  var parent$q = definePropertiesExports;
  var defineProperties$1 = parent$q;
  var defineProperties = defineProperties$1;
  var _Object$defineProperties = /*@__PURE__*/getDefaultExportFromCjs(defineProperties);
  var defineProperty$2 = defineProperty$b;
  var _Object$defineProperty = /*@__PURE__*/getDefaultExportFromCjs(defineProperty$2);
  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
  }
  var parent$p = create$7;
  var create$4 = parent$p;
  var parent$o = create$4;
  var create$3 = parent$o;
  var create$2 = create$3;
  var _Object$create = /*@__PURE__*/getDefaultExportFromCjs(create$2);
  var $$g = _export;
  var setPrototypeOf$6 = objectSetPrototypeOf;

  // `Object.setPrototypeOf` method
  // https://tc39.es/ecma262/#sec-object.setprototypeof
  $$g({
    target: 'Object',
    stat: true
  }, {
    setPrototypeOf: setPrototypeOf$6
  });
  var path$3 = path$o;
  var setPrototypeOf$5 = path$3.Object.setPrototypeOf;
  var parent$n = setPrototypeOf$5;
  var setPrototypeOf$4 = parent$n;
  var parent$m = setPrototypeOf$4;
  var setPrototypeOf$3 = parent$m;
  var parent$l = setPrototypeOf$3;
  var setPrototypeOf$2 = parent$l;
  var setPrototypeOf$1 = setPrototypeOf$2;
  var _Object$setPrototypeOf = /*@__PURE__*/getDefaultExportFromCjs(setPrototypeOf$1);
  var parent$k = bind$c;
  var bind$7 = parent$k;
  var parent$j = bind$7;
  var bind$6 = parent$j;
  var bind$5 = bind$6;
  var _bindInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(bind$5);
  function _setPrototypeOf(o, p) {
    var _context;
    _setPrototypeOf = _Object$setPrototypeOf ? _bindInstanceProperty(_context = _Object$setPrototypeOf).call(_context) : function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };
    return _setPrototypeOf(o, p);
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = _Object$create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    _Object$defineProperty$1(subClass, "prototype", {
      writable: false
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
  }
  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof$1(call) === "object" || typeof call === "function")) {
      return call;
    } else if (call !== void 0) {
      throw new TypeError("Derived constructors may only return object or undefined");
    }
    return _assertThisInitialized(self);
  }
  var parent$i = getPrototypeOf$4;
  var getPrototypeOf$3 = parent$i;
  var parent$h = getPrototypeOf$3;
  var getPrototypeOf$2 = parent$h;
  var getPrototypeOf$1 = getPrototypeOf$2;
  var _Object$getPrototypeOf = /*@__PURE__*/getDefaultExportFromCjs(getPrototypeOf$1);
  function _getPrototypeOf(o) {
    var _context;
    _getPrototypeOf = _Object$setPrototypeOf ? _bindInstanceProperty(_context = _Object$getPrototypeOf).call(_context) : function _getPrototypeOf(o) {
      return o.__proto__ || _Object$getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
  }
  var regeneratorRuntime$1 = {
    exports: {}
  };
  var _typeof = {
    exports: {}
  };
  (function (module) {
    var _Symbol = symbol$1;
    var _Symbol$iterator = iterator$1;
    function _typeof(o) {
      "@babel/helpers - typeof";

      return (module.exports = _typeof = "function" == typeof _Symbol && "symbol" == typeof _Symbol$iterator ? function (o) {
        return typeof o;
      } : function (o) {
        return o && "function" == typeof _Symbol && o.constructor === _Symbol && o !== _Symbol.prototype ? "symbol" : typeof o;
      }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(o);
    }
    module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;
  })(_typeof);
  var _typeofExports = _typeof.exports;
  var parent$g = forEach$5;
  var forEach$3 = parent$g;
  var parent$f = forEach$3;
  var forEach$2 = parent$f;
  var forEach$1 = forEach$2;
  var hasOwn$5 = hasOwnProperty_1;
  var ownKeys$1 = ownKeys$7;
  var getOwnPropertyDescriptorModule = objectGetOwnPropertyDescriptor;
  var definePropertyModule = objectDefineProperty;
  var copyConstructorProperties$1 = function (target, source, exceptions) {
    var keys = ownKeys$1(source);
    var defineProperty = definePropertyModule.f;
    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (!hasOwn$5(target, key) && !(exceptions && hasOwn$5(exceptions, key))) {
        defineProperty(target, key, getOwnPropertyDescriptor(source, key));
      }
    }
  };
  var isObject$5 = isObject$h;
  var createNonEnumerableProperty$3 = createNonEnumerableProperty$9;

  // `InstallErrorCause` abstract operation
  // https://tc39.es/proposal-error-cause/#sec-errorobjects-install-error-cause
  var installErrorCause$1 = function (O, options) {
    if (isObject$5(options) && 'cause' in options) {
      createNonEnumerableProperty$3(O, 'cause', options.cause);
    }
  };
  var uncurryThis$2 = functionUncurryThis;
  var $Error$1 = Error;
  var replace = uncurryThis$2(''.replace);
  var TEST = function (arg) {
    return String(new $Error$1(arg).stack);
  }('zxcasd');
  // eslint-disable-next-line redos/no-vulnerable -- safe
  var V8_OR_CHAKRA_STACK_ENTRY = /\n\s*at [^:]*:[^\n]*/;
  var IS_V8_OR_CHAKRA_STACK = V8_OR_CHAKRA_STACK_ENTRY.test(TEST);
  var errorStackClear = function (stack, dropEntries) {
    if (IS_V8_OR_CHAKRA_STACK && typeof stack == 'string' && !$Error$1.prepareStackTrace) {
      while (dropEntries--) stack = replace(stack, V8_OR_CHAKRA_STACK_ENTRY, '');
    }
    return stack;
  };
  var fails$7 = fails$u;
  var createPropertyDescriptor$1 = createPropertyDescriptor$7;
  var errorStackInstallable = !fails$7(function () {
    var error = new Error('a');
    if (!('stack' in error)) return true;
    // eslint-disable-next-line es/no-object-defineproperty -- safe
    Object.defineProperty(error, 'stack', createPropertyDescriptor$1(1, 7));
    return error.stack !== 7;
  });
  var createNonEnumerableProperty$2 = createNonEnumerableProperty$9;
  var clearErrorStack = errorStackClear;
  var ERROR_STACK_INSTALLABLE = errorStackInstallable;

  // non-standard V8
  var captureStackTrace = Error.captureStackTrace;
  var errorStackInstall = function (error, C, stack, dropEntries) {
    if (ERROR_STACK_INSTALLABLE) {
      if (captureStackTrace) captureStackTrace(error, C);else createNonEnumerableProperty$2(error, 'stack', clearErrorStack(stack, dropEntries));
    }
  };
  var bind$4 = functionBindContext;
  var call$6 = functionCall;
  var anObject$2 = anObject$d;
  var tryToString = tryToString$6;
  var isArrayIteratorMethod = isArrayIteratorMethod$2;
  var lengthOfArrayLike$1 = lengthOfArrayLike$d;
  var isPrototypeOf$7 = objectIsPrototypeOf;
  var getIterator$6 = getIterator$8;
  var getIteratorMethod = getIteratorMethod$9;
  var iteratorClose = iteratorClose$2;
  var $TypeError$2 = TypeError;
  var Result = function (stopped, result) {
    this.stopped = stopped;
    this.result = result;
  };
  var ResultPrototype = Result.prototype;
  var iterate$7 = function (iterable, unboundFunction, options) {
    var that = options && options.that;
    var AS_ENTRIES = !!(options && options.AS_ENTRIES);
    var IS_RECORD = !!(options && options.IS_RECORD);
    var IS_ITERATOR = !!(options && options.IS_ITERATOR);
    var INTERRUPTED = !!(options && options.INTERRUPTED);
    var fn = bind$4(unboundFunction, that);
    var iterator, iterFn, index, length, result, next, step;
    var stop = function (condition) {
      if (iterator) iteratorClose(iterator, 'normal', condition);
      return new Result(true, condition);
    };
    var callFn = function (value) {
      if (AS_ENTRIES) {
        anObject$2(value);
        return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
      }
      return INTERRUPTED ? fn(value, stop) : fn(value);
    };
    if (IS_RECORD) {
      iterator = iterable.iterator;
    } else if (IS_ITERATOR) {
      iterator = iterable;
    } else {
      iterFn = getIteratorMethod(iterable);
      if (!iterFn) throw new $TypeError$2(tryToString(iterable) + ' is not iterable');
      // optimisation for array iterators
      if (isArrayIteratorMethod(iterFn)) {
        for (index = 0, length = lengthOfArrayLike$1(iterable); length > index; index++) {
          result = callFn(iterable[index]);
          if (result && isPrototypeOf$7(ResultPrototype, result)) return result;
        }
        return new Result(false);
      }
      iterator = getIterator$6(iterable, iterFn);
    }
    next = IS_RECORD ? iterable.next : iterator.next;
    while (!(step = call$6(next, iterator)).done) {
      try {
        result = callFn(step.value);
      } catch (error) {
        iteratorClose(iterator, 'throw', error);
      }
      if (typeof result == 'object' && result && isPrototypeOf$7(ResultPrototype, result)) return result;
    }
    return new Result(false);
  };
  var toString$1 = toString$7;
  var normalizeStringArgument$1 = function (argument, $default) {
    return argument === undefined ? arguments.length < 2 ? '' : $default : toString$1(argument);
  };
  var $$f = _export;
  var isPrototypeOf$6 = objectIsPrototypeOf;
  var getPrototypeOf = objectGetPrototypeOf;
  var setPrototypeOf = objectSetPrototypeOf;
  var copyConstructorProperties = copyConstructorProperties$1;
  var create$1 = objectCreate;
  var createNonEnumerableProperty$1 = createNonEnumerableProperty$9;
  var createPropertyDescriptor = createPropertyDescriptor$7;
  var installErrorCause = installErrorCause$1;
  var installErrorStack = errorStackInstall;
  var iterate$6 = iterate$7;
  var normalizeStringArgument = normalizeStringArgument$1;
  var wellKnownSymbol$3 = wellKnownSymbol$n;
  var TO_STRING_TAG = wellKnownSymbol$3('toStringTag');
  var $Error = Error;
  var push$1 = [].push;
  var $AggregateError = function AggregateError(errors, message /* , options */) {
    var isInstance = isPrototypeOf$6(AggregateErrorPrototype, this);
    var that;
    if (setPrototypeOf) {
      that = setPrototypeOf(new $Error(), isInstance ? getPrototypeOf(this) : AggregateErrorPrototype);
    } else {
      that = isInstance ? this : create$1(AggregateErrorPrototype);
      createNonEnumerableProperty$1(that, TO_STRING_TAG, 'Error');
    }
    if (message !== undefined) createNonEnumerableProperty$1(that, 'message', normalizeStringArgument(message));
    installErrorStack(that, $AggregateError, that.stack, 1);
    if (arguments.length > 2) installErrorCause(that, arguments[2]);
    var errorsArray = [];
    iterate$6(errors, push$1, {
      that: errorsArray
    });
    createNonEnumerableProperty$1(that, 'errors', errorsArray);
    return that;
  };
  if (setPrototypeOf) setPrototypeOf($AggregateError, $Error);else copyConstructorProperties($AggregateError, $Error, {
    name: true
  });
  var AggregateErrorPrototype = $AggregateError.prototype = create$1($Error.prototype, {
    constructor: createPropertyDescriptor(1, $AggregateError),
    message: createPropertyDescriptor(1, ''),
    name: createPropertyDescriptor(1, 'AggregateError')
  });

  // `AggregateError` constructor
  // https://tc39.es/ecma262/#sec-aggregate-error-constructor
  $$f({
    global: true,
    constructor: true,
    arity: 2
  }, {
    AggregateError: $AggregateError
  });
  var getBuiltIn$3 = getBuiltIn$f;
  var defineBuiltInAccessor$1 = defineBuiltInAccessor$3;
  var wellKnownSymbol$2 = wellKnownSymbol$n;
  var DESCRIPTORS$2 = descriptors;
  var SPECIES$2 = wellKnownSymbol$2('species');
  var setSpecies$2 = function (CONSTRUCTOR_NAME) {
    var Constructor = getBuiltIn$3(CONSTRUCTOR_NAME);
    if (DESCRIPTORS$2 && Constructor && !Constructor[SPECIES$2]) {
      defineBuiltInAccessor$1(Constructor, SPECIES$2, {
        configurable: true,
        get: function () {
          return this;
        }
      });
    }
  };
  var isPrototypeOf$5 = objectIsPrototypeOf;
  var $TypeError$1 = TypeError;
  var anInstance$3 = function (it, Prototype) {
    if (isPrototypeOf$5(Prototype, it)) return it;
    throw new $TypeError$1('Incorrect invocation');
  };
  var anObject$1 = anObject$d;
  var aConstructor = aConstructor$2;
  var isNullOrUndefined$2 = isNullOrUndefined$6;
  var wellKnownSymbol$1 = wellKnownSymbol$n;
  var SPECIES$1 = wellKnownSymbol$1('species');

  // `SpeciesConstructor` abstract operation
  // https://tc39.es/ecma262/#sec-speciesconstructor
  var speciesConstructor$2 = function (O, defaultConstructor) {
    var C = anObject$1(O).constructor;
    var S;
    return C === undefined || isNullOrUndefined$2(S = anObject$1(C)[SPECIES$1]) ? defaultConstructor : aConstructor(S);
  };
  var userAgent$4 = engineUserAgent;

  // eslint-disable-next-line redos/no-vulnerable -- safe
  var engineIsIos = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent$4);
  var global$6 = global$p;
  var apply = functionApply;
  var bind$3 = functionBindContext;
  var isCallable$4 = isCallable$m;
  var hasOwn$4 = hasOwnProperty_1;
  var fails$6 = fails$u;
  var html = html$2;
  var arraySlice$1 = arraySlice$5;
  var createElement = documentCreateElement$1;
  var validateArgumentsLength = validateArgumentsLength$2;
  var IS_IOS$1 = engineIsIos;
  var IS_NODE$3 = engineIsNode;
  var set$3 = global$6.setImmediate;
  var clear = global$6.clearImmediate;
  var process$2 = global$6.process;
  var Dispatch = global$6.Dispatch;
  var Function$1 = global$6.Function;
  var MessageChannel = global$6.MessageChannel;
  var String$1 = global$6.String;
  var counter = 0;
  var queue$2 = {};
  var ONREADYSTATECHANGE = 'onreadystatechange';
  var $location, defer, channel, port;
  fails$6(function () {
    // Deno throws a ReferenceError on `location` access without `--location` flag
    $location = global$6.location;
  });
  var run = function (id) {
    if (hasOwn$4(queue$2, id)) {
      var fn = queue$2[id];
      delete queue$2[id];
      fn();
    }
  };
  var runner = function (id) {
    return function () {
      run(id);
    };
  };
  var eventListener = function (event) {
    run(event.data);
  };
  var globalPostMessageDefer = function (id) {
    // old engines have not location.origin
    global$6.postMessage(String$1(id), $location.protocol + '//' + $location.host);
  };

  // Node.js 0.9+ & IE10+ has setImmediate, otherwise:
  if (!set$3 || !clear) {
    set$3 = function setImmediate(handler) {
      validateArgumentsLength(arguments.length, 1);
      var fn = isCallable$4(handler) ? handler : Function$1(handler);
      var args = arraySlice$1(arguments, 1);
      queue$2[++counter] = function () {
        apply(fn, undefined, args);
      };
      defer(counter);
      return counter;
    };
    clear = function clearImmediate(id) {
      delete queue$2[id];
    };
    // Node.js 0.8-
    if (IS_NODE$3) {
      defer = function (id) {
        process$2.nextTick(runner(id));
      };
      // Sphere (JS game engine) Dispatch API
    } else if (Dispatch && Dispatch.now) {
      defer = function (id) {
        Dispatch.now(runner(id));
      };
      // Browsers with MessageChannel, includes WebWorkers
      // except iOS - https://github.com/zloirock/core-js/issues/624
    } else if (MessageChannel && !IS_IOS$1) {
      channel = new MessageChannel();
      port = channel.port2;
      channel.port1.onmessage = eventListener;
      defer = bind$3(port.postMessage, port);
      // Browsers with postMessage, skip WebWorkers
      // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
    } else if (global$6.addEventListener && isCallable$4(global$6.postMessage) && !global$6.importScripts && $location && $location.protocol !== 'file:' && !fails$6(globalPostMessageDefer)) {
      defer = globalPostMessageDefer;
      global$6.addEventListener('message', eventListener, false);
      // IE8-
    } else if (ONREADYSTATECHANGE in createElement('script')) {
      defer = function (id) {
        html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {
          html.removeChild(this);
          run(id);
        };
      };
      // Rest old browsers
    } else {
      defer = function (id) {
        setTimeout(runner(id), 0);
      };
    }
  }
  var task$1 = {
    set: set$3,
    clear: clear
  };
  var Queue$3 = function () {
    this.head = null;
    this.tail = null;
  };
  Queue$3.prototype = {
    add: function (item) {
      var entry = {
        item: item,
        next: null
      };
      var tail = this.tail;
      if (tail) tail.next = entry;else this.head = entry;
      this.tail = entry;
    },
    get: function () {
      var entry = this.head;
      if (entry) {
        var next = this.head = entry.next;
        if (next === null) this.tail = null;
        return entry.item;
      }
    }
  };
  var queue$1 = Queue$3;
  var userAgent$3 = engineUserAgent;
  var engineIsIosPebble = /ipad|iphone|ipod/i.test(userAgent$3) && typeof Pebble != 'undefined';
  var userAgent$2 = engineUserAgent;
  var engineIsWebosWebkit = /web0s(?!.*chrome)/i.test(userAgent$2);
  var global$5 = global$p;
  var bind$2 = functionBindContext;
  var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;
  var macrotask = task$1.set;
  var Queue$2 = queue$1;
  var IS_IOS = engineIsIos;
  var IS_IOS_PEBBLE = engineIsIosPebble;
  var IS_WEBOS_WEBKIT = engineIsWebosWebkit;
  var IS_NODE$2 = engineIsNode;
  var MutationObserver = global$5.MutationObserver || global$5.WebKitMutationObserver;
  var document$2 = global$5.document;
  var process$1 = global$5.process;
  var Promise$1 = global$5.Promise;
  // Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
  var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global$5, 'queueMicrotask');
  var microtask$1 = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;
  var notify$1, toggle, node, promise$5, then;

  // modern engines have queueMicrotask method
  if (!microtask$1) {
    var queue = new Queue$2();
    var flush = function () {
      var parent, fn;
      if (IS_NODE$2 && (parent = process$1.domain)) parent.exit();
      while (fn = queue.get()) try {
        fn();
      } catch (error) {
        if (queue.head) notify$1();
        throw error;
      }
      if (parent) parent.enter();
    };

    // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
    // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898
    if (!IS_IOS && !IS_NODE$2 && !IS_WEBOS_WEBKIT && MutationObserver && document$2) {
      toggle = true;
      node = document$2.createTextNode('');
      new MutationObserver(flush).observe(node, {
        characterData: true
      });
      notify$1 = function () {
        node.data = toggle = !toggle;
      };
      // environments with maybe non-completely correct, but existent Promise
    } else if (!IS_IOS_PEBBLE && Promise$1 && Promise$1.resolve) {
      // Promise.resolve without an argument throws an error in LG WebOS 2
      promise$5 = Promise$1.resolve(undefined);
      // workaround of WebKit ~ iOS Safari 10.1 bug
      promise$5.constructor = Promise$1;
      then = bind$2(promise$5.then, promise$5);
      notify$1 = function () {
        then(flush);
      };
      // Node.js without promises
    } else if (IS_NODE$2) {
      notify$1 = function () {
        process$1.nextTick(flush);
      };
      // for other environments - macrotask based on:
      // - setImmediate
      // - MessageChannel
      // - window.postMessage
      // - onreadystatechange
      // - setTimeout
    } else {
      // `webpack` dev server bug on IE global methods - use bind(fn, global)
      macrotask = bind$2(macrotask, global$5);
      notify$1 = function () {
        macrotask(flush);
      };
    }
    microtask$1 = function (fn) {
      if (!queue.head) notify$1();
      queue.add(fn);
    };
  }
  var microtask_1 = microtask$1;
  var hostReportErrors$1 = function (a, b) {
    try {
      // eslint-disable-next-line no-console -- safe
      arguments.length === 1 ? console.error(a) : console.error(a, b);
    } catch (error) {/* empty */}
  };
  var perform$6 = function (exec) {
    try {
      return {
        error: false,
        value: exec()
      };
    } catch (error) {
      return {
        error: true,
        value: error
      };
    }
  };
  var global$4 = global$p;
  var promiseNativeConstructor = global$4.Promise;

  /* global Deno -- Deno case */
  var engineIsDeno = typeof Deno == 'object' && Deno && typeof Deno.version == 'object';
  var IS_DENO$1 = engineIsDeno;
  var IS_NODE$1 = engineIsNode;
  var engineIsBrowser = !IS_DENO$1 && !IS_NODE$1 && typeof window == 'object' && typeof document == 'object';
  var global$3 = global$p;
  var NativePromiseConstructor$5 = promiseNativeConstructor;
  var isCallable$3 = isCallable$m;
  var isForced = isForced_1;
  var inspectSource = inspectSource$2;
  var wellKnownSymbol = wellKnownSymbol$n;
  var IS_BROWSER = engineIsBrowser;
  var IS_DENO = engineIsDeno;
  var V8_VERSION = engineV8Version;
  var NativePromisePrototype$2 = NativePromiseConstructor$5 && NativePromiseConstructor$5.prototype;
  var SPECIES = wellKnownSymbol('species');
  var SUBCLASSING = false;
  var NATIVE_PROMISE_REJECTION_EVENT$1 = isCallable$3(global$3.PromiseRejectionEvent);
  var FORCED_PROMISE_CONSTRUCTOR$5 = isForced('Promise', function () {
    var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(NativePromiseConstructor$5);
    var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(NativePromiseConstructor$5);
    // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
    // We can't detect it synchronously, so just check versions
    if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION === 66) return true;
    // We need Promise#{ catch, finally } in the pure version for preventing prototype pollution
    if (!(NativePromisePrototype$2['catch'] && NativePromisePrototype$2['finally'])) return true;
    // We can't use @@species feature detection in V8 since it causes
    // deoptimization and performance degradation
    // https://github.com/zloirock/core-js/issues/679
    if (!V8_VERSION || V8_VERSION < 51 || !/native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) {
      // Detect correctness of subclassing with @@species support
      var promise = new NativePromiseConstructor$5(function (resolve) {
        resolve(1);
      });
      var FakePromise = function (exec) {
        exec(function () {/* empty */}, function () {/* empty */});
      };
      var constructor = promise.constructor = {};
      constructor[SPECIES] = FakePromise;
      SUBCLASSING = promise.then(function () {/* empty */}) instanceof FakePromise;
      if (!SUBCLASSING) return true;
      // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    }
    return !GLOBAL_CORE_JS_PROMISE && (IS_BROWSER || IS_DENO) && !NATIVE_PROMISE_REJECTION_EVENT$1;
  });
  var promiseConstructorDetection = {
    CONSTRUCTOR: FORCED_PROMISE_CONSTRUCTOR$5,
    REJECTION_EVENT: NATIVE_PROMISE_REJECTION_EVENT$1,
    SUBCLASSING: SUBCLASSING
  };
  var newPromiseCapability$2 = {};
  var aCallable$6 = aCallable$e;
  var $TypeError = TypeError;
  var PromiseCapability = function (C) {
    var resolve, reject;
    this.promise = new C(function ($$resolve, $$reject) {
      if (resolve !== undefined || reject !== undefined) throw new $TypeError('Bad Promise constructor');
      resolve = $$resolve;
      reject = $$reject;
    });
    this.resolve = aCallable$6(resolve);
    this.reject = aCallable$6(reject);
  };

  // `NewPromiseCapability` abstract operation
  // https://tc39.es/ecma262/#sec-newpromisecapability
  newPromiseCapability$2.f = function (C) {
    return new PromiseCapability(C);
  };
  var $$e = _export;
  var IS_NODE = engineIsNode;
  var global$2 = global$p;
  var call$5 = functionCall;
  var defineBuiltIn$1 = defineBuiltIn$6;
  var setToStringTag$1 = setToStringTag$7;
  var setSpecies$1 = setSpecies$2;
  var aCallable$5 = aCallable$e;
  var isCallable$2 = isCallable$m;
  var isObject$4 = isObject$h;
  var anInstance$2 = anInstance$3;
  var speciesConstructor$1 = speciesConstructor$2;
  var task = task$1.set;
  var microtask = microtask_1;
  var hostReportErrors = hostReportErrors$1;
  var perform$5 = perform$6;
  var Queue$1 = queue$1;
  var InternalStateModule$2 = internalState;
  var NativePromiseConstructor$4 = promiseNativeConstructor;
  var PromiseConstructorDetection = promiseConstructorDetection;
  var newPromiseCapabilityModule$7 = newPromiseCapability$2;
  var PROMISE = 'Promise';
  var FORCED_PROMISE_CONSTRUCTOR$4 = PromiseConstructorDetection.CONSTRUCTOR;
  var NATIVE_PROMISE_REJECTION_EVENT = PromiseConstructorDetection.REJECTION_EVENT;
  PromiseConstructorDetection.SUBCLASSING;
  var getInternalPromiseState = InternalStateModule$2.getterFor(PROMISE);
  var setInternalState$2 = InternalStateModule$2.set;
  var NativePromisePrototype$1 = NativePromiseConstructor$4 && NativePromiseConstructor$4.prototype;
  var PromiseConstructor = NativePromiseConstructor$4;
  var PromisePrototype = NativePromisePrototype$1;
  var TypeError$1 = global$2.TypeError;
  var document$1 = global$2.document;
  var process = global$2.process;
  var newPromiseCapability$1 = newPromiseCapabilityModule$7.f;
  var newGenericPromiseCapability = newPromiseCapability$1;
  var DISPATCH_EVENT = !!(document$1 && document$1.createEvent && global$2.dispatchEvent);
  var UNHANDLED_REJECTION = 'unhandledrejection';
  var REJECTION_HANDLED = 'rejectionhandled';
  var PENDING = 0;
  var FULFILLED = 1;
  var REJECTED = 2;
  var HANDLED = 1;
  var UNHANDLED = 2;
  var Internal, OwnPromiseCapability, PromiseWrapper;

  // helpers
  var isThenable = function (it) {
    var then;
    return isObject$4(it) && isCallable$2(then = it.then) ? then : false;
  };
  var callReaction = function (reaction, state) {
    var value = state.value;
    var ok = state.state === FULFILLED;
    var handler = ok ? reaction.ok : reaction.fail;
    var resolve = reaction.resolve;
    var reject = reaction.reject;
    var domain = reaction.domain;
    var result, then, exited;
    try {
      if (handler) {
        if (!ok) {
          if (state.rejection === UNHANDLED) onHandleUnhandled(state);
          state.rejection = HANDLED;
        }
        if (handler === true) result = value;else {
          if (domain) domain.enter();
          result = handler(value); // can throw
          if (domain) {
            domain.exit();
            exited = true;
          }
        }
        if (result === reaction.promise) {
          reject(new TypeError$1('Promise-chain cycle'));
        } else if (then = isThenable(result)) {
          call$5(then, result, resolve, reject);
        } else resolve(result);
      } else reject(value);
    } catch (error) {
      if (domain && !exited) domain.exit();
      reject(error);
    }
  };
  var notify = function (state, isReject) {
    if (state.notified) return;
    state.notified = true;
    microtask(function () {
      var reactions = state.reactions;
      var reaction;
      while (reaction = reactions.get()) {
        callReaction(reaction, state);
      }
      state.notified = false;
      if (isReject && !state.rejection) onUnhandled(state);
    });
  };
  var dispatchEvent = function (name, promise, reason) {
    var event, handler;
    if (DISPATCH_EVENT) {
      event = document$1.createEvent('Event');
      event.promise = promise;
      event.reason = reason;
      event.initEvent(name, false, true);
      global$2.dispatchEvent(event);
    } else event = {
      promise: promise,
      reason: reason
    };
    if (!NATIVE_PROMISE_REJECTION_EVENT && (handler = global$2['on' + name])) handler(event);else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);
  };
  var onUnhandled = function (state) {
    call$5(task, global$2, function () {
      var promise = state.facade;
      var value = state.value;
      var IS_UNHANDLED = isUnhandled(state);
      var result;
      if (IS_UNHANDLED) {
        result = perform$5(function () {
          if (IS_NODE) {
            process.emit('unhandledRejection', value, promise);
          } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
        });
        // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
        state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
        if (result.error) throw result.value;
      }
    });
  };
  var isUnhandled = function (state) {
    return state.rejection !== HANDLED && !state.parent;
  };
  var onHandleUnhandled = function (state) {
    call$5(task, global$2, function () {
      var promise = state.facade;
      if (IS_NODE) {
        process.emit('rejectionHandled', promise);
      } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
    });
  };
  var bind$1 = function (fn, state, unwrap) {
    return function (value) {
      fn(state, value, unwrap);
    };
  };
  var internalReject = function (state, value, unwrap) {
    if (state.done) return;
    state.done = true;
    if (unwrap) state = unwrap;
    state.value = value;
    state.state = REJECTED;
    notify(state, true);
  };
  var internalResolve = function (state, value, unwrap) {
    if (state.done) return;
    state.done = true;
    if (unwrap) state = unwrap;
    try {
      if (state.facade === value) throw new TypeError$1("Promise can't be resolved itself");
      var then = isThenable(value);
      if (then) {
        microtask(function () {
          var wrapper = {
            done: false
          };
          try {
            call$5(then, value, bind$1(internalResolve, wrapper, state), bind$1(internalReject, wrapper, state));
          } catch (error) {
            internalReject(wrapper, error, state);
          }
        });
      } else {
        state.value = value;
        state.state = FULFILLED;
        notify(state, false);
      }
    } catch (error) {
      internalReject({
        done: false
      }, error, state);
    }
  };

  // constructor polyfill
  if (FORCED_PROMISE_CONSTRUCTOR$4) {
    // 25.4.3.1 Promise(executor)
    PromiseConstructor = function Promise(executor) {
      anInstance$2(this, PromisePrototype);
      aCallable$5(executor);
      call$5(Internal, this);
      var state = getInternalPromiseState(this);
      try {
        executor(bind$1(internalResolve, state), bind$1(internalReject, state));
      } catch (error) {
        internalReject(state, error);
      }
    };
    PromisePrototype = PromiseConstructor.prototype;

    // eslint-disable-next-line no-unused-vars -- required for `.length`
    Internal = function Promise(executor) {
      setInternalState$2(this, {
        type: PROMISE,
        done: false,
        notified: false,
        parent: false,
        reactions: new Queue$1(),
        rejection: false,
        state: PENDING,
        value: undefined
      });
    };

    // `Promise.prototype.then` method
    // https://tc39.es/ecma262/#sec-promise.prototype.then
    Internal.prototype = defineBuiltIn$1(PromisePrototype, 'then', function then(onFulfilled, onRejected) {
      var state = getInternalPromiseState(this);
      var reaction = newPromiseCapability$1(speciesConstructor$1(this, PromiseConstructor));
      state.parent = true;
      reaction.ok = isCallable$2(onFulfilled) ? onFulfilled : true;
      reaction.fail = isCallable$2(onRejected) && onRejected;
      reaction.domain = IS_NODE ? process.domain : undefined;
      if (state.state === PENDING) state.reactions.add(reaction);else microtask(function () {
        callReaction(reaction, state);
      });
      return reaction.promise;
    });
    OwnPromiseCapability = function () {
      var promise = new Internal();
      var state = getInternalPromiseState(promise);
      this.promise = promise;
      this.resolve = bind$1(internalResolve, state);
      this.reject = bind$1(internalReject, state);
    };
    newPromiseCapabilityModule$7.f = newPromiseCapability$1 = function (C) {
      return C === PromiseConstructor || C === PromiseWrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);
    };
  }
  $$e({
    global: true,
    constructor: true,
    wrap: true,
    forced: FORCED_PROMISE_CONSTRUCTOR$4
  }, {
    Promise: PromiseConstructor
  });
  setToStringTag$1(PromiseConstructor, PROMISE, false, true);
  setSpecies$1(PROMISE);
  var NativePromiseConstructor$3 = promiseNativeConstructor;
  var checkCorrectnessOfIteration = checkCorrectnessOfIteration$2;
  var FORCED_PROMISE_CONSTRUCTOR$3 = promiseConstructorDetection.CONSTRUCTOR;
  var promiseStaticsIncorrectIteration = FORCED_PROMISE_CONSTRUCTOR$3 || !checkCorrectnessOfIteration(function (iterable) {
    NativePromiseConstructor$3.all(iterable).then(undefined, function () {/* empty */});
  });
  var $$d = _export;
  var call$4 = functionCall;
  var aCallable$4 = aCallable$e;
  var newPromiseCapabilityModule$6 = newPromiseCapability$2;
  var perform$4 = perform$6;
  var iterate$5 = iterate$7;
  var PROMISE_STATICS_INCORRECT_ITERATION$3 = promiseStaticsIncorrectIteration;

  // `Promise.all` method
  // https://tc39.es/ecma262/#sec-promise.all
  $$d({
    target: 'Promise',
    stat: true,
    forced: PROMISE_STATICS_INCORRECT_ITERATION$3
  }, {
    all: function all(iterable) {
      var C = this;
      var capability = newPromiseCapabilityModule$6.f(C);
      var resolve = capability.resolve;
      var reject = capability.reject;
      var result = perform$4(function () {
        var $promiseResolve = aCallable$4(C.resolve);
        var values = [];
        var counter = 0;
        var remaining = 1;
        iterate$5(iterable, function (promise) {
          var index = counter++;
          var alreadyCalled = false;
          remaining++;
          call$4($promiseResolve, C, promise).then(function (value) {
            if (alreadyCalled) return;
            alreadyCalled = true;
            values[index] = value;
            --remaining || resolve(values);
          }, reject);
        });
        --remaining || resolve(values);
      });
      if (result.error) reject(result.value);
      return capability.promise;
    }
  });
  var $$c = _export;
  var FORCED_PROMISE_CONSTRUCTOR$2 = promiseConstructorDetection.CONSTRUCTOR;
  var NativePromiseConstructor$2 = promiseNativeConstructor;
  NativePromiseConstructor$2 && NativePromiseConstructor$2.prototype;

  // `Promise.prototype.catch` method
  // https://tc39.es/ecma262/#sec-promise.prototype.catch
  $$c({
    target: 'Promise',
    proto: true,
    forced: FORCED_PROMISE_CONSTRUCTOR$2,
    real: true
  }, {
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  var $$b = _export;
  var call$3 = functionCall;
  var aCallable$3 = aCallable$e;
  var newPromiseCapabilityModule$5 = newPromiseCapability$2;
  var perform$3 = perform$6;
  var iterate$4 = iterate$7;
  var PROMISE_STATICS_INCORRECT_ITERATION$2 = promiseStaticsIncorrectIteration;

  // `Promise.race` method
  // https://tc39.es/ecma262/#sec-promise.race
  $$b({
    target: 'Promise',
    stat: true,
    forced: PROMISE_STATICS_INCORRECT_ITERATION$2
  }, {
    race: function race(iterable) {
      var C = this;
      var capability = newPromiseCapabilityModule$5.f(C);
      var reject = capability.reject;
      var result = perform$3(function () {
        var $promiseResolve = aCallable$3(C.resolve);
        iterate$4(iterable, function (promise) {
          call$3($promiseResolve, C, promise).then(capability.resolve, reject);
        });
      });
      if (result.error) reject(result.value);
      return capability.promise;
    }
  });
  var $$a = _export;
  var call$2 = functionCall;
  var newPromiseCapabilityModule$4 = newPromiseCapability$2;
  var FORCED_PROMISE_CONSTRUCTOR$1 = promiseConstructorDetection.CONSTRUCTOR;

  // `Promise.reject` method
  // https://tc39.es/ecma262/#sec-promise.reject
  $$a({
    target: 'Promise',
    stat: true,
    forced: FORCED_PROMISE_CONSTRUCTOR$1
  }, {
    reject: function reject(r) {
      var capability = newPromiseCapabilityModule$4.f(this);
      call$2(capability.reject, undefined, r);
      return capability.promise;
    }
  });
  var anObject = anObject$d;
  var isObject$3 = isObject$h;
  var newPromiseCapability = newPromiseCapability$2;
  var promiseResolve$2 = function (C, x) {
    anObject(C);
    if (isObject$3(x) && x.constructor === C) return x;
    var promiseCapability = newPromiseCapability.f(C);
    var resolve = promiseCapability.resolve;
    resolve(x);
    return promiseCapability.promise;
  };
  var $$9 = _export;
  var getBuiltIn$2 = getBuiltIn$f;
  var IS_PURE = isPure;
  var NativePromiseConstructor$1 = promiseNativeConstructor;
  var FORCED_PROMISE_CONSTRUCTOR = promiseConstructorDetection.CONSTRUCTOR;
  var promiseResolve$1 = promiseResolve$2;
  var PromiseConstructorWrapper = getBuiltIn$2('Promise');
  var CHECK_WRAPPER = !FORCED_PROMISE_CONSTRUCTOR;

  // `Promise.resolve` method
  // https://tc39.es/ecma262/#sec-promise.resolve
  $$9({
    target: 'Promise',
    stat: true,
    forced: IS_PURE
  }, {
    resolve: function resolve(x) {
      return promiseResolve$1(CHECK_WRAPPER && this === PromiseConstructorWrapper ? NativePromiseConstructor$1 : this, x);
    }
  });
  var $$8 = _export;
  var call$1 = functionCall;
  var aCallable$2 = aCallable$e;
  var newPromiseCapabilityModule$3 = newPromiseCapability$2;
  var perform$2 = perform$6;
  var iterate$3 = iterate$7;
  var PROMISE_STATICS_INCORRECT_ITERATION$1 = promiseStaticsIncorrectIteration;

  // `Promise.allSettled` method
  // https://tc39.es/ecma262/#sec-promise.allsettled
  $$8({
    target: 'Promise',
    stat: true,
    forced: PROMISE_STATICS_INCORRECT_ITERATION$1
  }, {
    allSettled: function allSettled(iterable) {
      var C = this;
      var capability = newPromiseCapabilityModule$3.f(C);
      var resolve = capability.resolve;
      var reject = capability.reject;
      var result = perform$2(function () {
        var promiseResolve = aCallable$2(C.resolve);
        var values = [];
        var counter = 0;
        var remaining = 1;
        iterate$3(iterable, function (promise) {
          var index = counter++;
          var alreadyCalled = false;
          remaining++;
          call$1(promiseResolve, C, promise).then(function (value) {
            if (alreadyCalled) return;
            alreadyCalled = true;
            values[index] = {
              status: 'fulfilled',
              value: value
            };
            --remaining || resolve(values);
          }, function (error) {
            if (alreadyCalled) return;
            alreadyCalled = true;
            values[index] = {
              status: 'rejected',
              reason: error
            };
            --remaining || resolve(values);
          });
        });
        --remaining || resolve(values);
      });
      if (result.error) reject(result.value);
      return capability.promise;
    }
  });
  var $$7 = _export;
  var call = functionCall;
  var aCallable$1 = aCallable$e;
  var getBuiltIn$1 = getBuiltIn$f;
  var newPromiseCapabilityModule$2 = newPromiseCapability$2;
  var perform$1 = perform$6;
  var iterate$2 = iterate$7;
  var PROMISE_STATICS_INCORRECT_ITERATION = promiseStaticsIncorrectIteration;
  var PROMISE_ANY_ERROR = 'No one promise resolved';

  // `Promise.any` method
  // https://tc39.es/ecma262/#sec-promise.any
  $$7({
    target: 'Promise',
    stat: true,
    forced: PROMISE_STATICS_INCORRECT_ITERATION
  }, {
    any: function any(iterable) {
      var C = this;
      var AggregateError = getBuiltIn$1('AggregateError');
      var capability = newPromiseCapabilityModule$2.f(C);
      var resolve = capability.resolve;
      var reject = capability.reject;
      var result = perform$1(function () {
        var promiseResolve = aCallable$1(C.resolve);
        var errors = [];
        var counter = 0;
        var remaining = 1;
        var alreadyResolved = false;
        iterate$2(iterable, function (promise) {
          var index = counter++;
          var alreadyRejected = false;
          remaining++;
          call(promiseResolve, C, promise).then(function (value) {
            if (alreadyRejected || alreadyResolved) return;
            alreadyResolved = true;
            resolve(value);
          }, function (error) {
            if (alreadyRejected || alreadyResolved) return;
            alreadyRejected = true;
            errors[index] = error;
            --remaining || reject(new AggregateError(errors, PROMISE_ANY_ERROR));
          });
        });
        --remaining || reject(new AggregateError(errors, PROMISE_ANY_ERROR));
      });
      if (result.error) reject(result.value);
      return capability.promise;
    }
  });
  var $$6 = _export;
  var NativePromiseConstructor = promiseNativeConstructor;
  var fails$5 = fails$u;
  var getBuiltIn = getBuiltIn$f;
  var isCallable$1 = isCallable$m;
  var speciesConstructor = speciesConstructor$2;
  var promiseResolve = promiseResolve$2;
  var NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;

  // Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829
  var NON_GENERIC = !!NativePromiseConstructor && fails$5(function () {
    // eslint-disable-next-line unicorn/no-thenable -- required for testing
    NativePromisePrototype['finally'].call({
      then: function () {/* empty */}
    }, function () {/* empty */});
  });

  // `Promise.prototype.finally` method
  // https://tc39.es/ecma262/#sec-promise.prototype.finally
  $$6({
    target: 'Promise',
    proto: true,
    real: true,
    forced: NON_GENERIC
  }, {
    'finally': function (onFinally) {
      var C = speciesConstructor(this, getBuiltIn('Promise'));
      var isFunction = isCallable$1(onFinally);
      return this.then(isFunction ? function (x) {
        return promiseResolve(C, onFinally()).then(function () {
          return x;
        });
      } : onFinally, isFunction ? function (e) {
        return promiseResolve(C, onFinally()).then(function () {
          throw e;
        });
      } : onFinally);
    }
  });
  var path$2 = path$o;
  var promise$4 = path$2.Promise;
  var parent$e = promise$4;
  var promise$3 = parent$e;
  var $$5 = _export;
  var newPromiseCapabilityModule$1 = newPromiseCapability$2;

  // `Promise.withResolvers` method
  // https://github.com/tc39/proposal-promise-with-resolvers
  $$5({
    target: 'Promise',
    stat: true
  }, {
    withResolvers: function withResolvers() {
      var promiseCapability = newPromiseCapabilityModule$1.f(this);
      return {
        promise: promiseCapability.promise,
        resolve: promiseCapability.resolve,
        reject: promiseCapability.reject
      };
    }
  });
  var parent$d = promise$3;
  var promise$2 = parent$d;

  // TODO: Remove from `core-js@4`
  var $$4 = _export;
  var newPromiseCapabilityModule = newPromiseCapability$2;
  var perform = perform$6;

  // `Promise.try` method
  // https://github.com/tc39/proposal-promise-try
  $$4({
    target: 'Promise',
    stat: true,
    forced: true
  }, {
    'try': function (callbackfn) {
      var promiseCapability = newPromiseCapabilityModule.f(this);
      var result = perform(callbackfn);
      (result.error ? promiseCapability.reject : promiseCapability.resolve)(result.value);
      return promiseCapability.promise;
    }
  });
  var parent$c = promise$2;
  // TODO: Remove from `core-js@4`

  var promise$1 = parent$c;
  var promise = promise$1;
  var parent$b = reverse$4;
  var reverse$2 = parent$b;
  var parent$a = reverse$2;
  var reverse$1 = parent$a;
  var reverse = reverse$1;
  (function (module) {
    var _typeof = _typeofExports["default"];
    var _Object$defineProperty = defineProperty$8;
    var _Symbol = symbol$1;
    var _Object$create = create$2;
    var _Object$getPrototypeOf = getPrototypeOf$1;
    var _forEachInstanceProperty = forEach$1;
    var _pushInstanceProperty = push$3;
    var _Object$setPrototypeOf = setPrototypeOf$1;
    var _Promise = promise;
    var _reverseInstanceProperty = reverse;
    var _sliceInstanceProperty = slice$1;
    function _regeneratorRuntime() {
      module.exports = _regeneratorRuntime = function _regeneratorRuntime() {
        return e;
      }, module.exports.__esModule = true, module.exports["default"] = module.exports;
      var t,
        e = {},
        r = Object.prototype,
        n = r.hasOwnProperty,
        o = _Object$defineProperty || function (t, e, r) {
          t[e] = r.value;
        },
        i = "function" == typeof _Symbol ? _Symbol : {},
        a = i.iterator || "@@iterator",
        c = i.asyncIterator || "@@asyncIterator",
        u = i.toStringTag || "@@toStringTag";
      function define(t, e, r) {
        return _Object$defineProperty(t, e, {
          value: r,
          enumerable: !0,
          configurable: !0,
          writable: !0
        }), t[e];
      }
      try {
        define({}, "");
      } catch (t) {
        define = function define(t, e, r) {
          return t[e] = r;
        };
      }
      function wrap(t, e, r, n) {
        var i = e && e.prototype instanceof Generator ? e : Generator,
          a = _Object$create(i.prototype),
          c = new Context(n || []);
        return o(a, "_invoke", {
          value: makeInvokeMethod(t, r, c)
        }), a;
      }
      function tryCatch(t, e, r) {
        try {
          return {
            type: "normal",
            arg: t.call(e, r)
          };
        } catch (t) {
          return {
            type: "throw",
            arg: t
          };
        }
      }
      e.wrap = wrap;
      var h = "suspendedStart",
        l = "suspendedYield",
        f = "executing",
        s = "completed",
        y = {};
      function Generator() {}
      function GeneratorFunction() {}
      function GeneratorFunctionPrototype() {}
      var p = {};
      define(p, a, function () {
        return this;
      });
      var d = _Object$getPrototypeOf,
        v = d && d(d(values([])));
      v && v !== r && n.call(v, a) && (p = v);
      var g = GeneratorFunctionPrototype.prototype = Generator.prototype = _Object$create(p);
      function defineIteratorMethods(t) {
        var _context;
        _forEachInstanceProperty(_context = ["next", "throw", "return"]).call(_context, function (e) {
          define(t, e, function (t) {
            return this._invoke(e, t);
          });
        });
      }
      function AsyncIterator(t, e) {
        function invoke(r, o, i, a) {
          var c = tryCatch(t[r], t, o);
          if ("throw" !== c.type) {
            var u = c.arg,
              h = u.value;
            return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) {
              invoke("next", t, i, a);
            }, function (t) {
              invoke("throw", t, i, a);
            }) : e.resolve(h).then(function (t) {
              u.value = t, i(u);
            }, function (t) {
              return invoke("throw", t, i, a);
            });
          }
          a(c.arg);
        }
        var r;
        o(this, "_invoke", {
          value: function value(t, n) {
            function callInvokeWithMethodAndArg() {
              return new e(function (e, r) {
                invoke(t, n, e, r);
              });
            }
            return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
          }
        });
      }
      function makeInvokeMethod(e, r, n) {
        var o = h;
        return function (i, a) {
          if (o === f) throw new Error("Generator is already running");
          if (o === s) {
            if ("throw" === i) throw a;
            return {
              value: t,
              done: !0
            };
          }
          for (n.method = i, n.arg = a;;) {
            var c = n.delegate;
            if (c) {
              var u = maybeInvokeDelegate(c, n);
              if (u) {
                if (u === y) continue;
                return u;
              }
            }
            if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) {
              if (o === h) throw o = s, n.arg;
              n.dispatchException(n.arg);
            } else "return" === n.method && n.abrupt("return", n.arg);
            o = f;
            var p = tryCatch(e, r, n);
            if ("normal" === p.type) {
              if (o = n.done ? s : l, p.arg === y) continue;
              return {
                value: p.arg,
                done: n.done
              };
            }
            "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);
          }
        };
      }
      function maybeInvokeDelegate(e, r) {
        var n = r.method,
          o = e.iterator[n];
        if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y;
        var i = tryCatch(o, e.iterator, r.arg);
        if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;
        var a = i.arg;
        return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);
      }
      function pushTryEntry(t) {
        var _context2;
        var e = {
          tryLoc: t[0]
        };
        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), _pushInstanceProperty(_context2 = this.tryEntries).call(_context2, e);
      }
      function resetTryEntry(t) {
        var e = t.completion || {};
        e.type = "normal", delete e.arg, t.completion = e;
      }
      function Context(t) {
        this.tryEntries = [{
          tryLoc: "root"
        }], _forEachInstanceProperty(t).call(t, pushTryEntry, this), this.reset(!0);
      }
      function values(e) {
        if (e || "" === e) {
          var r = e[a];
          if (r) return r.call(e);
          if ("function" == typeof e.next) return e;
          if (!isNaN(e.length)) {
            var o = -1,
              i = function next() {
                for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;
                return next.value = t, next.done = !0, next;
              };
            return i.next = i;
          }
        }
        throw new TypeError(_typeof(e) + " is not iterable");
      }
      return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {
        value: GeneratorFunctionPrototype,
        configurable: !0
      }), o(GeneratorFunctionPrototype, "constructor", {
        value: GeneratorFunction,
        configurable: !0
      }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) {
        var e = "function" == typeof t && t.constructor;
        return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));
      }, e.mark = function (t) {
        return _Object$setPrototypeOf ? _Object$setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = _Object$create(g), t;
      }, e.awrap = function (t) {
        return {
          __await: t
        };
      }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {
        return this;
      }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {
        void 0 === i && (i = _Promise);
        var a = new AsyncIterator(wrap(t, r, n, o), i);
        return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {
          return t.done ? t.value : a.next();
        });
      }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () {
        return this;
      }), define(g, "toString", function () {
        return "[object Generator]";
      }), e.keys = function (t) {
        var e = Object(t),
          r = [];
        for (var n in e) _pushInstanceProperty(r).call(r, n);
        return _reverseInstanceProperty(r).call(r), function next() {
          for (; r.length;) {
            var t = r.pop();
            if (t in e) return next.value = t, next.done = !1, next;
          }
          return next.done = !0, next;
        };
      }, e.values = values, Context.prototype = {
        constructor: Context,
        reset: function reset(e) {
          var _context3;
          if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, _forEachInstanceProperty(_context3 = this.tryEntries).call(_context3, resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+_sliceInstanceProperty(r).call(r, 1)) && (this[r] = t);
        },
        stop: function stop() {
          this.done = !0;
          var t = this.tryEntries[0].completion;
          if ("throw" === t.type) throw t.arg;
          return this.rval;
        },
        dispatchException: function dispatchException(e) {
          if (this.done) throw e;
          var r = this;
          function handle(n, o) {
            return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
          }
          for (var o = this.tryEntries.length - 1; o >= 0; --o) {
            var i = this.tryEntries[o],
              a = i.completion;
            if ("root" === i.tryLoc) return handle("end");
            if (i.tryLoc <= this.prev) {
              var c = n.call(i, "catchLoc"),
                u = n.call(i, "finallyLoc");
              if (c && u) {
                if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
              } else if (c) {
                if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
              } else {
                if (!u) throw new Error("try statement without catch or finally");
                if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
              }
            }
          }
        },
        abrupt: function abrupt(t, e) {
          for (var r = this.tryEntries.length - 1; r >= 0; --r) {
            var o = this.tryEntries[r];
            if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
              var i = o;
              break;
            }
          }
          i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
          var a = i ? i.completion : {};
          return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);
        },
        complete: function complete(t, e) {
          if ("throw" === t.type) throw t.arg;
          return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;
        },
        finish: function finish(t) {
          for (var e = this.tryEntries.length - 1; e >= 0; --e) {
            var r = this.tryEntries[e];
            if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;
          }
        },
        "catch": function _catch(t) {
          for (var e = this.tryEntries.length - 1; e >= 0; --e) {
            var r = this.tryEntries[e];
            if (r.tryLoc === t) {
              var n = r.completion;
              if ("throw" === n.type) {
                var o = n.arg;
                resetTryEntry(r);
              }
              return o;
            }
          }
          throw new Error("illegal catch attempt");
        },
        delegateYield: function delegateYield(e, r, n) {
          return this.delegate = {
            iterator: values(e),
            resultName: r,
            nextLoc: n
          }, "next" === this.method && (this.arg = t), y;
        }
      }, e;
    }
    module.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports["default"] = module.exports;
  })(regeneratorRuntime$1);
  var regeneratorRuntimeExports = regeneratorRuntime$1.exports;

  // TODO(Babel 8): Remove this file.

  var runtime = regeneratorRuntimeExports();
  var regenerator = runtime;

  // Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=
  try {
    regeneratorRuntime = runtime;
  } catch (accidentalStrictMode) {
    if (typeof globalThis === "object") {
      globalThis.regeneratorRuntime = runtime;
    } else {
      Function("r", "regeneratorRuntime = r")(runtime);
    }
  }
  var _regeneratorRuntime = /*@__PURE__*/getDefaultExportFromCjs(regenerator);
  var internalMetadata = {
    exports: {}
  };

  // FF26- bug: ArrayBuffers are non-extensible, but Object.isExtensible does not report it
  var fails$4 = fails$u;
  var arrayBufferNonExtensible = fails$4(function () {
    if (typeof ArrayBuffer == 'function') {
      var buffer = new ArrayBuffer(8);
      // eslint-disable-next-line es/no-object-isextensible, es/no-object-defineproperty -- safe
      if (Object.isExtensible(buffer)) Object.defineProperty(buffer, 'a', {
        value: 8
      });
    }
  });
  var fails$3 = fails$u;
  var isObject$2 = isObject$h;
  var classof$3 = classofRaw$2;
  var ARRAY_BUFFER_NON_EXTENSIBLE = arrayBufferNonExtensible;

  // eslint-disable-next-line es/no-object-isextensible -- safe
  var $isExtensible = Object.isExtensible;
  var FAILS_ON_PRIMITIVES = fails$3(function () {
    $isExtensible(1);
  });

  // `Object.isExtensible` method
  // https://tc39.es/ecma262/#sec-object.isextensible
  var objectIsExtensible = FAILS_ON_PRIMITIVES || ARRAY_BUFFER_NON_EXTENSIBLE ? function isExtensible(it) {
    if (!isObject$2(it)) return false;
    if (ARRAY_BUFFER_NON_EXTENSIBLE && classof$3(it) === 'ArrayBuffer') return false;
    return $isExtensible ? $isExtensible(it) : true;
  } : $isExtensible;
  var fails$2 = fails$u;
  var freezing = !fails$2(function () {
    // eslint-disable-next-line es/no-object-isextensible, es/no-object-preventextensions -- required for testing
    return Object.isExtensible(Object.preventExtensions({}));
  });
  var $$3 = _export;
  var uncurryThis$1 = functionUncurryThis;
  var hiddenKeys = hiddenKeys$6;
  var isObject$1 = isObject$h;
  var hasOwn$3 = hasOwnProperty_1;
  var defineProperty$1 = objectDefineProperty.f;
  var getOwnPropertyNamesModule = objectGetOwnPropertyNames;
  var getOwnPropertyNamesExternalModule = objectGetOwnPropertyNamesExternal;
  var isExtensible = objectIsExtensible;
  var uid = uid$4;
  var FREEZING = freezing;
  var REQUIRED = false;
  var METADATA = uid('meta');
  var id = 0;
  var setMetadata = function (it) {
    defineProperty$1(it, METADATA, {
      value: {
        objectID: 'O' + id++,
        // object ID
        weakData: {} // weak collections IDs
      }
    });
  };

  var fastKey$1 = function (it, create) {
    // return a primitive with prefix
    if (!isObject$1(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
    if (!hasOwn$3(it, METADATA)) {
      // can't set metadata to uncaught frozen object
      if (!isExtensible(it)) return 'F';
      // not necessary to add metadata
      if (!create) return 'E';
      // add missing metadata
      setMetadata(it);
      // return object ID
    }
    return it[METADATA].objectID;
  };
  var getWeakData = function (it, create) {
    if (!hasOwn$3(it, METADATA)) {
      // can't set metadata to uncaught frozen object
      if (!isExtensible(it)) return true;
      // not necessary to add metadata
      if (!create) return false;
      // add missing metadata
      setMetadata(it);
      // return the store of weak collections IDs
    }
    return it[METADATA].weakData;
  };

  // add metadata on freeze-family methods calling
  var onFreeze = function (it) {
    if (FREEZING && REQUIRED && isExtensible(it) && !hasOwn$3(it, METADATA)) setMetadata(it);
    return it;
  };
  var enable = function () {
    meta.enable = function () {/* empty */};
    REQUIRED = true;
    var getOwnPropertyNames = getOwnPropertyNamesModule.f;
    var splice = uncurryThis$1([].splice);
    var test = {};
    test[METADATA] = 1;

    // prevent exposing of metadata key
    if (getOwnPropertyNames(test).length) {
      getOwnPropertyNamesModule.f = function (it) {
        var result = getOwnPropertyNames(it);
        for (var i = 0, length = result.length; i < length; i++) {
          if (result[i] === METADATA) {
            splice(result, i, 1);
            break;
          }
        }
        return result;
      };
      $$3({
        target: 'Object',
        stat: true,
        forced: true
      }, {
        getOwnPropertyNames: getOwnPropertyNamesExternalModule.f
      });
    }
  };
  var meta = internalMetadata.exports = {
    enable: enable,
    fastKey: fastKey$1,
    getWeakData: getWeakData,
    onFreeze: onFreeze
  };
  hiddenKeys[METADATA] = true;
  var internalMetadataExports = internalMetadata.exports;
  var $$2 = _export;
  var global$1 = global$p;
  var InternalMetadataModule = internalMetadataExports;
  var fails$1 = fails$u;
  var createNonEnumerableProperty = createNonEnumerableProperty$9;
  var iterate$1 = iterate$7;
  var anInstance$1 = anInstance$3;
  var isCallable = isCallable$m;
  var isObject = isObject$h;
  var isNullOrUndefined$1 = isNullOrUndefined$6;
  var setToStringTag = setToStringTag$7;
  var defineProperty = objectDefineProperty.f;
  var forEach = arrayIteration.forEach;
  var DESCRIPTORS$1 = descriptors;
  var InternalStateModule$1 = internalState;
  var setInternalState$1 = InternalStateModule$1.set;
  var internalStateGetterFor$1 = InternalStateModule$1.getterFor;
  var collection$2 = function (CONSTRUCTOR_NAME, wrapper, common) {
    var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;
    var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;
    var ADDER = IS_MAP ? 'set' : 'add';
    var NativeConstructor = global$1[CONSTRUCTOR_NAME];
    var NativePrototype = NativeConstructor && NativeConstructor.prototype;
    var exported = {};
    var Constructor;
    if (!DESCRIPTORS$1 || !isCallable(NativeConstructor) || !(IS_WEAK || NativePrototype.forEach && !fails$1(function () {
      new NativeConstructor().entries().next();
    }))) {
      // create collection constructor
      Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
      InternalMetadataModule.enable();
    } else {
      Constructor = wrapper(function (target, iterable) {
        setInternalState$1(anInstance$1(target, Prototype), {
          type: CONSTRUCTOR_NAME,
          collection: new NativeConstructor()
        });
        if (!isNullOrUndefined$1(iterable)) iterate$1(iterable, target[ADDER], {
          that: target,
          AS_ENTRIES: IS_MAP
        });
      });
      var Prototype = Constructor.prototype;
      var getInternalState = internalStateGetterFor$1(CONSTRUCTOR_NAME);
      forEach(['add', 'clear', 'delete', 'forEach', 'get', 'has', 'set', 'keys', 'values', 'entries'], function (KEY) {
        var IS_ADDER = KEY === 'add' || KEY === 'set';
        if (KEY in NativePrototype && !(IS_WEAK && KEY === 'clear')) {
          createNonEnumerableProperty(Prototype, KEY, function (a, b) {
            var collection = getInternalState(this).collection;
            if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY === 'get' ? undefined : false;
            var result = collection[KEY](a === 0 ? 0 : a, b);
            return IS_ADDER ? this : result;
          });
        }
      });
      IS_WEAK || defineProperty(Prototype, 'size', {
        configurable: true,
        get: function () {
          return getInternalState(this).collection.size;
        }
      });
    }
    setToStringTag(Constructor, CONSTRUCTOR_NAME, false, true);
    exported[CONSTRUCTOR_NAME] = Constructor;
    $$2({
      global: true,
      forced: true
    }, exported);
    if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);
    return Constructor;
  };
  var defineBuiltIn = defineBuiltIn$6;
  var defineBuiltIns$1 = function (target, src, options) {
    for (var key in src) {
      if (options && options.unsafe && target[key]) target[key] = src[key];else defineBuiltIn(target, key, src[key], options);
    }
    return target;
  };
  var create = objectCreate;
  var defineBuiltInAccessor = defineBuiltInAccessor$3;
  var defineBuiltIns = defineBuiltIns$1;
  var bind = functionBindContext;
  var anInstance = anInstance$3;
  var isNullOrUndefined = isNullOrUndefined$6;
  var iterate = iterate$7;
  var defineIterator = iteratorDefine;
  var createIterResultObject = createIterResultObject$3;
  var setSpecies = setSpecies$2;
  var DESCRIPTORS = descriptors;
  var fastKey = internalMetadataExports.fastKey;
  var InternalStateModule = internalState;
  var setInternalState = InternalStateModule.set;
  var internalStateGetterFor = InternalStateModule.getterFor;
  var collectionStrong$2 = {
    getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
      var Constructor = wrapper(function (that, iterable) {
        anInstance(that, Prototype);
        setInternalState(that, {
          type: CONSTRUCTOR_NAME,
          index: create(null),
          first: undefined,
          last: undefined,
          size: 0
        });
        if (!DESCRIPTORS) that.size = 0;
        if (!isNullOrUndefined(iterable)) iterate(iterable, that[ADDER], {
          that: that,
          AS_ENTRIES: IS_MAP
        });
      });
      var Prototype = Constructor.prototype;
      var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);
      var define = function (that, key, value) {
        var state = getInternalState(that);
        var entry = getEntry(that, key);
        var previous, index;
        // change existing entry
        if (entry) {
          entry.value = value;
          // create new entry
        } else {
          state.last = entry = {
            index: index = fastKey(key, true),
            key: key,
            value: value,
            previous: previous = state.last,
            next: undefined,
            removed: false
          };
          if (!state.first) state.first = entry;
          if (previous) previous.next = entry;
          if (DESCRIPTORS) state.size++;else that.size++;
          // add to index
          if (index !== 'F') state.index[index] = entry;
        }
        return that;
      };
      var getEntry = function (that, key) {
        var state = getInternalState(that);
        // fast case
        var index = fastKey(key);
        var entry;
        if (index !== 'F') return state.index[index];
        // frozen object case
        for (entry = state.first; entry; entry = entry.next) {
          if (entry.key === key) return entry;
        }
      };
      defineBuiltIns(Prototype, {
        // `{ Map, Set }.prototype.clear()` methods
        // https://tc39.es/ecma262/#sec-map.prototype.clear
        // https://tc39.es/ecma262/#sec-set.prototype.clear
        clear: function clear() {
          var that = this;
          var state = getInternalState(that);
          var data = state.index;
          var entry = state.first;
          while (entry) {
            entry.removed = true;
            if (entry.previous) entry.previous = entry.previous.next = undefined;
            delete data[entry.index];
            entry = entry.next;
          }
          state.first = state.last = undefined;
          if (DESCRIPTORS) state.size = 0;else that.size = 0;
        },
        // `{ Map, Set }.prototype.delete(key)` methods
        // https://tc39.es/ecma262/#sec-map.prototype.delete
        // https://tc39.es/ecma262/#sec-set.prototype.delete
        'delete': function (key) {
          var that = this;
          var state = getInternalState(that);
          var entry = getEntry(that, key);
          if (entry) {
            var next = entry.next;
            var prev = entry.previous;
            delete state.index[entry.index];
            entry.removed = true;
            if (prev) prev.next = next;
            if (next) next.previous = prev;
            if (state.first === entry) state.first = next;
            if (state.last === entry) state.last = prev;
            if (DESCRIPTORS) state.size--;else that.size--;
          }
          return !!entry;
        },
        // `{ Map, Set }.prototype.forEach(callbackfn, thisArg = undefined)` methods
        // https://tc39.es/ecma262/#sec-map.prototype.foreach
        // https://tc39.es/ecma262/#sec-set.prototype.foreach
        forEach: function forEach(callbackfn /* , that = undefined */) {
          var state = getInternalState(this);
          var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined);
          var entry;
          while (entry = entry ? entry.next : state.first) {
            boundFunction(entry.value, entry.key, this);
            // revert to the last existing entry
            while (entry && entry.removed) entry = entry.previous;
          }
        },
        // `{ Map, Set}.prototype.has(key)` methods
        // https://tc39.es/ecma262/#sec-map.prototype.has
        // https://tc39.es/ecma262/#sec-set.prototype.has
        has: function has(key) {
          return !!getEntry(this, key);
        }
      });
      defineBuiltIns(Prototype, IS_MAP ? {
        // `Map.prototype.get(key)` method
        // https://tc39.es/ecma262/#sec-map.prototype.get
        get: function get(key) {
          var entry = getEntry(this, key);
          return entry && entry.value;
        },
        // `Map.prototype.set(key, value)` method
        // https://tc39.es/ecma262/#sec-map.prototype.set
        set: function set(key, value) {
          return define(this, key === 0 ? 0 : key, value);
        }
      } : {
        // `Set.prototype.add(value)` method
        // https://tc39.es/ecma262/#sec-set.prototype.add
        add: function add(value) {
          return define(this, value = value === 0 ? 0 : value, value);
        }
      });
      if (DESCRIPTORS) defineBuiltInAccessor(Prototype, 'size', {
        configurable: true,
        get: function () {
          return getInternalState(this).size;
        }
      });
      return Constructor;
    },
    setStrong: function (Constructor, CONSTRUCTOR_NAME, IS_MAP) {
      var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';
      var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);
      var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);
      // `{ Map, Set }.prototype.{ keys, values, entries, @@iterator }()` methods
      // https://tc39.es/ecma262/#sec-map.prototype.entries
      // https://tc39.es/ecma262/#sec-map.prototype.keys
      // https://tc39.es/ecma262/#sec-map.prototype.values
      // https://tc39.es/ecma262/#sec-map.prototype-@@iterator
      // https://tc39.es/ecma262/#sec-set.prototype.entries
      // https://tc39.es/ecma262/#sec-set.prototype.keys
      // https://tc39.es/ecma262/#sec-set.prototype.values
      // https://tc39.es/ecma262/#sec-set.prototype-@@iterator
      defineIterator(Constructor, CONSTRUCTOR_NAME, function (iterated, kind) {
        setInternalState(this, {
          type: ITERATOR_NAME,
          target: iterated,
          state: getInternalCollectionState(iterated),
          kind: kind,
          last: undefined
        });
      }, function () {
        var state = getInternalIteratorState(this);
        var kind = state.kind;
        var entry = state.last;
        // revert to the last existing entry
        while (entry && entry.removed) entry = entry.previous;
        // get next entry
        if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {
          // or finish the iteration
          state.target = undefined;
          return createIterResultObject(undefined, true);
        }
        // return step by kind
        if (kind === 'keys') return createIterResultObject(entry.key, false);
        if (kind === 'values') return createIterResultObject(entry.value, false);
        return createIterResultObject([entry.key, entry.value], false);
      }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

      // `{ Map, Set }.prototype[@@species]` accessors
      // https://tc39.es/ecma262/#sec-get-map-@@species
      // https://tc39.es/ecma262/#sec-get-set-@@species
      setSpecies(CONSTRUCTOR_NAME);
    }
  };
  var collection$1 = collection$2;
  var collectionStrong$1 = collectionStrong$2;

  // `Map` constructor
  // https://tc39.es/ecma262/#sec-map-objects
  collection$1('Map', function (init) {
    return function Map() {
      return init(this, arguments.length ? arguments[0] : undefined);
    };
  }, collectionStrong$1);
  var path$1 = path$o;
  var map$2 = path$1.Map;
  var parent$9 = map$2;
  var map$1 = parent$9;
  var map = map$1;
  var _Map = /*@__PURE__*/getDefaultExportFromCjs(map);
  var $$1 = _export;
  var $some = arrayIteration.some;
  var arrayMethodIsStrict$1 = arrayMethodIsStrict$4;
  var STRICT_METHOD$1 = arrayMethodIsStrict$1('some');

  // `Array.prototype.some` method
  // https://tc39.es/ecma262/#sec-array.prototype.some
  $$1({
    target: 'Array',
    proto: true,
    forced: !STRICT_METHOD$1
  }, {
    some: function some(callbackfn /* , thisArg */) {
      return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    }
  });
  var getBuiltInPrototypeMethod$4 = getBuiltInPrototypeMethod$g;
  var some$3 = getBuiltInPrototypeMethod$4('Array', 'some');
  var isPrototypeOf$4 = objectIsPrototypeOf;
  var method$4 = some$3;
  var ArrayPrototype$4 = Array.prototype;
  var some$2 = function (it) {
    var own = it.some;
    return it === ArrayPrototype$4 || isPrototypeOf$4(ArrayPrototype$4, it) && own === ArrayPrototype$4.some ? method$4 : own;
  };
  var parent$8 = some$2;
  var some$1 = parent$8;
  var some = some$1;
  var _someInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(some);
  var getBuiltInPrototypeMethod$3 = getBuiltInPrototypeMethod$g;
  var keys$3 = getBuiltInPrototypeMethod$3('Array', 'keys');
  var parent$7 = keys$3;
  var keys$2 = parent$7;
  var classof$2 = classof$d;
  var hasOwn$2 = hasOwnProperty_1;
  var isPrototypeOf$3 = objectIsPrototypeOf;
  var method$3 = keys$2;
  var ArrayPrototype$3 = Array.prototype;
  var DOMIterables$2 = {
    DOMTokenList: true,
    NodeList: true
  };
  var keys$1 = function (it) {
    var own = it.keys;
    return it === ArrayPrototype$3 || isPrototypeOf$3(ArrayPrototype$3, it) && own === ArrayPrototype$3.keys || hasOwn$2(DOMIterables$2, classof$2(it)) ? method$3 : own;
  };
  var keys = keys$1;
  var _keysInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(keys);
  var arraySlice = arraySliceSimple;
  var floor = Math.floor;
  var mergeSort = function (array, comparefn) {
    var length = array.length;
    var middle = floor(length / 2);
    return length < 8 ? insertionSort(array, comparefn) : merge(array, mergeSort(arraySlice(array, 0, middle), comparefn), mergeSort(arraySlice(array, middle), comparefn), comparefn);
  };
  var insertionSort = function (array, comparefn) {
    var length = array.length;
    var i = 1;
    var element, j;
    while (i < length) {
      j = i;
      element = array[i];
      while (j && comparefn(array[j - 1], element) > 0) {
        array[j] = array[--j];
      }
      if (j !== i++) array[j] = element;
    }
    return array;
  };
  var merge = function (array, left, right, comparefn) {
    var llength = left.length;
    var rlength = right.length;
    var lindex = 0;
    var rindex = 0;
    while (lindex < llength || rindex < rlength) {
      array[lindex + rindex] = lindex < llength && rindex < rlength ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++] : lindex < llength ? left[lindex++] : right[rindex++];
    }
    return array;
  };
  var arraySort = mergeSort;
  var userAgent$1 = engineUserAgent;
  var firefox = userAgent$1.match(/firefox\/(\d+)/i);
  var engineFfVersion = !!firefox && +firefox[1];
  var UA = engineUserAgent;
  var engineIsIeOrEdge = /MSIE|Trident/.test(UA);
  var userAgent = engineUserAgent;
  var webkit = userAgent.match(/AppleWebKit\/(\d+)\./);
  var engineWebkitVersion = !!webkit && +webkit[1];
  var $ = _export;
  var uncurryThis = functionUncurryThis;
  var aCallable = aCallable$e;
  var toObject = toObject$e;
  var lengthOfArrayLike = lengthOfArrayLike$d;
  var deletePropertyOrThrow = deletePropertyOrThrow$2;
  var toString = toString$7;
  var fails = fails$u;
  var internalSort = arraySort;
  var arrayMethodIsStrict = arrayMethodIsStrict$4;
  var FF = engineFfVersion;
  var IE_OR_EDGE = engineIsIeOrEdge;
  var V8 = engineV8Version;
  var WEBKIT = engineWebkitVersion;
  var test = [];
  var nativeSort = uncurryThis(test.sort);
  var push = uncurryThis(test.push);

  // IE8-
  var FAILS_ON_UNDEFINED = fails(function () {
    test.sort(undefined);
  });
  // V8 bug
  var FAILS_ON_NULL = fails(function () {
    test.sort(null);
  });
  // Old WebKit
  var STRICT_METHOD = arrayMethodIsStrict('sort');
  var STABLE_SORT = !fails(function () {
    // feature detection can be too slow, so check engines versions
    if (V8) return V8 < 70;
    if (FF && FF > 3) return;
    if (IE_OR_EDGE) return true;
    if (WEBKIT) return WEBKIT < 603;
    var result = '';
    var code, chr, value, index;

    // generate an array with more 512 elements (Chakra and old V8 fails only in this case)
    for (code = 65; code < 76; code++) {
      chr = String.fromCharCode(code);
      switch (code) {
        case 66:
        case 69:
        case 70:
        case 72:
          value = 3;
          break;
        case 68:
        case 71:
          value = 4;
          break;
        default:
          value = 2;
      }
      for (index = 0; index < 47; index++) {
        test.push({
          k: chr + index,
          v: value
        });
      }
    }
    test.sort(function (a, b) {
      return b.v - a.v;
    });
    for (index = 0; index < test.length; index++) {
      chr = test[index].k.charAt(0);
      if (result.charAt(result.length - 1) !== chr) result += chr;
    }
    return result !== 'DGBEFHACIJK';
  });
  var FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;
  var getSortCompare = function (comparefn) {
    return function (x, y) {
      if (y === undefined) return -1;
      if (x === undefined) return 1;
      if (comparefn !== undefined) return +comparefn(x, y) || 0;
      return toString(x) > toString(y) ? 1 : -1;
    };
  };

  // `Array.prototype.sort` method
  // https://tc39.es/ecma262/#sec-array.prototype.sort
  $({
    target: 'Array',
    proto: true,
    forced: FORCED
  }, {
    sort: function sort(comparefn) {
      if (comparefn !== undefined) aCallable(comparefn);
      var array = toObject(this);
      if (STABLE_SORT) return comparefn === undefined ? nativeSort(array) : nativeSort(array, comparefn);
      var items = [];
      var arrayLength = lengthOfArrayLike(array);
      var itemsLength, index;
      for (index = 0; index < arrayLength; index++) {
        if (index in array) push(items, array[index]);
      }
      internalSort(items, getSortCompare(comparefn));
      itemsLength = lengthOfArrayLike(items);
      index = 0;
      while (index < itemsLength) array[index] = items[index++];
      while (index < arrayLength) deletePropertyOrThrow(array, index++);
      return array;
    }
  });
  var getBuiltInPrototypeMethod$2 = getBuiltInPrototypeMethod$g;
  var sort$3 = getBuiltInPrototypeMethod$2('Array', 'sort');
  var isPrototypeOf$2 = objectIsPrototypeOf;
  var method$2 = sort$3;
  var ArrayPrototype$2 = Array.prototype;
  var sort$2 = function (it) {
    var own = it.sort;
    return it === ArrayPrototype$2 || isPrototypeOf$2(ArrayPrototype$2, it) && own === ArrayPrototype$2.sort ? method$2 : own;
  };
  var parent$6 = sort$2;
  var sort$1 = parent$6;
  var sort = sort$1;
  var _sortInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(sort);
  var getBuiltInPrototypeMethod$1 = getBuiltInPrototypeMethod$g;
  var values$3 = getBuiltInPrototypeMethod$1('Array', 'values');
  var parent$5 = values$3;
  var values$2 = parent$5;
  var classof$1 = classof$d;
  var hasOwn$1 = hasOwnProperty_1;
  var isPrototypeOf$1 = objectIsPrototypeOf;
  var method$1 = values$2;
  var ArrayPrototype$1 = Array.prototype;
  var DOMIterables$1 = {
    DOMTokenList: true,
    NodeList: true
  };
  var values$1 = function (it) {
    var own = it.values;
    return it === ArrayPrototype$1 || isPrototypeOf$1(ArrayPrototype$1, it) && own === ArrayPrototype$1.values || hasOwn$1(DOMIterables$1, classof$1(it)) ? method$1 : own;
  };
  var values = values$1;
  var _valuesInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(values);
  var iterator = iterator$4;
  var _Symbol$iterator = /*@__PURE__*/getDefaultExportFromCjs(iterator);
  var getBuiltInPrototypeMethod = getBuiltInPrototypeMethod$g;
  var entries$3 = getBuiltInPrototypeMethod('Array', 'entries');
  var parent$4 = entries$3;
  var entries$2 = parent$4;
  var classof = classof$d;
  var hasOwn = hasOwnProperty_1;
  var isPrototypeOf = objectIsPrototypeOf;
  var method = entries$2;
  var ArrayPrototype = Array.prototype;
  var DOMIterables = {
    DOMTokenList: true,
    NodeList: true
  };
  var entries$1 = function (it) {
    var own = it.entries;
    return it === ArrayPrototype || isPrototypeOf(ArrayPrototype, it) && own === ArrayPrototype.entries || hasOwn(DOMIterables, classof(it)) ? method : own;
  };
  var entries = entries$1;
  var _entriesInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(entries);

  // Unique ID creation requires a high quality random # generator. In the browser we therefore
  // require the crypto API and do not support built-in fallback to lower quality random number
  // generators (like Math.random()).
  let getRandomValues;
  const rnds8 = new Uint8Array(16);
  function rng() {
    // lazy load so that environments that need to polyfill have a chance to do so
    if (!getRandomValues) {
      // getRandomValues needs to be invoked in a context where "this" is a Crypto implementation.
      getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);
      if (!getRandomValues) {
        throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');
      }
    }
    return getRandomValues(rnds8);
  }

  /**
   * Convert array of 16 byte values to UUID string format of the form:
   * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
   */

  const byteToHex = [];
  for (let i = 0; i < 256; ++i) {
    byteToHex.push((i + 0x100).toString(16).slice(1));
  }
  function unsafeStringify(arr, offset = 0) {
    // Note: Be careful editing this code!  It's been tuned for performance
    // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434
    return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];
  }
  const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);
  var native = {
    randomUUID
  };
  function v4(options, buf, offset) {
    if (native.randomUUID && !buf && !options) {
      return native.randomUUID();
    }
    options = options || {};
    const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`

    rnds[6] = rnds[6] & 0x0f | 0x40;
    rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

    if (buf) {
      offset = offset || 0;
      for (let i = 0; i < 16; ++i) {
        buf[offset + i] = rnds[i];
      }
      return buf;
    }
    return unsafeStringify(rnds);
  }

  /**
   * Determine whether a value can be used as an id.
   *
   * @param value - Input value of unknown type.
   * @returns True if the value is valid id, false otherwise.
   */
  function isId(value) {
    return typeof value === "string" || typeof value === "number";
  }

  /**
   * A queue.
   *
   * @typeParam T - The type of method names to be replaced by queued versions.
   */
  var Queue = /*#__PURE__*/function () {
    /**
     * Construct a new Queue.
     *
     * @param options - Queue configuration.
     */
    function Queue(options) {
      _classCallCheck(this, Queue);
      /** Delay in milliseconds. If defined the queue will be periodically flushed. */
      /** Maximum number of entries in the queue before it will be flushed. */
      _defineProperty(this, "_queue", []);
      _defineProperty(this, "_timeout", null);
      _defineProperty(this, "_extended", null);
      // options
      this.delay = null;
      this.max = Infinity;
      this.setOptions(options);
    }
    /**
     * Update the configuration of the queue.
     *
     * @param options - Queue configuration.
     */
    _createClass(Queue, [{
      key: "setOptions",
      value: function setOptions(options) {
        if (options && typeof options.delay !== "undefined") {
          this.delay = options.delay;
        }
        if (options && typeof options.max !== "undefined") {
          this.max = options.max;
        }
        this._flushIfNeeded();
      }
      /**
       * Extend an object with queuing functionality.
       * The object will be extended with a function flush, and the methods provided in options.replace will be replaced with queued ones.
       *
       * @param object - The object to be extended.
       * @param options - Additional options.
       * @returns The created queue.
       */
    }, {
      key: "destroy",
      value:
      /**
       * Destroy the queue. The queue will first flush all queued actions, and in case it has extended an object, will restore the original object.
       */
      function destroy() {
        this.flush();
        if (this._extended) {
          var object = this._extended.object;
          var methods = this._extended.methods;
          for (var i = 0; i < methods.length; i++) {
            var method = methods[i];
            if (method.original) {
              // @TODO: better solution?
              object[method.name] = method.original;
            } else {
              // @TODO: better solution?
              delete object[method.name];
            }
          }
          this._extended = null;
        }
      }
      /**
       * Replace a method on an object with a queued version.
       *
       * @param object - Object having the method.
       * @param method - The method name.
       */
    }, {
      key: "replace",
      value: function replace(object, method) {
        /* eslint-disable-next-line @typescript-eslint/no-this-alias -- Function this is necessary in the function bellow, so class this has to be saved into a variable here. */
        var me = this;
        var original = object[method];
        if (!original) {
          throw new Error("Method " + method + " undefined");
        }
        object[method] = function () {
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          // add this call to the queue
          me.queue({
            args: args,
            fn: original,
            context: this
          });
        };
      }
      /**
       * Queue a call.
       *
       * @param entry - The function or entry to be queued.
       */
    }, {
      key: "queue",
      value: function queue(entry) {
        if (typeof entry === "function") {
          this._queue.push({
            fn: entry
          });
        } else {
          this._queue.push(entry);
        }
        this._flushIfNeeded();
      }
      /**
       * Check whether the queue needs to be flushed.
       */
    }, {
      key: "_flushIfNeeded",
      value: function _flushIfNeeded() {
        var _this = this;
        // flush when the maximum is exceeded.
        if (this._queue.length > this.max) {
          this.flush();
        }
        // flush after a period of inactivity when a delay is configured
        if (this._timeout != null) {
          clearTimeout(this._timeout);
          this._timeout = null;
        }
        if (this.queue.length > 0 && typeof this.delay === "number") {
          this._timeout = _setTimeout(function () {
            _this.flush();
          }, this.delay);
        }
      }
      /**
       * Flush all queued calls
       */
    }, {
      key: "flush",
      value: function flush() {
        var _context, _context2;
        _forEachInstanceProperty(_context = _spliceInstanceProperty(_context2 = this._queue).call(_context2, 0)).call(_context, function (entry) {
          entry.fn.apply(entry.context || entry.fn, entry.args || []);
        });
      }
    }], [{
      key: "extend",
      value: function extend(object, options) {
        var queue = new Queue(options);
        if (object.flush !== undefined) {
          throw new Error("Target object already has a property flush");
        }
        object.flush = function () {
          queue.flush();
        };
        var methods = [{
          name: "flush",
          original: undefined
        }];
        if (options && options.replace) {
          for (var i = 0; i < options.replace.length; i++) {
            var name = options.replace[i];
            methods.push({
              name: name,
              // @TODO: better solution?
              original: object[name]
            });
            // @TODO: better solution?
            queue.replace(object, name);
          }
        }
        queue._extended = {
          object: object,
          methods: methods
        };
        return queue;
      }
    }]);
    return Queue;
  }();

  /**
   * {@link DataSet} code that can be reused in {@link DataView} or other similar implementations of {@link DataInterface}.
   *
   * @typeParam Item - Item type that may or may not have an id.
   * @typeParam IdProp - Name of the property that contains the id.
   */
  var DataSetPart = /*#__PURE__*/function () {
    function DataSetPart() {
      _classCallCheck(this, DataSetPart);
      _defineProperty(this, "_subscribers", {
        "*": [],
        add: [],
        remove: [],
        update: []
      });
      /**
       * @deprecated Use on instead (PS: DataView.subscribe === DataView.on).
       */
      _defineProperty(this, "subscribe", DataSetPart.prototype.on);
      /**
       * @deprecated Use off instead (PS: DataView.unsubscribe === DataView.off).
       */
      _defineProperty(this, "unsubscribe", DataSetPart.prototype.off);
    }
    _createClass(DataSetPart, [{
      key: "_trigger",
      value:
      /**
       * Trigger an event
       *
       * @param event - Event name.
       * @param payload - Event payload.
       * @param senderId - Id of the sender.
       */
      function _trigger(event, payload, senderId) {
        var _context, _context2;
        if (event === "*") {
          throw new Error("Cannot trigger event *");
        }
        _forEachInstanceProperty(_context = _concatInstanceProperty(_context2 = []).call(_context2, _toConsumableArray(this._subscribers[event]), _toConsumableArray(this._subscribers["*"]))).call(_context, function (subscriber) {
          subscriber(event, payload, senderId != null ? senderId : null);
        });
      }
      /**
       * Subscribe to an event, add an event listener.
       *
       * @remarks Non-function callbacks are ignored.
       * @param event - Event name.
       * @param callback - Callback method.
       */
    }, {
      key: "on",
      value: function on(event, callback) {
        if (typeof callback === "function") {
          this._subscribers[event].push(callback);
        }
        // @TODO: Maybe throw for invalid callbacks?
      }
      /**
       * Unsubscribe from an event, remove an event listener.
       *
       * @remarks If the same callback was subscribed more than once **all** occurences will be removed.
       * @param event - Event name.
       * @param callback - Callback method.
       */
    }, {
      key: "off",
      value: function off(event, callback) {
        var _context3;
        this._subscribers[event] = _filterInstanceProperty(_context3 = this._subscribers[event]).call(_context3, function (subscriber) {
          return subscriber !== callback;
        });
      }
    }]);
    return DataSetPart;
  }();
  var collection = collection$2;
  var collectionStrong = collectionStrong$2;

  // `Set` constructor
  // https://tc39.es/ecma262/#sec-set-objects
  collection('Set', function (init) {
    return function Set() {
      return init(this, arguments.length ? arguments[0] : undefined);
    };
  }, collectionStrong);
  var path = path$o;
  var set$2 = path.Set;
  var parent$3 = set$2;
  var set$1 = parent$3;
  var set = set$1;
  var _Set = /*@__PURE__*/getDefaultExportFromCjs(set);
  var getIterator$5 = getIterator$8;
  var getIterator_1 = getIterator$5;
  var parent$2 = getIterator_1;
  var getIterator$4 = parent$2;
  var parent$1 = getIterator$4;
  var getIterator$3 = parent$1;
  var parent = getIterator$3;
  var getIterator$2 = parent;
  var getIterator$1 = getIterator$2;
  var getIterator = getIterator$1;
  var _getIterator = /*@__PURE__*/getDefaultExportFromCjs(getIterator);
  function _createForOfIteratorHelper$2(o, allowArrayLike) {
    var it = typeof _Symbol !== "undefined" && _getIteratorMethod(o) || o["@@iterator"];
    if (!it) {
      if (_Array$isArray(o) || (it = _unsupportedIterableToArray$2(o)) || allowArrayLike && o && typeof o.length === "number") {
        if (it) o = it;
        var i = 0;
        var F = function F() {};
        return {
          s: F,
          n: function n() {
            if (i >= o.length) return {
              done: true
            };
            return {
              done: false,
              value: o[i++]
            };
          },
          e: function e(_e) {
            throw _e;
          },
          f: F
        };
      }
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var normalCompletion = true,
      didErr = false,
      err;
    return {
      s: function s() {
        it = it.call(o);
      },
      n: function n() {
        var step = it.next();
        normalCompletion = step.done;
        return step;
      },
      e: function e(_e2) {
        didErr = true;
        err = _e2;
      },
      f: function f() {
        try {
          if (!normalCompletion && it.return != null) it.return();
        } finally {
          if (didErr) throw err;
        }
      }
    };
  }
  function _unsupportedIterableToArray$2(o, minLen) {
    var _context10;
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray$2(o, minLen);
    var n = _sliceInstanceProperty(_context10 = Object.prototype.toString.call(o)).call(_context10, 8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return _Array$from$1(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$2(o, minLen);
  }
  function _arrayLikeToArray$2(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
    return arr2;
  }
  /**
   * Data stream
   *
   * @remarks
   * {@link DataStream} offers an always up to date stream of items from a {@link DataSet} or {@link DataView}.
   * That means that the stream is evaluated at the time of iteration, conversion to another data type or when {@link cache} is called, not when the {@link DataStream} was created.
   * Multiple invocations of for example {@link toItemArray} may yield different results (if the data source like for example {@link DataSet} gets modified).
   * @typeParam Item - The item type this stream is going to work with.
   */
  var DataStream = /*#__PURE__*/function (_Symbol$iterator$1) {
    /**
     * Create a new data stream.
     *
     * @param pairs - The id, item pairs.
     */
    function DataStream(pairs) {
      _classCallCheck(this, DataStream);
      this._pairs = pairs;
    }
    /**
     * Return an iterable of key, value pairs for every entry in the stream.
     */
    _createClass(DataStream, [{
      key: _Symbol$iterator$1,
      value: /*#__PURE__*/
      _regeneratorRuntime.mark(function value() {
        var _iterator, _step, _step$value, id, item;
        return _regeneratorRuntime.wrap(function value$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _iterator = _createForOfIteratorHelper$2(this._pairs);
              _context.prev = 1;
              _iterator.s();
            case 3:
              if ((_step = _iterator.n()).done) {
                _context.next = 9;
                break;
              }
              _step$value = _slicedToArray(_step.value, 2), id = _step$value[0], item = _step$value[1];
              _context.next = 7;
              return [id, item];
            case 7:
              _context.next = 3;
              break;
            case 9:
              _context.next = 14;
              break;
            case 11:
              _context.prev = 11;
              _context.t0 = _context["catch"](1);
              _iterator.e(_context.t0);
            case 14:
              _context.prev = 14;
              _iterator.f();
              return _context.finish(14);
            case 17:
            case "end":
              return _context.stop();
          }
        }, value, this, [[1, 11, 14, 17]]);
      })
      /**
       * Return an iterable of key, value pairs for every entry in the stream.
       */
    }, {
      key: "entries",
      value: /*#__PURE__*/
      _regeneratorRuntime.mark(function entries() {
        var _iterator2, _step2, _step2$value, id, item;
        return _regeneratorRuntime.wrap(function entries$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _iterator2 = _createForOfIteratorHelper$2(this._pairs);
              _context2.prev = 1;
              _iterator2.s();
            case 3:
              if ((_step2 = _iterator2.n()).done) {
                _context2.next = 9;
                break;
              }
              _step2$value = _slicedToArray(_step2.value, 2), id = _step2$value[0], item = _step2$value[1];
              _context2.next = 7;
              return [id, item];
            case 7:
              _context2.next = 3;
              break;
            case 9:
              _context2.next = 14;
              break;
            case 11:
              _context2.prev = 11;
              _context2.t0 = _context2["catch"](1);
              _iterator2.e(_context2.t0);
            case 14:
              _context2.prev = 14;
              _iterator2.f();
              return _context2.finish(14);
            case 17:
            case "end":
              return _context2.stop();
          }
        }, entries, this, [[1, 11, 14, 17]]);
      })
      /**
       * Return an iterable of keys in the stream.
       */
    }, {
      key: "keys",
      value: /*#__PURE__*/
      _regeneratorRuntime.mark(function keys() {
        var _iterator3, _step3, _step3$value, id;
        return _regeneratorRuntime.wrap(function keys$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _iterator3 = _createForOfIteratorHelper$2(this._pairs);
              _context3.prev = 1;
              _iterator3.s();
            case 3:
              if ((_step3 = _iterator3.n()).done) {
                _context3.next = 9;
                break;
              }
              _step3$value = _slicedToArray(_step3.value, 1), id = _step3$value[0];
              _context3.next = 7;
              return id;
            case 7:
              _context3.next = 3;
              break;
            case 9:
              _context3.next = 14;
              break;
            case 11:
              _context3.prev = 11;
              _context3.t0 = _context3["catch"](1);
              _iterator3.e(_context3.t0);
            case 14:
              _context3.prev = 14;
              _iterator3.f();
              return _context3.finish(14);
            case 17:
            case "end":
              return _context3.stop();
          }
        }, keys, this, [[1, 11, 14, 17]]);
      })
      /**
       * Return an iterable of values in the stream.
       */
    }, {
      key: "values",
      value: /*#__PURE__*/
      _regeneratorRuntime.mark(function values() {
        var _iterator4, _step4, _step4$value, item;
        return _regeneratorRuntime.wrap(function values$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              _iterator4 = _createForOfIteratorHelper$2(this._pairs);
              _context4.prev = 1;
              _iterator4.s();
            case 3:
              if ((_step4 = _iterator4.n()).done) {
                _context4.next = 9;
                break;
              }
              _step4$value = _slicedToArray(_step4.value, 2), item = _step4$value[1];
              _context4.next = 7;
              return item;
            case 7:
              _context4.next = 3;
              break;
            case 9:
              _context4.next = 14;
              break;
            case 11:
              _context4.prev = 11;
              _context4.t0 = _context4["catch"](1);
              _iterator4.e(_context4.t0);
            case 14:
              _context4.prev = 14;
              _iterator4.f();
              return _context4.finish(14);
            case 17:
            case "end":
              return _context4.stop();
          }
        }, values, this, [[1, 11, 14, 17]]);
      })
      /**
       * Return an array containing all the ids in this stream.
       *
       * @remarks
       * The array may contain duplicities.
       * @returns The array with all ids from this stream.
       */
    }, {
      key: "toIdArray",
      value: function toIdArray() {
        var _context5;
        return _mapInstanceProperty(_context5 = _toConsumableArray(this._pairs)).call(_context5, function (pair) {
          return pair[0];
        });
      }
      /**
       * Return an array containing all the items in this stream.
       *
       * @remarks
       * The array may contain duplicities.
       * @returns The array with all items from this stream.
       */
    }, {
      key: "toItemArray",
      value: function toItemArray() {
        var _context6;
        return _mapInstanceProperty(_context6 = _toConsumableArray(this._pairs)).call(_context6, function (pair) {
          return pair[1];
        });
      }
      /**
       * Return an array containing all the entries in this stream.
       *
       * @remarks
       * The array may contain duplicities.
       * @returns The array with all entries from this stream.
       */
    }, {
      key: "toEntryArray",
      value: function toEntryArray() {
        return _toConsumableArray(this._pairs);
      }
      /**
       * Return an object map containing all the items in this stream accessible by ids.
       *
       * @remarks
       * In case of duplicate ids (coerced to string so `7 == '7'`) the last encoutered appears in the returned object.
       * @returns The object map of all id → item pairs from this stream.
       */
    }, {
      key: "toObjectMap",
      value: function toObjectMap() {
        var map = _Object$create$1(null);
        var _iterator5 = _createForOfIteratorHelper$2(this._pairs),
          _step5;
        try {
          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
            var _step5$value = _slicedToArray(_step5.value, 2),
              id = _step5$value[0],
              item = _step5$value[1];
            map[id] = item;
          }
        } catch (err) {
          _iterator5.e(err);
        } finally {
          _iterator5.f();
        }
        return map;
      }
      /**
       * Return a map containing all the items in this stream accessible by ids.
       *
       * @returns The map of all id → item pairs from this stream.
       */
    }, {
      key: "toMap",
      value: function toMap() {
        return new _Map(this._pairs);
      }
      /**
       * Return a set containing all the (unique) ids in this stream.
       *
       * @returns The set of all ids from this stream.
       */
    }, {
      key: "toIdSet",
      value: function toIdSet() {
        return new _Set(this.toIdArray());
      }
      /**
       * Return a set containing all the (unique) items in this stream.
       *
       * @returns The set of all items from this stream.
       */
    }, {
      key: "toItemSet",
      value: function toItemSet() {
        return new _Set(this.toItemArray());
      }
      /**
       * Cache the items from this stream.
       *
       * @remarks
       * This method allows for items to be fetched immediatelly and used (possibly multiple times) later.
       * It can also be used to optimize performance as {@link DataStream} would otherwise reevaluate everything upon each iteration.
       *
       * ## Example
       * ```javascript
       * const ds = new DataSet([…])
       *
       * const cachedStream = ds.stream()
       *   .filter(…)
       *   .sort(…)
       *   .map(…)
       *   .cached(…) // Data are fetched, processed and cached here.
       *
       * ds.clear()
       * chachedStream // Still has all the items.
       * ```
       * @returns A new {@link DataStream} with cached items (detached from the original {@link DataSet}).
       */
    }, {
      key: "cache",
      value: function cache() {
        return new DataStream(_toConsumableArray(this._pairs));
      }
      /**
       * Get the distinct values of given property.
       *
       * @param callback - The function that picks and possibly converts the property.
       * @typeParam T - The type of the distinct value.
       * @returns A set of all distinct properties.
       */
    }, {
      key: "distinct",
      value: function distinct(callback) {
        var set = new _Set();
        var _iterator6 = _createForOfIteratorHelper$2(this._pairs),
          _step6;
        try {
          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
            var _step6$value = _slicedToArray(_step6.value, 2),
              id = _step6$value[0],
              item = _step6$value[1];
            set.add(callback(item, id));
          }
        } catch (err) {
          _iterator6.e(err);
        } finally {
          _iterator6.f();
        }
        return set;
      }
      /**
       * Filter the items of the stream.
       *
       * @param callback - The function that decides whether an item will be included.
       * @returns A new data stream with the filtered items.
       */
    }, {
      key: "filter",
      value: function filter(callback) {
        var pairs = this._pairs;
        return new DataStream({
          [_Symbol$iterator]() {
            return /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
              var _iterator7, _step7, _step7$value, id, item;
              return _regeneratorRuntime.wrap(function _callee$(_context7) {
                while (1) switch (_context7.prev = _context7.next) {
                  case 0:
                    _iterator7 = _createForOfIteratorHelper$2(pairs);
                    _context7.prev = 1;
                    _iterator7.s();
                  case 3:
                    if ((_step7 = _iterator7.n()).done) {
                      _context7.next = 10;
                      break;
                    }
                    _step7$value = _slicedToArray(_step7.value, 2), id = _step7$value[0], item = _step7$value[1];
                    if (!callback(item, id)) {
                      _context7.next = 8;
                      break;
                    }
                    _context7.next = 8;
                    return [id, item];
                  case 8:
                    _context7.next = 3;
                    break;
                  case 10:
                    _context7.next = 15;
                    break;
                  case 12:
                    _context7.prev = 12;
                    _context7.t0 = _context7["catch"](1);
                    _iterator7.e(_context7.t0);
                  case 15:
                    _context7.prev = 15;
                    _iterator7.f();
                    return _context7.finish(15);
                  case 18:
                  case "end":
                    return _context7.stop();
                }
              }, _callee, null, [[1, 12, 15, 18]]);
            })();
          }
        });
      }
      /**
       * Execute a callback for each item of the stream.
       *
       * @param callback - The function that will be invoked for each item.
       */
    }, {
      key: "forEach",
      value: function forEach(callback) {
        var _iterator8 = _createForOfIteratorHelper$2(this._pairs),
          _step8;
        try {
          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
            var _step8$value = _slicedToArray(_step8.value, 2),
              id = _step8$value[0],
              item = _step8$value[1];
            callback(item, id);
          }
        } catch (err) {
          _iterator8.e(err);
        } finally {
          _iterator8.f();
        }
      }
      /**
       * Map the items into a different type.
       *
       * @param callback - The function that does the conversion.
       * @typeParam Mapped - The type of the item after mapping.
       * @returns A new data stream with the mapped items.
       */
    }, {
      key: "map",
      value: function map(callback) {
        var pairs = this._pairs;
        return new DataStream({
          [_Symbol$iterator]() {
            return /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {
              var _iterator9, _step9, _step9$value, id, item;
              return _regeneratorRuntime.wrap(function _callee2$(_context8) {
                while (1) switch (_context8.prev = _context8.next) {
                  case 0:
                    _iterator9 = _createForOfIteratorHelper$2(pairs);
                    _context8.prev = 1;
                    _iterator9.s();
                  case 3:
                    if ((_step9 = _iterator9.n()).done) {
                      _context8.next = 9;
                      break;
                    }
                    _step9$value = _slicedToArray(_step9.value, 2), id = _step9$value[0], item = _step9$value[1];
                    _context8.next = 7;
                    return [id, callback(item, id)];
                  case 7:
                    _context8.next = 3;
                    break;
                  case 9:
                    _context8.next = 14;
                    break;
                  case 11:
                    _context8.prev = 11;
                    _context8.t0 = _context8["catch"](1);
                    _iterator9.e(_context8.t0);
                  case 14:
                    _context8.prev = 14;
                    _iterator9.f();
                    return _context8.finish(14);
                  case 17:
                  case "end":
                    return _context8.stop();
                }
              }, _callee2, null, [[1, 11, 14, 17]]);
            })();
          }
        });
      }
      /**
       * Get the item with the maximum value of given property.
       *
       * @param callback - The function that picks and possibly converts the property.
       * @returns The item with the maximum if found otherwise null.
       */
    }, {
      key: "max",
      value: function max(callback) {
        var iter = _getIterator(this._pairs);
        var curr = iter.next();
        if (curr.done) {
          return null;
        }
        var maxItem = curr.value[1];
        var maxValue = callback(curr.value[1], curr.value[0]);
        while (!(curr = iter.next()).done) {
          var _curr$value = _slicedToArray(curr.value, 2),
            id = _curr$value[0],
            item = _curr$value[1];
          var _value = callback(item, id);
          if (_value > maxValue) {
            maxValue = _value;
            maxItem = item;
          }
        }
        return maxItem;
      }
      /**
       * Get the item with the minimum value of given property.
       *
       * @param callback - The function that picks and possibly converts the property.
       * @returns The item with the minimum if found otherwise null.
       */
    }, {
      key: "min",
      value: function min(callback) {
        var iter = _getIterator(this._pairs);
        var curr = iter.next();
        if (curr.done) {
          return null;
        }
        var minItem = curr.value[1];
        var minValue = callback(curr.value[1], curr.value[0]);
        while (!(curr = iter.next()).done) {
          var _curr$value2 = _slicedToArray(curr.value, 2),
            id = _curr$value2[0],
            item = _curr$value2[1];
          var _value2 = callback(item, id);
          if (_value2 < minValue) {
            minValue = _value2;
            minItem = item;
          }
        }
        return minItem;
      }
      /**
       * Reduce the items into a single value.
       *
       * @param callback - The function that does the reduction.
       * @param accumulator - The initial value of the accumulator.
       * @typeParam T - The type of the accumulated value.
       * @returns The reduced value.
       */
    }, {
      key: "reduce",
      value: function reduce(callback, accumulator) {
        var _iterator10 = _createForOfIteratorHelper$2(this._pairs),
          _step10;
        try {
          for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {
            var _step10$value = _slicedToArray(_step10.value, 2),
              id = _step10$value[0],
              item = _step10$value[1];
            accumulator = callback(accumulator, item, id);
          }
        } catch (err) {
          _iterator10.e(err);
        } finally {
          _iterator10.f();
        }
        return accumulator;
      }
      /**
       * Sort the items.
       *
       * @param callback - Item comparator.
       * @returns A new stream with sorted items.
       */
    }, {
      key: "sort",
      value: function sort(callback) {
        var _this = this;
        return new DataStream({
          [_Symbol$iterator]: function () {
            var _context9;
            return _getIterator(_sortInstanceProperty(_context9 = _toConsumableArray(_this._pairs)).call(_context9, function (_ref, _ref2) {
              var _ref3 = _slicedToArray(_ref, 2),
                idA = _ref3[0],
                itemA = _ref3[1];
              var _ref4 = _slicedToArray(_ref2, 2),
                idB = _ref4[0],
                itemB = _ref4[1];
              return callback(itemA, itemB, idA, idB);
            }));
          }
        });
      }
    }]);
    return DataStream;
  }(_Symbol$iterator);
  function ownKeys(e, r) {
    var t = _Object$keys(e);
    if (_Object$getOwnPropertySymbols) {
      var o = _Object$getOwnPropertySymbols(e);
      r && (o = _filterInstanceProperty(o).call(o, function (r) {
        return _Object$getOwnPropertyDescriptor(e, r).enumerable;
      })), t.push.apply(t, o);
    }
    return t;
  }
  function _objectSpread(e) {
    for (var r = 1; r < arguments.length; r++) {
      var _context10, _context11;
      var t = null != arguments[r] ? arguments[r] : {};
      r % 2 ? _forEachInstanceProperty(_context10 = ownKeys(Object(t), !0)).call(_context10, function (r) {
        _defineProperty(e, r, t[r]);
      }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(e, _Object$getOwnPropertyDescriptors(t)) : _forEachInstanceProperty(_context11 = ownKeys(Object(t))).call(_context11, function (r) {
        _Object$defineProperty(e, r, _Object$getOwnPropertyDescriptor(t, r));
      });
    }
    return e;
  }
  function _createForOfIteratorHelper$1(o, allowArrayLike) {
    var it = typeof _Symbol !== "undefined" && _getIteratorMethod(o) || o["@@iterator"];
    if (!it) {
      if (_Array$isArray(o) || (it = _unsupportedIterableToArray$1(o)) || allowArrayLike && o && typeof o.length === "number") {
        if (it) o = it;
        var i = 0;
        var F = function F() {};
        return {
          s: F,
          n: function n() {
            if (i >= o.length) return {
              done: true
            };
            return {
              done: false,
              value: o[i++]
            };
          },
          e: function e(_e) {
            throw _e;
          },
          f: F
        };
      }
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var normalCompletion = true,
      didErr = false,
      err;
    return {
      s: function s() {
        it = it.call(o);
      },
      n: function n() {
        var step = it.next();
        normalCompletion = step.done;
        return step;
      },
      e: function e(_e2) {
        didErr = true;
        err = _e2;
      },
      f: function f() {
        try {
          if (!normalCompletion && it.return != null) it.return();
        } finally {
          if (didErr) throw err;
        }
      }
    };
  }
  function _unsupportedIterableToArray$1(o, minLen) {
    var _context9;
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray$1(o, minLen);
    var n = _sliceInstanceProperty(_context9 = Object.prototype.toString.call(o)).call(_context9, 8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return _Array$from$1(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$1(o, minLen);
  }
  function _arrayLikeToArray$1(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
    return arr2;
  }
  function _createSuper$1(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct$1();
    return function _createSuperInternal() {
      var Super = _getPrototypeOf(Derived),
        result;
      if (hasNativeReflectConstruct) {
        var NewTarget = _getPrototypeOf(this).constructor;
        result = _Reflect$construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }
      return _possibleConstructorReturn(this, result);
    };
  }
  function _isNativeReflectConstruct$1() {
    if (typeof Reflect === "undefined" || !_Reflect$construct) return false;
    if (_Reflect$construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
      Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }
  /**
   * Add an id to given item if it doesn't have one already.
   *
   * @remarks
   * The item will be modified.
   * @param item - The item that will have an id after a call to this function.
   * @param idProp - The key of the id property.
   * @typeParam Item - Item type that may or may not have an id.
   * @typeParam IdProp - Name of the property that contains the id.
   * @returns true
   */
  function ensureFullItem(item, idProp) {
    if (item[idProp] == null) {
      // generate an id
      item[idProp] = v4();
    }
    return item;
  }
  /**
   * # DataSet
   *
   * Vis.js comes with a flexible DataSet, which can be used to hold and
   * manipulate unstructured data and listen for changes in the data. The DataSet
   * is key/value based. Data items can be added, updated and removed from the
   * DataSet, and one can subscribe to changes in the DataSet. The data in the
   * DataSet can be filtered and ordered. Data can be normalized when appending it
   * to the DataSet as well.
   *
   * ## Example
   *
   * The following example shows how to use a DataSet.
   *
   * ```javascript
   * // create a DataSet
   * var options = {};
   * var data = new vis.DataSet(options);
   *
   * // add items
   * // note that the data items can contain different properties and data formats
   * data.add([
   *   {id: 1, text: 'item 1', date: new Date(2013, 6, 20), group: 1, first: true},
   *   {id: 2, text: 'item 2', date: '2013-06-23', group: 2},
   *   {id: 3, text: 'item 3', date: '2013-06-25', group: 2},
   *   {id: 4, text: 'item 4'}
   * ]);
   *
   * // subscribe to any change in the DataSet
   * data.on('*', function (event, properties, senderId) {
   *   console.log('event', event, properties);
   * });
   *
   * // update an existing item
   * data.update({id: 2, group: 1});
   *
   * // remove an item
   * data.remove(4);
   *
   * // get all ids
   * var ids = data.getIds();
   * console.log('ids', ids);
   *
   * // get a specific item
   * var item1 = data.get(1);
   * console.log('item1', item1);
   *
   * // retrieve a filtered subset of the data
   * var items = data.get({
   *   filter: function (item) {
   *     return item.group == 1;
   *   }
   * });
   * console.log('filtered items', items);
   * ```
   *
   * @typeParam Item - Item type that may or may not have an id.
   * @typeParam IdProp - Name of the property that contains the id.
   */
  var DataSet = /*#__PURE__*/function (_DataSetPart) {
    _inherits(DataSet, _DataSetPart);
    var _super = _createSuper$1(DataSet);
    /**
     * Construct a new DataSet.
     *
     * @param data - Initial data or options.
     * @param options - Options (type error if data is also options).
     */
    function DataSet(data, options) {
      var _this;
      _classCallCheck(this, DataSet);
      _this = _super.call(this);
      // correctly read optional arguments
      _defineProperty(_assertThisInitialized(_this), "_queue", null);
      if (data && !_Array$isArray(data)) {
        options = data;
        data = [];
      }
      _this._options = options || {};
      _this._data = new _Map(); // map with data indexed by id
      _this.length = 0; // number of items in the DataSet
      _this._idProp = _this._options.fieldId || "id"; // name of the field containing id
      // add initial data when provided
      if (data && data.length) {
        _this.add(data);
      }
      _this.setOptions(options);
      return _this;
    }
    /**
     * Set new options.
     *
     * @param options - The new options.
     */
    _createClass(DataSet, [{
      key: "idProp",
      get: /** Flush all queued calls. */

      /** @inheritDoc */

      /** @inheritDoc */
      function get() {
        return this._idProp;
      }
    }, {
      key: "setOptions",
      value: function setOptions(options) {
        if (options && options.queue !== undefined) {
          if (options.queue === false) {
            // delete queue if loaded
            if (this._queue) {
              this._queue.destroy();
              this._queue = null;
            }
          } else {
            // create queue and update its options
            if (!this._queue) {
              this._queue = Queue.extend(this, {
                replace: ["add", "update", "remove"]
              });
            }
            if (options.queue && typeof options.queue === "object") {
              this._queue.setOptions(options.queue);
            }
          }
        }
      }
      /**
       * Add a data item or an array with items.
       *
       * After the items are added to the DataSet, the DataSet will trigger an event `add`. When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.
       *
       * ## Example
       *
       * ```javascript
       * // create a DataSet
       * const data = new vis.DataSet()
       *
       * // add items
       * const ids = data.add([
       *   { id: 1, text: 'item 1' },
       *   { id: 2, text: 'item 2' },
       *   { text: 'item without an id' }
       * ])
       *
       * console.log(ids) // [1, 2, '<UUIDv4>']
       * ```
       *
       * @param data - Items to be added (ids will be generated if missing).
       * @param senderId - Sender id.
       * @returns addedIds - Array with the ids (generated if not present) of the added items.
       * @throws When an item with the same id as any of the added items already exists.
       */
    }, {
      key: "add",
      value: function add(data, senderId) {
        var _this2 = this;
        var addedIds = [];
        var id;
        if (_Array$isArray(data)) {
          // Array
          var idsToAdd = _mapInstanceProperty(data).call(data, function (d) {
            return d[_this2._idProp];
          });
          if (_someInstanceProperty(idsToAdd).call(idsToAdd, function (id) {
            return _this2._data.has(id);
          })) {
            throw new Error("A duplicate id was found in the parameter array.");
          }
          for (var i = 0, len = data.length; i < len; i++) {
            id = this._addItem(data[i]);
            addedIds.push(id);
          }
        } else if (data && typeof data === "object") {
          // Single item
          id = this._addItem(data);
          addedIds.push(id);
        } else {
          throw new Error("Unknown dataType");
        }
        if (addedIds.length) {
          this._trigger("add", {
            items: addedIds
          }, senderId);
        }
        return addedIds;
      }
      /**
       * Update existing items. When an item does not exist, it will be created.
       *
       * @remarks
       * The provided properties will be merged in the existing item. When an item does not exist, it will be created.
       *
       * After the items are updated, the DataSet will trigger an event `add` for the added items, and an event `update`. When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.
       *
       * ## Example
       *
       * ```javascript
       * // create a DataSet
       * const data = new vis.DataSet([
       *   { id: 1, text: 'item 1' },
       *   { id: 2, text: 'item 2' },
       *   { id: 3, text: 'item 3' }
       * ])
       *
       * // update items
       * const ids = data.update([
       *   { id: 2, text: 'item 2 (updated)' },
       *   { id: 4, text: 'item 4 (new)' }
       * ])
       *
       * console.log(ids) // [2, 4]
       * ```
       *
       * ## Warning for TypeScript users
       * This method may introduce partial items into the data set. Use add or updateOnly instead for better type safety.
       * @param data - Items to be updated (if the id is already present) or added (if the id is missing).
       * @param senderId - Sender id.
       * @returns updatedIds - The ids of the added (these may be newly generated if there was no id in the item from the data) or updated items.
       * @throws When the supplied data is neither an item nor an array of items.
       */
    }, {
      key: "update",
      value: function update(data, senderId) {
        var _this3 = this;
        var addedIds = [];
        var updatedIds = [];
        var oldData = [];
        var updatedData = [];
        var idProp = this._idProp;
        var addOrUpdate = function addOrUpdate(item) {
          var origId = item[idProp];
          if (origId != null && _this3._data.has(origId)) {
            var fullItem = item; // it has an id, therefore it is a fullitem
            var oldItem = _Object$assign({}, _this3._data.get(origId));
            // update item
            var id = _this3._updateItem(fullItem);
            updatedIds.push(id);
            updatedData.push(fullItem);
            oldData.push(oldItem);
          } else {
            // add new item
            var _id = _this3._addItem(item);
            addedIds.push(_id);
          }
        };
        if (_Array$isArray(data)) {
          // Array
          for (var i = 0, len = data.length; i < len; i++) {
            if (data[i] && typeof data[i] === "object") {
              addOrUpdate(data[i]);
            } else {
              console.warn("Ignoring input item, which is not an object at index " + i);
            }
          }
        } else if (data && typeof data === "object") {
          // Single item
          addOrUpdate(data);
        } else {
          throw new Error("Unknown dataType");
        }
        if (addedIds.length) {
          this._trigger("add", {
            items: addedIds
          }, senderId);
        }
        if (updatedIds.length) {
          var props = {
            items: updatedIds,
            oldData: oldData,
            data: updatedData
          };
          // TODO: remove deprecated property 'data' some day
          //Object.defineProperty(props, 'data', {
          //  'get': (function() {
          //    console.warn('Property data is deprecated. Use DataSet.get(ids) to retrieve the new data, use the oldData property on this object to get the old data');
          //    return updatedData;
          //  }).bind(this)
          //});
          this._trigger("update", props, senderId);
        }
        return _concatInstanceProperty(addedIds).call(addedIds, updatedIds);
      }
      /**
       * Update existing items. When an item does not exist, an error will be thrown.
       *
       * @remarks
       * The provided properties will be deeply merged into the existing item.
       * When an item does not exist (id not present in the data set or absent), an error will be thrown and nothing will be changed.
       *
       * After the items are updated, the DataSet will trigger an event `update`.
       * When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.
       *
       * ## Example
       *
       * ```javascript
       * // create a DataSet
       * const data = new vis.DataSet([
       *   { id: 1, text: 'item 1' },
       *   { id: 2, text: 'item 2' },
       *   { id: 3, text: 'item 3' },
       * ])
       *
       * // update items
       * const ids = data.update([
       *   { id: 2, text: 'item 2 (updated)' }, // works
       *   // { id: 4, text: 'item 4 (new)' }, // would throw
       *   // { text: 'item 4 (new)' }, // would also throw
       * ])
       *
       * console.log(ids) // [2]
       * ```
       * @param data - Updates (the id and optionally other props) to the items in this data set.
       * @param senderId - Sender id.
       * @returns updatedIds - The ids of the updated items.
       * @throws When the supplied data is neither an item nor an array of items, when the ids are missing.
       */
    }, {
      key: "updateOnly",
      value: function updateOnly(data, senderId) {
        var _context,
          _this4 = this;
        if (!_Array$isArray(data)) {
          data = [data];
        }
        var updateEventData = _mapInstanceProperty(_context = _mapInstanceProperty(data).call(data, function (update) {
          var oldData = _this4._data.get(update[_this4._idProp]);
          if (oldData == null) {
            throw new Error("Updating non-existent items is not allowed.");
          }
          return {
            oldData,
            update
          };
        })).call(_context, function (_ref) {
          var oldData = _ref.oldData,
            update = _ref.update;
          var id = oldData[_this4._idProp];
          var updatedData = pureDeepObjectAssign(oldData, update);
          _this4._data.set(id, updatedData);
          return {
            id,
            oldData: oldData,
            updatedData
          };
        });
        if (updateEventData.length) {
          var props = {
            items: _mapInstanceProperty(updateEventData).call(updateEventData, function (value) {
              return value.id;
            }),
            oldData: _mapInstanceProperty(updateEventData).call(updateEventData, function (value) {
              return value.oldData;
            }),
            data: _mapInstanceProperty(updateEventData).call(updateEventData, function (value) {
              return value.updatedData;
            })
          };
          // TODO: remove deprecated property 'data' some day
          //Object.defineProperty(props, 'data', {
          //  'get': (function() {
          //    console.warn('Property data is deprecated. Use DataSet.get(ids) to retrieve the new data, use the oldData property on this object to get the old data');
          //    return updatedData;
          //  }).bind(this)
          //});
          this._trigger("update", props, senderId);
          return props.items;
        } else {
          return [];
        }
      }
      /** @inheritDoc */
    }, {
      key: "get",
      value: function get(first, second) {
        // @TODO: Woudn't it be better to split this into multiple methods?
        // parse the arguments
        var id = undefined;
        var ids = undefined;
        var options = undefined;
        if (isId(first)) {
          // get(id [, options])
          id = first;
          options = second;
        } else if (_Array$isArray(first)) {
          // get(ids [, options])
          ids = first;
          options = second;
        } else {
          // get([, options])
          options = first;
        }
        // determine the return type
        var returnType = options && options.returnType === "Object" ? "Object" : "Array";
        // @TODO: WTF is this? Or am I missing something?
        // var returnType
        // if (options && options.returnType) {
        //   var allowedValues = ['Array', 'Object']
        //   returnType =
        //     allowedValues.indexOf(options.returnType) == -1
        //       ? 'Array'
        //       : options.returnType
        // } else {
        //   returnType = 'Array'
        // }
        // build options
        var filter = options && _filterInstanceProperty(options);
        var items = [];
        var item = undefined;
        var itemIds = undefined;
        var itemId = undefined;
        // convert items
        if (id != null) {
          // return a single item
          item = this._data.get(id);
          if (item && filter && !filter(item)) {
            item = undefined;
          }
        } else if (ids != null) {
          // return a subset of items
          for (var i = 0, len = ids.length; i < len; i++) {
            item = this._data.get(ids[i]);
            if (item != null && (!filter || filter(item))) {
              items.push(item);
            }
          }
        } else {
          var _context2;
          // return all items
          itemIds = _toConsumableArray(_keysInstanceProperty(_context2 = this._data).call(_context2));
          for (var _i = 0, _len = itemIds.length; _i < _len; _i++) {
            itemId = itemIds[_i];
            item = this._data.get(itemId);
            if (item != null && (!filter || filter(item))) {
              items.push(item);
            }
          }
        }
        // order the results
        if (options && options.order && id == undefined) {
          this._sort(items, options.order);
        }
        // filter fields of the items
        if (options && options.fields) {
          var fields = options.fields;
          if (id != undefined && item != null) {
            item = this._filterFields(item, fields);
          } else {
            for (var _i2 = 0, _len2 = items.length; _i2 < _len2; _i2++) {
              items[_i2] = this._filterFields(items[_i2], fields);
            }
          }
        }
        // return the results
        if (returnType == "Object") {
          var result = {};
          for (var _i3 = 0, _len3 = items.length; _i3 < _len3; _i3++) {
            var resultant = items[_i3];
            // @TODO: Shoudn't this be this._fieldId?
            // result[resultant.id] = resultant
            var _id2 = resultant[this._idProp];
            result[_id2] = resultant;
          }
          return result;
        } else {
          if (id != null) {
            var _item;
            // a single item
            return (_item = item) !== null && _item !== void 0 ? _item : null;
          } else {
            // just return our array
            return items;
          }
        }
      }
      /** @inheritDoc */
    }, {
      key: "getIds",
      value: function getIds(options) {
        var data = this._data;
        var filter = options && _filterInstanceProperty(options);
        var order = options && options.order;
        var itemIds = _toConsumableArray(_keysInstanceProperty(data).call(data));
        var ids = [];
        if (filter) {
          // get filtered items
          if (order) {
            // create ordered list
            var items = [];
            for (var i = 0, len = itemIds.length; i < len; i++) {
              var id = itemIds[i];
              var item = this._data.get(id);
              if (item != null && filter(item)) {
                items.push(item);
              }
            }
            this._sort(items, order);
            for (var _i4 = 0, _len4 = items.length; _i4 < _len4; _i4++) {
              ids.push(items[_i4][this._idProp]);
            }
          } else {
            // create unordered list
            for (var _i5 = 0, _len5 = itemIds.length; _i5 < _len5; _i5++) {
              var _id3 = itemIds[_i5];
              var _item2 = this._data.get(_id3);
              if (_item2 != null && filter(_item2)) {
                ids.push(_item2[this._idProp]);
              }
            }
          }
        } else {
          // get all items
          if (order) {
            // create an ordered list
            var _items = [];
            for (var _i6 = 0, _len6 = itemIds.length; _i6 < _len6; _i6++) {
              var _id4 = itemIds[_i6];
              _items.push(data.get(_id4));
            }
            this._sort(_items, order);
            for (var _i7 = 0, _len7 = _items.length; _i7 < _len7; _i7++) {
              ids.push(_items[_i7][this._idProp]);
            }
          } else {
            // create unordered list
            for (var _i8 = 0, _len8 = itemIds.length; _i8 < _len8; _i8++) {
              var _id5 = itemIds[_i8];
              var _item3 = data.get(_id5);
              if (_item3 != null) {
                ids.push(_item3[this._idProp]);
              }
            }
          }
        }
        return ids;
      }
      /** @inheritDoc */
    }, {
      key: "getDataSet",
      value: function getDataSet() {
        return this;
      }
      /** @inheritDoc */
    }, {
      key: "forEach",
      value: function forEach(callback, options) {
        var filter = options && _filterInstanceProperty(options);
        var data = this._data;
        var itemIds = _toConsumableArray(_keysInstanceProperty(data).call(data));
        if (options && options.order) {
          // execute forEach on ordered list
          var items = this.get(options);
          for (var i = 0, len = items.length; i < len; i++) {
            var item = items[i];
            var id = item[this._idProp];
            callback(item, id);
          }
        } else {
          // unordered
          for (var _i9 = 0, _len9 = itemIds.length; _i9 < _len9; _i9++) {
            var _id6 = itemIds[_i9];
            var _item4 = this._data.get(_id6);
            if (_item4 != null && (!filter || filter(_item4))) {
              callback(_item4, _id6);
            }
          }
        }
      }
      /** @inheritDoc */
    }, {
      key: "map",
      value: function map(callback, options) {
        var filter = options && _filterInstanceProperty(options);
        var mappedItems = [];
        var data = this._data;
        var itemIds = _toConsumableArray(_keysInstanceProperty(data).call(data));
        // convert and filter items
        for (var i = 0, len = itemIds.length; i < len; i++) {
          var id = itemIds[i];
          var item = this._data.get(id);
          if (item != null && (!filter || filter(item))) {
            mappedItems.push(callback(item, id));
          }
        }
        // order items
        if (options && options.order) {
          this._sort(mappedItems, options.order);
        }
        return mappedItems;
      }
      /**
       * Filter the fields of an item.
       *
       * @param item - The item whose fields should be filtered.
       * @param fields - The names of the fields that will be kept.
       * @typeParam K - Field name type.
       * @returns The item without any additional fields.
       */
    }, {
      key: "_filterFields",
      value: function _filterFields(item, fields) {
        var _context3;
        if (!item) {
          // item is null
          return item;
        }
        return _reduceInstanceProperty(_context3 = _Array$isArray(fields) ?
        // Use the supplied array
        fields :
        // Use the keys of the supplied object
        _Object$keys(fields)).call(_context3, function (filteredItem, field) {
          filteredItem[field] = item[field];
          return filteredItem;
        }, {});
      }
      /**
       * Sort the provided array with items.
       *
       * @param items - Items to be sorted in place.
       * @param order - A field name or custom sort function.
       * @typeParam T - The type of the items in the items array.
       */
    }, {
      key: "_sort",
      value: function _sort(items, order) {
        if (typeof order === "string") {
          // order by provided field name
          var name = order; // field name
          _sortInstanceProperty(items).call(items, function (a, b) {
            // @TODO: How to treat missing properties?
            var av = a[name];
            var bv = b[name];
            return av > bv ? 1 : av < bv ? -1 : 0;
          });
        } else if (typeof order === "function") {
          // order by sort function
          _sortInstanceProperty(items).call(items, order);
        } else {
          // TODO: extend order by an Object {field:string, direction:string}
          //       where direction can be 'asc' or 'desc'
          throw new TypeError("Order must be a function or a string");
        }
      }
      /**
       * Remove an item or multiple items by “reference” (only the id is used) or by id.
       *
       * The method ignores removal of non-existing items, and returns an array containing the ids of the items which are actually removed from the DataSet.
       *
       * After the items are removed, the DataSet will trigger an event `remove` for the removed items. When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.
       *
       * ## Example
       * ```javascript
       * // create a DataSet
       * const data = new vis.DataSet([
       *   { id: 1, text: 'item 1' },
       *   { id: 2, text: 'item 2' },
       *   { id: 3, text: 'item 3' }
       * ])
       *
       * // remove items
       * const ids = data.remove([2, { id: 3 }, 4])
       *
       * console.log(ids) // [2, 3]
       * ```
       *
       * @param id - One or more items or ids of items to be removed.
       * @param senderId - Sender id.
       * @returns The ids of the removed items.
       */
    }, {
      key: "remove",
      value: function remove(id, senderId) {
        var removedIds = [];
        var removedItems = [];
        // force everything to be an array for simplicity
        var ids = _Array$isArray(id) ? id : [id];
        for (var i = 0, len = ids.length; i < len; i++) {
          var item = this._remove(ids[i]);
          if (item) {
            var itemId = item[this._idProp];
            if (itemId != null) {
              removedIds.push(itemId);
              removedItems.push(item);
            }
          }
        }
        if (removedIds.length) {
          this._trigger("remove", {
            items: removedIds,
            oldData: removedItems
          }, senderId);
        }
        return removedIds;
      }
      /**
       * Remove an item by its id or reference.
       *
       * @param id - Id of an item or the item itself.
       * @returns The removed item if removed, null otherwise.
       */
    }, {
      key: "_remove",
      value: function _remove(id) {
        // @TODO: It origianlly returned the item although the docs say id.
        // The code expects the item, so probably an error in the docs.
        var ident;
        // confirm the id to use based on the args type
        if (isId(id)) {
          ident = id;
        } else if (id && typeof id === "object") {
          ident = id[this._idProp]; // look for the identifier field using ._idProp
        }
        // do the removing if the item is found
        if (ident != null && this._data.has(ident)) {
          var item = this._data.get(ident) || null;
          this._data.delete(ident);
          --this.length;
          return item;
        }
        return null;
      }
      /**
       * Clear the entire data set.
       *
       * After the items are removed, the {@link DataSet} will trigger an event `remove` for all removed items. When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.
       *
       * @param senderId - Sender id.
       * @returns removedIds - The ids of all removed items.
       */
    }, {
      key: "clear",
      value: function clear(senderId) {
        var _context4;
        var ids = _toConsumableArray(_keysInstanceProperty(_context4 = this._data).call(_context4));
        var items = [];
        for (var i = 0, len = ids.length; i < len; i++) {
          items.push(this._data.get(ids[i]));
        }
        this._data.clear();
        this.length = 0;
        this._trigger("remove", {
          items: ids,
          oldData: items
        }, senderId);
        return ids;
      }
      /**
       * Find the item with maximum value of a specified field.
       *
       * @param field - Name of the property that should be searched for max value.
       * @returns Item containing max value, or null if no items.
       */
    }, {
      key: "max",
      value: function max(field) {
        var _context5;
        var max = null;
        var maxField = null;
        var _iterator = _createForOfIteratorHelper$1(_valuesInstanceProperty(_context5 = this._data).call(_context5)),
          _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var item = _step.value;
            var itemField = item[field];
            if (typeof itemField === "number" && (maxField == null || itemField > maxField)) {
              max = item;
              maxField = itemField;
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
        return max || null;
      }
      /**
       * Find the item with minimum value of a specified field.
       *
       * @param field - Name of the property that should be searched for min value.
       * @returns Item containing min value, or null if no items.
       */
    }, {
      key: "min",
      value: function min(field) {
        var _context6;
        var min = null;
        var minField = null;
        var _iterator2 = _createForOfIteratorHelper$1(_valuesInstanceProperty(_context6 = this._data).call(_context6)),
          _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var item = _step2.value;
            var itemField = item[field];
            if (typeof itemField === "number" && (minField == null || itemField < minField)) {
              min = item;
              minField = itemField;
            }
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
        return min || null;
      }
      /**
       * Find all distinct values of a specified field
       *
       * @param prop - The property name whose distinct values should be returned.
       * @returns Unordered array containing all distinct values. Items without specified property are ignored.
       */
    }, {
      key: "distinct",
      value: function distinct(prop) {
        var data = this._data;
        var itemIds = _toConsumableArray(_keysInstanceProperty(data).call(data));
        var values = [];
        var count = 0;
        for (var i = 0, len = itemIds.length; i < len; i++) {
          var id = itemIds[i];
          var item = data.get(id);
          var value = item[prop];
          var exists = false;
          for (var j = 0; j < count; j++) {
            if (values[j] == value) {
              exists = true;
              break;
            }
          }
          if (!exists && value !== undefined) {
            values[count] = value;
            count++;
          }
        }
        return values;
      }
      /**
       * Add a single item. Will fail when an item with the same id already exists.
       *
       * @param item - A new item to be added.
       * @returns Added item's id. An id is generated when it is not present in the item.
       */
    }, {
      key: "_addItem",
      value: function _addItem(item) {
        var fullItem = ensureFullItem(item, this._idProp);
        var id = fullItem[this._idProp];
        // check whether this id is already taken
        if (this._data.has(id)) {
          // item already exists
          throw new Error("Cannot add item: item with id " + id + " already exists");
        }
        this._data.set(id, fullItem);
        ++this.length;
        return id;
      }
      /**
       * Update a single item: merge with existing item.
       * Will fail when the item has no id, or when there does not exist an item with the same id.
       *
       * @param update - The new item
       * @returns The id of the updated item.
       */
    }, {
      key: "_updateItem",
      value: function _updateItem(update) {
        var id = update[this._idProp];
        if (id == null) {
          throw new Error("Cannot update item: item has no id (item: " + _JSON$stringify(update) + ")");
        }
        var item = this._data.get(id);
        if (!item) {
          // item doesn't exist
          throw new Error("Cannot update item: no item with id " + id + " found");
        }
        this._data.set(id, _objectSpread(_objectSpread({}, item), update));
        return id;
      }
      /** @inheritDoc */
    }, {
      key: "stream",
      value: function stream(ids) {
        if (ids) {
          var data = this._data;
          return new DataStream({
            [_Symbol$iterator]() {
              return /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
                var _iterator3, _step3, id, item;
                return _regeneratorRuntime.wrap(function _callee$(_context7) {
                  while (1) switch (_context7.prev = _context7.next) {
                    case 0:
                      _iterator3 = _createForOfIteratorHelper$1(ids);
                      _context7.prev = 1;
                      _iterator3.s();
                    case 3:
                      if ((_step3 = _iterator3.n()).done) {
                        _context7.next = 11;
                        break;
                      }
                      id = _step3.value;
                      item = data.get(id);
                      if (!(item != null)) {
                        _context7.next = 9;
                        break;
                      }
                      _context7.next = 9;
                      return [id, item];
                    case 9:
                      _context7.next = 3;
                      break;
                    case 11:
                      _context7.next = 16;
                      break;
                    case 13:
                      _context7.prev = 13;
                      _context7.t0 = _context7["catch"](1);
                      _iterator3.e(_context7.t0);
                    case 16:
                      _context7.prev = 16;
                      _iterator3.f();
                      return _context7.finish(16);
                    case 19:
                    case "end":
                      return _context7.stop();
                  }
                }, _callee, null, [[1, 13, 16, 19]]);
              })();
            }
          });
        } else {
          var _context8;
          return new DataStream({
            [_Symbol$iterator]: _bindInstanceProperty$1(_context8 = _entriesInstanceProperty(this._data)).call(_context8, this._data)
          });
        }
      }
    }]);
    return DataSet;
  }(DataSetPart);
  function _createForOfIteratorHelper(o, allowArrayLike) {
    var it = typeof _Symbol !== "undefined" && _getIteratorMethod(o) || o["@@iterator"];
    if (!it) {
      if (_Array$isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
        if (it) o = it;
        var i = 0;
        var F = function F() {};
        return {
          s: F,
          n: function n() {
            if (i >= o.length) return {
              done: true
            };
            return {
              done: false,
              value: o[i++]
            };
          },
          e: function e(_e) {
            throw _e;
          },
          f: F
        };
      }
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var normalCompletion = true,
      didErr = false,
      err;
    return {
      s: function s() {
        it = it.call(o);
      },
      n: function n() {
        var step = it.next();
        normalCompletion = step.done;
        return step;
      },
      e: function e(_e2) {
        didErr = true;
        err = _e2;
      },
      f: function f() {
        try {
          if (!normalCompletion && it.return != null) it.return();
        } finally {
          if (didErr) throw err;
        }
      }
    };
  }
  function _unsupportedIterableToArray(o, minLen) {
    var _context5;
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = _sliceInstanceProperty(_context5 = Object.prototype.toString.call(o)).call(_context5, 8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return _Array$from$1(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
  }
  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
    return arr2;
  }
  function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
      var Super = _getPrototypeOf(Derived),
        result;
      if (hasNativeReflectConstruct) {
        var NewTarget = _getPrototypeOf(this).constructor;
        result = _Reflect$construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }
      return _possibleConstructorReturn(this, result);
    };
  }
  function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !_Reflect$construct) return false;
    if (_Reflect$construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
      Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }
  /**
   * DataView
   *
   * A DataView offers a filtered and/or formatted view on a DataSet. One can subscribe to changes in a DataView, and easily get filtered or formatted data without having to specify filters and field types all the time.
   *
   * ## Example
   * ```javascript
   * // create a DataSet
   * var data = new vis.DataSet();
   * data.add([
   *   {id: 1, text: 'item 1', date: new Date(2013, 6, 20), group: 1, first: true},
   *   {id: 2, text: 'item 2', date: '2013-06-23', group: 2},
   *   {id: 3, text: 'item 3', date: '2013-06-25', group: 2},
   *   {id: 4, text: 'item 4'}
   * ]);
   *
   * // create a DataView
   * // the view will only contain items having a property group with value 1,
   * // and will only output fields id, text, and date.
   * var view = new vis.DataView(data, {
   *   filter: function (item) {
   *     return (item.group == 1);
   *   },
   *   fields: ['id', 'text', 'date']
   * });
   *
   * // subscribe to any change in the DataView
   * view.on('*', function (event, properties, senderId) {
   *   console.log('event', event, properties);
   * });
   *
   * // update an item in the data set
   * data.update({id: 2, group: 1});
   *
   * // get all ids in the view
   * var ids = view.getIds();
   * console.log('ids', ids); // will output [1, 2]
   *
   * // get all items in the view
   * var items = view.get();
   * ```
   *
   * @typeParam Item - Item type that may or may not have an id.
   * @typeParam IdProp - Name of the property that contains the id.
   */
  var DataView = /*#__PURE__*/function (_DataSetPart) {
    _inherits(DataView, _DataSetPart);
    var _super = _createSuper(DataView);
    // ids of the items currently in memory (just contains a boolean true)

    /**
     * Create a DataView.
     *
     * @param data - The instance containing data (directly or indirectly).
     * @param options - Options to configure this data view.
     */
    function DataView(data, options) {
      var _context;
      var _this;
      _classCallCheck(this, DataView);
      _this = _super.call(this);
      /** @inheritDoc */
      _defineProperty(_assertThisInitialized(_this), "length", 0);
      // constructor → setData
      _defineProperty(_assertThisInitialized(_this), "_ids", new _Set());
      _this._options = options || {};
      _this._listener = _bindInstanceProperty$1(_context = _this._onEvent).call(_context, _assertThisInitialized(_this));
      _this.setData(data);
      return _this;
    }
    // TODO: implement a function .config() to dynamically update things like configured filter
    // and trigger changes accordingly
    /**
     * Set a data source for the view.
     *
     * @param data - The instance containing data (directly or indirectly).
     * @remarks
     * Note that when the data view is bound to a data set it won't be garbage
     * collected unless the data set is too. Use `dataView.setData(null)` or
     * `dataView.dispose()` to enable garbage collection before you lose the last
     * reference.
     */
    _createClass(DataView, [{
      key: "idProp",
      get: /** @inheritDoc */
      function get() {
        return this.getDataSet().idProp;
      }
    }, {
      key: "setData",
      value: function setData(data) {
        if (this._data) {
          // unsubscribe from current dataset
          if (this._data.off) {
            this._data.off("*", this._listener);
          }
          // trigger a remove of all items in memory
          var ids = this._data.getIds({
            filter: _filterInstanceProperty(this._options)
          });
          var items = this._data.get(ids);
          this._ids.clear();
          this.length = 0;
          this._trigger("remove", {
            items: ids,
            oldData: items
          });
        }
        if (data != null) {
          this._data = data;
          // trigger an add of all added items
          var _ids = this._data.getIds({
            filter: _filterInstanceProperty(this._options)
          });
          for (var i = 0, len = _ids.length; i < len; i++) {
            var id = _ids[i];
            this._ids.add(id);
          }
          this.length = _ids.length;
          this._trigger("add", {
            items: _ids
          });
        } else {
          this._data = new DataSet();
        }
        // subscribe to new dataset
        if (this._data.on) {
          this._data.on("*", this._listener);
        }
      }
      /**
       * Refresh the DataView.
       * Useful when the DataView has a filter function containing a variable parameter.
       */
    }, {
      key: "refresh",
      value: function refresh() {
        var ids = this._data.getIds({
          filter: _filterInstanceProperty(this._options)
        });
        var oldIds = _toConsumableArray(this._ids);
        var newIds = {};
        var addedIds = [];
        var removedIds = [];
        var removedItems = [];
        // check for additions
        for (var i = 0, len = ids.length; i < len; i++) {
          var id = ids[i];
          newIds[id] = true;
          if (!this._ids.has(id)) {
            addedIds.push(id);
            this._ids.add(id);
          }
        }
        // check for removals
        for (var _i = 0, _len = oldIds.length; _i < _len; _i++) {
          var _id = oldIds[_i];
          var item = this._data.get(_id);
          if (item == null) {
            // @TODO: Investigate.
            // Doesn't happen during tests or examples.
            // Is it really impossible or could it eventually happen?
            // How to handle it if it does? The types guarantee non-nullable items.
            console.error("If you see this, report it please.");
          } else if (!newIds[_id]) {
            removedIds.push(_id);
            removedItems.push(item);
            this._ids.delete(_id);
          }
        }
        this.length += addedIds.length - removedIds.length;
        // trigger events
        if (addedIds.length) {
          this._trigger("add", {
            items: addedIds
          });
        }
        if (removedIds.length) {
          this._trigger("remove", {
            items: removedIds,
            oldData: removedItems
          });
        }
      }
      /** @inheritDoc */
    }, {
      key: "get",
      value: function get(first, second) {
        if (this._data == null) {
          return null;
        }
        // parse the arguments
        var ids = null;
        var options;
        if (isId(first) || _Array$isArray(first)) {
          ids = first;
          options = second;
        } else {
          options = first;
        }
        // extend the options with the default options and provided options
        var viewOptions = _Object$assign({}, this._options, options);
        // create a combined filter method when needed
        var thisFilter = _filterInstanceProperty(this._options);
        var optionsFilter = options && _filterInstanceProperty(options);
        if (thisFilter && optionsFilter) {
          viewOptions.filter = function (item) {
            return thisFilter(item) && optionsFilter(item);
          };
        }
        if (ids == null) {
          return this._data.get(viewOptions);
        } else {
          return this._data.get(ids, viewOptions);
        }
      }
      /** @inheritDoc */
    }, {
      key: "getIds",
      value: function getIds(options) {
        if (this._data.length) {
          var defaultFilter = _filterInstanceProperty(this._options);
          var optionsFilter = options != null ? _filterInstanceProperty(options) : null;
          var filter;
          if (optionsFilter) {
            if (defaultFilter) {
              filter = function filter(item) {
                return defaultFilter(item) && optionsFilter(item);
              };
            } else {
              filter = optionsFilter;
            }
          } else {
            filter = defaultFilter;
          }
          return this._data.getIds({
            filter: filter,
            order: options && options.order
          });
        } else {
          return [];
        }
      }
      /** @inheritDoc */
    }, {
      key: "forEach",
      value: function forEach(callback, options) {
        if (this._data) {
          var _context2;
          var defaultFilter = _filterInstanceProperty(this._options);
          var optionsFilter = options && _filterInstanceProperty(options);
          var filter;
          if (optionsFilter) {
            if (defaultFilter) {
              filter = function filter(item) {
                return defaultFilter(item) && optionsFilter(item);
              };
            } else {
              filter = optionsFilter;
            }
          } else {
            filter = defaultFilter;
          }
          _forEachInstanceProperty(_context2 = this._data).call(_context2, callback, {
            filter: filter,
            order: options && options.order
          });
        }
      }
      /** @inheritDoc */
    }, {
      key: "map",
      value: function map(callback, options) {
        if (this._data) {
          var _context3;
          var defaultFilter = _filterInstanceProperty(this._options);
          var optionsFilter = options && _filterInstanceProperty(options);
          var filter;
          if (optionsFilter) {
            if (defaultFilter) {
              filter = function filter(item) {
                return defaultFilter(item) && optionsFilter(item);
              };
            } else {
              filter = optionsFilter;
            }
          } else {
            filter = defaultFilter;
          }
          return _mapInstanceProperty(_context3 = this._data).call(_context3, callback, {
            filter: filter,
            order: options && options.order
          });
        } else {
          return [];
        }
      }
      /** @inheritDoc */
    }, {
      key: "getDataSet",
      value: function getDataSet() {
        return this._data.getDataSet();
      }
      /** @inheritDoc */
    }, {
      key: "stream",
      value: function stream(ids) {
        var _context4;
        return this._data.stream(ids || {
          [_Symbol$iterator]: _bindInstanceProperty$1(_context4 = _keysInstanceProperty(this._ids)).call(_context4, this._ids)
        });
      }
      /**
       * Render the instance unusable prior to garbage collection.
       *
       * @remarks
       * The intention of this method is to help discover scenarios where the data
       * view is being used when the programmer thinks it has been garbage collected
       * already. It's stricter version of `dataView.setData(null)`.
       */
    }, {
      key: "dispose",
      value: function dispose() {
        var _this$_data;
        if ((_this$_data = this._data) !== null && _this$_data !== void 0 && _this$_data.off) {
          this._data.off("*", this._listener);
        }
        var message = "This data view has already been disposed of.";
        var replacement = {
          get: function get() {
            throw new Error(message);
          },
          set: function set() {
            throw new Error(message);
          },
          configurable: false
        };
        var _iterator = _createForOfIteratorHelper(_Reflect$ownKeys(DataView.prototype)),
          _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var key = _step.value;
            _Object$defineProperty(this, key, replacement);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
      /**
       * Event listener. Will propagate all events from the connected data set to the subscribers of the DataView, but will filter the items and only trigger when there are changes in the filtered data set.
       *
       * @param event - The name of the event.
       * @param params - Parameters of the event.
       * @param senderId - Id supplied by the sender.
       */
    }, {
      key: "_onEvent",
      value: function _onEvent(event, params, senderId) {
        if (!params || !params.items || !this._data) {
          return;
        }
        var ids = params.items;
        var addedIds = [];
        var updatedIds = [];
        var removedIds = [];
        var oldItems = [];
        var updatedItems = [];
        var removedItems = [];
        switch (event) {
          case "add":
            // filter the ids of the added items
            for (var i = 0, len = ids.length; i < len; i++) {
              var id = ids[i];
              var item = this.get(id);
              if (item) {
                this._ids.add(id);
                addedIds.push(id);
              }
            }
            break;
          case "update":
            // determine the event from the views viewpoint: an updated
            // item can be added, updated, or removed from this view.
            for (var _i2 = 0, _len2 = ids.length; _i2 < _len2; _i2++) {
              var _id2 = ids[_i2];
              var _item = this.get(_id2);
              if (_item) {
                if (this._ids.has(_id2)) {
                  updatedIds.push(_id2);
                  updatedItems.push(params.data[_i2]);
                  oldItems.push(params.oldData[_i2]);
                } else {
                  this._ids.add(_id2);
                  addedIds.push(_id2);
                }
              } else {
                if (this._ids.has(_id2)) {
                  this._ids.delete(_id2);
                  removedIds.push(_id2);
                  removedItems.push(params.oldData[_i2]);
                }
              }
            }
            break;
          case "remove":
            // filter the ids of the removed items
            for (var _i3 = 0, _len3 = ids.length; _i3 < _len3; _i3++) {
              var _id3 = ids[_i3];
              if (this._ids.has(_id3)) {
                this._ids.delete(_id3);
                removedIds.push(_id3);
                removedItems.push(params.oldData[_i3]);
              }
            }
            break;
        }
        this.length += addedIds.length - removedIds.length;
        if (addedIds.length) {
          this._trigger("add", {
            items: addedIds
          }, senderId);
        }
        if (updatedIds.length) {
          this._trigger("update", {
            items: updatedIds,
            oldData: oldItems,
            data: updatedItems
          }, senderId);
        }
        if (removedIds.length) {
          this._trigger("remove", {
            items: removedIds,
            oldData: removedItems
          }, senderId);
        }
      }
    }]);
    return DataView;
  }(DataSetPart);

  /**
   * Check that given value is compatible with Vis Data Set interface.
   *
   * @param idProp - The expected property to contain item id.
   * @param v - The value to be tested.
   * @returns True if all expected values and methods match, false otherwise.
   */
  function isDataSetLike(idProp, v) {
    return typeof v === "object" && v !== null && idProp === v.idProp && typeof v.add === "function" && typeof v.clear === "function" && typeof v.distinct === "function" && typeof _forEachInstanceProperty(v) === "function" && typeof v.get === "function" && typeof v.getDataSet === "function" && typeof v.getIds === "function" && typeof v.length === "number" && typeof _mapInstanceProperty(v) === "function" && typeof v.max === "function" && typeof v.min === "function" && typeof v.off === "function" && typeof v.on === "function" && typeof v.remove === "function" && typeof v.setOptions === "function" && typeof v.stream === "function" && typeof v.update === "function" && typeof v.updateOnly === "function";
  }

  /**
   * Check that given value is compatible with Vis Data View interface.
   *
   * @param idProp - The expected property to contain item id.
   * @param v - The value to be tested.
   * @returns True if all expected values and methods match, false otherwise.
   */
  function isDataViewLike(idProp, v) {
    return typeof v === "object" && v !== null && idProp === v.idProp && typeof _forEachInstanceProperty(v) === "function" && typeof v.get === "function" && typeof v.getDataSet === "function" && typeof v.getIds === "function" && typeof v.length === "number" && typeof _mapInstanceProperty(v) === "function" && typeof v.off === "function" && typeof v.on === "function" && typeof v.stream === "function" && isDataSetLike(idProp, v.getDataSet());
  }
  exports.DELETE = DELETE;
  exports.DataSet = DataSet;
  exports.DataStream = DataStream;
  exports.DataView = DataView;
  exports.Queue = Queue;
  exports.createNewDataPipeFrom = createNewDataPipeFrom;
  exports.isDataSetLike = isDataSetLike;
  exports.isDataViewLike = isDataViewLike;
});

/***/ }),

/***/ 8690:
/*!************************************************************************!*\
  !*** ./node_modules/vis-timeline/peer/umd/vis-timeline-graph2d.min.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

/**
 * vis-timeline and vis-graph2d
 * https://visjs.github.io/vis-timeline/
 *
 * Create a fully customizable, interactive timeline with items and ranges.
 *
 * @version 7.7.2
 * @date    2023-03-22T11:14:31.874Z
 *
 * @copyright (c) 2011-2017 Almende B.V, http://almende.com
 * @copyright (c) 2017-2019 visjs contributors, https://github.com/visjs
 *
 * @license
 * vis.js is dual licensed under both
 *
 *   1. The Apache 2.0 License
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   and
 *
 *   2. The MIT License
 *      http://opensource.org/licenses/MIT
 *
 * vis.js may be distributed under either license.
 */
!function (t, e) {
   true ? e(exports, __webpack_require__(/*! moment */ 6908), __webpack_require__(/*! vis-data/peer/umd/vis-data.js */ 8586)) : 0;
}(this, function (t, e, n) {
  var o = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
  function r(t) {
    return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t;
  }
  var s = {},
    a = {
      get exports() {
        return s;
      },
      set exports(t) {
        s = t;
      }
    },
    l = function (t) {
      return t && t.Math == Math && t;
    },
    h = l("object" == typeof globalThis && globalThis) || l("object" == typeof window && window) || l("object" == typeof self && self) || l("object" == typeof o && o) || function () {
      return this;
    }() || Function("return this")(),
    u = function (t) {
      try {
        return !!t();
      } catch (t) {
        return !0;
      }
    },
    c = !u(function () {
      var t = function () {}.bind();
      return "function" != typeof t || t.hasOwnProperty("prototype");
    }),
    d = c,
    p = Function.prototype,
    m = p.apply,
    f = p.call,
    v = "object" == typeof Reflect && Reflect.apply || (d ? f.bind(m) : function () {
      return f.apply(m, arguments);
    }),
    g = c,
    y = Function.prototype,
    b = y.call,
    w = g && y.bind.bind(b, b),
    k = g ? w : function (t) {
      return function () {
        return b.apply(t, arguments);
      };
    },
    x = k,
    _ = x({}.toString),
    C = x("".slice),
    S = function (t) {
      return C(_(t), 8, -1);
    },
    D = S,
    T = k,
    O = function (t) {
      if ("Function" === D(t)) return T(t);
    },
    E = "object" == typeof document && document.all,
    A = {
      all: E,
      IS_HTMLDDA: void 0 === E && void 0 !== E
    },
    I = A.all,
    P = A.IS_HTMLDDA ? function (t) {
      return "function" == typeof t || t === I;
    } : function (t) {
      return "function" == typeof t;
    },
    M = {},
    N = !u(function () {
      return 7 != Object.defineProperty({}, 1, {
        get: function () {
          return 7;
        }
      })[1];
    }),
    F = c,
    R = Function.prototype.call,
    L = F ? R.bind(R) : function () {
      return R.apply(R, arguments);
    },
    j = {},
    B = {}.propertyIsEnumerable,
    z = Object.getOwnPropertyDescriptor,
    H = z && !B.call({
      1: 2
    }, 1);
  j.f = H ? function (t) {
    var e = z(this, t);
    return !!e && e.enumerable;
  } : B;
  var G,
    W,
    Y = function (t, e) {
      return {
        enumerable: !(1 & t),
        configurable: !(2 & t),
        writable: !(4 & t),
        value: e
      };
    },
    V = u,
    U = S,
    X = Object,
    q = k("".split),
    K = V(function () {
      return !X("z").propertyIsEnumerable(0);
    }) ? function (t) {
      return "String" == U(t) ? q(t, "") : X(t);
    } : X,
    $ = function (t) {
      return null == t;
    },
    Z = $,
    Q = TypeError,
    J = function (t) {
      if (Z(t)) throw Q("Can't call method on " + t);
      return t;
    },
    tt = K,
    et = J,
    it = function (t) {
      return tt(et(t));
    },
    nt = P,
    ot = A.all,
    rt = A.IS_HTMLDDA ? function (t) {
      return "object" == typeof t ? null !== t : nt(t) || t === ot;
    } : function (t) {
      return "object" == typeof t ? null !== t : nt(t);
    },
    st = {},
    at = st,
    lt = h,
    ht = P,
    ut = function (t) {
      return ht(t) ? t : void 0;
    },
    ct = function (t, e) {
      return arguments.length < 2 ? ut(at[t]) || ut(lt[t]) : at[t] && at[t][e] || lt[t] && lt[t][e];
    },
    dt = k({}.isPrototypeOf),
    pt = "undefined" != typeof navigator && String(navigator.userAgent) || "",
    mt = h,
    ft = pt,
    vt = mt.process,
    gt = mt.Deno,
    yt = vt && vt.versions || gt && gt.version,
    bt = yt && yt.v8;
  bt && (W = (G = bt.split("."))[0] > 0 && G[0] < 4 ? 1 : +(G[0] + G[1])), !W && ft && (!(G = ft.match(/Edge\/(\d+)/)) || G[1] >= 74) && (G = ft.match(/Chrome\/(\d+)/)) && (W = +G[1]);
  var wt = W,
    kt = wt,
    xt = u,
    _t = !!Object.getOwnPropertySymbols && !xt(function () {
      var t = Symbol();
      return !String(t) || !(Object(t) instanceof Symbol) || !Symbol.sham && kt && kt < 41;
    }),
    Ct = _t && !Symbol.sham && "symbol" == typeof Symbol.iterator,
    St = ct,
    Dt = P,
    Tt = dt,
    Ot = Object,
    Et = Ct ? function (t) {
      return "symbol" == typeof t;
    } : function (t) {
      var e = St("Symbol");
      return Dt(e) && Tt(e.prototype, Ot(t));
    },
    At = String,
    It = function (t) {
      try {
        return At(t);
      } catch (t) {
        return "Object";
      }
    },
    Pt = P,
    Mt = It,
    Nt = TypeError,
    Ft = function (t) {
      if (Pt(t)) return t;
      throw Nt(Mt(t) + " is not a function");
    },
    Rt = Ft,
    Lt = $,
    jt = function (t, e) {
      var i = t[e];
      return Lt(i) ? void 0 : Rt(i);
    },
    Bt = L,
    zt = P,
    Ht = rt,
    Gt = TypeError,
    Wt = {},
    Yt = {
      get exports() {
        return Wt;
      },
      set exports(t) {
        Wt = t;
      }
    },
    Vt = h,
    Ut = Object.defineProperty,
    Xt = function (t, e) {
      try {
        Ut(Vt, t, {
          value: e,
          configurable: !0,
          writable: !0
        });
      } catch (i) {
        Vt[t] = e;
      }
      return e;
    },
    qt = "__core-js_shared__",
    Kt = h[qt] || Xt(qt, {}),
    $t = Kt;
  (Yt.exports = function (t, e) {
    return $t[t] || ($t[t] = void 0 !== e ? e : {});
  })("versions", []).push({
    version: "3.29.0",
    mode: "pure",
    copyright: "© 2014-2023 Denis Pushkarev (zloirock.ru)",
    license: "https://github.com/zloirock/core-js/blob/v3.29.0/LICENSE",
    source: "https://github.com/zloirock/core-js"
  });
  var Zt = J,
    Qt = Object,
    Jt = function (t) {
      return Qt(Zt(t));
    },
    te = Jt,
    ee = k({}.hasOwnProperty),
    ie = Object.hasOwn || function (t, e) {
      return ee(te(t), e);
    },
    ne = k,
    oe = 0,
    re = Math.random(),
    se = ne(1..toString),
    ae = function (t) {
      return "Symbol(" + (void 0 === t ? "" : t) + ")_" + se(++oe + re, 36);
    },
    le = Wt,
    he = ie,
    ue = ae,
    ce = _t,
    de = Ct,
    pe = h.Symbol,
    me = le("wks"),
    fe = de ? pe.for || pe : pe && pe.withoutSetter || ue,
    ve = function (t) {
      return he(me, t) || (me[t] = ce && he(pe, t) ? pe[t] : fe("Symbol." + t)), me[t];
    },
    ge = L,
    ye = rt,
    be = Et,
    we = jt,
    ke = function (t, e) {
      var i, n;
      if ("string" === e && zt(i = t.toString) && !Ht(n = Bt(i, t))) return n;
      if (zt(i = t.valueOf) && !Ht(n = Bt(i, t))) return n;
      if ("string" !== e && zt(i = t.toString) && !Ht(n = Bt(i, t))) return n;
      throw Gt("Can't convert object to primitive value");
    },
    xe = TypeError,
    _e = ve("toPrimitive"),
    Ce = function (t, e) {
      if (!ye(t) || be(t)) return t;
      var i,
        n = we(t, _e);
      if (n) {
        if (void 0 === e && (e = "default"), i = ge(n, t, e), !ye(i) || be(i)) return i;
        throw xe("Can't convert object to primitive value");
      }
      return void 0 === e && (e = "number"), ke(t, e);
    },
    Se = Et,
    De = function (t) {
      var e = Ce(t, "string");
      return Se(e) ? e : e + "";
    },
    Te = rt,
    Oe = h.document,
    Ee = Te(Oe) && Te(Oe.createElement),
    Ae = function (t) {
      return Ee ? Oe.createElement(t) : {};
    },
    Ie = Ae,
    Pe = !N && !u(function () {
      return 7 != Object.defineProperty(Ie("div"), "a", {
        get: function () {
          return 7;
        }
      }).a;
    }),
    Me = N,
    Ne = L,
    Fe = j,
    Re = Y,
    Le = it,
    je = De,
    Be = ie,
    ze = Pe,
    He = Object.getOwnPropertyDescriptor;
  M.f = Me ? He : function (t, e) {
    if (t = Le(t), e = je(e), ze) try {
      return He(t, e);
    } catch (t) {}
    if (Be(t, e)) return Re(!Ne(Fe.f, t, e), t[e]);
  };
  var Ge = u,
    We = P,
    Ye = /#|\.prototype\./,
    Ve = function (t, e) {
      var i = Xe[Ue(t)];
      return i == Ke || i != qe && (We(e) ? Ge(e) : !!e);
    },
    Ue = Ve.normalize = function (t) {
      return String(t).replace(Ye, ".").toLowerCase();
    },
    Xe = Ve.data = {},
    qe = Ve.NATIVE = "N",
    Ke = Ve.POLYFILL = "P",
    $e = Ve,
    Ze = Ft,
    Qe = c,
    Je = O(O.bind),
    ti = function (t, e) {
      return Ze(t), void 0 === e ? t : Qe ? Je(t, e) : function () {
        return t.apply(e, arguments);
      };
    },
    ei = {},
    ii = N && u(function () {
      return 42 != Object.defineProperty(function () {}, "prototype", {
        value: 42,
        writable: !1
      }).prototype;
    }),
    ni = rt,
    oi = String,
    ri = TypeError,
    si = function (t) {
      if (ni(t)) return t;
      throw ri(oi(t) + " is not an object");
    },
    ai = N,
    li = Pe,
    hi = ii,
    ui = si,
    ci = De,
    di = TypeError,
    pi = Object.defineProperty,
    mi = Object.getOwnPropertyDescriptor,
    fi = "enumerable",
    vi = "configurable",
    gi = "writable";
  ei.f = ai ? hi ? function (t, e, i) {
    if (ui(t), e = ci(e), ui(i), "function" == typeof t && "prototype" === e && "value" in i && gi in i && !i[gi]) {
      var n = mi(t, e);
      n && n[gi] && (t[e] = i.value, i = {
        configurable: vi in i ? i[vi] : n[vi],
        enumerable: fi in i ? i[fi] : n[fi],
        writable: !1
      });
    }
    return pi(t, e, i);
  } : pi : function (t, e, i) {
    if (ui(t), e = ci(e), ui(i), li) try {
      return pi(t, e, i);
    } catch (t) {}
    if ("get" in i || "set" in i) throw di("Accessors not supported");
    return "value" in i && (t[e] = i.value), t;
  };
  var yi = ei,
    bi = Y,
    wi = N ? function (t, e, i) {
      return yi.f(t, e, bi(1, i));
    } : function (t, e, i) {
      return t[e] = i, t;
    },
    ki = h,
    xi = v,
    _i = O,
    Ci = P,
    Si = M.f,
    Di = $e,
    Ti = st,
    Oi = ti,
    Ei = wi,
    Ai = ie,
    Ii = function (t) {
      var e = function (i, n, o) {
        if (this instanceof e) {
          switch (arguments.length) {
            case 0:
              return new t();
            case 1:
              return new t(i);
            case 2:
              return new t(i, n);
          }
          return new t(i, n, o);
        }
        return xi(t, this, arguments);
      };
      return e.prototype = t.prototype, e;
    },
    Pi = function (t, e) {
      var i,
        n,
        o,
        r,
        s,
        a,
        l,
        h,
        u,
        c = t.target,
        d = t.global,
        p = t.stat,
        m = t.proto,
        f = d ? ki : p ? ki[c] : (ki[c] || {}).prototype,
        v = d ? Ti : Ti[c] || Ei(Ti, c, {})[c],
        g = v.prototype;
      for (r in e) n = !(i = Di(d ? r : c + (p ? "." : "#") + r, t.forced)) && f && Ai(f, r), a = v[r], n && (l = t.dontCallGetSet ? (u = Si(f, r)) && u.value : f[r]), s = n && l ? l : e[r], n && typeof a == typeof s || (h = t.bind && n ? Oi(s, ki) : t.wrap && n ? Ii(s) : m && Ci(s) ? _i(s) : s, (t.sham || s && s.sham || a && a.sham) && Ei(h, "sham", !0), Ei(v, r, h), m && (Ai(Ti, o = c + "Prototype") || Ei(Ti, o, {}), Ei(Ti[o], r, s), t.real && g && (i || !g[r]) && Ei(g, r, s)));
    },
    Mi = k([].slice),
    Ni = k,
    Fi = Ft,
    Ri = rt,
    Li = ie,
    ji = Mi,
    Bi = c,
    zi = Function,
    Hi = Ni([].concat),
    Gi = Ni([].join),
    Wi = {},
    Yi = function (t, e, i) {
      if (!Li(Wi, e)) {
        for (var n = [], o = 0; o < e; o++) n[o] = "a[" + o + "]";
        Wi[e] = zi("C,a", "return new C(" + Gi(n, ",") + ")");
      }
      return Wi[e](t, i);
    },
    Vi = Bi ? zi.bind : function (t) {
      var e = Fi(this),
        i = e.prototype,
        n = ji(arguments, 1),
        o = function () {
          var i = Hi(n, ji(arguments));
          return this instanceof o ? Yi(e, i.length, i) : e.apply(t, i);
        };
      return Ri(i) && (o.prototype = i), o;
    },
    Ui = {};
  Ui[ve("toStringTag")] = "z";
  var Xi = "[object z]" === String(Ui),
    qi = Xi,
    Ki = P,
    $i = S,
    Zi = ve("toStringTag"),
    Qi = Object,
    Ji = "Arguments" == $i(function () {
      return arguments;
    }()),
    tn = qi ? $i : function (t) {
      var e, i, n;
      return void 0 === t ? "Undefined" : null === t ? "Null" : "string" == typeof (i = function (t, e) {
        try {
          return t[e];
        } catch (t) {}
      }(e = Qi(t), Zi)) ? i : Ji ? $i(e) : "Object" == (n = $i(e)) && Ki(e.callee) ? "Arguments" : n;
    },
    en = P,
    nn = Kt,
    on = k(Function.toString);
  en(nn.inspectSource) || (nn.inspectSource = function (t) {
    return on(t);
  });
  var rn = nn.inspectSource,
    sn = k,
    an = u,
    ln = P,
    hn = tn,
    un = rn,
    cn = function () {},
    dn = [],
    pn = ct("Reflect", "construct"),
    mn = /^\s*(?:class|function)\b/,
    fn = sn(mn.exec),
    vn = !mn.exec(cn),
    gn = function (t) {
      if (!ln(t)) return !1;
      try {
        return pn(cn, dn, t), !0;
      } catch (t) {
        return !1;
      }
    },
    yn = function (t) {
      if (!ln(t)) return !1;
      switch (hn(t)) {
        case "AsyncFunction":
        case "GeneratorFunction":
        case "AsyncGeneratorFunction":
          return !1;
      }
      try {
        return vn || !!fn(mn, un(t));
      } catch (t) {
        return !0;
      }
    };
  yn.sham = !0;
  var bn = !pn || an(function () {
      var t;
      return gn(gn.call) || !gn(Object) || !gn(function () {
        t = !0;
      }) || t;
    }) ? yn : gn,
    wn = bn,
    kn = It,
    xn = TypeError,
    _n = {},
    Cn = Math.ceil,
    Sn = Math.floor,
    Dn = Math.trunc || function (t) {
      var e = +t;
      return (e > 0 ? Sn : Cn)(e);
    },
    Tn = function (t) {
      var e = +t;
      return e != e || 0 === e ? 0 : Dn(e);
    },
    On = Tn,
    En = Math.max,
    An = Math.min,
    In = function (t, e) {
      var i = On(t);
      return i < 0 ? En(i + e, 0) : An(i, e);
    },
    Pn = Tn,
    Mn = Math.min,
    Nn = function (t) {
      return t > 0 ? Mn(Pn(t), 9007199254740991) : 0;
    },
    Fn = function (t) {
      return Nn(t.length);
    },
    Rn = it,
    Ln = In,
    jn = Fn,
    Bn = function (t) {
      return function (e, i, n) {
        var o,
          r = Rn(e),
          s = jn(r),
          a = Ln(n, s);
        if (t && i != i) {
          for (; s > a;) if ((o = r[a++]) != o) return !0;
        } else for (; s > a; a++) if ((t || a in r) && r[a] === i) return t || a || 0;
        return !t && -1;
      };
    },
    zn = {
      includes: Bn(!0),
      indexOf: Bn(!1)
    },
    Hn = {},
    Gn = ie,
    Wn = it,
    Yn = zn.indexOf,
    Vn = Hn,
    Un = k([].push),
    Xn = function (t, e) {
      var i,
        n = Wn(t),
        o = 0,
        r = [];
      for (i in n) !Gn(Vn, i) && Gn(n, i) && Un(r, i);
      for (; e.length > o;) Gn(n, i = e[o++]) && (~Yn(r, i) || Un(r, i));
      return r;
    },
    qn = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"],
    Kn = Xn,
    $n = qn,
    Zn = Object.keys || function (t) {
      return Kn(t, $n);
    },
    Qn = N,
    Jn = ii,
    to = ei,
    eo = si,
    io = it,
    no = Zn;
  _n.f = Qn && !Jn ? Object.defineProperties : function (t, e) {
    eo(t);
    for (var i, n = io(e), o = no(e), r = o.length, s = 0; r > s;) to.f(t, i = o[s++], n[i]);
    return t;
  };
  var oo,
    ro = ct("document", "documentElement"),
    so = ae,
    ao = Wt("keys"),
    lo = function (t) {
      return ao[t] || (ao[t] = so(t));
    },
    ho = si,
    uo = _n,
    co = qn,
    po = Hn,
    mo = ro,
    fo = Ae,
    vo = "prototype",
    go = "script",
    yo = lo("IE_PROTO"),
    bo = function () {},
    wo = function (t) {
      return "<" + go + ">" + t + "</" + go + ">";
    },
    ko = function (t) {
      t.write(wo("")), t.close();
      var e = t.parentWindow.Object;
      return t = null, e;
    },
    xo = function () {
      try {
        oo = new ActiveXObject("htmlfile");
      } catch (t) {}
      var t, e, i;
      xo = "undefined" != typeof document ? document.domain && oo ? ko(oo) : (e = fo("iframe"), i = "java" + go + ":", e.style.display = "none", mo.appendChild(e), e.src = String(i), (t = e.contentWindow.document).open(), t.write(wo("document.F=Object")), t.close(), t.F) : ko(oo);
      for (var n = co.length; n--;) delete xo[vo][co[n]];
      return xo();
    };
  po[yo] = !0;
  var _o = Object.create || function (t, e) {
      var i;
      return null !== t ? (bo[vo] = ho(t), i = new bo(), bo[vo] = null, i[yo] = t) : i = xo(), void 0 === e ? i : uo.f(i, e);
    },
    Co = Pi,
    So = v,
    Do = Vi,
    To = function (t) {
      if (wn(t)) return t;
      throw xn(kn(t) + " is not a constructor");
    },
    Oo = si,
    Eo = rt,
    Ao = _o,
    Io = u,
    Po = ct("Reflect", "construct"),
    Mo = Object.prototype,
    No = [].push,
    Fo = Io(function () {
      function t() {}
      return !(Po(function () {}, [], t) instanceof t);
    }),
    Ro = !Io(function () {
      Po(function () {});
    }),
    Lo = Fo || Ro;
  Co({
    target: "Reflect",
    stat: !0,
    forced: Lo,
    sham: Lo
  }, {
    construct: function (t, e) {
      To(t), Oo(e);
      var i = arguments.length < 3 ? t : To(arguments[2]);
      if (Ro && !Fo) return Po(t, e, i);
      if (t == i) {
        switch (e.length) {
          case 0:
            return new t();
          case 1:
            return new t(e[0]);
          case 2:
            return new t(e[0], e[1]);
          case 3:
            return new t(e[0], e[1], e[2]);
          case 4:
            return new t(e[0], e[1], e[2], e[3]);
        }
        var n = [null];
        return So(No, n, e), new (So(Do, t, n))();
      }
      var o = i.prototype,
        r = Ao(Eo(o) ? o : Mo),
        s = So(t, r, e);
      return Eo(s) ? s : r;
    }
  });
  var jo = st.Reflect.construct;
  !function (t) {
    t.exports = jo;
  }(a);
  var Bo = r(s);
  function zo(t, e) {
    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
  }
  var Ho = {},
    Go = {
      get exports() {
        return Ho;
      },
      set exports(t) {
        Ho = t;
      }
    },
    Wo = {},
    Yo = {
      get exports() {
        return Wo;
      },
      set exports(t) {
        Wo = t;
      }
    },
    Vo = {},
    Uo = {
      get exports() {
        return Vo;
      },
      set exports(t) {
        Vo = t;
      }
    },
    Xo = Pi,
    qo = N,
    Ko = ei.f;
  Xo({
    target: "Object",
    stat: !0,
    forced: Object.defineProperty !== Ko,
    sham: !qo
  }, {
    defineProperty: Ko
  });
  var $o = st.Object,
    Zo = Uo.exports = function (t, e, i) {
      return $o.defineProperty(t, e, i);
    };
  $o.defineProperty.sham && (Zo.sham = !0);
  var Qo = Vo,
    Jo = Qo;
  !function (t) {
    t.exports = Jo;
  }(Yo), function (t) {
    t.exports = Wo;
  }(Go);
  var tr = r(Ho),
    er = {},
    ir = {
      get exports() {
        return er;
      },
      set exports(t) {
        er = t;
      }
    },
    nr = {},
    or = {
      get exports() {
        return nr;
      },
      set exports(t) {
        nr = t;
      }
    },
    rr = S,
    sr = Array.isArray || function (t) {
      return "Array" == rr(t);
    },
    ar = TypeError,
    lr = function (t) {
      if (t > 9007199254740991) throw ar("Maximum allowed index exceeded");
      return t;
    },
    hr = De,
    ur = ei,
    cr = Y,
    dr = function (t, e, i) {
      var n = hr(e);
      n in t ? ur.f(t, n, cr(0, i)) : t[n] = i;
    },
    pr = sr,
    mr = bn,
    fr = rt,
    vr = ve("species"),
    gr = Array,
    yr = function (t) {
      var e;
      return pr(t) && (e = t.constructor, (mr(e) && (e === gr || pr(e.prototype)) || fr(e) && null === (e = e[vr])) && (e = void 0)), void 0 === e ? gr : e;
    },
    br = function (t, e) {
      return new (yr(t))(0 === e ? 0 : e);
    },
    wr = u,
    kr = wt,
    xr = ve("species"),
    _r = function (t) {
      return kr >= 51 || !wr(function () {
        var e = [];
        return (e.constructor = {})[xr] = function () {
          return {
            foo: 1
          };
        }, 1 !== e[t](Boolean).foo;
      });
    },
    Cr = Pi,
    Sr = u,
    Dr = sr,
    Tr = rt,
    Or = Jt,
    Er = Fn,
    Ar = lr,
    Ir = dr,
    Pr = br,
    Mr = _r,
    Nr = wt,
    Fr = ve("isConcatSpreadable"),
    Rr = Nr >= 51 || !Sr(function () {
      var t = [];
      return t[Fr] = !1, t.concat()[0] !== t;
    }),
    Lr = function (t) {
      if (!Tr(t)) return !1;
      var e = t[Fr];
      return void 0 !== e ? !!e : Dr(t);
    };
  Cr({
    target: "Array",
    proto: !0,
    arity: 1,
    forced: !Rr || !Mr("concat")
  }, {
    concat: function (t) {
      var e,
        i,
        n,
        o,
        r,
        s = Or(this),
        a = Pr(s, 0),
        l = 0;
      for (e = -1, n = arguments.length; e < n; e++) if (Lr(r = -1 === e ? s : arguments[e])) for (o = Er(r), Ar(l + o), i = 0; i < o; i++, l++) i in r && Ir(a, l, r[i]);else Ar(l + 1), Ir(a, l++, r);
      return a.length = l, a;
    }
  });
  var jr = tn,
    Br = String,
    zr = function (t) {
      if ("Symbol" === jr(t)) throw TypeError("Cannot convert a Symbol value to a string");
      return Br(t);
    },
    Hr = {},
    Gr = Xn,
    Wr = qn.concat("length", "prototype");
  Hr.f = Object.getOwnPropertyNames || function (t) {
    return Gr(t, Wr);
  };
  var Yr = {},
    Vr = In,
    Ur = Fn,
    Xr = dr,
    qr = Array,
    Kr = Math.max,
    $r = function (t, e, i) {
      for (var n = Ur(t), o = Vr(e, n), r = Vr(void 0 === i ? n : i, n), s = qr(Kr(r - o, 0)), a = 0; o < r; o++, a++) Xr(s, a, t[o]);
      return s.length = a, s;
    },
    Zr = S,
    Qr = it,
    Jr = Hr.f,
    ts = $r,
    es = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
  Yr.f = function (t) {
    return es && "Window" == Zr(t) ? function (t) {
      try {
        return Jr(t);
      } catch (t) {
        return ts(es);
      }
    }(t) : Jr(Qr(t));
  };
  var is = {};
  is.f = Object.getOwnPropertySymbols;
  var ns = wi,
    os = function (t, e, i, n) {
      return n && n.enumerable ? t[e] = i : ns(t, e, i), t;
    },
    rs = ei,
    ss = function (t, e, i) {
      return rs.f(t, e, i);
    },
    as = {},
    ls = ve;
  as.f = ls;
  var hs,
    us,
    cs,
    ds = st,
    ps = ie,
    ms = as,
    fs = ei.f,
    vs = function (t) {
      var e = ds.Symbol || (ds.Symbol = {});
      ps(e, t) || fs(e, t, {
        value: ms.f(t)
      });
    },
    gs = L,
    ys = ct,
    bs = ve,
    ws = os,
    ks = function () {
      var t = ys("Symbol"),
        e = t && t.prototype,
        i = e && e.valueOf,
        n = bs("toPrimitive");
      e && !e[n] && ws(e, n, function (t) {
        return gs(i, this);
      }, {
        arity: 1
      });
    },
    xs = tn,
    _s = Xi ? {}.toString : function () {
      return "[object " + xs(this) + "]";
    },
    Cs = Xi,
    Ss = ei.f,
    Ds = wi,
    Ts = ie,
    Os = _s,
    Es = ve("toStringTag"),
    As = function (t, e, i, n) {
      if (t) {
        var o = i ? t : t.prototype;
        Ts(o, Es) || Ss(o, Es, {
          configurable: !0,
          value: e
        }), n && !Cs && Ds(o, "toString", Os);
      }
    },
    Is = P,
    Ps = h.WeakMap,
    Ms = Is(Ps) && /native code/.test(String(Ps)),
    Ns = h,
    Fs = rt,
    Rs = wi,
    Ls = ie,
    js = Kt,
    Bs = lo,
    zs = Hn,
    Hs = "Object already initialized",
    Gs = Ns.TypeError,
    Ws = Ns.WeakMap;
  if (Ms || js.state) {
    var Ys = js.state || (js.state = new Ws());
    Ys.get = Ys.get, Ys.has = Ys.has, Ys.set = Ys.set, hs = function (t, e) {
      if (Ys.has(t)) throw Gs(Hs);
      return e.facade = t, Ys.set(t, e), e;
    }, us = function (t) {
      return Ys.get(t) || {};
    }, cs = function (t) {
      return Ys.has(t);
    };
  } else {
    var Vs = Bs("state");
    zs[Vs] = !0, hs = function (t, e) {
      if (Ls(t, Vs)) throw Gs(Hs);
      return e.facade = t, Rs(t, Vs, e), e;
    }, us = function (t) {
      return Ls(t, Vs) ? t[Vs] : {};
    }, cs = function (t) {
      return Ls(t, Vs);
    };
  }
  var Us = {
      set: hs,
      get: us,
      has: cs,
      enforce: function (t) {
        return cs(t) ? us(t) : hs(t, {});
      },
      getterFor: function (t) {
        return function (e) {
          var i;
          if (!Fs(e) || (i = us(e)).type !== t) throw Gs("Incompatible receiver, " + t + " required");
          return i;
        };
      }
    },
    Xs = ti,
    qs = K,
    Ks = Jt,
    $s = Fn,
    Zs = br,
    Qs = k([].push),
    Js = function (t) {
      var e = 1 == t,
        i = 2 == t,
        n = 3 == t,
        o = 4 == t,
        r = 6 == t,
        s = 7 == t,
        a = 5 == t || r;
      return function (l, h, u, c) {
        for (var d, p, m = Ks(l), f = qs(m), v = Xs(h, u), g = $s(f), y = 0, b = c || Zs, w = e ? b(l, g) : i || s ? b(l, 0) : void 0; g > y; y++) if ((a || y in f) && (p = v(d = f[y], y, m), t)) if (e) w[y] = p;else if (p) switch (t) {
          case 3:
            return !0;
          case 5:
            return d;
          case 6:
            return y;
          case 2:
            Qs(w, d);
        } else switch (t) {
          case 4:
            return !1;
          case 7:
            Qs(w, d);
        }
        return r ? -1 : n || o ? o : w;
      };
    },
    ta = {
      forEach: Js(0),
      map: Js(1),
      filter: Js(2),
      some: Js(3),
      every: Js(4),
      find: Js(5),
      findIndex: Js(6),
      filterReject: Js(7)
    },
    ea = Pi,
    ia = h,
    na = L,
    oa = k,
    ra = N,
    sa = _t,
    aa = u,
    la = ie,
    ha = dt,
    ua = si,
    ca = it,
    da = De,
    pa = zr,
    ma = Y,
    fa = _o,
    va = Zn,
    ga = Hr,
    ya = Yr,
    ba = is,
    wa = M,
    ka = ei,
    xa = _n,
    _a = j,
    Ca = os,
    Sa = ss,
    Da = Wt,
    Ta = Hn,
    Oa = ae,
    Ea = ve,
    Aa = as,
    Ia = vs,
    Pa = ks,
    Ma = As,
    Na = Us,
    Fa = ta.forEach,
    Ra = lo("hidden"),
    La = "Symbol",
    ja = "prototype",
    Ba = Na.set,
    za = Na.getterFor(La),
    Ha = Object[ja],
    Ga = ia.Symbol,
    Wa = Ga && Ga[ja],
    Ya = ia.TypeError,
    Va = ia.QObject,
    Ua = wa.f,
    Xa = ka.f,
    qa = ya.f,
    Ka = _a.f,
    $a = oa([].push),
    Za = Da("symbols"),
    Qa = Da("op-symbols"),
    Ja = Da("wks"),
    tl = !Va || !Va[ja] || !Va[ja].findChild,
    el = ra && aa(function () {
      return 7 != fa(Xa({}, "a", {
        get: function () {
          return Xa(this, "a", {
            value: 7
          }).a;
        }
      })).a;
    }) ? function (t, e, i) {
      var n = Ua(Ha, e);
      n && delete Ha[e], Xa(t, e, i), n && t !== Ha && Xa(Ha, e, n);
    } : Xa,
    il = function (t, e) {
      var i = Za[t] = fa(Wa);
      return Ba(i, {
        type: La,
        tag: t,
        description: e
      }), ra || (i.description = e), i;
    },
    nl = function (t, e, i) {
      t === Ha && nl(Qa, e, i), ua(t);
      var n = da(e);
      return ua(i), la(Za, n) ? (i.enumerable ? (la(t, Ra) && t[Ra][n] && (t[Ra][n] = !1), i = fa(i, {
        enumerable: ma(0, !1)
      })) : (la(t, Ra) || Xa(t, Ra, ma(1, {})), t[Ra][n] = !0), el(t, n, i)) : Xa(t, n, i);
    },
    ol = function (t, e) {
      ua(t);
      var i = ca(e),
        n = va(i).concat(ll(i));
      return Fa(n, function (e) {
        ra && !na(rl, i, e) || nl(t, e, i[e]);
      }), t;
    },
    rl = function (t) {
      var e = da(t),
        i = na(Ka, this, e);
      return !(this === Ha && la(Za, e) && !la(Qa, e)) && (!(i || !la(this, e) || !la(Za, e) || la(this, Ra) && this[Ra][e]) || i);
    },
    sl = function (t, e) {
      var i = ca(t),
        n = da(e);
      if (i !== Ha || !la(Za, n) || la(Qa, n)) {
        var o = Ua(i, n);
        return !o || !la(Za, n) || la(i, Ra) && i[Ra][n] || (o.enumerable = !0), o;
      }
    },
    al = function (t) {
      var e = qa(ca(t)),
        i = [];
      return Fa(e, function (t) {
        la(Za, t) || la(Ta, t) || $a(i, t);
      }), i;
    },
    ll = function (t) {
      var e = t === Ha,
        i = qa(e ? Qa : ca(t)),
        n = [];
      return Fa(i, function (t) {
        !la(Za, t) || e && !la(Ha, t) || $a(n, Za[t]);
      }), n;
    };
  sa || (Ga = function () {
    if (ha(Wa, this)) throw Ya("Symbol is not a constructor");
    var t = arguments.length && void 0 !== arguments[0] ? pa(arguments[0]) : void 0,
      e = Oa(t),
      i = function (t) {
        this === Ha && na(i, Qa, t), la(this, Ra) && la(this[Ra], e) && (this[Ra][e] = !1), el(this, e, ma(1, t));
      };
    return ra && tl && el(Ha, e, {
      configurable: !0,
      set: i
    }), il(e, t);
  }, Ca(Wa = Ga[ja], "toString", function () {
    return za(this).tag;
  }), Ca(Ga, "withoutSetter", function (t) {
    return il(Oa(t), t);
  }), _a.f = rl, ka.f = nl, xa.f = ol, wa.f = sl, ga.f = ya.f = al, ba.f = ll, Aa.f = function (t) {
    return il(Ea(t), t);
  }, ra && Sa(Wa, "description", {
    configurable: !0,
    get: function () {
      return za(this).description;
    }
  })), ea({
    global: !0,
    constructor: !0,
    wrap: !0,
    forced: !sa,
    sham: !sa
  }, {
    Symbol: Ga
  }), Fa(va(Ja), function (t) {
    Ia(t);
  }), ea({
    target: La,
    stat: !0,
    forced: !sa
  }, {
    useSetter: function () {
      tl = !0;
    },
    useSimple: function () {
      tl = !1;
    }
  }), ea({
    target: "Object",
    stat: !0,
    forced: !sa,
    sham: !ra
  }, {
    create: function (t, e) {
      return void 0 === e ? fa(t) : ol(fa(t), e);
    },
    defineProperty: nl,
    defineProperties: ol,
    getOwnPropertyDescriptor: sl
  }), ea({
    target: "Object",
    stat: !0,
    forced: !sa
  }, {
    getOwnPropertyNames: al
  }), Pa(), Ma(Ga, La), Ta[Ra] = !0;
  var hl = _t && !!Symbol.for && !!Symbol.keyFor,
    ul = Pi,
    cl = ct,
    dl = ie,
    pl = zr,
    ml = Wt,
    fl = hl,
    vl = ml("string-to-symbol-registry"),
    gl = ml("symbol-to-string-registry");
  ul({
    target: "Symbol",
    stat: !0,
    forced: !fl
  }, {
    for: function (t) {
      var e = pl(t);
      if (dl(vl, e)) return vl[e];
      var i = cl("Symbol")(e);
      return vl[e] = i, gl[i] = e, i;
    }
  });
  var yl = Pi,
    bl = ie,
    wl = Et,
    kl = It,
    xl = hl,
    _l = Wt("symbol-to-string-registry");
  yl({
    target: "Symbol",
    stat: !0,
    forced: !xl
  }, {
    keyFor: function (t) {
      if (!wl(t)) throw TypeError(kl(t) + " is not a symbol");
      if (bl(_l, t)) return _l[t];
    }
  });
  var Cl = sr,
    Sl = P,
    Dl = S,
    Tl = zr,
    Ol = k([].push),
    El = Pi,
    Al = ct,
    Il = v,
    Pl = L,
    Ml = k,
    Nl = u,
    Fl = P,
    Rl = Et,
    Ll = Mi,
    jl = function (t) {
      if (Sl(t)) return t;
      if (Cl(t)) {
        for (var e = t.length, i = [], n = 0; n < e; n++) {
          var o = t[n];
          "string" == typeof o ? Ol(i, o) : "number" != typeof o && "Number" != Dl(o) && "String" != Dl(o) || Ol(i, Tl(o));
        }
        var r = i.length,
          s = !0;
        return function (t, e) {
          if (s) return s = !1, e;
          if (Cl(this)) return e;
          for (var n = 0; n < r; n++) if (i[n] === t) return e;
        };
      }
    },
    Bl = _t,
    zl = String,
    Hl = Al("JSON", "stringify"),
    Gl = Ml(/./.exec),
    Wl = Ml("".charAt),
    Yl = Ml("".charCodeAt),
    Vl = Ml("".replace),
    Ul = Ml(1..toString),
    Xl = /[\uD800-\uDFFF]/g,
    ql = /^[\uD800-\uDBFF]$/,
    Kl = /^[\uDC00-\uDFFF]$/,
    $l = !Bl || Nl(function () {
      var t = Al("Symbol")();
      return "[null]" != Hl([t]) || "{}" != Hl({
        a: t
      }) || "{}" != Hl(Object(t));
    }),
    Zl = Nl(function () {
      return '"\\udf06\\ud834"' !== Hl("\udf06\ud834") || '"\\udead"' !== Hl("\udead");
    }),
    Ql = function (t, e) {
      var i = Ll(arguments),
        n = jl(e);
      if (Fl(n) || void 0 !== t && !Rl(t)) return i[1] = function (t, e) {
        if (Fl(n) && (e = Pl(n, this, zl(t), e)), !Rl(e)) return e;
      }, Il(Hl, null, i);
    },
    Jl = function (t, e, i) {
      var n = Wl(i, e - 1),
        o = Wl(i, e + 1);
      return Gl(ql, t) && !Gl(Kl, o) || Gl(Kl, t) && !Gl(ql, n) ? "\\u" + Ul(Yl(t, 0), 16) : t;
    };
  Hl && El({
    target: "JSON",
    stat: !0,
    arity: 3,
    forced: $l || Zl
  }, {
    stringify: function (t, e, i) {
      var n = Ll(arguments),
        o = Il($l ? Ql : Hl, null, n);
      return Zl && "string" == typeof o ? Vl(o, Xl, Jl) : o;
    }
  });
  var th = is,
    eh = Jt;
  Pi({
    target: "Object",
    stat: !0,
    forced: !_t || u(function () {
      th.f(1);
    })
  }, {
    getOwnPropertySymbols: function (t) {
      var e = th.f;
      return e ? e(eh(t)) : [];
    }
  }), vs("asyncIterator"), vs("hasInstance"), vs("isConcatSpreadable"), vs("iterator"), vs("match"), vs("matchAll"), vs("replace"), vs("search"), vs("species"), vs("split");
  var ih = ks;
  vs("toPrimitive"), ih();
  var nh = ct,
    oh = As;
  vs("toStringTag"), oh(nh("Symbol"), "Symbol"), vs("unscopables"), As(h.JSON, "JSON", !0);
  var rh,
    sh,
    ah,
    lh = st.Symbol,
    hh = {},
    uh = N,
    ch = ie,
    dh = Function.prototype,
    ph = uh && Object.getOwnPropertyDescriptor,
    mh = ch(dh, "name"),
    fh = {
      EXISTS: mh,
      PROPER: mh && "something" === function () {}.name,
      CONFIGURABLE: mh && (!uh || uh && ph(dh, "name").configurable)
    },
    vh = !u(function () {
      function t() {}
      return t.prototype.constructor = null, Object.getPrototypeOf(new t()) !== t.prototype;
    }),
    gh = ie,
    yh = P,
    bh = Jt,
    wh = vh,
    kh = lo("IE_PROTO"),
    xh = Object,
    _h = xh.prototype,
    Ch = wh ? xh.getPrototypeOf : function (t) {
      var e = bh(t);
      if (gh(e, kh)) return e[kh];
      var i = e.constructor;
      return yh(i) && e instanceof i ? i.prototype : e instanceof xh ? _h : null;
    },
    Sh = u,
    Dh = P,
    Th = rt,
    Oh = _o,
    Eh = Ch,
    Ah = os,
    Ih = ve("iterator"),
    Ph = !1;
  [].keys && ("next" in (ah = [].keys()) ? (sh = Eh(Eh(ah))) !== Object.prototype && (rh = sh) : Ph = !0);
  var Mh = !Th(rh) || Sh(function () {
    var t = {};
    return rh[Ih].call(t) !== t;
  });
  Dh((rh = Mh ? {} : Oh(rh))[Ih]) || Ah(rh, Ih, function () {
    return this;
  });
  var Nh = {
      IteratorPrototype: rh,
      BUGGY_SAFARI_ITERATORS: Ph
    },
    Fh = Nh.IteratorPrototype,
    Rh = _o,
    Lh = Y,
    jh = As,
    Bh = hh,
    zh = function () {
      return this;
    },
    Hh = k,
    Gh = Ft,
    Wh = P,
    Yh = String,
    Vh = TypeError,
    Uh = function (t, e, i) {
      try {
        return Hh(Gh(Object.getOwnPropertyDescriptor(t, e)[i]));
      } catch (t) {}
    },
    Xh = si,
    qh = function (t) {
      if ("object" == typeof t || Wh(t)) return t;
      throw Vh("Can't set " + Yh(t) + " as a prototype");
    },
    Kh = Object.setPrototypeOf || ("__proto__" in {} ? function () {
      var t,
        e = !1,
        i = {};
      try {
        (t = Uh(Object.prototype, "__proto__", "set"))(i, []), e = i instanceof Array;
      } catch (t) {}
      return function (i, n) {
        return Xh(i), qh(n), e ? t(i, n) : i.__proto__ = n, i;
      };
    }() : void 0),
    $h = Pi,
    Zh = L,
    Qh = function (t, e, i, n) {
      var o = e + " Iterator";
      return t.prototype = Rh(Fh, {
        next: Lh(+!n, i)
      }), jh(t, o, !1, !0), Bh[o] = zh, t;
    },
    Jh = Ch,
    tu = As,
    eu = os,
    iu = hh,
    nu = fh.PROPER,
    ou = Nh.BUGGY_SAFARI_ITERATORS,
    ru = ve("iterator"),
    su = "keys",
    au = "values",
    lu = "entries",
    hu = function () {
      return this;
    },
    uu = function (t, e, i, n, o, r, s) {
      Qh(i, e, n);
      var a,
        l,
        h,
        u = function (t) {
          if (t === o && f) return f;
          if (!ou && t in p) return p[t];
          switch (t) {
            case su:
            case au:
            case lu:
              return function () {
                return new i(this, t);
              };
          }
          return function () {
            return new i(this);
          };
        },
        c = e + " Iterator",
        d = !1,
        p = t.prototype,
        m = p[ru] || p["@@iterator"] || o && p[o],
        f = !ou && m || u(o),
        v = "Array" == e && p.entries || m;
      if (v && (a = Jh(v.call(new t()))) !== Object.prototype && a.next && (tu(a, c, !0, !0), iu[c] = hu), nu && o == au && m && m.name !== au && (d = !0, f = function () {
        return Zh(m, this);
      }), o) if (l = {
        values: u(au),
        keys: r ? f : u(su),
        entries: u(lu)
      }, s) for (h in l) (ou || d || !(h in p)) && eu(p, h, l[h]);else $h({
        target: e,
        proto: !0,
        forced: ou || d
      }, l);
      return s && p[ru] !== f && eu(p, ru, f, {
        name: o
      }), iu[e] = f, l;
    },
    cu = function (t, e) {
      return {
        value: t,
        done: e
      };
    },
    du = it,
    pu = hh,
    mu = Us;
  ei.f;
  var fu = uu,
    vu = cu,
    gu = "Array Iterator",
    yu = mu.set,
    bu = mu.getterFor(gu);
  fu(Array, "Array", function (t, e) {
    yu(this, {
      type: gu,
      target: du(t),
      index: 0,
      kind: e
    });
  }, function () {
    var t = bu(this),
      e = t.target,
      i = t.kind,
      n = t.index++;
    return !e || n >= e.length ? (t.target = void 0, vu(void 0, !0)) : vu("keys" == i ? n : "values" == i ? e[n] : [n, e[n]], !1);
  }, "values"), pu.Arguments = pu.Array;
  var wu = {
      CSSRuleList: 0,
      CSSStyleDeclaration: 0,
      CSSValueList: 0,
      ClientRectList: 0,
      DOMRectList: 0,
      DOMStringList: 0,
      DOMTokenList: 1,
      DataTransferItemList: 0,
      FileList: 0,
      HTMLAllCollection: 0,
      HTMLCollection: 0,
      HTMLFormElement: 0,
      HTMLSelectElement: 0,
      MediaList: 0,
      MimeTypeArray: 0,
      NamedNodeMap: 0,
      NodeList: 1,
      PaintRequestList: 0,
      Plugin: 0,
      PluginArray: 0,
      SVGLengthList: 0,
      SVGNumberList: 0,
      SVGPathSegList: 0,
      SVGPointList: 0,
      SVGStringList: 0,
      SVGTransformList: 0,
      SourceBufferList: 0,
      StyleSheetList: 0,
      TextTrackCueList: 0,
      TextTrackList: 0,
      TouchList: 0
    },
    ku = h,
    xu = tn,
    _u = wi,
    Cu = hh,
    Su = ve("toStringTag");
  for (var Du in wu) {
    var Tu = ku[Du],
      Ou = Tu && Tu.prototype;
    Ou && xu(Ou) !== Su && _u(Ou, Su, Du), Cu[Du] = Cu.Array;
  }
  var Eu = lh;
  vs("dispose");
  var Au = Eu;
  vs("asyncDispose");
  var Iu = Pi,
    Pu = k,
    Mu = ct("Symbol"),
    Nu = Mu.keyFor,
    Fu = Pu(Mu.prototype.valueOf);
  Iu({
    target: "Symbol",
    stat: !0
  }, {
    isRegistered: function (t) {
      try {
        return void 0 !== Nu(Fu(t));
      } catch (t) {
        return !1;
      }
    }
  });
  for (var Ru = Pi, Lu = Wt, ju = ct, Bu = k, zu = Et, Hu = ve, Gu = ju("Symbol"), Wu = Gu.isWellKnown, Yu = ju("Object", "getOwnPropertyNames"), Vu = Bu(Gu.prototype.valueOf), Uu = Lu("wks"), Xu = 0, qu = Yu(Gu), Ku = qu.length; Xu < Ku; Xu++) try {
    var $u = qu[Xu];
    zu(Gu[$u]) && Hu($u);
  } catch (t) {}
  Ru({
    target: "Symbol",
    stat: !0,
    forced: !0
  }, {
    isWellKnown: function (t) {
      if (Wu && Wu(t)) return !0;
      try {
        for (var e = Vu(t), i = 0, n = Yu(Uu), o = n.length; i < o; i++) if (Uu[n[i]] == e) return !0;
      } catch (t) {}
      return !1;
    }
  }), vs("matcher"), vs("metadataKey"), vs("observable"), vs("metadata"), vs("patternMatch"), vs("replaceAll");
  var Zu = Au;
  !function (t) {
    t.exports = Zu;
  }(or), function (t) {
    t.exports = nr;
  }(ir);
  var Qu = r(er),
    Ju = {},
    tc = {
      get exports() {
        return Ju;
      },
      set exports(t) {
        Ju = t;
      }
    },
    ec = {},
    ic = {
      get exports() {
        return ec;
      },
      set exports(t) {
        ec = t;
      }
    },
    nc = k,
    oc = Tn,
    rc = zr,
    sc = J,
    ac = nc("".charAt),
    lc = nc("".charCodeAt),
    hc = nc("".slice),
    uc = function (t) {
      return function (e, i) {
        var n,
          o,
          r = rc(sc(e)),
          s = oc(i),
          a = r.length;
        return s < 0 || s >= a ? t ? "" : void 0 : (n = lc(r, s)) < 55296 || n > 56319 || s + 1 === a || (o = lc(r, s + 1)) < 56320 || o > 57343 ? t ? ac(r, s) : n : t ? hc(r, s, s + 2) : o - 56320 + (n - 55296 << 10) + 65536;
      };
    },
    cc = {
      codeAt: uc(!1),
      charAt: uc(!0)
    }.charAt,
    dc = zr,
    pc = Us,
    mc = uu,
    fc = cu,
    vc = "String Iterator",
    gc = pc.set,
    yc = pc.getterFor(vc);
  mc(String, "String", function (t) {
    gc(this, {
      type: vc,
      string: dc(t),
      index: 0
    });
  }, function () {
    var t,
      e = yc(this),
      i = e.string,
      n = e.index;
    return n >= i.length ? fc(void 0, !0) : (t = cc(i, n), e.index += t.length, fc(t, !1));
  });
  var bc = as.f("iterator");
  !function (t) {
    t.exports = bc;
  }(ic), function (t) {
    t.exports = ec;
  }(tc);
  var wc = r(Ju);
  function kc(t) {
    return kc = "function" == typeof Qu && "symbol" == typeof wc ? function (t) {
      return typeof t;
    } : function (t) {
      return t && "function" == typeof Qu && t.constructor === Qu && t !== Qu.prototype ? "symbol" : typeof t;
    }, kc(t);
  }
  var xc = {},
    _c = {
      get exports() {
        return xc;
      },
      set exports(t) {
        xc = t;
      }
    },
    Cc = {},
    Sc = {
      get exports() {
        return Cc;
      },
      set exports(t) {
        Cc = t;
      }
    },
    Dc = as.f("toPrimitive");
  !function (t) {
    t.exports = Dc;
  }(Sc), function (t) {
    t.exports = Cc;
  }(_c);
  var Tc = r(xc);
  function Oc(t) {
    var e = function (t, e) {
      if ("object" !== kc(t) || null === t) return t;
      var i = t[Tc];
      if (void 0 !== i) {
        var n = i.call(t, e || "default");
        if ("object" !== kc(n)) return n;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === e ? String : Number)(t);
    }(t, "string");
    return "symbol" === kc(e) ? e : String(e);
  }
  function Ec(t, e) {
    for (var i = 0; i < e.length; i++) {
      var n = e[i];
      n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), tr(t, Oc(n.key), n);
    }
  }
  function Ac(t, e, i) {
    return e && Ec(t.prototype, e), i && Ec(t, i), tr(t, "prototype", {
      writable: !1
    }), t;
  }
  function Ic(t) {
    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return t;
  }
  var Pc = {},
    Mc = {
      get exports() {
        return Pc;
      },
      set exports(t) {
        Pc = t;
      }
    },
    Nc = {},
    Fc = {
      get exports() {
        return Nc;
      },
      set exports(t) {
        Nc = t;
      }
    };
  Pi({
    target: "Object",
    stat: !0,
    sham: !N
  }, {
    create: _o
  });
  var Rc = st.Object,
    Lc = function (t, e) {
      return Rc.create(t, e);
    },
    jc = Lc;
  !function (t) {
    t.exports = jc;
  }(Fc), function (t) {
    t.exports = Nc;
  }(Mc);
  var Bc = r(Pc),
    zc = {},
    Hc = {
      get exports() {
        return zc;
      },
      set exports(t) {
        zc = t;
      }
    },
    Gc = {},
    Wc = {
      get exports() {
        return Gc;
      },
      set exports(t) {
        Gc = t;
      }
    };
  Pi({
    target: "Object",
    stat: !0
  }, {
    setPrototypeOf: Kh
  });
  var Yc = st.Object.setPrototypeOf;
  !function (t) {
    t.exports = Yc;
  }(Wc), function (t) {
    t.exports = Gc;
  }(Hc);
  var Vc = r(zc),
    Uc = {},
    Xc = {
      get exports() {
        return Uc;
      },
      set exports(t) {
        Uc = t;
      }
    },
    qc = {},
    Kc = {
      get exports() {
        return qc;
      },
      set exports(t) {
        qc = t;
      }
    },
    $c = Vi;
  Pi({
    target: "Function",
    proto: !0,
    forced: Function.bind !== $c
  }, {
    bind: $c
  });
  var Zc = st,
    Qc = function (t) {
      return Zc[t + "Prototype"];
    },
    Jc = Qc("Function").bind,
    td = dt,
    ed = Jc,
    id = Function.prototype,
    nd = function (t) {
      var e = t.bind;
      return t === id || td(id, t) && e === id.bind ? ed : e;
    },
    od = nd,
    rd = od;
  !function (t) {
    t.exports = rd;
  }(Kc), function (t) {
    t.exports = qc;
  }(Xc);
  var sd = r(Uc);
  function ad(t, e) {
    var i;
    return ad = Vc ? sd(i = Vc).call(i) : function (t, e) {
      return t.__proto__ = e, t;
    }, ad(t, e);
  }
  function ld(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Bc(e && e.prototype, {
      constructor: {
        value: t,
        writable: !0,
        configurable: !0
      }
    }), tr(t, "prototype", {
      writable: !1
    }), e && ad(t, e);
  }
  function hd(t, e) {
    if (e && ("object" === kc(e) || "function" == typeof e)) return e;
    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
    return Ic(t);
  }
  var ud = {},
    cd = {
      get exports() {
        return ud;
      },
      set exports(t) {
        ud = t;
      }
    },
    dd = {},
    pd = {
      get exports() {
        return dd;
      },
      set exports(t) {
        dd = t;
      }
    },
    md = Jt,
    fd = Ch,
    vd = vh;
  Pi({
    target: "Object",
    stat: !0,
    forced: u(function () {
      fd(1);
    }),
    sham: !vd
  }, {
    getPrototypeOf: function (t) {
      return fd(md(t));
    }
  });
  var gd = st.Object.getPrototypeOf,
    yd = gd;
  !function (t) {
    t.exports = yd;
  }(pd), function (t) {
    t.exports = dd;
  }(cd);
  var bd = r(ud);
  function wd(t) {
    var e;
    return wd = Vc ? sd(e = bd).call(e) : function (t) {
      return t.__proto__ || bd(t);
    }, wd(t);
  }
  var kd = {},
    xd = {
      get exports() {
        return kd;
      },
      set exports(t) {
        kd = t;
      }
    };
  Pi({
    target: "Array",
    stat: !0
  }, {
    isArray: sr
  });
  var _d = st.Array.isArray;
  !function (t) {
    t.exports = _d;
  }(xd);
  var Cd = r(kd),
    Sd = {};
  !function (t) {
    t.exports = od;
  }({
    get exports() {
      return Sd;
    },
    set exports(t) {
      Sd = t;
    }
  });
  var Dd = r(Sd),
    Td = {},
    Od = {
      get exports() {
        return Td;
      },
      set exports(t) {
        Td = t;
      }
    },
    Ed = "function" == typeof Bun && Bun && "string" == typeof Bun.version,
    Ad = TypeError,
    Id = h,
    Pd = v,
    Md = P,
    Nd = Ed,
    Fd = pt,
    Rd = Mi,
    Ld = function (t, e) {
      if (t < e) throw Ad("Not enough arguments");
      return t;
    },
    jd = Id.Function,
    Bd = /MSIE .\./.test(Fd) || Nd && function () {
      var t = Id.Bun.version.split(".");
      return t.length < 3 || 0 == t[0] && (t[1] < 3 || 3 == t[1] && 0 == t[2]);
    }(),
    zd = function (t, e) {
      var i = e ? 2 : 1;
      return Bd ? function (n, o) {
        var r = Ld(arguments.length, 1) > i,
          s = Md(n) ? n : jd(n),
          a = r ? Rd(arguments, i) : [],
          l = r ? function () {
            Pd(s, this, a);
          } : s;
        return e ? t(l, o) : t(l);
      } : t;
    },
    Hd = Pi,
    Gd = h,
    Wd = zd(Gd.setInterval, !0);
  Hd({
    global: !0,
    bind: !0,
    forced: Gd.setInterval !== Wd
  }, {
    setInterval: Wd
  });
  var Yd = Pi,
    Vd = h,
    Ud = zd(Vd.setTimeout, !0);
  Yd({
    global: !0,
    bind: !0,
    forced: Vd.setTimeout !== Ud
  }, {
    setTimeout: Ud
  });
  var Xd = st.setTimeout;
  !function (t) {
    t.exports = Xd;
  }(Od);
  var qd = r(Td),
    Kd = {},
    $d = {
      get exports() {
        return Kd;
      },
      set exports(t) {
        Kd = t;
      }
    },
    Zd = u,
    Qd = function (t, e) {
      var i = [][t];
      return !!i && Zd(function () {
        i.call(null, e || function () {
          return 1;
        }, 1);
      });
    },
    Jd = ta.forEach,
    tp = Qd("forEach") ? [].forEach : function (t) {
      return Jd(this, t, arguments.length > 1 ? arguments[1] : void 0);
    };
  Pi({
    target: "Array",
    proto: !0,
    forced: [].forEach != tp
  }, {
    forEach: tp
  });
  var ep = Qc("Array").forEach,
    ip = tn,
    np = ie,
    op = dt,
    rp = ep,
    sp = Array.prototype,
    ap = {
      DOMTokenList: !0,
      NodeList: !0
    },
    lp = function (t) {
      var e = t.forEach;
      return t === sp || op(sp, t) && e === sp.forEach || np(ap, ip(t)) ? rp : e;
    };
  !function (t) {
    t.exports = lp;
  }($d);
  var hp = r(Kd),
    up = "undefined" != typeof window && window.moment || e,
    cp = {},
    dp = {
      get exports() {
        return cp;
      },
      set exports(t) {
        cp = t;
      }
    },
    pp = st.Object.getOwnPropertySymbols;
  !function (t) {
    t.exports = pp;
  }(dp);
  var mp = r(cp),
    fp = {},
    vp = {
      get exports() {
        return fp;
      },
      set exports(t) {
        fp = t;
      }
    },
    gp = ta.filter;
  Pi({
    target: "Array",
    proto: !0,
    forced: !_r("filter")
  }, {
    filter: function (t) {
      return gp(this, t, arguments.length > 1 ? arguments[1] : void 0);
    }
  });
  var yp = Qc("Array").filter,
    bp = dt,
    wp = yp,
    kp = Array.prototype,
    xp = function (t) {
      var e = t.filter;
      return t === kp || bp(kp, t) && e === kp.filter ? wp : e;
    },
    _p = xp;
  !function (t) {
    t.exports = _p;
  }(vp);
  var Cp = r(fp),
    Sp = {},
    Dp = {
      get exports() {
        return Sp;
      },
      set exports(t) {
        Sp = t;
      }
    },
    Tp = {},
    Op = {
      get exports() {
        return Tp;
      },
      set exports(t) {
        Tp = t;
      }
    },
    Ep = Pi,
    Ap = u,
    Ip = it,
    Pp = M.f,
    Mp = N;
  Ep({
    target: "Object",
    stat: !0,
    forced: !Mp || Ap(function () {
      Pp(1);
    }),
    sham: !Mp
  }, {
    getOwnPropertyDescriptor: function (t, e) {
      return Pp(Ip(t), e);
    }
  });
  var Np = st.Object,
    Fp = Op.exports = function (t, e) {
      return Np.getOwnPropertyDescriptor(t, e);
    };
  Np.getOwnPropertyDescriptor.sham && (Fp.sham = !0);
  var Rp = Tp;
  !function (t) {
    t.exports = Rp;
  }(Dp);
  var Lp = r(Sp),
    jp = {},
    Bp = {
      get exports() {
        return jp;
      },
      set exports(t) {
        jp = t;
      }
    },
    zp = ct,
    Hp = Hr,
    Gp = is,
    Wp = si,
    Yp = k([].concat),
    Vp = zp("Reflect", "ownKeys") || function (t) {
      var e = Hp.f(Wp(t)),
        i = Gp.f;
      return i ? Yp(e, i(t)) : e;
    },
    Up = Vp,
    Xp = it,
    qp = M,
    Kp = dr;
  Pi({
    target: "Object",
    stat: !0,
    sham: !N
  }, {
    getOwnPropertyDescriptors: function (t) {
      for (var e, i, n = Xp(t), o = qp.f, r = Up(n), s = {}, a = 0; r.length > a;) void 0 !== (i = o(n, e = r[a++])) && Kp(s, e, i);
      return s;
    }
  });
  var $p = st.Object.getOwnPropertyDescriptors;
  !function (t) {
    t.exports = $p;
  }(Bp);
  var Zp = r(jp),
    Qp = {},
    Jp = {
      get exports() {
        return Qp;
      },
      set exports(t) {
        Qp = t;
      }
    },
    tm = {},
    em = {
      get exports() {
        return tm;
      },
      set exports(t) {
        tm = t;
      }
    },
    im = Pi,
    nm = N,
    om = _n.f;
  im({
    target: "Object",
    stat: !0,
    forced: Object.defineProperties !== om,
    sham: !nm
  }, {
    defineProperties: om
  });
  var rm = st.Object,
    sm = em.exports = function (t, e) {
      return rm.defineProperties(t, e);
    };
  rm.defineProperties.sham && (sm.sham = !0);
  var am = tm;
  !function (t) {
    t.exports = am;
  }(Jp);
  var lm = r(Qp);
  function hm(t, e, i) {
    return (e = Oc(e)) in t ? tr(t, e, {
      value: i,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }) : t[e] = i, t;
  }
  var um = {},
    cm = {
      get exports() {
        return um;
      },
      set exports(t) {
        um = t;
      }
    },
    dm = ta.map;
  Pi({
    target: "Array",
    proto: !0,
    forced: !_r("map")
  }, {
    map: function (t) {
      return dm(this, t, arguments.length > 1 ? arguments[1] : void 0);
    }
  });
  var pm = Qc("Array").map,
    mm = dt,
    fm = pm,
    vm = Array.prototype,
    gm = function (t) {
      var e = t.map;
      return t === vm || mm(vm, t) && e === vm.map ? fm : e;
    },
    ym = gm;
  !function (t) {
    t.exports = ym;
  }(cm);
  var bm = r(um),
    wm = {},
    km = {
      get exports() {
        return wm;
      },
      set exports(t) {
        wm = t;
      }
    },
    xm = Ft,
    _m = Jt,
    Cm = K,
    Sm = Fn,
    Dm = TypeError,
    Tm = function (t) {
      return function (e, i, n, o) {
        xm(i);
        var r = _m(e),
          s = Cm(r),
          a = Sm(r),
          l = t ? a - 1 : 0,
          h = t ? -1 : 1;
        if (n < 2) for (;;) {
          if (l in s) {
            o = s[l], l += h;
            break;
          }
          if (l += h, t ? l < 0 : a <= l) throw Dm("Reduce of empty array with no initial value");
        }
        for (; t ? l >= 0 : a > l; l += h) l in s && (o = i(o, s[l], l, r));
        return o;
      };
    },
    Om = {
      left: Tm(!1),
      right: Tm(!0)
    },
    Em = "undefined" != typeof process && "process" == S(process),
    Am = Om.left;
  Pi({
    target: "Array",
    proto: !0,
    forced: !Em && wt > 79 && wt < 83 || !Qd("reduce")
  }, {
    reduce: function (t) {
      var e = arguments.length;
      return Am(this, t, e, e > 1 ? arguments[1] : void 0);
    }
  });
  var Im = Qc("Array").reduce,
    Pm = dt,
    Mm = Im,
    Nm = Array.prototype,
    Fm = function (t) {
      var e = t.reduce;
      return t === Nm || Pm(Nm, t) && e === Nm.reduce ? Mm : e;
    },
    Rm = Fm;
  !function (t) {
    t.exports = Rm;
  }(km);
  var Lm = r(wm),
    jm = {},
    Bm = {
      get exports() {
        return jm;
      },
      set exports(t) {
        jm = t;
      }
    },
    zm = Jt,
    Hm = Zn;
  Pi({
    target: "Object",
    stat: !0,
    forced: u(function () {
      Hm(1);
    })
  }, {
    keys: function (t) {
      return Hm(zm(t));
    }
  });
  var Gm = st.Object.keys;
  !function (t) {
    t.exports = Gm;
  }(Bm);
  var Wm = r(jm),
    Ym = {};
  !function (t) {
    t.exports = Qo;
  }({
    get exports() {
      return Ym;
    },
    set exports(t) {
      Ym = t;
    }
  });
  var Vm = r(Ym),
    Um = {},
    Xm = {
      get exports() {
        return Um;
      },
      set exports(t) {
        Um = t;
      }
    },
    qm = L,
    Km = si,
    $m = jt,
    Zm = function (t, e, i) {
      var n, o;
      Km(t);
      try {
        if (!(n = $m(t, "return"))) {
          if ("throw" === e) throw i;
          return i;
        }
        n = qm(n, t);
      } catch (t) {
        o = !0, n = t;
      }
      if ("throw" === e) throw i;
      if (o) throw n;
      return Km(n), i;
    },
    Qm = si,
    Jm = Zm,
    tf = hh,
    ef = ve("iterator"),
    nf = Array.prototype,
    of = function (t) {
      return void 0 !== t && (tf.Array === t || nf[ef] === t);
    },
    rf = tn,
    sf = jt,
    af = $,
    lf = hh,
    hf = ve("iterator"),
    uf = function (t) {
      if (!af(t)) return sf(t, hf) || sf(t, "@@iterator") || lf[rf(t)];
    },
    cf = L,
    df = Ft,
    pf = si,
    mf = It,
    ff = uf,
    vf = TypeError,
    gf = function (t, e) {
      var i = arguments.length < 2 ? ff(t) : e;
      if (df(i)) return pf(cf(i, t));
      throw vf(mf(t) + " is not iterable");
    },
    yf = ti,
    bf = L,
    wf = Jt,
    kf = function (t, e, i, n) {
      try {
        return n ? e(Qm(i)[0], i[1]) : e(i);
      } catch (e) {
        Jm(t, "throw", e);
      }
    },
    xf = of,
    _f = bn,
    Cf = Fn,
    Sf = dr,
    Df = gf,
    Tf = uf,
    Of = Array,
    Ef = ve("iterator"),
    Af = !1;
  try {
    var If = 0,
      Pf = {
        next: function () {
          return {
            done: !!If++
          };
        },
        return: function () {
          Af = !0;
        }
      };
    Pf[Ef] = function () {
      return this;
    }, Array.from(Pf, function () {
      throw 2;
    });
  } catch (t) {}
  var Mf = function (t) {
      var e = wf(t),
        i = _f(this),
        n = arguments.length,
        o = n > 1 ? arguments[1] : void 0,
        r = void 0 !== o;
      r && (o = yf(o, n > 2 ? arguments[2] : void 0));
      var s,
        a,
        l,
        h,
        u,
        c,
        d = Tf(e),
        p = 0;
      if (!d || this === Of && xf(d)) for (s = Cf(e), a = i ? new this(s) : Of(s); s > p; p++) c = r ? o(e[p], p) : e[p], Sf(a, p, c);else for (u = (h = Df(e, d)).next, a = i ? new this() : []; !(l = bf(u, h)).done; p++) c = r ? kf(h, o, [l.value, p], !0) : l.value, Sf(a, p, c);
      return a.length = p, a;
    },
    Nf = function (t, e) {
      if (!e && !Af) return !1;
      var i = !1;
      try {
        var n = {};
        n[Ef] = function () {
          return {
            next: function () {
              return {
                done: i = !0
              };
            }
          };
        }, t(n);
      } catch (t) {}
      return i;
    };
  Pi({
    target: "Array",
    stat: !0,
    forced: !Nf(function (t) {
      Array.from(t);
    })
  }, {
    from: Mf
  });
  var Ff = st.Array.from;
  !function (t) {
    t.exports = Ff;
  }(Xm);
  var Rf = r(Um),
    Lf = {},
    jf = {
      get exports() {
        return Lf;
      },
      set exports(t) {
        Lf = t;
      }
    },
    Bf = {},
    zf = uf;
  !function (t) {
    t.exports = zf;
  }({
    get exports() {
      return Bf;
    },
    set exports(t) {
      Bf = t;
    }
  }), function (t) {
    t.exports = Bf;
  }(jf);
  var Hf = r(Lf),
    Gf = {},
    Wf = {
      get exports() {
        return Gf;
      },
      set exports(t) {
        Gf = t;
      }
    },
    Yf = {},
    Vf = _d;
  !function (t) {
    t.exports = Vf;
  }({
    get exports() {
      return Yf;
    },
    set exports(t) {
      Yf = t;
    }
  }), function (t) {
    t.exports = Yf;
  }(Wf);
  var Uf = r(Gf);
  var Xf = {},
    qf = {
      get exports() {
        return Xf;
      },
      set exports(t) {
        Xf = t;
      }
    },
    Kf = {},
    $f = {
      get exports() {
        return Kf;
      },
      set exports(t) {
        Kf = t;
      }
    },
    Zf = Pi,
    Qf = sr,
    Jf = bn,
    tv = rt,
    ev = In,
    iv = Fn,
    nv = it,
    ov = dr,
    rv = ve,
    sv = Mi,
    av = _r("slice"),
    lv = rv("species"),
    hv = Array,
    uv = Math.max;
  Zf({
    target: "Array",
    proto: !0,
    forced: !av
  }, {
    slice: function (t, e) {
      var i,
        n,
        o,
        r = nv(this),
        s = iv(r),
        a = ev(t, s),
        l = ev(void 0 === e ? s : e, s);
      if (Qf(r) && (i = r.constructor, (Jf(i) && (i === hv || Qf(i.prototype)) || tv(i) && null === (i = i[lv])) && (i = void 0), i === hv || void 0 === i)) return sv(r, a, l);
      for (n = new (void 0 === i ? hv : i)(uv(l - a, 0)), o = 0; a < l; a++, o++) a in r && ov(n, o, r[a]);
      return n.length = o, n;
    }
  });
  var cv = Qc("Array").slice,
    dv = dt,
    pv = cv,
    mv = Array.prototype,
    fv = function (t) {
      var e = t.slice;
      return t === mv || dv(mv, t) && e === mv.slice ? pv : e;
    },
    vv = fv,
    gv = vv;
  !function (t) {
    t.exports = gv;
  }($f), function (t) {
    t.exports = Kf;
  }(qf);
  var yv = r(Xf),
    bv = {},
    wv = {
      get exports() {
        return bv;
      },
      set exports(t) {
        bv = t;
      }
    },
    kv = {},
    xv = Ff;
  !function (t) {
    t.exports = xv;
  }({
    get exports() {
      return kv;
    },
    set exports(t) {
      kv = t;
    }
  }), function (t) {
    t.exports = kv;
  }(wv);
  var _v = r(bv);
  function Cv(t, e) {
    (null == e || e > t.length) && (e = t.length);
    for (var i = 0, n = new Array(e); i < e; i++) n[i] = t[i];
    return n;
  }
  function Sv(t, e) {
    var i;
    if (t) {
      if ("string" == typeof t) return Cv(t, e);
      var n = yv(i = Object.prototype.toString.call(t)).call(i, 8, -1);
      return "Object" === n && t.constructor && (n = t.constructor.name), "Map" === n || "Set" === n ? _v(t) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Cv(t, e) : void 0;
    }
  }
  function Dv(t, e) {
    return function (t) {
      if (Uf(t)) return t;
    }(t) || function (t, e) {
      var i = null == t ? null : void 0 !== Qu && Hf(t) || t["@@iterator"];
      if (null != i) {
        var n,
          o,
          r,
          s,
          a = [],
          l = !0,
          h = !1;
        try {
          if (r = (i = i.call(t)).next, 0 === e) {
            if (Object(i) !== i) return;
            l = !1;
          } else for (; !(l = (n = r.call(i)).done) && (a.push(n.value), a.length !== e); l = !0);
        } catch (t) {
          h = !0, o = t;
        } finally {
          try {
            if (!l && null != i.return && (s = i.return(), Object(s) !== s)) return;
          } finally {
            if (h) throw o;
          }
        }
        return a;
      }
    }(t, e) || Sv(t, e) || function () {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  function Tv(t) {
    return function (t) {
      if (Uf(t)) return Cv(t);
    }(t) || function (t) {
      if (void 0 !== Qu && null != Hf(t) || null != t["@@iterator"]) return _v(t);
    }(t) || Sv(t) || function () {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }();
  }
  var Ov = {};
  !function (t) {
    t.exports = Eu;
  }({
    get exports() {
      return Ov;
    },
    set exports(t) {
      Ov = t;
    }
  });
  var Ev = r(Ov),
    Av = {},
    Iv = {
      get exports() {
        return Av;
      },
      set exports(t) {
        Av = t;
      }
    },
    Pv = Qc("Array").concat,
    Mv = dt,
    Nv = Pv,
    Fv = Array.prototype,
    Rv = function (t) {
      var e = t.concat;
      return t === Fv || Mv(Fv, t) && e === Fv.concat ? Nv : e;
    },
    Lv = Rv;
  !function (t) {
    t.exports = Lv;
  }(Iv);
  var jv = r(Av),
    Bv = {};
  !function (t) {
    t.exports = vv;
  }({
    get exports() {
      return Bv;
    },
    set exports(t) {
      Bv = t;
    }
  });
  var zv = r(Bv),
    Hv = {},
    Gv = {
      get exports() {
        return Hv;
      },
      set exports(t) {
        Hv = t;
      }
    };
  Pi({
    target: "Reflect",
    stat: !0
  }, {
    ownKeys: Vp
  });
  var Wv = st.Reflect.ownKeys;
  !function (t) {
    t.exports = Wv;
  }(Gv);
  var Yv = r(Hv),
    Vv = {},
    Uv = {
      get exports() {
        return Vv;
      },
      set exports(t) {
        Vv = t;
      }
    },
    Xv = Pi,
    qv = Date,
    Kv = k(qv.prototype.getTime);
  Xv({
    target: "Date",
    stat: !0
  }, {
    now: function () {
      return Kv(new qv());
    }
  });
  var $v = st.Date.now;
  !function (t) {
    t.exports = $v;
  }(Uv);
  var Zv = r(Vv),
    Qv = {},
    Jv = {
      get exports() {
        return Qv;
      },
      set exports(t) {
        Qv = t;
      }
    },
    tg = Pi,
    eg = sr,
    ig = k([].reverse),
    ng = [1, 2];
  tg({
    target: "Array",
    proto: !0,
    forced: String(ng) === String(ng.reverse())
  }, {
    reverse: function () {
      return eg(this) && (this.length = this.length), ig(this);
    }
  });
  var og = Qc("Array").reverse,
    rg = dt,
    sg = og,
    ag = Array.prototype,
    lg = function (t) {
      var e = t.reverse;
      return t === ag || rg(ag, t) && e === ag.reverse ? sg : e;
    },
    hg = lg;
  !function (t) {
    t.exports = hg;
  }(Jv);
  var ug = r(Qv),
    cg = {},
    dg = {
      get exports() {
        return cg;
      },
      set exports(t) {
        cg = t;
      }
    },
    pg = N,
    mg = sr,
    fg = TypeError,
    vg = Object.getOwnPropertyDescriptor,
    gg = pg && !function () {
      if (void 0 !== this) return !0;
      try {
        Object.defineProperty([], "length", {
          writable: !1
        }).length = 1;
      } catch (t) {
        return t instanceof TypeError;
      }
    }(),
    yg = It,
    bg = TypeError,
    wg = function (t, e) {
      if (!delete t[e]) throw bg("Cannot delete property " + yg(e) + " of " + yg(t));
    },
    kg = Pi,
    xg = Jt,
    _g = In,
    Cg = Tn,
    Sg = Fn,
    Dg = gg ? function (t, e) {
      if (mg(t) && !vg(t, "length").writable) throw fg("Cannot set read only .length");
      return t.length = e;
    } : function (t, e) {
      return t.length = e;
    },
    Tg = lr,
    Og = br,
    Eg = dr,
    Ag = wg,
    Ig = _r("splice"),
    Pg = Math.max,
    Mg = Math.min;
  kg({
    target: "Array",
    proto: !0,
    forced: !Ig
  }, {
    splice: function (t, e) {
      var i,
        n,
        o,
        r,
        s,
        a,
        l = xg(this),
        h = Sg(l),
        u = _g(t, h),
        c = arguments.length;
      for (0 === c ? i = n = 0 : 1 === c ? (i = 0, n = h - u) : (i = c - 2, n = Mg(Pg(Cg(e), 0), h - u)), Tg(h + i - n), o = Og(l, n), r = 0; r < n; r++) (s = u + r) in l && Eg(o, r, l[s]);
      if (o.length = n, i < n) {
        for (r = u; r < h - n; r++) a = r + i, (s = r + n) in l ? l[a] = l[s] : Ag(l, a);
        for (r = h; r > h - n + i; r--) Ag(l, r - 1);
      } else if (i > n) for (r = h - n; r > u; r--) a = r + i - 1, (s = r + n - 1) in l ? l[a] = l[s] : Ag(l, a);
      for (r = 0; r < i; r++) l[r + u] = arguments[r + 2];
      return Dg(l, h - n + i), o;
    }
  });
  var Ng = Qc("Array").splice,
    Fg = dt,
    Rg = Ng,
    Lg = Array.prototype,
    jg = function (t) {
      var e = t.splice;
      return t === Lg || Fg(Lg, t) && e === Lg.splice ? Rg : e;
    },
    Bg = jg;
  !function (t) {
    t.exports = Bg;
  }(dg);
  var zg = r(cg),
    Hg = {},
    Gg = {
      get exports() {
        return Hg;
      },
      set exports(t) {
        Hg = t;
      }
    },
    Wg = N,
    Yg = k,
    Vg = L,
    Ug = u,
    Xg = Zn,
    qg = is,
    Kg = j,
    $g = Jt,
    Zg = K,
    Qg = Object.assign,
    Jg = Object.defineProperty,
    ty = Yg([].concat),
    ey = !Qg || Ug(function () {
      if (Wg && 1 !== Qg({
        b: 1
      }, Qg(Jg({}, "a", {
        enumerable: !0,
        get: function () {
          Jg(this, "b", {
            value: 3,
            enumerable: !1
          });
        }
      }), {
        b: 2
      })).b) return !0;
      var t = {},
        e = {},
        i = Symbol(),
        n = "abcdefghijklmnopqrst";
      return t[i] = 7, n.split("").forEach(function (t) {
        e[t] = t;
      }), 7 != Qg({}, t)[i] || Xg(Qg({}, e)).join("") != n;
    }) ? function (t, e) {
      for (var i = $g(t), n = arguments.length, o = 1, r = qg.f, s = Kg.f; n > o;) for (var a, l = Zg(arguments[o++]), h = r ? ty(Xg(l), r(l)) : Xg(l), u = h.length, c = 0; u > c;) a = h[c++], Wg && !Vg(s, l, a) || (i[a] = l[a]);
      return i;
    } : Qg,
    iy = ey;
  Pi({
    target: "Object",
    stat: !0,
    arity: 2,
    forced: Object.assign !== iy
  }, {
    assign: iy
  });
  var ny = st.Object.assign;
  !function (t) {
    t.exports = ny;
  }(Gg);
  var oy = r(Hg),
    ry = {},
    sy = {
      get exports() {
        return ry;
      },
      set exports(t) {
        ry = t;
      }
    },
    ay = zn.includes;
  Pi({
    target: "Array",
    proto: !0,
    forced: u(function () {
      return !Array(1).includes();
    })
  }, {
    includes: function (t) {
      return ay(this, t, arguments.length > 1 ? arguments[1] : void 0);
    }
  });
  var ly = Qc("Array").includes,
    hy = rt,
    uy = S,
    cy = ve("match"),
    dy = function (t) {
      var e;
      return hy(t) && (void 0 !== (e = t[cy]) ? !!e : "RegExp" == uy(t));
    },
    py = TypeError,
    my = ve("match"),
    fy = Pi,
    vy = function (t) {
      if (dy(t)) throw py("The method doesn't accept regular expressions");
      return t;
    },
    gy = J,
    yy = zr,
    by = function (t) {
      var e = /./;
      try {
        "/./"[t](e);
      } catch (i) {
        try {
          return e[my] = !1, "/./"[t](e);
        } catch (t) {}
      }
      return !1;
    },
    wy = k("".indexOf);
  fy({
    target: "String",
    proto: !0,
    forced: !by("includes")
  }, {
    includes: function (t) {
      return !!~wy(yy(gy(this)), yy(vy(t)), arguments.length > 1 ? arguments[1] : void 0);
    }
  });
  var ky = Qc("String").includes,
    xy = dt,
    _y = ly,
    Cy = ky,
    Sy = Array.prototype,
    Dy = String.prototype,
    Ty = function (t) {
      var e = t.includes;
      return t === Sy || xy(Sy, t) && e === Sy.includes ? _y : "string" == typeof t || t === Dy || xy(Dy, t) && e === Dy.includes ? Cy : e;
    },
    Oy = Ty;
  !function (t) {
    t.exports = Oy;
  }(sy);
  var Ey = r(ry),
    Ay = {};
  !function (t) {
    t.exports = gd;
  }({
    get exports() {
      return Ay;
    },
    set exports(t) {
      Ay = t;
    }
  });
  var Iy = r(Ay),
    Py = {},
    My = {
      get exports() {
        return Py;
      },
      set exports(t) {
        Py = t;
      }
    },
    Ny = N,
    Fy = k,
    Ry = Zn,
    Ly = it,
    jy = Fy(j.f),
    By = Fy([].push),
    zy = function (t) {
      return function (e) {
        for (var i, n = Ly(e), o = Ry(n), r = o.length, s = 0, a = []; r > s;) i = o[s++], Ny && !jy(n, i) || By(a, t ? [i, n[i]] : n[i]);
        return a;
      };
    },
    Hy = {
      entries: zy(!0),
      values: zy(!1)
    }.values;
  Pi({
    target: "Object",
    stat: !0
  }, {
    values: function (t) {
      return Hy(t);
    }
  });
  var Gy = st.Object.values;
  !function (t) {
    t.exports = Gy;
  }(My);
  var Wy = r(Py),
    Yy = {},
    Vy = {
      get exports() {
        return Yy;
      },
      set exports(t) {
        Yy = t;
      }
    },
    Uy = "\t\n\v\f\r                　\u2028\u2029\ufeff",
    Xy = J,
    qy = zr,
    Ky = Uy,
    $y = k("".replace),
    Zy = RegExp("^[" + Ky + "]+"),
    Qy = RegExp("(^|[^" + Ky + "])[" + Ky + "]+$"),
    Jy = function (t) {
      return function (e) {
        var i = qy(Xy(e));
        return 1 & t && (i = $y(i, Zy, "")), 2 & t && (i = $y(i, Qy, "$1")), i;
      };
    },
    tb = {
      start: Jy(1),
      end: Jy(2),
      trim: Jy(3)
    },
    eb = h,
    ib = u,
    nb = k,
    ob = zr,
    rb = tb.trim,
    sb = Uy,
    ab = eb.parseInt,
    lb = eb.Symbol,
    hb = lb && lb.iterator,
    ub = /^[+-]?0x/i,
    cb = nb(ub.exec),
    db = 8 !== ab(sb + "08") || 22 !== ab(sb + "0x16") || hb && !ib(function () {
      ab(Object(hb));
    }) ? function (t, e) {
      var i = rb(ob(t));
      return ab(i, e >>> 0 || (cb(ub, i) ? 16 : 10));
    } : ab;
  Pi({
    global: !0,
    forced: parseInt != db
  }, {
    parseInt: db
  });
  var pb = st.parseInt;
  !function (t) {
    t.exports = pb;
  }(Vy);
  var mb = r(Yy),
    fb = {},
    vb = {
      get exports() {
        return fb;
      },
      set exports(t) {
        fb = t;
      }
    },
    gb = Pi,
    yb = zn.indexOf,
    bb = Qd,
    wb = O([].indexOf),
    kb = !!wb && 1 / wb([1], 1, -0) < 0;
  gb({
    target: "Array",
    proto: !0,
    forced: kb || !bb("indexOf")
  }, {
    indexOf: function (t) {
      var e = arguments.length > 1 ? arguments[1] : void 0;
      return kb ? wb(this, t, e) || 0 : yb(this, t, e);
    }
  });
  var xb = Qc("Array").indexOf,
    _b = dt,
    Cb = xb,
    Sb = Array.prototype,
    Db = function (t) {
      var e = t.indexOf;
      return t === Sb || _b(Sb, t) && e === Sb.indexOf ? Cb : e;
    },
    Tb = Db;
  !function (t) {
    t.exports = Tb;
  }(vb);
  var Ob = r(fb),
    Eb = {},
    Ab = {
      get exports() {
        return Eb;
      },
      set exports(t) {
        Eb = t;
      }
    },
    Ib = fh.PROPER,
    Pb = u,
    Mb = Uy,
    Nb = tb.trim;
  Pi({
    target: "String",
    proto: !0,
    forced: function (t) {
      return Pb(function () {
        return !!Mb[t]() || "​᠎" !== "​᠎"[t]() || Ib && Mb[t].name !== t;
      });
    }("trim")
  }, {
    trim: function () {
      return Nb(this);
    }
  });
  var Fb = Qc("String").trim,
    Rb = dt,
    Lb = Fb,
    jb = String.prototype,
    Bb = function (t) {
      var e = t.trim;
      return "string" == typeof t || t === jb || Rb(jb, t) && e === jb.trim ? Lb : e;
    },
    zb = Bb;
  !function (t) {
    t.exports = zb;
  }(Ab);
  var Hb = r(Eb),
    Gb = {};
  !function (t) {
    t.exports = Lc;
  }({
    get exports() {
      return Gb;
    },
    set exports(t) {
      Gb = t;
    }
  });
  var Wb = r(Gb),
    Yb = {},
    Vb = {
      get exports() {
        return Yb;
      },
      set exports(t) {
        Yb = t;
      }
    },
    Ub = st,
    Xb = v;
  Ub.JSON || (Ub.JSON = {
    stringify: JSON.stringify
  });
  var qb = function (t, e, i) {
      return Xb(Ub.JSON.stringify, null, arguments);
    },
    Kb = qb;
  !function (t) {
    t.exports = Kb;
  }(Vb);
  var $b = r(Yb),
    Zb = {},
    Qb = {
      get exports() {
        return Zb;
      },
      set exports(t) {
        Zb = t;
      }
    },
    Jb = Jt,
    tw = In,
    ew = Fn,
    iw = function (t) {
      for (var e = Jb(this), i = ew(e), n = arguments.length, o = tw(n > 1 ? arguments[1] : void 0, i), r = n > 2 ? arguments[2] : void 0, s = void 0 === r ? i : tw(r, i); s > o;) e[o++] = t;
      return e;
    };
  Pi({
    target: "Array",
    proto: !0
  }, {
    fill: iw
  });
  var nw = Qc("Array").fill,
    ow = dt,
    rw = nw,
    sw = Array.prototype,
    aw = function (t) {
      var e = t.fill;
      return t === sw || ow(sw, t) && e === sw.fill ? rw : e;
    },
    lw = aw;
  !function (t) {
    t.exports = lw;
  }(Qb);
  var hw = r(Zb),
    uw = {};
  !function (t) {
    function e(t) {
      if (t) return function (t) {
        for (var i in e.prototype) t[i] = e.prototype[i];
        return t;
      }(t);
    }
    t.exports = e, e.prototype.on = e.prototype.addEventListener = function (t, e) {
      return this._callbacks = this._callbacks || {}, (this._callbacks["$" + t] = this._callbacks["$" + t] || []).push(e), this;
    }, e.prototype.once = function (t, e) {
      function i() {
        this.off(t, i), e.apply(this, arguments);
      }
      return i.fn = e, this.on(t, i), this;
    }, e.prototype.off = e.prototype.removeListener = e.prototype.removeAllListeners = e.prototype.removeEventListener = function (t, e) {
      if (this._callbacks = this._callbacks || {}, 0 == arguments.length) return this._callbacks = {}, this;
      var i,
        n = this._callbacks["$" + t];
      if (!n) return this;
      if (1 == arguments.length) return delete this._callbacks["$" + t], this;
      for (var o = 0; o < n.length; o++) if ((i = n[o]) === e || i.fn === e) {
        n.splice(o, 1);
        break;
      }
      return 0 === n.length && delete this._callbacks["$" + t], this;
    }, e.prototype.emit = function (t) {
      this._callbacks = this._callbacks || {};
      for (var e = new Array(arguments.length - 1), i = this._callbacks["$" + t], n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];
      if (i) {
        n = 0;
        for (var o = (i = i.slice(0)).length; n < o; ++n) i[n].apply(this, e);
      }
      return this;
    }, e.prototype.listeners = function (t) {
      return this._callbacks = this._callbacks || {}, this._callbacks["$" + t] || [];
    }, e.prototype.hasListeners = function (t) {
      return !!this.listeners(t).length;
    };
  }({
    get exports() {
      return uw;
    },
    set exports(t) {
      uw = t;
    }
  });
  var cw,
    dw = uw;
  /*! Hammer.JS - v2.0.17-rc - 2019-12-16
  	 * http://naver.github.io/egjs
  	 *
  	 * Forked By Naver egjs
  	 * Copyright (c) hammerjs
  	 * Licensed under the MIT license */
  function pw() {
    return pw = Object.assign || function (t) {
      for (var e = 1; e < arguments.length; e++) {
        var i = arguments[e];
        for (var n in i) Object.prototype.hasOwnProperty.call(i, n) && (t[n] = i[n]);
      }
      return t;
    }, pw.apply(this, arguments);
  }
  function mw(t, e) {
    t.prototype = Object.create(e.prototype), t.prototype.constructor = t, t.__proto__ = e;
  }
  function fw(t) {
    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return t;
  }
  cw = "function" != typeof Object.assign ? function (t) {
    if (null == t) throw new TypeError("Cannot convert undefined or null to object");
    for (var e = Object(t), i = 1; i < arguments.length; i++) {
      var n = arguments[i];
      if (null != n) for (var o in n) n.hasOwnProperty(o) && (e[o] = n[o]);
    }
    return e;
  } : Object.assign;
  var vw,
    gw = cw,
    yw = ["", "webkit", "Moz", "MS", "ms", "o"],
    bw = "undefined" == typeof document ? {
      style: {}
    } : document.createElement("div"),
    ww = "function",
    kw = Math.round,
    xw = Math.abs,
    _w = Date.now;
  function Cw(t, e) {
    for (var i, n, o = e[0].toUpperCase() + e.slice(1), r = 0; r < yw.length;) {
      if ((n = (i = yw[r]) ? i + o : e) in t) return n;
      r++;
    }
  }
  vw = "undefined" == typeof window ? {} : window;
  var Sw = Cw(bw.style, "touchAction"),
    Dw = void 0 !== Sw;
  var Tw = "compute",
    Ow = "auto",
    Ew = "manipulation",
    Aw = "none",
    Iw = "pan-x",
    Pw = "pan-y",
    Mw = function () {
      if (!Dw) return !1;
      var t = {},
        e = vw.CSS && vw.CSS.supports;
      return ["auto", "manipulation", "pan-y", "pan-x", "pan-x pan-y", "none"].forEach(function (i) {
        return t[i] = !e || vw.CSS.supports("touch-action", i);
      }), t;
    }(),
    Nw = ("ontouchstart" in vw),
    Fw = void 0 !== Cw(vw, "PointerEvent"),
    Rw = Nw && /mobile|tablet|ip(ad|hone|od)|android/i.test(navigator.userAgent),
    Lw = "touch",
    jw = "mouse",
    Bw = 25,
    zw = 1,
    Hw = 2,
    Gw = 4,
    Ww = 8,
    Yw = 1,
    Vw = 2,
    Uw = 4,
    Xw = 8,
    qw = 16,
    Kw = Vw | Uw,
    $w = Xw | qw,
    Zw = Kw | $w,
    Qw = ["x", "y"],
    Jw = ["clientX", "clientY"];
  function tk(t, e, i) {
    var n;
    if (t) if (t.forEach) t.forEach(e, i);else if (void 0 !== t.length) for (n = 0; n < t.length;) e.call(i, t[n], n, t), n++;else for (n in t) t.hasOwnProperty(n) && e.call(i, t[n], n, t);
  }
  function ek(t, e) {
    return typeof t === ww ? t.apply(e && e[0] || void 0, e) : t;
  }
  function ik(t, e) {
    return t.indexOf(e) > -1;
  }
  var nk = function () {
    function t(t, e) {
      this.manager = t, this.set(e);
    }
    var e = t.prototype;
    return e.set = function (t) {
      t === Tw && (t = this.compute()), Dw && this.manager.element.style && Mw[t] && (this.manager.element.style[Sw] = t), this.actions = t.toLowerCase().trim();
    }, e.update = function () {
      this.set(this.manager.options.touchAction);
    }, e.compute = function () {
      var t = [];
      return tk(this.manager.recognizers, function (e) {
        ek(e.options.enable, [e]) && (t = t.concat(e.getTouchAction()));
      }), function (t) {
        if (ik(t, Aw)) return Aw;
        var e = ik(t, Iw),
          i = ik(t, Pw);
        return e && i ? Aw : e || i ? e ? Iw : Pw : ik(t, Ew) ? Ew : Ow;
      }(t.join(" "));
    }, e.preventDefaults = function (t) {
      var e = t.srcEvent,
        i = t.offsetDirection;
      if (this.manager.session.prevented) e.preventDefault();else {
        var n = this.actions,
          o = ik(n, Aw) && !Mw[Aw],
          r = ik(n, Pw) && !Mw[Pw],
          s = ik(n, Iw) && !Mw[Iw];
        if (o) {
          var a = 1 === t.pointers.length,
            l = t.distance < 2,
            h = t.deltaTime < 250;
          if (a && l && h) return;
        }
        if (!s || !r) return o || r && i & Kw || s && i & $w ? this.preventSrc(e) : void 0;
      }
    }, e.preventSrc = function (t) {
      this.manager.session.prevented = !0, t.preventDefault();
    }, t;
  }();
  function ok(t, e) {
    for (; t;) {
      if (t === e) return !0;
      t = t.parentNode;
    }
    return !1;
  }
  function rk(t) {
    var e = t.length;
    if (1 === e) return {
      x: kw(t[0].clientX),
      y: kw(t[0].clientY)
    };
    for (var i = 0, n = 0, o = 0; o < e;) i += t[o].clientX, n += t[o].clientY, o++;
    return {
      x: kw(i / e),
      y: kw(n / e)
    };
  }
  function sk(t) {
    for (var e = [], i = 0; i < t.pointers.length;) e[i] = {
      clientX: kw(t.pointers[i].clientX),
      clientY: kw(t.pointers[i].clientY)
    }, i++;
    return {
      timeStamp: _w(),
      pointers: e,
      center: rk(e),
      deltaX: t.deltaX,
      deltaY: t.deltaY
    };
  }
  function ak(t, e, i) {
    i || (i = Qw);
    var n = e[i[0]] - t[i[0]],
      o = e[i[1]] - t[i[1]];
    return Math.sqrt(n * n + o * o);
  }
  function lk(t, e, i) {
    i || (i = Qw);
    var n = e[i[0]] - t[i[0]],
      o = e[i[1]] - t[i[1]];
    return 180 * Math.atan2(o, n) / Math.PI;
  }
  function hk(t, e) {
    return t === e ? Yw : xw(t) >= xw(e) ? t < 0 ? Vw : Uw : e < 0 ? Xw : qw;
  }
  function uk(t, e, i) {
    return {
      x: e / t || 0,
      y: i / t || 0
    };
  }
  function ck(t, e) {
    var i = t.session,
      n = e.pointers,
      o = n.length;
    i.firstInput || (i.firstInput = sk(e)), o > 1 && !i.firstMultiple ? i.firstMultiple = sk(e) : 1 === o && (i.firstMultiple = !1);
    var r = i.firstInput,
      s = i.firstMultiple,
      a = s ? s.center : r.center,
      l = e.center = rk(n);
    e.timeStamp = _w(), e.deltaTime = e.timeStamp - r.timeStamp, e.angle = lk(a, l), e.distance = ak(a, l), function (t, e) {
      var i = e.center,
        n = t.offsetDelta || {},
        o = t.prevDelta || {},
        r = t.prevInput || {};
      e.eventType !== zw && r.eventType !== Gw || (o = t.prevDelta = {
        x: r.deltaX || 0,
        y: r.deltaY || 0
      }, n = t.offsetDelta = {
        x: i.x,
        y: i.y
      }), e.deltaX = o.x + (i.x - n.x), e.deltaY = o.y + (i.y - n.y);
    }(i, e), e.offsetDirection = hk(e.deltaX, e.deltaY);
    var h,
      u,
      c = uk(e.deltaTime, e.deltaX, e.deltaY);
    e.overallVelocityX = c.x, e.overallVelocityY = c.y, e.overallVelocity = xw(c.x) > xw(c.y) ? c.x : c.y, e.scale = s ? (h = s.pointers, ak((u = n)[0], u[1], Jw) / ak(h[0], h[1], Jw)) : 1, e.rotation = s ? function (t, e) {
      return lk(e[1], e[0], Jw) + lk(t[1], t[0], Jw);
    }(s.pointers, n) : 0, e.maxPointers = i.prevInput ? e.pointers.length > i.prevInput.maxPointers ? e.pointers.length : i.prevInput.maxPointers : e.pointers.length, function (t, e) {
      var i,
        n,
        o,
        r,
        s = t.lastInterval || e,
        a = e.timeStamp - s.timeStamp;
      if (e.eventType !== Ww && (a > Bw || void 0 === s.velocity)) {
        var l = e.deltaX - s.deltaX,
          h = e.deltaY - s.deltaY,
          u = uk(a, l, h);
        n = u.x, o = u.y, i = xw(u.x) > xw(u.y) ? u.x : u.y, r = hk(l, h), t.lastInterval = e;
      } else i = s.velocity, n = s.velocityX, o = s.velocityY, r = s.direction;
      e.velocity = i, e.velocityX = n, e.velocityY = o, e.direction = r;
    }(i, e);
    var d,
      p = t.element,
      m = e.srcEvent;
    ok(d = m.composedPath ? m.composedPath()[0] : m.path ? m.path[0] : m.target, p) && (p = d), e.target = p;
  }
  function dk(t, e, i) {
    var n = i.pointers.length,
      o = i.changedPointers.length,
      r = e & zw && n - o == 0,
      s = e & (Gw | Ww) && n - o == 0;
    i.isFirst = !!r, i.isFinal = !!s, r && (t.session = {}), i.eventType = e, ck(t, i), t.emit("hammer.input", i), t.recognize(i), t.session.prevInput = i;
  }
  function pk(t) {
    return t.trim().split(/\s+/g);
  }
  function mk(t, e, i) {
    tk(pk(e), function (e) {
      t.addEventListener(e, i, !1);
    });
  }
  function fk(t, e, i) {
    tk(pk(e), function (e) {
      t.removeEventListener(e, i, !1);
    });
  }
  function vk(t) {
    var e = t.ownerDocument || t;
    return e.defaultView || e.parentWindow || window;
  }
  var gk = function () {
    function t(t, e) {
      var i = this;
      this.manager = t, this.callback = e, this.element = t.element, this.target = t.options.inputTarget, this.domHandler = function (e) {
        ek(t.options.enable, [t]) && i.handler(e);
      }, this.init();
    }
    var e = t.prototype;
    return e.handler = function () {}, e.init = function () {
      this.evEl && mk(this.element, this.evEl, this.domHandler), this.evTarget && mk(this.target, this.evTarget, this.domHandler), this.evWin && mk(vk(this.element), this.evWin, this.domHandler);
    }, e.destroy = function () {
      this.evEl && fk(this.element, this.evEl, this.domHandler), this.evTarget && fk(this.target, this.evTarget, this.domHandler), this.evWin && fk(vk(this.element), this.evWin, this.domHandler);
    }, t;
  }();
  function yk(t, e, i) {
    if (t.indexOf && !i) return t.indexOf(e);
    for (var n = 0; n < t.length;) {
      if (i && t[n][i] == e || !i && t[n] === e) return n;
      n++;
    }
    return -1;
  }
  var bk = {
      pointerdown: zw,
      pointermove: Hw,
      pointerup: Gw,
      pointercancel: Ww,
      pointerout: Ww
    },
    wk = {
      2: Lw,
      3: "pen",
      4: jw,
      5: "kinect"
    },
    kk = "pointerdown",
    xk = "pointermove pointerup pointercancel";
  vw.MSPointerEvent && !vw.PointerEvent && (kk = "MSPointerDown", xk = "MSPointerMove MSPointerUp MSPointerCancel");
  var _k = function (t) {
    function e() {
      var i,
        n = e.prototype;
      return n.evEl = kk, n.evWin = xk, (i = t.apply(this, arguments) || this).store = i.manager.session.pointerEvents = [], i;
    }
    return mw(e, t), e.prototype.handler = function (t) {
      var e = this.store,
        i = !1,
        n = t.type.toLowerCase().replace("ms", ""),
        o = bk[n],
        r = wk[t.pointerType] || t.pointerType,
        s = r === Lw,
        a = yk(e, t.pointerId, "pointerId");
      o & zw && (0 === t.button || s) ? a < 0 && (e.push(t), a = e.length - 1) : o & (Gw | Ww) && (i = !0), a < 0 || (e[a] = t, this.callback(this.manager, o, {
        pointers: e,
        changedPointers: [t],
        pointerType: r,
        srcEvent: t
      }), i && e.splice(a, 1));
    }, e;
  }(gk);
  function Ck(t) {
    return Array.prototype.slice.call(t, 0);
  }
  function Sk(t, e, i) {
    for (var n = [], o = [], r = 0; r < t.length;) {
      var s = e ? t[r][e] : t[r];
      yk(o, s) < 0 && n.push(t[r]), o[r] = s, r++;
    }
    return i && (n = e ? n.sort(function (t, i) {
      return t[e] > i[e];
    }) : n.sort()), n;
  }
  var Dk = {
      touchstart: zw,
      touchmove: Hw,
      touchend: Gw,
      touchcancel: Ww
    },
    Tk = "touchstart touchmove touchend touchcancel",
    Ok = function (t) {
      function e() {
        var i;
        return e.prototype.evTarget = Tk, (i = t.apply(this, arguments) || this).targetIds = {}, i;
      }
      return mw(e, t), e.prototype.handler = function (t) {
        var e = Dk[t.type],
          i = Ek.call(this, t, e);
        i && this.callback(this.manager, e, {
          pointers: i[0],
          changedPointers: i[1],
          pointerType: Lw,
          srcEvent: t
        });
      }, e;
    }(gk);
  function Ek(t, e) {
    var i,
      n,
      o = Ck(t.touches),
      r = this.targetIds;
    if (e & (zw | Hw) && 1 === o.length) return r[o[0].identifier] = !0, [o, o];
    var s = Ck(t.changedTouches),
      a = [],
      l = this.target;
    if (n = o.filter(function (t) {
      return ok(t.target, l);
    }), e === zw) for (i = 0; i < n.length;) r[n[i].identifier] = !0, i++;
    for (i = 0; i < s.length;) r[s[i].identifier] && a.push(s[i]), e & (Gw | Ww) && delete r[s[i].identifier], i++;
    return a.length ? [Sk(n.concat(a), "identifier", !0), a] : void 0;
  }
  var Ak = {
      mousedown: zw,
      mousemove: Hw,
      mouseup: Gw
    },
    Ik = "mousedown",
    Pk = "mousemove mouseup",
    Mk = function (t) {
      function e() {
        var i,
          n = e.prototype;
        return n.evEl = Ik, n.evWin = Pk, (i = t.apply(this, arguments) || this).pressed = !1, i;
      }
      return mw(e, t), e.prototype.handler = function (t) {
        var e = Ak[t.type];
        e & zw && 0 === t.button && (this.pressed = !0), e & Hw && 1 !== t.which && (e = Gw), this.pressed && (e & Gw && (this.pressed = !1), this.callback(this.manager, e, {
          pointers: [t],
          changedPointers: [t],
          pointerType: jw,
          srcEvent: t
        }));
      }, e;
    }(gk),
    Nk = 2500,
    Fk = 25;
  function Rk(t) {
    var e = t.changedPointers[0];
    if (e.identifier === this.primaryTouch) {
      var i = {
          x: e.clientX,
          y: e.clientY
        },
        n = this.lastTouches;
      this.lastTouches.push(i);
      setTimeout(function () {
        var t = n.indexOf(i);
        t > -1 && n.splice(t, 1);
      }, Nk);
    }
  }
  function Lk(t, e) {
    t & zw ? (this.primaryTouch = e.changedPointers[0].identifier, Rk.call(this, e)) : t & (Gw | Ww) && Rk.call(this, e);
  }
  function jk(t) {
    for (var e = t.srcEvent.clientX, i = t.srcEvent.clientY, n = 0; n < this.lastTouches.length; n++) {
      var o = this.lastTouches[n],
        r = Math.abs(e - o.x),
        s = Math.abs(i - o.y);
      if (r <= Fk && s <= Fk) return !0;
    }
    return !1;
  }
  var Bk = function () {
    return function (t) {
      function e(e, i) {
        var n;
        return (n = t.call(this, e, i) || this).handler = function (t, e, i) {
          var o = i.pointerType === Lw,
            r = i.pointerType === jw;
          if (!(r && i.sourceCapabilities && i.sourceCapabilities.firesTouchEvents)) {
            if (o) Lk.call(fw(fw(n)), e, i);else if (r && jk.call(fw(fw(n)), i)) return;
            n.callback(t, e, i);
          }
        }, n.touch = new Ok(n.manager, n.handler), n.mouse = new Mk(n.manager, n.handler), n.primaryTouch = null, n.lastTouches = [], n;
      }
      return mw(e, t), e.prototype.destroy = function () {
        this.touch.destroy(), this.mouse.destroy();
      }, e;
    }(gk);
  }();
  function zk(t, e, i) {
    return !!Array.isArray(t) && (tk(t, i[e], i), !0);
  }
  var Hk = 1,
    Gk = 2,
    Wk = 4,
    Yk = 8,
    Vk = Yk,
    Uk = 16,
    Xk = 32,
    qk = 1;
  function Kk(t, e) {
    var i = e.manager;
    return i ? i.get(t) : t;
  }
  function $k(t) {
    return t & Uk ? "cancel" : t & Yk ? "end" : t & Wk ? "move" : t & Gk ? "start" : "";
  }
  var Zk = function () {
      function t(t) {
        void 0 === t && (t = {}), this.options = pw({
          enable: !0
        }, t), this.id = qk++, this.manager = null, this.state = Hk, this.simultaneous = {}, this.requireFail = [];
      }
      var e = t.prototype;
      return e.set = function (t) {
        return gw(this.options, t), this.manager && this.manager.touchAction.update(), this;
      }, e.recognizeWith = function (t) {
        if (zk(t, "recognizeWith", this)) return this;
        var e = this.simultaneous;
        return e[(t = Kk(t, this)).id] || (e[t.id] = t, t.recognizeWith(this)), this;
      }, e.dropRecognizeWith = function (t) {
        return zk(t, "dropRecognizeWith", this) || (t = Kk(t, this), delete this.simultaneous[t.id]), this;
      }, e.requireFailure = function (t) {
        if (zk(t, "requireFailure", this)) return this;
        var e = this.requireFail;
        return -1 === yk(e, t = Kk(t, this)) && (e.push(t), t.requireFailure(this)), this;
      }, e.dropRequireFailure = function (t) {
        if (zk(t, "dropRequireFailure", this)) return this;
        t = Kk(t, this);
        var e = yk(this.requireFail, t);
        return e > -1 && this.requireFail.splice(e, 1), this;
      }, e.hasRequireFailures = function () {
        return this.requireFail.length > 0;
      }, e.canRecognizeWith = function (t) {
        return !!this.simultaneous[t.id];
      }, e.emit = function (t) {
        var e = this,
          i = this.state;
        function n(i) {
          e.manager.emit(i, t);
        }
        i < Yk && n(e.options.event + $k(i)), n(e.options.event), t.additionalEvent && n(t.additionalEvent), i >= Yk && n(e.options.event + $k(i));
      }, e.tryEmit = function (t) {
        if (this.canEmit()) return this.emit(t);
        this.state = Xk;
      }, e.canEmit = function () {
        for (var t = 0; t < this.requireFail.length;) {
          if (!(this.requireFail[t].state & (Xk | Hk))) return !1;
          t++;
        }
        return !0;
      }, e.recognize = function (t) {
        var e = gw({}, t);
        if (!ek(this.options.enable, [this, e])) return this.reset(), void (this.state = Xk);
        this.state & (Vk | Uk | Xk) && (this.state = Hk), this.state = this.process(e), this.state & (Gk | Wk | Yk | Uk) && this.tryEmit(e);
      }, e.process = function (t) {}, e.getTouchAction = function () {}, e.reset = function () {}, t;
    }(),
    Qk = function (t) {
      function e(e) {
        var i;
        return void 0 === e && (e = {}), (i = t.call(this, pw({
          event: "tap",
          pointers: 1,
          taps: 1,
          interval: 300,
          time: 250,
          threshold: 9,
          posThreshold: 10
        }, e)) || this).pTime = !1, i.pCenter = !1, i._timer = null, i._input = null, i.count = 0, i;
      }
      mw(e, t);
      var i = e.prototype;
      return i.getTouchAction = function () {
        return [Ew];
      }, i.process = function (t) {
        var e = this,
          i = this.options,
          n = t.pointers.length === i.pointers,
          o = t.distance < i.threshold,
          r = t.deltaTime < i.time;
        if (this.reset(), t.eventType & zw && 0 === this.count) return this.failTimeout();
        if (o && r && n) {
          if (t.eventType !== Gw) return this.failTimeout();
          var s = !this.pTime || t.timeStamp - this.pTime < i.interval,
            a = !this.pCenter || ak(this.pCenter, t.center) < i.posThreshold;
          if (this.pTime = t.timeStamp, this.pCenter = t.center, a && s ? this.count += 1 : this.count = 1, this._input = t, 0 === this.count % i.taps) return this.hasRequireFailures() ? (this._timer = setTimeout(function () {
            e.state = Vk, e.tryEmit();
          }, i.interval), Gk) : Vk;
        }
        return Xk;
      }, i.failTimeout = function () {
        var t = this;
        return this._timer = setTimeout(function () {
          t.state = Xk;
        }, this.options.interval), Xk;
      }, i.reset = function () {
        clearTimeout(this._timer);
      }, i.emit = function () {
        this.state === Vk && (this._input.tapCount = this.count, this.manager.emit(this.options.event, this._input));
      }, e;
    }(Zk),
    Jk = function (t) {
      function e(e) {
        return void 0 === e && (e = {}), t.call(this, pw({
          pointers: 1
        }, e)) || this;
      }
      mw(e, t);
      var i = e.prototype;
      return i.attrTest = function (t) {
        var e = this.options.pointers;
        return 0 === e || t.pointers.length === e;
      }, i.process = function (t) {
        var e = this.state,
          i = t.eventType,
          n = e & (Gk | Wk),
          o = this.attrTest(t);
        return n && (i & Ww || !o) ? e | Uk : n || o ? i & Gw ? e | Yk : e & Gk ? e | Wk : Gk : Xk;
      }, e;
    }(Zk);
  function tx(t) {
    return t === qw ? "down" : t === Xw ? "up" : t === Vw ? "left" : t === Uw ? "right" : "";
  }
  var ex = function (t) {
      function e(e) {
        var i;
        return void 0 === e && (e = {}), (i = t.call(this, pw({
          event: "pan",
          threshold: 10,
          pointers: 1,
          direction: Zw
        }, e)) || this).pX = null, i.pY = null, i;
      }
      mw(e, t);
      var i = e.prototype;
      return i.getTouchAction = function () {
        var t = this.options.direction,
          e = [];
        return t & Kw && e.push(Pw), t & $w && e.push(Iw), e;
      }, i.directionTest = function (t) {
        var e = this.options,
          i = !0,
          n = t.distance,
          o = t.direction,
          r = t.deltaX,
          s = t.deltaY;
        return o & e.direction || (e.direction & Kw ? (o = 0 === r ? Yw : r < 0 ? Vw : Uw, i = r !== this.pX, n = Math.abs(t.deltaX)) : (o = 0 === s ? Yw : s < 0 ? Xw : qw, i = s !== this.pY, n = Math.abs(t.deltaY))), t.direction = o, i && n > e.threshold && o & e.direction;
      }, i.attrTest = function (t) {
        return Jk.prototype.attrTest.call(this, t) && (this.state & Gk || !(this.state & Gk) && this.directionTest(t));
      }, i.emit = function (e) {
        this.pX = e.deltaX, this.pY = e.deltaY;
        var i = tx(e.direction);
        i && (e.additionalEvent = this.options.event + i), t.prototype.emit.call(this, e);
      }, e;
    }(Jk),
    ix = function (t) {
      function e(e) {
        return void 0 === e && (e = {}), t.call(this, pw({
          event: "swipe",
          threshold: 10,
          velocity: .3,
          direction: Kw | $w,
          pointers: 1
        }, e)) || this;
      }
      mw(e, t);
      var i = e.prototype;
      return i.getTouchAction = function () {
        return ex.prototype.getTouchAction.call(this);
      }, i.attrTest = function (e) {
        var i,
          n = this.options.direction;
        return n & (Kw | $w) ? i = e.overallVelocity : n & Kw ? i = e.overallVelocityX : n & $w && (i = e.overallVelocityY), t.prototype.attrTest.call(this, e) && n & e.offsetDirection && e.distance > this.options.threshold && e.maxPointers === this.options.pointers && xw(i) > this.options.velocity && e.eventType & Gw;
      }, i.emit = function (t) {
        var e = tx(t.offsetDirection);
        e && this.manager.emit(this.options.event + e, t), this.manager.emit(this.options.event, t);
      }, e;
    }(Jk),
    nx = function (t) {
      function e(e) {
        return void 0 === e && (e = {}), t.call(this, pw({
          event: "pinch",
          threshold: 0,
          pointers: 2
        }, e)) || this;
      }
      mw(e, t);
      var i = e.prototype;
      return i.getTouchAction = function () {
        return [Aw];
      }, i.attrTest = function (e) {
        return t.prototype.attrTest.call(this, e) && (Math.abs(e.scale - 1) > this.options.threshold || this.state & Gk);
      }, i.emit = function (e) {
        if (1 !== e.scale) {
          var i = e.scale < 1 ? "in" : "out";
          e.additionalEvent = this.options.event + i;
        }
        t.prototype.emit.call(this, e);
      }, e;
    }(Jk),
    ox = function (t) {
      function e(e) {
        return void 0 === e && (e = {}), t.call(this, pw({
          event: "rotate",
          threshold: 0,
          pointers: 2
        }, e)) || this;
      }
      mw(e, t);
      var i = e.prototype;
      return i.getTouchAction = function () {
        return [Aw];
      }, i.attrTest = function (e) {
        return t.prototype.attrTest.call(this, e) && (Math.abs(e.rotation) > this.options.threshold || this.state & Gk);
      }, e;
    }(Jk),
    rx = function (t) {
      function e(e) {
        var i;
        return void 0 === e && (e = {}), (i = t.call(this, pw({
          event: "press",
          pointers: 1,
          time: 251,
          threshold: 9
        }, e)) || this)._timer = null, i._input = null, i;
      }
      mw(e, t);
      var i = e.prototype;
      return i.getTouchAction = function () {
        return [Ow];
      }, i.process = function (t) {
        var e = this,
          i = this.options,
          n = t.pointers.length === i.pointers,
          o = t.distance < i.threshold,
          r = t.deltaTime > i.time;
        if (this._input = t, !o || !n || t.eventType & (Gw | Ww) && !r) this.reset();else if (t.eventType & zw) this.reset(), this._timer = setTimeout(function () {
          e.state = Vk, e.tryEmit();
        }, i.time);else if (t.eventType & Gw) return Vk;
        return Xk;
      }, i.reset = function () {
        clearTimeout(this._timer);
      }, i.emit = function (t) {
        this.state === Vk && (t && t.eventType & Gw ? this.manager.emit(this.options.event + "up", t) : (this._input.timeStamp = _w(), this.manager.emit(this.options.event, this._input)));
      }, e;
    }(Zk),
    sx = {
      domEvents: !1,
      touchAction: Tw,
      enable: !0,
      inputTarget: null,
      inputClass: null,
      cssProps: {
        userSelect: "none",
        touchSelect: "none",
        touchCallout: "none",
        contentZooming: "none",
        userDrag: "none",
        tapHighlightColor: "rgba(0,0,0,0)"
      }
    },
    ax = [[ox, {
      enable: !1
    }], [nx, {
      enable: !1
    }, ["rotate"]], [ix, {
      direction: Kw
    }], [ex, {
      direction: Kw
    }, ["swipe"]], [Qk], [Qk, {
      event: "doubletap",
      taps: 2
    }, ["tap"]], [rx]];
  function lx(t, e) {
    var i,
      n = t.element;
    n.style && (tk(t.options.cssProps, function (o, r) {
      i = Cw(n.style, r), e ? (t.oldCssProps[i] = n.style[i], n.style[i] = o) : n.style[i] = t.oldCssProps[i] || "";
    }), e || (t.oldCssProps = {}));
  }
  var hx = function () {
      function t(t, e) {
        var i,
          n = this;
        this.options = gw({}, sx, e || {}), this.options.inputTarget = this.options.inputTarget || t, this.handlers = {}, this.session = {}, this.recognizers = [], this.oldCssProps = {}, this.element = t, this.input = new ((i = this).options.inputClass || (Fw ? _k : Rw ? Ok : Nw ? Bk : Mk))(i, dk), this.touchAction = new nk(this, this.options.touchAction), lx(this, !0), tk(this.options.recognizers, function (t) {
          var e = n.add(new t[0](t[1]));
          t[2] && e.recognizeWith(t[2]), t[3] && e.requireFailure(t[3]);
        }, this);
      }
      var e = t.prototype;
      return e.set = function (t) {
        return gw(this.options, t), t.touchAction && this.touchAction.update(), t.inputTarget && (this.input.destroy(), this.input.target = t.inputTarget, this.input.init()), this;
      }, e.stop = function (t) {
        this.session.stopped = t ? 2 : 1;
      }, e.recognize = function (t) {
        var e = this.session;
        if (!e.stopped) {
          var i;
          this.touchAction.preventDefaults(t);
          var n = this.recognizers,
            o = e.curRecognizer;
          (!o || o && o.state & Vk) && (e.curRecognizer = null, o = null);
          for (var r = 0; r < n.length;) i = n[r], 2 === e.stopped || o && i !== o && !i.canRecognizeWith(o) ? i.reset() : i.recognize(t), !o && i.state & (Gk | Wk | Yk) && (e.curRecognizer = i, o = i), r++;
        }
      }, e.get = function (t) {
        if (t instanceof Zk) return t;
        for (var e = this.recognizers, i = 0; i < e.length; i++) if (e[i].options.event === t) return e[i];
        return null;
      }, e.add = function (t) {
        if (zk(t, "add", this)) return this;
        var e = this.get(t.options.event);
        return e && this.remove(e), this.recognizers.push(t), t.manager = this, this.touchAction.update(), t;
      }, e.remove = function (t) {
        if (zk(t, "remove", this)) return this;
        var e = this.get(t);
        if (t) {
          var i = this.recognizers,
            n = yk(i, e);
          -1 !== n && (i.splice(n, 1), this.touchAction.update());
        }
        return this;
      }, e.on = function (t, e) {
        if (void 0 === t || void 0 === e) return this;
        var i = this.handlers;
        return tk(pk(t), function (t) {
          i[t] = i[t] || [], i[t].push(e);
        }), this;
      }, e.off = function (t, e) {
        if (void 0 === t) return this;
        var i = this.handlers;
        return tk(pk(t), function (t) {
          e ? i[t] && i[t].splice(yk(i[t], e), 1) : delete i[t];
        }), this;
      }, e.emit = function (t, e) {
        this.options.domEvents && function (t, e) {
          var i = document.createEvent("Event");
          i.initEvent(t, !0, !0), i.gesture = e, e.target.dispatchEvent(i);
        }(t, e);
        var i = this.handlers[t] && this.handlers[t].slice();
        if (i && i.length) {
          e.type = t, e.preventDefault = function () {
            e.srcEvent.preventDefault();
          };
          for (var n = 0; n < i.length;) i[n](e), n++;
        }
      }, e.destroy = function () {
        this.element && lx(this, !1), this.handlers = {}, this.session = {}, this.input.destroy(), this.element = null;
      }, t;
    }(),
    ux = {
      touchstart: zw,
      touchmove: Hw,
      touchend: Gw,
      touchcancel: Ww
    },
    cx = "touchstart",
    dx = "touchstart touchmove touchend touchcancel",
    px = function (t) {
      function e() {
        var i,
          n = e.prototype;
        return n.evTarget = cx, n.evWin = dx, (i = t.apply(this, arguments) || this).started = !1, i;
      }
      return mw(e, t), e.prototype.handler = function (t) {
        var e = ux[t.type];
        if (e === zw && (this.started = !0), this.started) {
          var i = mx.call(this, t, e);
          e & (Gw | Ww) && i[0].length - i[1].length == 0 && (this.started = !1), this.callback(this.manager, e, {
            pointers: i[0],
            changedPointers: i[1],
            pointerType: Lw,
            srcEvent: t
          });
        }
      }, e;
    }(gk);
  function mx(t, e) {
    var i = Ck(t.touches),
      n = Ck(t.changedTouches);
    return e & (Gw | Ww) && (i = Sk(i.concat(n), "identifier", !0)), [i, n];
  }
  function fx(t, e, i) {
    var n = "DEPRECATED METHOD: " + e + "\n" + i + " AT \n";
    return function () {
      var e = new Error("get-stack-trace"),
        i = e && e.stack ? e.stack.replace(/^[^\(]+?[\n$]/gm, "").replace(/^\s+at\s+/gm, "").replace(/^Object.<anonymous>\s*\(/gm, "{anonymous}()@") : "Unknown Stack Trace",
        o = window.console && (window.console.warn || window.console.log);
      return o && o.call(window.console, n, i), t.apply(this, arguments);
    };
  }
  var vx = fx(function (t, e, i) {
      for (var n = Object.keys(e), o = 0; o < n.length;) (!i || i && void 0 === t[n[o]]) && (t[n[o]] = e[n[o]]), o++;
      return t;
    }, "extend", "Use `assign`."),
    gx = fx(function (t, e) {
      return vx(t, e, !0);
    }, "merge", "Use `assign`.");
  function yx(t, e, i) {
    var n,
      o = e.prototype;
    (n = t.prototype = Object.create(o)).constructor = t, n._super = o, i && gw(n, i);
  }
  function bx(t, e) {
    return function () {
      return t.apply(e, arguments);
    };
  }
  var wx = function () {
    var t = function (t, e) {
      return void 0 === e && (e = {}), new hx(t, pw({
        recognizers: ax.concat()
      }, e));
    };
    return t.VERSION = "2.0.17-rc", t.DIRECTION_ALL = Zw, t.DIRECTION_DOWN = qw, t.DIRECTION_LEFT = Vw, t.DIRECTION_RIGHT = Uw, t.DIRECTION_UP = Xw, t.DIRECTION_HORIZONTAL = Kw, t.DIRECTION_VERTICAL = $w, t.DIRECTION_NONE = Yw, t.DIRECTION_DOWN = qw, t.INPUT_START = zw, t.INPUT_MOVE = Hw, t.INPUT_END = Gw, t.INPUT_CANCEL = Ww, t.STATE_POSSIBLE = Hk, t.STATE_BEGAN = Gk, t.STATE_CHANGED = Wk, t.STATE_ENDED = Yk, t.STATE_RECOGNIZED = Vk, t.STATE_CANCELLED = Uk, t.STATE_FAILED = Xk, t.Manager = hx, t.Input = gk, t.TouchAction = nk, t.TouchInput = Ok, t.MouseInput = Mk, t.PointerEventInput = _k, t.TouchMouseInput = Bk, t.SingleTouchInput = px, t.Recognizer = Zk, t.AttrRecognizer = Jk, t.Tap = Qk, t.Pan = ex, t.Swipe = ix, t.Pinch = nx, t.Rotate = ox, t.Press = rx, t.on = mk, t.off = fk, t.each = tk, t.merge = gx, t.extend = vx, t.bindFn = bx, t.assign = gw, t.inherit = yx, t.bindFn = bx, t.prefixed = Cw, t.toArray = Ck, t.inArray = yk, t.uniqueArray = Sk, t.splitStr = pk, t.boolOrFn = ek, t.hasParent = ok, t.addEventListeners = mk, t.removeEventListeners = fk, t.defaults = gw({}, sx, {
      preset: ax
    }), t;
  }();
  wx.defaults;
  var kx = wx;
  function xx(t, e) {
    var i = Wm(t);
    if (mp) {
      var n = mp(t);
      e && (n = Cp(n).call(n, function (e) {
        return Lp(t, e).enumerable;
      })), i.push.apply(i, n);
    }
    return i;
  }
  function _x(t) {
    for (var e = 1; e < arguments.length; e++) {
      var i,
        n,
        o = null != arguments[e] ? arguments[e] : {};
      e % 2 ? hp(i = xx(Object(o), !0)).call(i, function (e) {
        hm(t, e, o[e]);
      }) : Zp ? lm(t, Zp(o)) : hp(n = xx(Object(o))).call(n, function (e) {
        Vm(t, e, Lp(o, e));
      });
    }
    return t;
  }
  function Cx(t, e) {
    var i = void 0 !== Ev && Hf(t) || t["@@iterator"];
    if (!i) {
      if (Cd(t) || (i = function (t, e) {
        var i;
        if (!t) return;
        if ("string" == typeof t) return Sx(t, e);
        var n = zv(i = Object.prototype.toString.call(t)).call(i, 8, -1);
        "Object" === n && t.constructor && (n = t.constructor.name);
        if ("Map" === n || "Set" === n) return Rf(t);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Sx(t, e);
      }(t)) || e && t && "number" == typeof t.length) {
        i && (t = i);
        var n = 0,
          o = function () {};
        return {
          s: o,
          n: function () {
            return n >= t.length ? {
              done: !0
            } : {
              done: !1,
              value: t[n++]
            };
          },
          e: function (t) {
            throw t;
          },
          f: o
        };
      }
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var r,
      s = !0,
      a = !1;
    return {
      s: function () {
        i = i.call(t);
      },
      n: function () {
        var t = i.next();
        return s = t.done, t;
      },
      e: function (t) {
        a = !0, r = t;
      },
      f: function () {
        try {
          s || null == i.return || i.return();
        } finally {
          if (a) throw r;
        }
      }
    };
  }
  function Sx(t, e) {
    (null == e || e > t.length) && (e = t.length);
    for (var i = 0, n = new Array(e); i < e; i++) n[i] = t[i];
    return n;
  }
  var Dx = Ev("DELETE");
  function Tx() {
    var t = Ox.apply(void 0, arguments);
    return Ax(t), t;
  }
  function Ox() {
    for (var t = arguments.length, e = new Array(t), i = 0; i < t; i++) e[i] = arguments[i];
    if (e.length < 2) return e[0];
    var n;
    if (e.length > 2) return Ox.apply(void 0, jv(n = [Tx(e[0], e[1])]).call(n, Tv(zv(e).call(e, 2))));
    var o,
      r = e[0],
      s = e[1],
      a = Cx(Yv(s));
    try {
      for (a.s(); !(o = a.n()).done;) {
        var l = o.value;
        Object.prototype.propertyIsEnumerable.call(s, l) && (s[l] === Dx ? delete r[l] : null === r[l] || null === s[l] || "object" !== kc(r[l]) || "object" !== kc(s[l]) || Cd(r[l]) || Cd(s[l]) ? r[l] = Ex(s[l]) : r[l] = Ox(r[l], s[l]));
      }
    } catch (t) {
      a.e(t);
    } finally {
      a.f();
    }
    return r;
  }
  function Ex(t) {
    return Cd(t) ? bm(t).call(t, function (t) {
      return Ex(t);
    }) : "object" === kc(t) && null !== t ? Ox({}, t) : t;
  }
  function Ax(t) {
    for (var e = 0, i = Wm(t); e < i.length; e++) {
      var n = i[e];
      t[n] === Dx ? delete t[n] : "object" === kc(t[n]) && null !== t[n] && Ax(t[n]);
    }
  }
  var Ix = "undefined" != typeof window ? window.Hammer || kx : function () {
    return function () {
      var t = function () {};
      return {
        on: t,
        off: t,
        destroy: t,
        emit: t,
        get: function () {
          return {
            set: t
          };
        }
      };
    }();
  };
  function Px(t) {
    var e,
      i = this;
    this._cleanupQueue = [], this.active = !1, this._dom = {
      container: t,
      overlay: document.createElement("div")
    }, this._dom.overlay.classList.add("vis-overlay"), this._dom.container.appendChild(this._dom.overlay), this._cleanupQueue.push(function () {
      i._dom.overlay.parentNode.removeChild(i._dom.overlay);
    });
    var n = Ix(this._dom.overlay);
    n.on("tap", Dd(e = this._onTapOverlay).call(e, this)), this._cleanupQueue.push(function () {
      n.destroy();
    });
    var o = ["tap", "doubletap", "press", "pinch", "pan", "panstart", "panmove", "panend"];
    hp(o).call(o, function (t) {
      n.on(t, function (t) {
        t.srcEvent.stopPropagation();
      });
    }), document && document.body && (this._onClick = function (e) {
      (function (t, e) {
        for (; t;) {
          if (t === e) return !0;
          t = t.parentNode;
        }
        return !1;
      })(e.target, t) || i.deactivate();
    }, document.body.addEventListener("click", this._onClick), this._cleanupQueue.push(function () {
      document.body.removeEventListener("click", i._onClick);
    })), this._escListener = function (t) {
      ("key" in t ? "Escape" === t.key : 27 === t.keyCode) && i.deactivate();
    };
  }
  dw(Px.prototype), Px.current = null, Px.prototype.destroy = function () {
    var t, e;
    this.deactivate();
    var i,
      n = Cx(ug(t = zg(e = this._cleanupQueue).call(e, 0)).call(t));
    try {
      for (n.s(); !(i = n.n()).done;) {
        (0, i.value)();
      }
    } catch (t) {
      n.e(t);
    } finally {
      n.f();
    }
  }, Px.prototype.activate = function () {
    Px.current && Px.current.deactivate(), Px.current = this, this.active = !0, this._dom.overlay.style.display = "none", this._dom.container.classList.add("vis-active"), this.emit("change"), this.emit("activate"), document.body.addEventListener("keydown", this._escListener);
  }, Px.prototype.deactivate = function () {
    this.active = !1, this._dom.overlay.style.display = "block", this._dom.container.classList.remove("vis-active"), document.body.removeEventListener("keydown", this._escListener), this.emit("change"), this.emit("deactivate");
  }, Px.prototype._onTapOverlay = function (t) {
    this.activate(), t.srcEvent.stopPropagation();
  };
  var Mx = /^\/?Date\((-?\d+)/i,
    Nx = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,
    Fx = /^#?([a-f\d])([a-f\d])([a-f\d])$/i,
    Rx = /^rgb\( *(1?\d{1,2}|2[0-4]\d|25[0-5]) *, *(1?\d{1,2}|2[0-4]\d|25[0-5]) *, *(1?\d{1,2}|2[0-4]\d|25[0-5]) *\)$/i,
    Lx = /^rgba\( *(1?\d{1,2}|2[0-4]\d|25[0-5]) *, *(1?\d{1,2}|2[0-4]\d|25[0-5]) *, *(1?\d{1,2}|2[0-4]\d|25[0-5]) *, *([01]|0?\.\d+) *\)$/i;
  function jx(t) {
    return t instanceof Number || "number" == typeof t;
  }
  function Bx(t) {
    return t instanceof String || "string" == typeof t;
  }
  function zx(t) {
    return "object" === kc(t) && null !== t;
  }
  function Hx(t, e, i, n) {
    var o = !1;
    !0 === n && (o = null === e[i] && void 0 !== t[i]), o ? delete t[i] : t[i] = e[i];
  }
  var Gx = oy;
  function Wx(t, e) {
    var i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
      n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
    for (var o in e) if (Object.prototype.hasOwnProperty.call(e, o) || !0 === i) if ("object" === kc(e[o]) && null !== e[o] && Iy(e[o]) === Object.prototype) void 0 === t[o] ? t[o] = Wx({}, e[o], i) : "object" === kc(t[o]) && null !== t[o] && Iy(t[o]) === Object.prototype ? Wx(t[o], e[o], i) : Hx(t, e, o, n);else if (Cd(e[o])) {
      var r;
      t[o] = zv(r = e[o]).call(r);
    } else Hx(t, e, o, n);
    return t;
  }
  function Yx(t) {
    var e = kc(t);
    return "object" === e ? null === t ? "null" : t instanceof Boolean ? "Boolean" : t instanceof Number ? "Number" : t instanceof String ? "String" : Cd(t) ? "Array" : t instanceof Date ? "Date" : "Object" : "number" === e ? "Number" : "boolean" === e ? "Boolean" : "string" === e ? "String" : void 0 === e ? "undefined" : e;
  }
  function Vx(t, e) {
    var i;
    return jv(i = []).call(i, Tv(t), [e]);
  }
  function Ux(t) {
    return zv(t).call(t);
  }
  var Xx = Wy;
  var qx = {
    asBoolean: function (t, e) {
      return "function" == typeof t && (t = t()), null != t ? 0 != t : e || null;
    },
    asNumber: function (t, e) {
      return "function" == typeof t && (t = t()), null != t ? Number(t) || e || null : e || null;
    },
    asString: function (t, e) {
      return "function" == typeof t && (t = t()), null != t ? String(t) : e || null;
    },
    asSize: function (t, e) {
      return "function" == typeof t && (t = t()), Bx(t) ? t : jx(t) ? t + "px" : e || null;
    },
    asElement: function (t, e) {
      return "function" == typeof t && (t = t()), t || e || null;
    }
  };
  function Kx(t) {
    var e;
    switch (t.length) {
      case 3:
      case 4:
        return (e = Fx.exec(t)) ? {
          r: mb(e[1] + e[1], 16),
          g: mb(e[2] + e[2], 16),
          b: mb(e[3] + e[3], 16)
        } : null;
      case 6:
      case 7:
        return (e = Nx.exec(t)) ? {
          r: mb(e[1], 16),
          g: mb(e[2], 16),
          b: mb(e[3], 16)
        } : null;
      default:
        return null;
    }
  }
  function $x(t, e, i) {
    var n;
    return "#" + zv(n = ((1 << 24) + (t << 16) + (e << 8) + i).toString(16)).call(n, 1);
  }
  function Zx(t, e, i) {
    t /= 255, e /= 255, i /= 255;
    var n = Math.min(t, Math.min(e, i)),
      o = Math.max(t, Math.max(e, i));
    return n === o ? {
      h: 0,
      s: 0,
      v: n
    } : {
      h: 60 * ((t === n ? 3 : i === n ? 1 : 5) - (t === n ? e - i : i === n ? t - e : i - t) / (o - n)) / 360,
      s: (o - n) / o,
      v: o
    };
  }
  var Qx = {
    split: function (t) {
      var e,
        i = {};
      return hp(e = t.split(";")).call(e, function (t) {
        if ("" != Hb(t).call(t)) {
          var e,
            n,
            o = t.split(":"),
            r = Hb(e = o[0]).call(e),
            s = Hb(n = o[1]).call(n);
          i[r] = s;
        }
      }), i;
    },
    join: function (t) {
      var e;
      return bm(e = Wm(t)).call(e, function (e) {
        return e + ": " + t[e];
      }).join("; ");
    }
  };
  function Jx(t, e, i) {
    var n,
      o,
      r,
      s = Math.floor(6 * t),
      a = 6 * t - s,
      l = i * (1 - e),
      h = i * (1 - a * e),
      u = i * (1 - (1 - a) * e);
    switch (s % 6) {
      case 0:
        n = i, o = u, r = l;
        break;
      case 1:
        n = h, o = i, r = l;
        break;
      case 2:
        n = l, o = i, r = u;
        break;
      case 3:
        n = l, o = h, r = i;
        break;
      case 4:
        n = u, o = l, r = i;
        break;
      case 5:
        n = i, o = l, r = h;
    }
    return {
      r: Math.floor(255 * n),
      g: Math.floor(255 * o),
      b: Math.floor(255 * r)
    };
  }
  function t_(t, e, i) {
    var n = Jx(t, e, i);
    return $x(n.r, n.g, n.b);
  }
  function e_(t) {
    var e = Kx(t);
    if (!e) throw new TypeError("'".concat(t, "' is not a valid color."));
    return Zx(e.r, e.g, e.b);
  }
  function i_(t) {
    return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(t);
  }
  function n_(t) {
    return Rx.test(t);
  }
  function o_(t) {
    return Lx.test(t);
  }
  function r_(t) {
    if (null === t || "object" !== kc(t)) return null;
    if (t instanceof Element) return t;
    var e = Wb(t);
    for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && "object" == kc(t[i]) && (e[i] = r_(t[i]));
    return e;
  }
  var s_ = {
      black: "#000000",
      navy: "#000080",
      darkblue: "#00008B",
      mediumblue: "#0000CD",
      blue: "#0000FF",
      darkgreen: "#006400",
      green: "#008000",
      teal: "#008080",
      darkcyan: "#008B8B",
      deepskyblue: "#00BFFF",
      darkturquoise: "#00CED1",
      mediumspringgreen: "#00FA9A",
      lime: "#00FF00",
      springgreen: "#00FF7F",
      aqua: "#00FFFF",
      cyan: "#00FFFF",
      midnightblue: "#191970",
      dodgerblue: "#1E90FF",
      lightseagreen: "#20B2AA",
      forestgreen: "#228B22",
      seagreen: "#2E8B57",
      darkslategray: "#2F4F4F",
      limegreen: "#32CD32",
      mediumseagreen: "#3CB371",
      turquoise: "#40E0D0",
      royalblue: "#4169E1",
      steelblue: "#4682B4",
      darkslateblue: "#483D8B",
      mediumturquoise: "#48D1CC",
      indigo: "#4B0082",
      darkolivegreen: "#556B2F",
      cadetblue: "#5F9EA0",
      cornflowerblue: "#6495ED",
      mediumaquamarine: "#66CDAA",
      dimgray: "#696969",
      slateblue: "#6A5ACD",
      olivedrab: "#6B8E23",
      slategray: "#708090",
      lightslategray: "#778899",
      mediumslateblue: "#7B68EE",
      lawngreen: "#7CFC00",
      chartreuse: "#7FFF00",
      aquamarine: "#7FFFD4",
      maroon: "#800000",
      purple: "#800080",
      olive: "#808000",
      gray: "#808080",
      skyblue: "#87CEEB",
      lightskyblue: "#87CEFA",
      blueviolet: "#8A2BE2",
      darkred: "#8B0000",
      darkmagenta: "#8B008B",
      saddlebrown: "#8B4513",
      darkseagreen: "#8FBC8F",
      lightgreen: "#90EE90",
      mediumpurple: "#9370D8",
      darkviolet: "#9400D3",
      palegreen: "#98FB98",
      darkorchid: "#9932CC",
      yellowgreen: "#9ACD32",
      sienna: "#A0522D",
      brown: "#A52A2A",
      darkgray: "#A9A9A9",
      lightblue: "#ADD8E6",
      greenyellow: "#ADFF2F",
      paleturquoise: "#AFEEEE",
      lightsteelblue: "#B0C4DE",
      powderblue: "#B0E0E6",
      firebrick: "#B22222",
      darkgoldenrod: "#B8860B",
      mediumorchid: "#BA55D3",
      rosybrown: "#BC8F8F",
      darkkhaki: "#BDB76B",
      silver: "#C0C0C0",
      mediumvioletred: "#C71585",
      indianred: "#CD5C5C",
      peru: "#CD853F",
      chocolate: "#D2691E",
      tan: "#D2B48C",
      lightgrey: "#D3D3D3",
      palevioletred: "#D87093",
      thistle: "#D8BFD8",
      orchid: "#DA70D6",
      goldenrod: "#DAA520",
      crimson: "#DC143C",
      gainsboro: "#DCDCDC",
      plum: "#DDA0DD",
      burlywood: "#DEB887",
      lightcyan: "#E0FFFF",
      lavender: "#E6E6FA",
      darksalmon: "#E9967A",
      violet: "#EE82EE",
      palegoldenrod: "#EEE8AA",
      lightcoral: "#F08080",
      khaki: "#F0E68C",
      aliceblue: "#F0F8FF",
      honeydew: "#F0FFF0",
      azure: "#F0FFFF",
      sandybrown: "#F4A460",
      wheat: "#F5DEB3",
      beige: "#F5F5DC",
      whitesmoke: "#F5F5F5",
      mintcream: "#F5FFFA",
      ghostwhite: "#F8F8FF",
      salmon: "#FA8072",
      antiquewhite: "#FAEBD7",
      linen: "#FAF0E6",
      lightgoldenrodyellow: "#FAFAD2",
      oldlace: "#FDF5E6",
      red: "#FF0000",
      fuchsia: "#FF00FF",
      magenta: "#FF00FF",
      deeppink: "#FF1493",
      orangered: "#FF4500",
      tomato: "#FF6347",
      hotpink: "#FF69B4",
      coral: "#FF7F50",
      darkorange: "#FF8C00",
      lightsalmon: "#FFA07A",
      orange: "#FFA500",
      lightpink: "#FFB6C1",
      pink: "#FFC0CB",
      gold: "#FFD700",
      peachpuff: "#FFDAB9",
      navajowhite: "#FFDEAD",
      moccasin: "#FFE4B5",
      bisque: "#FFE4C4",
      mistyrose: "#FFE4E1",
      blanchedalmond: "#FFEBCD",
      papayawhip: "#FFEFD5",
      lavenderblush: "#FFF0F5",
      seashell: "#FFF5EE",
      cornsilk: "#FFF8DC",
      lemonchiffon: "#FFFACD",
      floralwhite: "#FFFAF0",
      snow: "#FFFAFA",
      yellow: "#FFFF00",
      lightyellow: "#FFFFE0",
      ivory: "#FFFFF0",
      white: "#FFFFFF"
    },
    a_ = function () {
      function t() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1;
        zo(this, t), this.pixelRatio = e, this.generated = !1, this.centerCoordinates = {
          x: 144.5,
          y: 144.5
        }, this.r = 289 * .49, this.color = {
          r: 255,
          g: 255,
          b: 255,
          a: 1
        }, this.hueCircle = void 0, this.initialColor = {
          r: 255,
          g: 255,
          b: 255,
          a: 1
        }, this.previousColor = void 0, this.applied = !1, this.updateCallback = function () {}, this.closeCallback = function () {}, this._create();
      }
      return Ac(t, [{
        key: "insertTo",
        value: function (t) {
          void 0 !== this.hammer && (this.hammer.destroy(), this.hammer = void 0), this.container = t, this.container.appendChild(this.frame), this._bindHammer(), this._setSize();
        }
      }, {
        key: "setUpdateCallback",
        value: function (t) {
          if ("function" != typeof t) throw new Error("Function attempted to set as colorPicker update callback is not a function.");
          this.updateCallback = t;
        }
      }, {
        key: "setCloseCallback",
        value: function (t) {
          if ("function" != typeof t) throw new Error("Function attempted to set as colorPicker closing callback is not a function.");
          this.closeCallback = t;
        }
      }, {
        key: "_isColorString",
        value: function (t) {
          if ("string" == typeof t) return s_[t];
        }
      }, {
        key: "setColor",
        value: function (t) {
          var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
          if ("none" !== t) {
            var i,
              n = this._isColorString(t);
            if (void 0 !== n && (t = n), !0 === Bx(t)) {
              if (!0 === n_(t)) {
                var o = t.substr(4).substr(0, t.length - 5).split(",");
                i = {
                  r: o[0],
                  g: o[1],
                  b: o[2],
                  a: 1
                };
              } else if (!0 === o_(t)) {
                var r = t.substr(5).substr(0, t.length - 6).split(",");
                i = {
                  r: r[0],
                  g: r[1],
                  b: r[2],
                  a: r[3]
                };
              } else if (!0 === i_(t)) {
                var s = Kx(t);
                i = {
                  r: s.r,
                  g: s.g,
                  b: s.b,
                  a: 1
                };
              }
            } else if (t instanceof Object && void 0 !== t.r && void 0 !== t.g && void 0 !== t.b) {
              var a = void 0 !== t.a ? t.a : "1.0";
              i = {
                r: t.r,
                g: t.g,
                b: t.b,
                a: a
              };
            }
            if (void 0 === i) throw new Error("Unknown color passed to the colorPicker. Supported are strings: rgb, hex, rgba. Object: rgb ({r:r,g:g,b:b,[a:a]}). Supplied: " + $b(t));
            this._setColor(i, e);
          }
        }
      }, {
        key: "show",
        value: function () {
          void 0 !== this.closeCallback && (this.closeCallback(), this.closeCallback = void 0), this.applied = !1, this.frame.style.display = "block", this._generateHueCircle();
        }
      }, {
        key: "_hide",
        value: function () {
          var t = this;
          !0 === (!(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0]) && (this.previousColor = oy({}, this.color)), !0 === this.applied && this.updateCallback(this.initialColor), this.frame.style.display = "none", qd(function () {
            void 0 !== t.closeCallback && (t.closeCallback(), t.closeCallback = void 0);
          }, 0);
        }
      }, {
        key: "_save",
        value: function () {
          this.updateCallback(this.color), this.applied = !1, this._hide();
        }
      }, {
        key: "_apply",
        value: function () {
          this.applied = !0, this.updateCallback(this.color), this._updatePicker(this.color);
        }
      }, {
        key: "_loadLast",
        value: function () {
          void 0 !== this.previousColor ? this.setColor(this.previousColor, !1) : alert("There is no last color to load...");
        }
      }, {
        key: "_setColor",
        value: function (t) {
          !0 === (!(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1]) && (this.initialColor = oy({}, t)), this.color = t;
          var e = Zx(t.r, t.g, t.b),
            i = 2 * Math.PI,
            n = this.r * e.s,
            o = this.centerCoordinates.x + n * Math.sin(i * e.h),
            r = this.centerCoordinates.y + n * Math.cos(i * e.h);
          this.colorPickerSelector.style.left = o - .5 * this.colorPickerSelector.clientWidth + "px", this.colorPickerSelector.style.top = r - .5 * this.colorPickerSelector.clientHeight + "px", this._updatePicker(t);
        }
      }, {
        key: "_setOpacity",
        value: function (t) {
          this.color.a = t / 100, this._updatePicker(this.color);
        }
      }, {
        key: "_setBrightness",
        value: function (t) {
          var e = Zx(this.color.r, this.color.g, this.color.b);
          e.v = t / 100;
          var i = Jx(e.h, e.s, e.v);
          i.a = this.color.a, this.color = i, this._updatePicker();
        }
      }, {
        key: "_updatePicker",
        value: function () {
          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.color,
            e = Zx(t.r, t.g, t.b),
            i = this.colorPickerCanvas.getContext("2d");
          void 0 === this.pixelRation && (this.pixelRatio = (window.devicePixelRatio || 1) / (i.webkitBackingStorePixelRatio || i.mozBackingStorePixelRatio || i.msBackingStorePixelRatio || i.oBackingStorePixelRatio || i.backingStorePixelRatio || 1)), i.setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);
          var n = this.colorPickerCanvas.clientWidth,
            o = this.colorPickerCanvas.clientHeight;
          i.clearRect(0, 0, n, o), i.putImageData(this.hueCircle, 0, 0), i.fillStyle = "rgba(0,0,0," + (1 - e.v) + ")", i.circle(this.centerCoordinates.x, this.centerCoordinates.y, this.r), hw(i).call(i), this.brightnessRange.value = 100 * e.v, this.opacityRange.value = 100 * t.a, this.initialColorDiv.style.backgroundColor = "rgba(" + this.initialColor.r + "," + this.initialColor.g + "," + this.initialColor.b + "," + this.initialColor.a + ")", this.newColorDiv.style.backgroundColor = "rgba(" + this.color.r + "," + this.color.g + "," + this.color.b + "," + this.color.a + ")";
        }
      }, {
        key: "_setSize",
        value: function () {
          this.colorPickerCanvas.style.width = "100%", this.colorPickerCanvas.style.height = "100%", this.colorPickerCanvas.width = 289 * this.pixelRatio, this.colorPickerCanvas.height = 289 * this.pixelRatio;
        }
      }, {
        key: "_create",
        value: function () {
          var t, e, i, n;
          if (this.frame = document.createElement("div"), this.frame.className = "vis-color-picker", this.colorPickerDiv = document.createElement("div"), this.colorPickerSelector = document.createElement("div"), this.colorPickerSelector.className = "vis-selector", this.colorPickerDiv.appendChild(this.colorPickerSelector), this.colorPickerCanvas = document.createElement("canvas"), this.colorPickerDiv.appendChild(this.colorPickerCanvas), this.colorPickerCanvas.getContext) {
            var o = this.colorPickerCanvas.getContext("2d");
            this.pixelRatio = (window.devicePixelRatio || 1) / (o.webkitBackingStorePixelRatio || o.mozBackingStorePixelRatio || o.msBackingStorePixelRatio || o.oBackingStorePixelRatio || o.backingStorePixelRatio || 1), this.colorPickerCanvas.getContext("2d").setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);
          } else {
            var r = document.createElement("DIV");
            r.style.color = "red", r.style.fontWeight = "bold", r.style.padding = "10px", r.innerText = "Error: your browser does not support HTML canvas", this.colorPickerCanvas.appendChild(r);
          }
          this.colorPickerDiv.className = "vis-color", this.opacityDiv = document.createElement("div"), this.opacityDiv.className = "vis-opacity", this.brightnessDiv = document.createElement("div"), this.brightnessDiv.className = "vis-brightness", this.arrowDiv = document.createElement("div"), this.arrowDiv.className = "vis-arrow", this.opacityRange = document.createElement("input");
          try {
            this.opacityRange.type = "range", this.opacityRange.min = "0", this.opacityRange.max = "100";
          } catch (t) {}
          this.opacityRange.value = "100", this.opacityRange.className = "vis-range", this.brightnessRange = document.createElement("input");
          try {
            this.brightnessRange.type = "range", this.brightnessRange.min = "0", this.brightnessRange.max = "100";
          } catch (t) {}
          this.brightnessRange.value = "100", this.brightnessRange.className = "vis-range", this.opacityDiv.appendChild(this.opacityRange), this.brightnessDiv.appendChild(this.brightnessRange);
          var s = this;
          this.opacityRange.onchange = function () {
            s._setOpacity(this.value);
          }, this.opacityRange.oninput = function () {
            s._setOpacity(this.value);
          }, this.brightnessRange.onchange = function () {
            s._setBrightness(this.value);
          }, this.brightnessRange.oninput = function () {
            s._setBrightness(this.value);
          }, this.brightnessLabel = document.createElement("div"), this.brightnessLabel.className = "vis-label vis-brightness", this.brightnessLabel.innerText = "brightness:", this.opacityLabel = document.createElement("div"), this.opacityLabel.className = "vis-label vis-opacity", this.opacityLabel.innerText = "opacity:", this.newColorDiv = document.createElement("div"), this.newColorDiv.className = "vis-new-color", this.newColorDiv.innerText = "new", this.initialColorDiv = document.createElement("div"), this.initialColorDiv.className = "vis-initial-color", this.initialColorDiv.innerText = "initial", this.cancelButton = document.createElement("div"), this.cancelButton.className = "vis-button vis-cancel", this.cancelButton.innerText = "cancel", this.cancelButton.onclick = Dd(t = this._hide).call(t, this, !1), this.applyButton = document.createElement("div"), this.applyButton.className = "vis-button vis-apply", this.applyButton.innerText = "apply", this.applyButton.onclick = Dd(e = this._apply).call(e, this), this.saveButton = document.createElement("div"), this.saveButton.className = "vis-button vis-save", this.saveButton.innerText = "save", this.saveButton.onclick = Dd(i = this._save).call(i, this), this.loadButton = document.createElement("div"), this.loadButton.className = "vis-button vis-load", this.loadButton.innerText = "load last", this.loadButton.onclick = Dd(n = this._loadLast).call(n, this), this.frame.appendChild(this.colorPickerDiv), this.frame.appendChild(this.arrowDiv), this.frame.appendChild(this.brightnessLabel), this.frame.appendChild(this.brightnessDiv), this.frame.appendChild(this.opacityLabel), this.frame.appendChild(this.opacityDiv), this.frame.appendChild(this.newColorDiv), this.frame.appendChild(this.initialColorDiv), this.frame.appendChild(this.cancelButton), this.frame.appendChild(this.applyButton), this.frame.appendChild(this.saveButton), this.frame.appendChild(this.loadButton);
        }
      }, {
        key: "_bindHammer",
        value: function () {
          var t = this;
          this.drag = {}, this.pinch = {}, this.hammer = new Ix(this.colorPickerCanvas), this.hammer.get("pinch").set({
            enable: !0
          }), this.hammer.on("hammer.input", function (e) {
            e.isFirst && t._moveSelector(e);
          }), this.hammer.on("tap", function (e) {
            t._moveSelector(e);
          }), this.hammer.on("panstart", function (e) {
            t._moveSelector(e);
          }), this.hammer.on("panmove", function (e) {
            t._moveSelector(e);
          }), this.hammer.on("panend", function (e) {
            t._moveSelector(e);
          });
        }
      }, {
        key: "_generateHueCircle",
        value: function () {
          if (!1 === this.generated) {
            var t = this.colorPickerCanvas.getContext("2d");
            void 0 === this.pixelRation && (this.pixelRatio = (window.devicePixelRatio || 1) / (t.webkitBackingStorePixelRatio || t.mozBackingStorePixelRatio || t.msBackingStorePixelRatio || t.oBackingStorePixelRatio || t.backingStorePixelRatio || 1)), t.setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);
            var e,
              i,
              n,
              o,
              r = this.colorPickerCanvas.clientWidth,
              s = this.colorPickerCanvas.clientHeight;
            t.clearRect(0, 0, r, s), this.centerCoordinates = {
              x: .5 * r,
              y: .5 * s
            }, this.r = .49 * r;
            var a,
              l = 2 * Math.PI / 360,
              h = 1 / this.r;
            for (n = 0; n < 360; n++) for (o = 0; o < this.r; o++) e = this.centerCoordinates.x + o * Math.sin(l * n), i = this.centerCoordinates.y + o * Math.cos(l * n), a = Jx(.002777777777777778 * n, o * h, 1), t.fillStyle = "rgb(" + a.r + "," + a.g + "," + a.b + ")", t.fillRect(e - .5, i - .5, 2, 2);
            t.strokeStyle = "rgba(0,0,0,1)", t.circle(this.centerCoordinates.x, this.centerCoordinates.y, this.r), t.stroke(), this.hueCircle = t.getImageData(0, 0, r, s);
          }
          this.generated = !0;
        }
      }, {
        key: "_moveSelector",
        value: function (t) {
          var e = this.colorPickerDiv.getBoundingClientRect(),
            i = t.center.x - e.left,
            n = t.center.y - e.top,
            o = .5 * this.colorPickerDiv.clientHeight,
            r = .5 * this.colorPickerDiv.clientWidth,
            s = i - r,
            a = n - o,
            l = Math.atan2(s, a),
            h = .98 * Math.min(Math.sqrt(s * s + a * a), r),
            u = Math.cos(l) * h + o,
            c = Math.sin(l) * h + r;
          this.colorPickerSelector.style.top = u - .5 * this.colorPickerSelector.clientHeight + "px", this.colorPickerSelector.style.left = c - .5 * this.colorPickerSelector.clientWidth + "px";
          var d = l / (2 * Math.PI);
          d = d < 0 ? d + 1 : d;
          var p = h / this.r,
            m = Zx(this.color.r, this.color.g, this.color.b);
          m.h = d, m.s = p;
          var f = Jx(m.h, m.s, m.v);
          f.a = this.color.a, this.color = f, this.initialColorDiv.style.backgroundColor = "rgba(" + this.initialColor.r + "," + this.initialColor.g + "," + this.initialColor.b + "," + this.initialColor.a + ")", this.newColorDiv.style.backgroundColor = "rgba(" + this.color.r + "," + this.color.g + "," + this.color.b + "," + this.color.a + ")";
        }
      }]), t;
    }();
  function l_() {
    for (var t = arguments.length, e = new Array(t), i = 0; i < t; i++) e[i] = arguments[i];
    if (e.length < 1) throw new TypeError("Invalid arguments.");
    if (1 === e.length) return document.createTextNode(e[0]);
    var n = document.createElement(e[0]);
    return n.appendChild(l_.apply(void 0, Tv(zv(e).call(e, 1)))), n;
  }
  var h_,
    u_ = function () {
      function t(e, i, n) {
        var o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1,
          r = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : function () {
            return !1;
          };
        zo(this, t), this.parent = e, this.changedOptions = [], this.container = i, this.allowCreation = !1, this.hideOption = r, this.options = {}, this.initialized = !1, this.popupCounter = 0, this.defaultOptions = {
          enabled: !1,
          filter: !0,
          container: void 0,
          showButton: !0
        }, oy(this.options, this.defaultOptions), this.configureOptions = n, this.moduleOptions = {}, this.domElements = [], this.popupDiv = {}, this.popupLimit = 5, this.popupHistory = {}, this.colorPicker = new a_(o), this.wrapper = void 0;
      }
      return Ac(t, [{
        key: "setOptions",
        value: function (t) {
          if (void 0 !== t) {
            this.popupHistory = {}, this._removePopup();
            var e = !0;
            if ("string" == typeof t) this.options.filter = t;else if (Cd(t)) this.options.filter = t.join();else if ("object" === kc(t)) {
              if (null == t) throw new TypeError("options cannot be null");
              void 0 !== t.container && (this.options.container = t.container), void 0 !== Cp(t) && (this.options.filter = Cp(t)), void 0 !== t.showButton && (this.options.showButton = t.showButton), void 0 !== t.enabled && (e = t.enabled);
            } else "boolean" == typeof t ? (this.options.filter = !0, e = t) : "function" == typeof t && (this.options.filter = t, e = !0);
            !1 === Cp(this.options) && (e = !1), this.options.enabled = e;
          }
          this._clean();
        }
      }, {
        key: "setModuleOptions",
        value: function (t) {
          this.moduleOptions = t, !0 === this.options.enabled && (this._clean(), void 0 !== this.options.container && (this.container = this.options.container), this._create());
        }
      }, {
        key: "_create",
        value: function () {
          this._clean(), this.changedOptions = [];
          var t = Cp(this.options),
            e = 0,
            i = !1;
          for (var n in this.configureOptions) Object.prototype.hasOwnProperty.call(this.configureOptions, n) && (this.allowCreation = !1, i = !1, "function" == typeof t ? i = (i = t(n, [])) || this._handleObject(this.configureOptions[n], [n], !0) : !0 !== t && -1 === Ob(t).call(t, n) || (i = !0), !1 !== i && (this.allowCreation = !0, e > 0 && this._makeItem([]), this._makeHeader(n), this._handleObject(this.configureOptions[n], [n])), e++);
          this._makeButton(), this._push();
        }
      }, {
        key: "_push",
        value: function () {
          this.wrapper = document.createElement("div"), this.wrapper.className = "vis-configuration-wrapper", this.container.appendChild(this.wrapper);
          for (var t = 0; t < this.domElements.length; t++) this.wrapper.appendChild(this.domElements[t]);
          this._showPopupIfNeeded();
        }
      }, {
        key: "_clean",
        value: function () {
          for (var t = 0; t < this.domElements.length; t++) this.wrapper.removeChild(this.domElements[t]);
          void 0 !== this.wrapper && (this.container.removeChild(this.wrapper), this.wrapper = void 0), this.domElements = [], this._removePopup();
        }
      }, {
        key: "_getValue",
        value: function (t) {
          for (var e = this.moduleOptions, i = 0; i < t.length; i++) {
            if (void 0 === e[t[i]]) {
              e = void 0;
              break;
            }
            e = e[t[i]];
          }
          return e;
        }
      }, {
        key: "_makeItem",
        value: function (t) {
          if (!0 === this.allowCreation) {
            var e = document.createElement("div");
            e.className = "vis-configuration vis-config-item vis-config-s" + t.length;
            for (var i = arguments.length, n = new Array(i > 1 ? i - 1 : 0), o = 1; o < i; o++) n[o - 1] = arguments[o];
            return hp(n).call(n, function (t) {
              e.appendChild(t);
            }), this.domElements.push(e), this.domElements.length;
          }
          return 0;
        }
      }, {
        key: "_makeHeader",
        value: function (t) {
          var e = document.createElement("div");
          e.className = "vis-configuration vis-config-header", e.innerText = t, this._makeItem([], e);
        }
      }, {
        key: "_makeLabel",
        value: function (t, e) {
          var i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
            n = document.createElement("div");
          if (n.className = "vis-configuration vis-config-label vis-config-s" + e.length, !0 === i) {
            for (; n.firstChild;) n.removeChild(n.firstChild);
            n.appendChild(l_("i", "b", t));
          } else n.innerText = t + ":";
          return n;
        }
      }, {
        key: "_makeDropdown",
        value: function (t, e, i) {
          var n = document.createElement("select");
          n.className = "vis-configuration vis-config-select";
          var o = 0;
          void 0 !== e && -1 !== Ob(t).call(t, e) && (o = Ob(t).call(t, e));
          for (var r = 0; r < t.length; r++) {
            var s = document.createElement("option");
            s.value = t[r], r === o && (s.selected = "selected"), s.innerText = t[r], n.appendChild(s);
          }
          var a = this;
          n.onchange = function () {
            a._update(this.value, i);
          };
          var l = this._makeLabel(i[i.length - 1], i);
          this._makeItem(i, l, n);
        }
      }, {
        key: "_makeRange",
        value: function (t, e, i) {
          var n = t[0],
            o = t[1],
            r = t[2],
            s = t[3],
            a = document.createElement("input");
          a.className = "vis-configuration vis-config-range";
          try {
            a.type = "range", a.min = o, a.max = r;
          } catch (t) {}
          a.step = s;
          var l = "",
            h = 0;
          if (void 0 !== e) {
            var u = 1.2;
            e < 0 && e * u < o ? (a.min = Math.ceil(e * u), h = a.min, l = "range increased") : e / u < o && (a.min = Math.ceil(e / u), h = a.min, l = "range increased"), e * u > r && 1 !== r && (a.max = Math.ceil(e * u), h = a.max, l = "range increased"), a.value = e;
          } else a.value = n;
          var c = document.createElement("input");
          c.className = "vis-configuration vis-config-rangeinput", c.value = a.value;
          var d = this;
          a.onchange = function () {
            c.value = this.value, d._update(Number(this.value), i);
          }, a.oninput = function () {
            c.value = this.value;
          };
          var p = this._makeLabel(i[i.length - 1], i),
            m = this._makeItem(i, p, a, c);
          "" !== l && this.popupHistory[m] !== h && (this.popupHistory[m] = h, this._setupPopup(l, m));
        }
      }, {
        key: "_makeButton",
        value: function () {
          var t = this;
          if (!0 === this.options.showButton) {
            var e = document.createElement("div");
            e.className = "vis-configuration vis-config-button", e.innerText = "generate options", e.onclick = function () {
              t._printOptions();
            }, e.onmouseover = function () {
              e.className = "vis-configuration vis-config-button hover";
            }, e.onmouseout = function () {
              e.className = "vis-configuration vis-config-button";
            }, this.optionsContainer = document.createElement("div"), this.optionsContainer.className = "vis-configuration vis-config-option-container", this.domElements.push(this.optionsContainer), this.domElements.push(e);
          }
        }
      }, {
        key: "_setupPopup",
        value: function (t, e) {
          var i = this;
          if (!0 === this.initialized && !0 === this.allowCreation && this.popupCounter < this.popupLimit) {
            var n = document.createElement("div");
            n.id = "vis-configuration-popup", n.className = "vis-configuration-popup", n.innerText = t, n.onclick = function () {
              i._removePopup();
            }, this.popupCounter += 1, this.popupDiv = {
              html: n,
              index: e
            };
          }
        }
      }, {
        key: "_removePopup",
        value: function () {
          void 0 !== this.popupDiv.html && (this.popupDiv.html.parentNode.removeChild(this.popupDiv.html), clearTimeout(this.popupDiv.hideTimeout), clearTimeout(this.popupDiv.deleteTimeout), this.popupDiv = {});
        }
      }, {
        key: "_showPopupIfNeeded",
        value: function () {
          var t = this;
          if (void 0 !== this.popupDiv.html) {
            var e = this.domElements[this.popupDiv.index].getBoundingClientRect();
            this.popupDiv.html.style.left = e.left + "px", this.popupDiv.html.style.top = e.top - 30 + "px", document.body.appendChild(this.popupDiv.html), this.popupDiv.hideTimeout = qd(function () {
              t.popupDiv.html.style.opacity = 0;
            }, 1500), this.popupDiv.deleteTimeout = qd(function () {
              t._removePopup();
            }, 1800);
          }
        }
      }, {
        key: "_makeCheckbox",
        value: function (t, e, i) {
          var n = document.createElement("input");
          n.type = "checkbox", n.className = "vis-configuration vis-config-checkbox", n.checked = t, void 0 !== e && (n.checked = e, e !== t && ("object" === kc(t) ? e !== t.enabled && this.changedOptions.push({
            path: i,
            value: e
          }) : this.changedOptions.push({
            path: i,
            value: e
          })));
          var o = this;
          n.onchange = function () {
            o._update(this.checked, i);
          };
          var r = this._makeLabel(i[i.length - 1], i);
          this._makeItem(i, r, n);
        }
      }, {
        key: "_makeTextInput",
        value: function (t, e, i) {
          var n = document.createElement("input");
          n.type = "text", n.className = "vis-configuration vis-config-text", n.value = e, e !== t && this.changedOptions.push({
            path: i,
            value: e
          });
          var o = this;
          n.onchange = function () {
            o._update(this.value, i);
          };
          var r = this._makeLabel(i[i.length - 1], i);
          this._makeItem(i, r, n);
        }
      }, {
        key: "_makeColorField",
        value: function (t, e, i) {
          var n = this,
            o = t[1],
            r = document.createElement("div");
          "none" !== (e = void 0 === e ? o : e) ? (r.className = "vis-configuration vis-config-colorBlock", r.style.backgroundColor = e) : r.className = "vis-configuration vis-config-colorBlock none", e = void 0 === e ? o : e, r.onclick = function () {
            n._showColorPicker(e, r, i);
          };
          var s = this._makeLabel(i[i.length - 1], i);
          this._makeItem(i, s, r);
        }
      }, {
        key: "_showColorPicker",
        value: function (t, e, i) {
          var n = this;
          e.onclick = function () {}, this.colorPicker.insertTo(e), this.colorPicker.show(), this.colorPicker.setColor(t), this.colorPicker.setUpdateCallback(function (t) {
            var o = "rgba(" + t.r + "," + t.g + "," + t.b + "," + t.a + ")";
            e.style.backgroundColor = o, n._update(o, i);
          }), this.colorPicker.setCloseCallback(function () {
            e.onclick = function () {
              n._showColorPicker(t, e, i);
            };
          });
        }
      }, {
        key: "_handleObject",
        value: function (t) {
          var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
            i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
            n = !1,
            o = Cp(this.options),
            r = !1;
          for (var s in t) if (Object.prototype.hasOwnProperty.call(t, s)) {
            n = !0;
            var a = t[s],
              l = Vx(e, s);
            if ("function" == typeof o && !1 === (n = o(s, e)) && !Cd(a) && "string" != typeof a && "boolean" != typeof a && a instanceof Object && (this.allowCreation = !1, n = this._handleObject(a, l, !0), this.allowCreation = !1 === i), !1 !== n) {
              r = !0;
              var h = this._getValue(l);
              if (Cd(a)) this._handleArray(a, h, l);else if ("string" == typeof a) this._makeTextInput(a, h, l);else if ("boolean" == typeof a) this._makeCheckbox(a, h, l);else if (a instanceof Object) {
                if (!this.hideOption(e, s, this.moduleOptions)) if (void 0 !== a.enabled) {
                  var u = Vx(l, "enabled"),
                    c = this._getValue(u);
                  if (!0 === c) {
                    var d = this._makeLabel(s, l, !0);
                    this._makeItem(l, d), r = this._handleObject(a, l) || r;
                  } else this._makeCheckbox(a, c, l);
                } else {
                  var p = this._makeLabel(s, l, !0);
                  this._makeItem(l, p), r = this._handleObject(a, l) || r;
                }
              } else console.error("dont know how to handle", a, s, l);
            }
          }
          return r;
        }
      }, {
        key: "_handleArray",
        value: function (t, e, i) {
          "string" == typeof t[0] && "color" === t[0] ? (this._makeColorField(t, e, i), t[1] !== e && this.changedOptions.push({
            path: i,
            value: e
          })) : "string" == typeof t[0] ? (this._makeDropdown(t, e, i), t[0] !== e && this.changedOptions.push({
            path: i,
            value: e
          })) : "number" == typeof t[0] && (this._makeRange(t, e, i), t[0] !== e && this.changedOptions.push({
            path: i,
            value: Number(e)
          }));
        }
      }, {
        key: "_update",
        value: function (t, e) {
          var i = this._constructOptions(t, e);
          this.parent.body && this.parent.body.emitter && this.parent.body.emitter.emit && this.parent.body.emitter.emit("configChange", i), this.initialized = !0, this.parent.setOptions(i);
        }
      }, {
        key: "_constructOptions",
        value: function (t, e) {
          var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
            n = i;
          t = "false" !== (t = "true" === t || t) && t;
          for (var o = 0; o < e.length; o++) "global" !== e[o] && (void 0 === n[e[o]] && (n[e[o]] = {}), o !== e.length - 1 ? n = n[e[o]] : n[e[o]] = t);
          return i;
        }
      }, {
        key: "_printOptions",
        value: function () {
          for (var t = this.getOptions(); this.optionsContainer.firstChild;) this.optionsContainer.removeChild(this.optionsContainer.firstChild);
          this.optionsContainer.appendChild(l_("pre", "const options = " + $b(t, null, 2)));
        }
      }, {
        key: "getOptions",
        value: function () {
          for (var t = {}, e = 0; e < this.changedOptions.length; e++) this._constructOptions(this.changedOptions[e].value, this.changedOptions[e].path, t);
          return t;
        }
      }]), t;
    }(),
    c_ = function () {
      function t(e, i) {
        zo(this, t), this.container = e, this.overflowMethod = i || "cap", this.x = 0, this.y = 0, this.padding = 5, this.hidden = !1, this.frame = document.createElement("div"), this.frame.className = "vis-tooltip", this.container.appendChild(this.frame);
      }
      return Ac(t, [{
        key: "setPosition",
        value: function (t, e) {
          this.x = mb(t), this.y = mb(e);
        }
      }, {
        key: "setText",
        value: function (t) {
          if (t instanceof Element) {
            for (; this.frame.firstChild;) this.frame.removeChild(this.frame.firstChild);
            this.frame.appendChild(t);
          } else this.frame.innerText = t;
        }
      }, {
        key: "show",
        value: function (t) {
          if (void 0 === t && (t = !0), !0 === t) {
            var e = this.frame.clientHeight,
              i = this.frame.clientWidth,
              n = this.frame.parentNode.clientHeight,
              o = this.frame.parentNode.clientWidth,
              r = 0,
              s = 0;
            if ("flip" == this.overflowMethod) {
              var a = !1,
                l = !0;
              this.y - e < this.padding && (l = !1), this.x + i > o - this.padding && (a = !0), r = a ? this.x - i : this.x, s = l ? this.y - e : this.y;
            } else (s = this.y - e) + e + this.padding > n && (s = n - e - this.padding), s < this.padding && (s = this.padding), (r = this.x) + i + this.padding > o && (r = o - i - this.padding), r < this.padding && (r = this.padding);
            this.frame.style.left = r + "px", this.frame.style.top = s + "px", this.frame.style.visibility = "visible", this.hidden = !1;
          } else this.hide();
        }
      }, {
        key: "hide",
        value: function () {
          this.hidden = !0, this.frame.style.left = "0", this.frame.style.top = "0", this.frame.style.visibility = "hidden";
        }
      }, {
        key: "destroy",
        value: function () {
          this.frame.parentNode.removeChild(this.frame);
        }
      }]), t;
    }(),
    d_ = !1,
    p_ = "background: #FFeeee; color: #dd0000",
    m_ = function () {
      function t() {
        zo(this, t);
      }
      return Ac(t, null, [{
        key: "validate",
        value: function (e, i, n) {
          d_ = !1, h_ = i;
          var o = i;
          return void 0 !== n && (o = i[n]), t.parse(e, o, []), d_;
        }
      }, {
        key: "parse",
        value: function (e, i, n) {
          for (var o in e) Object.prototype.hasOwnProperty.call(e, o) && t.check(o, e, i, n);
        }
      }, {
        key: "check",
        value: function (e, i, n, o) {
          if (void 0 !== n[e] || void 0 !== n.__any__) {
            var r = e,
              s = !0;
            void 0 === n[e] && void 0 !== n.__any__ && (r = "__any__", s = "object" === t.getType(i[e]));
            var a = n[r];
            s && void 0 !== a.__type__ && (a = a.__type__), t.checkFields(e, i, n, r, a, o);
          } else t.getSuggestion(e, n, o);
        }
      }, {
        key: "checkFields",
        value: function (e, i, n, o, r, s) {
          var a = function (i) {
              console.error("%c" + i + t.printLocation(s, e), p_);
            },
            l = t.getType(i[e]),
            h = r[l];
          void 0 !== h ? "array" === t.getType(h) && -1 === Ob(h).call(h, i[e]) ? (a('Invalid option detected in "' + e + '". Allowed values are:' + t.print(h) + ' not "' + i[e] + '". '), d_ = !0) : "object" === l && "__any__" !== o && (s = Vx(s, e), t.parse(i[e], n[o], s)) : void 0 === r.any && (a('Invalid type received for "' + e + '". Expected: ' + t.print(Wm(r)) + ". Received [" + l + '] "' + i[e] + '"'), d_ = !0);
        }
      }, {
        key: "getType",
        value: function (t) {
          var e = kc(t);
          return "object" === e ? null === t ? "null" : t instanceof Boolean ? "boolean" : t instanceof Number ? "number" : t instanceof String ? "string" : Cd(t) ? "array" : t instanceof Date ? "date" : void 0 !== t.nodeType ? "dom" : !0 === t._isAMomentObject ? "moment" : "object" : "number" === e ? "number" : "boolean" === e ? "boolean" : "string" === e ? "string" : void 0 === e ? "undefined" : e;
        }
      }, {
        key: "getSuggestion",
        value: function (e, i, n) {
          var o,
            r = t.findInOptions(e, i, n, !1),
            s = t.findInOptions(e, h_, [], !0);
          o = void 0 !== r.indexMatch ? " in " + t.printLocation(r.path, e, "") + 'Perhaps it was incomplete? Did you mean: "' + r.indexMatch + '"?\n\n' : s.distance <= 4 && r.distance > s.distance ? " in " + t.printLocation(r.path, e, "") + "Perhaps it was misplaced? Matching option found at: " + t.printLocation(s.path, s.closestMatch, "") : r.distance <= 8 ? '. Did you mean "' + r.closestMatch + '"?' + t.printLocation(r.path, e) : ". Did you mean one of these: " + t.print(Wm(i)) + t.printLocation(n, e), console.error('%cUnknown option detected: "' + e + '"' + o, p_), d_ = !0;
        }
      }, {
        key: "findInOptions",
        value: function (e, i, n) {
          var o = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
            r = 1e9,
            s = "",
            a = [],
            l = e.toLowerCase(),
            h = void 0;
          for (var u in i) {
            var c = void 0;
            if (void 0 !== i[u].__type__ && !0 === o) {
              var d = t.findInOptions(e, i[u], Vx(n, u));
              r > d.distance && (s = d.closestMatch, a = d.path, r = d.distance, h = d.indexMatch);
            } else {
              var p;
              -1 !== Ob(p = u.toLowerCase()).call(p, l) && (h = u), r > (c = t.levenshteinDistance(e, u)) && (s = u, a = Ux(n), r = c);
            }
          }
          return {
            closestMatch: s,
            path: a,
            distance: r,
            indexMatch: h
          };
        }
      }, {
        key: "printLocation",
        value: function (t, e) {
          for (var i = "\n\n" + (arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "Problem value found at: \n") + "options = {\n", n = 0; n < t.length; n++) {
            for (var o = 0; o < n + 1; o++) i += "  ";
            i += t[n] + ": {\n";
          }
          for (var r = 0; r < t.length + 1; r++) i += "  ";
          i += e + "\n";
          for (var s = 0; s < t.length + 1; s++) {
            for (var a = 0; a < t.length - s; a++) i += "  ";
            i += "}\n";
          }
          return i + "\n\n";
        }
      }, {
        key: "print",
        value: function (t) {
          return $b(t).replace(/(")|(\[)|(\])|(,"__type__")/g, "").replace(/(,)/g, ", ");
        }
      }, {
        key: "levenshteinDistance",
        value: function (t, e) {
          if (0 === t.length) return e.length;
          if (0 === e.length) return t.length;
          var i,
            n,
            o = [];
          for (i = 0; i <= e.length; i++) o[i] = [i];
          for (n = 0; n <= t.length; n++) o[0][n] = n;
          for (i = 1; i <= e.length; i++) for (n = 1; n <= t.length; n++) e.charAt(i - 1) == t.charAt(n - 1) ? o[i][n] = o[i - 1][n - 1] : o[i][n] = Math.min(o[i - 1][n - 1] + 1, Math.min(o[i][n - 1] + 1, o[i - 1][n] + 1));
          return o[e.length][t.length];
        }
      }]), t;
    }(),
    f_ = Px,
    v_ = a_,
    g_ = u_,
    y_ = Ix,
    b_ = c_,
    w_ = p_,
    k_ = m_,
    x_ = Object.freeze({
      __proto__: null,
      Activator: f_,
      Alea: function () {
        for (var t = arguments.length, e = new Array(t), i = 0; i < t; i++) e[i] = arguments[i];
        return function (t) {
          var e = function () {
              for (var t = function () {
                  var t = 4022871197;
                  return function (e) {
                    for (var i = e.toString(), n = 0; n < i.length; n++) {
                      var o = .02519603282416938 * (t += i.charCodeAt(n));
                      o -= t = o >>> 0, t = (o *= t) >>> 0, t += 4294967296 * (o -= t);
                    }
                    return 2.3283064365386963e-10 * (t >>> 0);
                  };
                }(), e = t(" "), i = t(" "), n = t(" "), o = 0; o < arguments.length; o++) (e -= t(o < 0 || arguments.length <= o ? void 0 : arguments[o])) < 0 && (e += 1), (i -= t(o < 0 || arguments.length <= o ? void 0 : arguments[o])) < 0 && (i += 1), (n -= t(o < 0 || arguments.length <= o ? void 0 : arguments[o])) < 0 && (n += 1);
              return [e, i, n];
            }(t),
            i = Dv(e, 3),
            n = i[0],
            o = i[1],
            r = i[2],
            s = 1,
            a = function () {
              var t = 2091639 * n + 2.3283064365386963e-10 * s;
              return n = o, o = r, r = t - (s = 0 | t);
            };
          return a.uint32 = function () {
            return 4294967296 * a();
          }, a.fract53 = function () {
            return a() + 11102230246251565e-32 * (2097152 * a() | 0);
          }, a.algorithm = "Alea", a.seed = t, a.version = "0.9", a;
        }(e.length ? e : [Zv()]);
      },
      ColorPicker: v_,
      Configurator: g_,
      DELETE: Dx,
      HSVToHex: t_,
      HSVToRGB: Jx,
      Hammer: y_,
      Popup: b_,
      RGBToHSV: Zx,
      RGBToHex: $x,
      VALIDATOR_PRINT_STYLE: w_,
      Validator: k_,
      addClassName: function (t, e) {
        var i = t.className.split(" "),
          n = e.split(" ");
        i = jv(i).call(i, Cp(n).call(n, function (t) {
          return !Ey(i).call(i, t);
        })), t.className = i.join(" ");
      },
      addCssText: function (t, e) {
        var i = Qx.split(t.style.cssText),
          n = Qx.split(e),
          o = _x(_x({}, i), n);
        t.style.cssText = Qx.join(o);
      },
      addEventListener: function (t, e, i, n) {
        var o;
        t.addEventListener ? (void 0 === n && (n = !1), "mousewheel" === e && Ey(o = navigator.userAgent).call(o, "Firefox") && (e = "DOMMouseScroll"), t.addEventListener(e, i, n)) : t.attachEvent("on" + e, i);
      },
      binarySearchCustom: function (t, e, i, n) {
        for (var o = 0, r = 0, s = t.length - 1; r <= s && o < 1e4;) {
          var a = Math.floor((r + s) / 2),
            l = t[a],
            h = e(void 0 === n ? l[i] : l[i][n]);
          if (0 == h) return a;
          -1 == h ? r = a + 1 : s = a - 1, o++;
        }
        return -1;
      },
      binarySearchValue: function (t, e, i, n, o) {
        var r,
          s,
          a,
          l,
          h = 0,
          u = 0,
          c = t.length - 1;
        for (o = null != o ? o : function (t, e) {
          return t == e ? 0 : t < e ? -1 : 1;
        }; u <= c && h < 1e4;) {
          if (l = Math.floor(.5 * (c + u)), r = t[Math.max(0, l - 1)][i], s = t[l][i], a = t[Math.min(t.length - 1, l + 1)][i], 0 == o(s, e)) return l;
          if (o(r, e) < 0 && o(s, e) > 0) return "before" == n ? Math.max(0, l - 1) : l;
          if (o(s, e) < 0 && o(a, e) > 0) return "before" == n ? l : Math.min(t.length - 1, l + 1);
          o(s, e) < 0 ? u = l + 1 : c = l - 1, h++;
        }
        return -1;
      },
      bridgeObject: r_,
      copyAndExtendArray: Vx,
      copyArray: Ux,
      deepExtend: Wx,
      deepObjectAssign: Tx,
      easingFunctions: {
        linear: function (t) {
          return t;
        },
        easeInQuad: function (t) {
          return t * t;
        },
        easeOutQuad: function (t) {
          return t * (2 - t);
        },
        easeInOutQuad: function (t) {
          return t < .5 ? 2 * t * t : (4 - 2 * t) * t - 1;
        },
        easeInCubic: function (t) {
          return t * t * t;
        },
        easeOutCubic: function (t) {
          return --t * t * t + 1;
        },
        easeInOutCubic: function (t) {
          return t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;
        },
        easeInQuart: function (t) {
          return t * t * t * t;
        },
        easeOutQuart: function (t) {
          return 1 - --t * t * t * t;
        },
        easeInOutQuart: function (t) {
          return t < .5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;
        },
        easeInQuint: function (t) {
          return t * t * t * t * t;
        },
        easeOutQuint: function (t) {
          return 1 + --t * t * t * t * t;
        },
        easeInOutQuint: function (t) {
          return t < .5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;
        }
      },
      equalArray: function (t, e) {
        if (t.length !== e.length) return !1;
        for (var i = 0, n = t.length; i < n; i++) if (t[i] != e[i]) return !1;
        return !0;
      },
      extend: Gx,
      fillIfDefined: function t(e, i) {
        var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        for (var o in e) if (void 0 !== i[o]) if (null === i[o] || "object" !== kc(i[o])) Hx(e, i, o, n);else {
          var r = e[o],
            s = i[o];
          zx(r) && zx(s) && t(r, s, n);
        }
      },
      forEach: function (t, e) {
        if (Cd(t)) for (var i = t.length, n = 0; n < i; n++) e(t[n], n, t);else for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && e(t[o], o, t);
      },
      getAbsoluteLeft: function (t) {
        return t.getBoundingClientRect().left;
      },
      getAbsoluteRight: function (t) {
        return t.getBoundingClientRect().right;
      },
      getAbsoluteTop: function (t) {
        return t.getBoundingClientRect().top;
      },
      getScrollBarWidth: function () {
        var t = document.createElement("p");
        t.style.width = "100%", t.style.height = "200px";
        var e = document.createElement("div");
        e.style.position = "absolute", e.style.top = "0px", e.style.left = "0px", e.style.visibility = "hidden", e.style.width = "200px", e.style.height = "150px", e.style.overflow = "hidden", e.appendChild(t), document.body.appendChild(e);
        var i = t.offsetWidth;
        e.style.overflow = "scroll";
        var n = t.offsetWidth;
        return i == n && (n = e.clientWidth), document.body.removeChild(e), i - n;
      },
      getTarget: function () {
        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : window.event,
          e = null;
        return t && (t.target ? e = t.target : t.srcElement && (e = t.srcElement)), e instanceof Element && (null == e.nodeType || 3 != e.nodeType || (e = e.parentNode) instanceof Element) ? e : null;
      },
      getType: Yx,
      hasParent: function (t, e) {
        for (var i = t; i;) {
          if (i === e) return !0;
          if (!i.parentNode) return !1;
          i = i.parentNode;
        }
        return !1;
      },
      hexToHSV: e_,
      hexToRGB: Kx,
      insertSort: function (t, e) {
        for (var i = 0; i < t.length; i++) {
          var n = t[i],
            o = void 0;
          for (o = i; o > 0 && e(n, t[o - 1]) < 0; o--) t[o] = t[o - 1];
          t[o] = n;
        }
        return t;
      },
      isDate: function (t) {
        if (t instanceof Date) return !0;
        if (Bx(t)) {
          if (Mx.exec(t)) return !0;
          if (!isNaN(Date.parse(t))) return !0;
        }
        return !1;
      },
      isNumber: jx,
      isObject: zx,
      isString: Bx,
      isValidHex: i_,
      isValidRGB: n_,
      isValidRGBA: o_,
      mergeOptions: function (t, e, i) {
        var n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {},
          o = function (t) {
            return null != t;
          },
          r = function (t) {
            return null !== t && "object" === kc(t);
          };
        if (!r(t)) throw new Error("Parameter mergeTarget must be an object");
        if (!r(e)) throw new Error("Parameter options must be an object");
        if (!o(i)) throw new Error("Parameter option must have a value");
        if (!r(n)) throw new Error("Parameter globalOptions must be an object");
        var s = e[i],
          a = r(n) && !function (t) {
            for (var e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;
            return !0;
          }(n) ? n[i] : void 0,
          l = a ? a.enabled : void 0;
        if (void 0 !== s) {
          if ("boolean" == typeof s) return r(t[i]) || (t[i] = {}), void (t[i].enabled = s);
          if (null === s && !r(t[i])) {
            if (!o(a)) return;
            t[i] = Wb(a);
          }
          if (r(s)) {
            var h = !0;
            void 0 !== s.enabled ? h = s.enabled : void 0 !== l && (h = a.enabled), function (t, e, i) {
              r(t[i]) || (t[i] = {});
              var n = e[i],
                o = t[i];
              for (var s in n) Object.prototype.hasOwnProperty.call(n, s) && (o[s] = n[s]);
            }(t, e, i), t[i].enabled = h;
          }
        }
      },
      option: qx,
      overrideOpacity: function (t, e) {
        if (Ey(t).call(t, "rgba")) return t;
        if (Ey(t).call(t, "rgb")) {
          var i = t.substr(Ob(t).call(t, "(") + 1).replace(")", "").split(",");
          return "rgba(" + i[0] + "," + i[1] + "," + i[2] + "," + e + ")";
        }
        var n = Kx(t);
        return null == n ? t : "rgba(" + n.r + "," + n.g + "," + n.b + "," + e + ")";
      },
      parseColor: function (t, e) {
        if (Bx(t)) {
          var i = t;
          if (n_(i)) {
            var n,
              o = bm(n = i.substr(4).substr(0, i.length - 5).split(",")).call(n, function (t) {
                return mb(t);
              });
            i = $x(o[0], o[1], o[2]);
          }
          if (!0 === i_(i)) {
            var r = e_(i),
              s = {
                h: r.h,
                s: .8 * r.s,
                v: Math.min(1, 1.02 * r.v)
              },
              a = {
                h: r.h,
                s: Math.min(1, 1.25 * r.s),
                v: .8 * r.v
              },
              l = t_(a.h, a.s, a.v),
              h = t_(s.h, s.s, s.v);
            return {
              background: i,
              border: l,
              highlight: {
                background: h,
                border: l
              },
              hover: {
                background: h,
                border: l
              }
            };
          }
          return {
            background: i,
            border: i,
            highlight: {
              background: i,
              border: i
            },
            hover: {
              background: i,
              border: i
            }
          };
        }
        return e ? {
          background: t.background || e.background,
          border: t.border || e.border,
          highlight: Bx(t.highlight) ? {
            border: t.highlight,
            background: t.highlight
          } : {
            background: t.highlight && t.highlight.background || e.highlight.background,
            border: t.highlight && t.highlight.border || e.highlight.border
          },
          hover: Bx(t.hover) ? {
            border: t.hover,
            background: t.hover
          } : {
            border: t.hover && t.hover.border || e.hover.border,
            background: t.hover && t.hover.background || e.hover.background
          }
        } : {
          background: t.background || void 0,
          border: t.border || void 0,
          highlight: Bx(t.highlight) ? {
            border: t.highlight,
            background: t.highlight
          } : {
            background: t.highlight && t.highlight.background || void 0,
            border: t.highlight && t.highlight.border || void 0
          },
          hover: Bx(t.hover) ? {
            border: t.hover,
            background: t.hover
          } : {
            border: t.hover && t.hover.border || void 0,
            background: t.hover && t.hover.background || void 0
          }
        };
      },
      preventDefault: function (t) {
        t || (t = window.event), t && (t.preventDefault ? t.preventDefault() : t.returnValue = !1);
      },
      pureDeepObjectAssign: function (t) {
        for (var e, i = arguments.length, n = new Array(i > 1 ? i - 1 : 0), o = 1; o < i; o++) n[o - 1] = arguments[o];
        return Tx.apply(void 0, jv(e = [{}, t]).call(e, n));
      },
      recursiveDOMDelete: function t(e) {
        if (e) for (; !0 === e.hasChildNodes();) {
          var i = e.firstChild;
          i && (t(i), e.removeChild(i));
        }
      },
      removeClassName: function (t, e) {
        var i = t.className.split(" "),
          n = e.split(" ");
        i = Cp(i).call(i, function (t) {
          return !Ey(n).call(n, t);
        }), t.className = i.join(" ");
      },
      removeCssText: function (t, e) {
        var i = Qx.split(t.style.cssText),
          n = Qx.split(e);
        for (var o in n) Object.prototype.hasOwnProperty.call(n, o) && delete i[o];
        t.style.cssText = Qx.join(i);
      },
      removeEventListener: function (t, e, i, n) {
        var o;
        t.removeEventListener ? (void 0 === n && (n = !1), "mousewheel" === e && Ey(o = navigator.userAgent).call(o, "Firefox") && (e = "DOMMouseScroll"), t.removeEventListener(e, i, n)) : t.detachEvent("on" + e, i);
      },
      selectiveBridgeObject: function (t, e) {
        if (null !== e && "object" === kc(e)) {
          for (var i = Wb(e), n = 0; n < t.length; n++) Object.prototype.hasOwnProperty.call(e, t[n]) && "object" == kc(e[t[n]]) && (i[t[n]] = r_(e[t[n]]));
          return i;
        }
        return null;
      },
      selectiveDeepExtend: function (t, e, i) {
        var n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
        if (Cd(i)) throw new TypeError("Arrays are not supported by deepExtend");
        for (var o = 0; o < t.length; o++) {
          var r = t[o];
          if (Object.prototype.hasOwnProperty.call(i, r)) if (i[r] && i[r].constructor === Object) void 0 === e[r] && (e[r] = {}), e[r].constructor === Object ? Wx(e[r], i[r], !1, n) : Hx(e, i, r, n);else {
            if (Cd(i[r])) throw new TypeError("Arrays are not supported by deepExtend");
            Hx(e, i, r, n);
          }
        }
        return e;
      },
      selectiveExtend: function (t, e) {
        if (!Cd(t)) throw new Error("Array with property names expected as first argument");
        for (var i = arguments.length, n = new Array(i > 2 ? i - 2 : 0), o = 2; o < i; o++) n[o - 2] = arguments[o];
        for (var r = 0, s = n; r < s.length; r++) for (var a = s[r], l = 0; l < t.length; l++) {
          var h = t[l];
          a && Object.prototype.hasOwnProperty.call(a, h) && (e[h] = a[h]);
        }
        return e;
      },
      selectiveNotDeepExtend: function (t, e, i) {
        var n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
        if (Cd(i)) throw new TypeError("Arrays are not supported by deepExtend");
        for (var o in i) if (Object.prototype.hasOwnProperty.call(i, o) && !Ey(t).call(t, o)) if (i[o] && i[o].constructor === Object) void 0 === e[o] && (e[o] = {}), e[o].constructor === Object ? Wx(e[o], i[o]) : Hx(e, i, o, n);else if (Cd(i[o])) {
          e[o] = [];
          for (var r = 0; r < i[o].length; r++) e[o].push(i[o][r]);
        } else Hx(e, i, o, n);
        return e;
      },
      throttle: function (t) {
        var e = !1;
        return function () {
          e || (e = !0, requestAnimationFrame(function () {
            e = !1, t();
          }));
        };
      },
      toArray: Xx,
      topMost: function (t, e) {
        var i;
        Cd(e) || (e = [e]);
        var n,
          o = Cx(t);
        try {
          for (o.s(); !(n = o.n()).done;) {
            var r = n.value;
            if (r) {
              i = r[e[0]];
              for (var s = 1; s < e.length; s++) i && (i = i[e[s]]);
              if (void 0 !== i) break;
            }
          }
        } catch (t) {
          o.e(t);
        } finally {
          o.f();
        }
        return i;
      },
      updateProperty: function (t, e, i) {
        return t[e] !== i && (t[e] = i, !0);
      }
    }),
    __ = {},
    C_ = {
      get exports() {
        return __;
      },
      set exports(t) {
        __ = t;
      }
    },
    S_ = {},
    D_ = {},
    T_ = {
      get exports() {
        return D_;
      },
      set exports(t) {
        D_ = t;
      }
    },
    O_ = {};
  function E_() {
    var t = {
      "align-content": !1,
      "align-items": !1,
      "align-self": !1,
      "alignment-adjust": !1,
      "alignment-baseline": !1,
      all: !1,
      "anchor-point": !1,
      animation: !1,
      "animation-delay": !1,
      "animation-direction": !1,
      "animation-duration": !1,
      "animation-fill-mode": !1,
      "animation-iteration-count": !1,
      "animation-name": !1,
      "animation-play-state": !1,
      "animation-timing-function": !1,
      azimuth: !1,
      "backface-visibility": !1,
      background: !0,
      "background-attachment": !0,
      "background-clip": !0,
      "background-color": !0,
      "background-image": !0,
      "background-origin": !0,
      "background-position": !0,
      "background-repeat": !0,
      "background-size": !0,
      "baseline-shift": !1,
      binding: !1,
      bleed: !1,
      "bookmark-label": !1,
      "bookmark-level": !1,
      "bookmark-state": !1,
      border: !0,
      "border-bottom": !0,
      "border-bottom-color": !0,
      "border-bottom-left-radius": !0,
      "border-bottom-right-radius": !0,
      "border-bottom-style": !0,
      "border-bottom-width": !0,
      "border-collapse": !0,
      "border-color": !0,
      "border-image": !0,
      "border-image-outset": !0,
      "border-image-repeat": !0,
      "border-image-slice": !0,
      "border-image-source": !0,
      "border-image-width": !0,
      "border-left": !0,
      "border-left-color": !0,
      "border-left-style": !0,
      "border-left-width": !0,
      "border-radius": !0,
      "border-right": !0,
      "border-right-color": !0,
      "border-right-style": !0,
      "border-right-width": !0,
      "border-spacing": !0,
      "border-style": !0,
      "border-top": !0,
      "border-top-color": !0,
      "border-top-left-radius": !0,
      "border-top-right-radius": !0,
      "border-top-style": !0,
      "border-top-width": !0,
      "border-width": !0,
      bottom: !1,
      "box-decoration-break": !0,
      "box-shadow": !0,
      "box-sizing": !0,
      "box-snap": !0,
      "box-suppress": !0,
      "break-after": !0,
      "break-before": !0,
      "break-inside": !0,
      "caption-side": !1,
      chains: !1,
      clear: !0,
      clip: !1,
      "clip-path": !1,
      "clip-rule": !1,
      color: !0,
      "color-interpolation-filters": !0,
      "column-count": !1,
      "column-fill": !1,
      "column-gap": !1,
      "column-rule": !1,
      "column-rule-color": !1,
      "column-rule-style": !1,
      "column-rule-width": !1,
      "column-span": !1,
      "column-width": !1,
      columns: !1,
      contain: !1,
      content: !1,
      "counter-increment": !1,
      "counter-reset": !1,
      "counter-set": !1,
      crop: !1,
      cue: !1,
      "cue-after": !1,
      "cue-before": !1,
      cursor: !1,
      direction: !1,
      display: !0,
      "display-inside": !0,
      "display-list": !0,
      "display-outside": !0,
      "dominant-baseline": !1,
      elevation: !1,
      "empty-cells": !1,
      filter: !1,
      flex: !1,
      "flex-basis": !1,
      "flex-direction": !1,
      "flex-flow": !1,
      "flex-grow": !1,
      "flex-shrink": !1,
      "flex-wrap": !1,
      float: !1,
      "float-offset": !1,
      "flood-color": !1,
      "flood-opacity": !1,
      "flow-from": !1,
      "flow-into": !1,
      font: !0,
      "font-family": !0,
      "font-feature-settings": !0,
      "font-kerning": !0,
      "font-language-override": !0,
      "font-size": !0,
      "font-size-adjust": !0,
      "font-stretch": !0,
      "font-style": !0,
      "font-synthesis": !0,
      "font-variant": !0,
      "font-variant-alternates": !0,
      "font-variant-caps": !0,
      "font-variant-east-asian": !0,
      "font-variant-ligatures": !0,
      "font-variant-numeric": !0,
      "font-variant-position": !0,
      "font-weight": !0,
      grid: !1,
      "grid-area": !1,
      "grid-auto-columns": !1,
      "grid-auto-flow": !1,
      "grid-auto-rows": !1,
      "grid-column": !1,
      "grid-column-end": !1,
      "grid-column-start": !1,
      "grid-row": !1,
      "grid-row-end": !1,
      "grid-row-start": !1,
      "grid-template": !1,
      "grid-template-areas": !1,
      "grid-template-columns": !1,
      "grid-template-rows": !1,
      "hanging-punctuation": !1,
      height: !0,
      hyphens: !1,
      icon: !1,
      "image-orientation": !1,
      "image-resolution": !1,
      "ime-mode": !1,
      "initial-letters": !1,
      "inline-box-align": !1,
      "justify-content": !1,
      "justify-items": !1,
      "justify-self": !1,
      left: !1,
      "letter-spacing": !0,
      "lighting-color": !0,
      "line-box-contain": !1,
      "line-break": !1,
      "line-grid": !1,
      "line-height": !1,
      "line-snap": !1,
      "line-stacking": !1,
      "line-stacking-ruby": !1,
      "line-stacking-shift": !1,
      "line-stacking-strategy": !1,
      "list-style": !0,
      "list-style-image": !0,
      "list-style-position": !0,
      "list-style-type": !0,
      margin: !0,
      "margin-bottom": !0,
      "margin-left": !0,
      "margin-right": !0,
      "margin-top": !0,
      "marker-offset": !1,
      "marker-side": !1,
      marks: !1,
      mask: !1,
      "mask-box": !1,
      "mask-box-outset": !1,
      "mask-box-repeat": !1,
      "mask-box-slice": !1,
      "mask-box-source": !1,
      "mask-box-width": !1,
      "mask-clip": !1,
      "mask-image": !1,
      "mask-origin": !1,
      "mask-position": !1,
      "mask-repeat": !1,
      "mask-size": !1,
      "mask-source-type": !1,
      "mask-type": !1,
      "max-height": !0,
      "max-lines": !1,
      "max-width": !0,
      "min-height": !0,
      "min-width": !0,
      "move-to": !1,
      "nav-down": !1,
      "nav-index": !1,
      "nav-left": !1,
      "nav-right": !1,
      "nav-up": !1,
      "object-fit": !1,
      "object-position": !1,
      opacity: !1,
      order: !1,
      orphans: !1,
      outline: !1,
      "outline-color": !1,
      "outline-offset": !1,
      "outline-style": !1,
      "outline-width": !1,
      overflow: !1,
      "overflow-wrap": !1,
      "overflow-x": !1,
      "overflow-y": !1,
      padding: !0,
      "padding-bottom": !0,
      "padding-left": !0,
      "padding-right": !0,
      "padding-top": !0,
      page: !1,
      "page-break-after": !1,
      "page-break-before": !1,
      "page-break-inside": !1,
      "page-policy": !1,
      pause: !1,
      "pause-after": !1,
      "pause-before": !1,
      perspective: !1,
      "perspective-origin": !1,
      pitch: !1,
      "pitch-range": !1,
      "play-during": !1,
      position: !1,
      "presentation-level": !1,
      quotes: !1,
      "region-fragment": !1,
      resize: !1,
      rest: !1,
      "rest-after": !1,
      "rest-before": !1,
      richness: !1,
      right: !1,
      rotation: !1,
      "rotation-point": !1,
      "ruby-align": !1,
      "ruby-merge": !1,
      "ruby-position": !1,
      "shape-image-threshold": !1,
      "shape-outside": !1,
      "shape-margin": !1,
      size: !1,
      speak: !1,
      "speak-as": !1,
      "speak-header": !1,
      "speak-numeral": !1,
      "speak-punctuation": !1,
      "speech-rate": !1,
      stress: !1,
      "string-set": !1,
      "tab-size": !1,
      "table-layout": !1,
      "text-align": !0,
      "text-align-last": !0,
      "text-combine-upright": !0,
      "text-decoration": !0,
      "text-decoration-color": !0,
      "text-decoration-line": !0,
      "text-decoration-skip": !0,
      "text-decoration-style": !0,
      "text-emphasis": !0,
      "text-emphasis-color": !0,
      "text-emphasis-position": !0,
      "text-emphasis-style": !0,
      "text-height": !0,
      "text-indent": !0,
      "text-justify": !0,
      "text-orientation": !0,
      "text-overflow": !0,
      "text-shadow": !0,
      "text-space-collapse": !0,
      "text-transform": !0,
      "text-underline-position": !0,
      "text-wrap": !0,
      top: !1,
      transform: !1,
      "transform-origin": !1,
      "transform-style": !1,
      transition: !1,
      "transition-delay": !1,
      "transition-duration": !1,
      "transition-property": !1,
      "transition-timing-function": !1,
      "unicode-bidi": !1,
      "vertical-align": !1,
      visibility: !1,
      "voice-balance": !1,
      "voice-duration": !1,
      "voice-family": !1,
      "voice-pitch": !1,
      "voice-range": !1,
      "voice-rate": !1,
      "voice-stress": !1,
      "voice-volume": !1,
      volume: !1,
      "white-space": !1,
      widows: !1,
      width: !0,
      "will-change": !1,
      "word-break": !0,
      "word-spacing": !0,
      "word-wrap": !0,
      "wrap-flow": !1,
      "wrap-through": !1,
      "writing-mode": !1,
      "z-index": !1
    };
    return t;
  }
  var A_ = /javascript\s*\:/gim;
  O_.whiteList = E_(), O_.getDefaultWhiteList = E_, O_.onAttr = function (t, e, i) {}, O_.onIgnoreAttr = function (t, e, i) {}, O_.safeAttrValue = function (t, e) {
    return A_.test(e) ? "" : e;
  };
  var I_ = {
    indexOf: function (t, e) {
      var i, n;
      if (Array.prototype.indexOf) return t.indexOf(e);
      for (i = 0, n = t.length; i < n; i++) if (t[i] === e) return i;
      return -1;
    },
    forEach: function (t, e, i) {
      var n, o;
      if (Array.prototype.forEach) return t.forEach(e, i);
      for (n = 0, o = t.length; n < o; n++) e.call(i, t[n], n, t);
    },
    trim: function (t) {
      return String.prototype.trim ? t.trim() : t.replace(/(^\s*)|(\s*$)/g, "");
    },
    trimRight: function (t) {
      return String.prototype.trimRight ? t.trimRight() : t.replace(/(\s*$)/g, "");
    }
  };
  var P_ = function (t, e) {
      ";" !== (t = I_.trimRight(t))[t.length - 1] && (t += ";");
      var i = t.length,
        n = !1,
        o = 0,
        r = 0,
        s = "";
      function a() {
        if (!n) {
          var i = I_.trim(t.slice(o, r)),
            a = i.indexOf(":");
          if (-1 !== a) {
            var l = I_.trim(i.slice(0, a)),
              h = I_.trim(i.slice(a + 1));
            if (l) {
              var u = e(o, s.length, l, h, i);
              u && (s += u + "; ");
            }
          }
        }
        o = r + 1;
      }
      for (; r < i; r++) {
        var l = t[r];
        if ("/" === l && "*" === t[r + 1]) {
          var h = t.indexOf("*/", r + 2);
          if (-1 === h) break;
          o = (r = h + 1) + 1, n = !1;
        } else "(" === l ? n = !0 : ")" === l ? n = !1 : ";" === l ? n || a() : "\n" === l && a();
      }
      return I_.trim(s);
    },
    M_ = O_,
    N_ = P_;
  function F_(t) {
    return null == t;
  }
  function R_(t) {
    (t = function (t) {
      var e = {};
      for (var i in t) e[i] = t[i];
      return e;
    }(t || {})).whiteList = t.whiteList || M_.whiteList, t.onAttr = t.onAttr || M_.onAttr, t.onIgnoreAttr = t.onIgnoreAttr || M_.onIgnoreAttr, t.safeAttrValue = t.safeAttrValue || M_.safeAttrValue, this.options = t;
  }
  R_.prototype.process = function (t) {
    if (!(t = (t = t || "").toString())) return "";
    var e = this.options,
      i = e.whiteList,
      n = e.onAttr,
      o = e.onIgnoreAttr,
      r = e.safeAttrValue,
      s = N_(t, function (t, e, s, a, l) {
        var h = i[s],
          u = !1;
        if (!0 === h ? u = h : "function" == typeof h ? u = h(a) : h instanceof RegExp && (u = h.test(a)), !0 !== u && (u = !1), a = r(s, a)) {
          var c,
            d = {
              position: e,
              sourcePosition: t,
              source: l,
              isWhite: u
            };
          return u ? F_(c = n(s, a, d)) ? s + ":" + a : c : F_(c = o(s, a, d)) ? void 0 : c;
        }
      });
    return s;
  };
  var L_ = R_;
  !function (t, e) {
    var i = O_,
      n = L_;
    for (var o in e = t.exports = function (t, e) {
      return new n(e).process(t);
    }, e.FilterCSS = n, i) e[o] = i[o];
    "undefined" != typeof window && (window.filterCSS = t.exports);
  }(T_, D_);
  var j_ = {
      indexOf: function (t, e) {
        var i, n;
        if (Array.prototype.indexOf) return t.indexOf(e);
        for (i = 0, n = t.length; i < n; i++) if (t[i] === e) return i;
        return -1;
      },
      forEach: function (t, e, i) {
        var n, o;
        if (Array.prototype.forEach) return t.forEach(e, i);
        for (n = 0, o = t.length; n < o; n++) e.call(i, t[n], n, t);
      },
      trim: function (t) {
        return String.prototype.trim ? t.trim() : t.replace(/(^\s*)|(\s*$)/g, "");
      },
      spaceIndex: function (t) {
        var e = /\s|\n|\t/.exec(t);
        return e ? e.index : -1;
      }
    },
    B_ = D_.FilterCSS,
    z_ = D_.getDefaultWhiteList,
    H_ = j_;
  function G_() {
    return {
      a: ["target", "href", "title"],
      abbr: ["title"],
      address: [],
      area: ["shape", "coords", "href", "alt"],
      article: [],
      aside: [],
      audio: ["autoplay", "controls", "crossorigin", "loop", "muted", "preload", "src"],
      b: [],
      bdi: ["dir"],
      bdo: ["dir"],
      big: [],
      blockquote: ["cite"],
      br: [],
      caption: [],
      center: [],
      cite: [],
      code: [],
      col: ["align", "valign", "span", "width"],
      colgroup: ["align", "valign", "span", "width"],
      dd: [],
      del: ["datetime"],
      details: ["open"],
      div: [],
      dl: [],
      dt: [],
      em: [],
      figcaption: [],
      figure: [],
      font: ["color", "size", "face"],
      footer: [],
      h1: [],
      h2: [],
      h3: [],
      h4: [],
      h5: [],
      h6: [],
      header: [],
      hr: [],
      i: [],
      img: ["src", "alt", "title", "width", "height"],
      ins: ["datetime"],
      li: [],
      mark: [],
      nav: [],
      ol: [],
      p: [],
      pre: [],
      s: [],
      section: [],
      small: [],
      span: [],
      sub: [],
      summary: [],
      sup: [],
      strong: [],
      strike: [],
      table: ["width", "border", "align", "valign"],
      tbody: ["align", "valign"],
      td: ["width", "rowspan", "colspan", "align", "valign"],
      tfoot: ["align", "valign"],
      th: ["width", "rowspan", "colspan", "align", "valign"],
      thead: ["align", "valign"],
      tr: ["rowspan", "align", "valign"],
      tt: [],
      u: [],
      ul: [],
      video: ["autoplay", "controls", "crossorigin", "loop", "muted", "playsinline", "poster", "preload", "src", "height", "width"]
    };
  }
  var W_ = new B_();
  function Y_(t) {
    return t.replace(V_, "&lt;").replace(U_, "&gt;");
  }
  var V_ = /</g,
    U_ = />/g,
    X_ = /"/g,
    q_ = /&quot;/g,
    K_ = /&#([a-zA-Z0-9]*);?/gim,
    $_ = /&colon;?/gim,
    Z_ = /&newline;?/gim,
    Q_ = /((j\s*a\s*v\s*a|v\s*b|l\s*i\s*v\s*e)\s*s\s*c\s*r\s*i\s*p\s*t\s*|m\s*o\s*c\s*h\s*a):/gi,
    J_ = /e\s*x\s*p\s*r\s*e\s*s\s*s\s*i\s*o\s*n\s*\(.*/gi,
    tC = /u\s*r\s*l\s*\(.*/gi;
  function eC(t) {
    return t.replace(X_, "&quot;");
  }
  function iC(t) {
    return t.replace(q_, '"');
  }
  function nC(t) {
    return t.replace(K_, function (t, e) {
      return "x" === e[0] || "X" === e[0] ? String.fromCharCode(parseInt(e.substr(1), 16)) : String.fromCharCode(parseInt(e, 10));
    });
  }
  function oC(t) {
    return t.replace($_, ":").replace(Z_, " ");
  }
  function rC(t) {
    for (var e = "", i = 0, n = t.length; i < n; i++) e += t.charCodeAt(i) < 32 ? " " : t.charAt(i);
    return H_.trim(e);
  }
  function sC(t) {
    return t = rC(t = oC(t = nC(t = iC(t))));
  }
  function aC(t) {
    return t = Y_(t = eC(t));
  }
  S_.whiteList = {
    a: ["target", "href", "title"],
    abbr: ["title"],
    address: [],
    area: ["shape", "coords", "href", "alt"],
    article: [],
    aside: [],
    audio: ["autoplay", "controls", "crossorigin", "loop", "muted", "preload", "src"],
    b: [],
    bdi: ["dir"],
    bdo: ["dir"],
    big: [],
    blockquote: ["cite"],
    br: [],
    caption: [],
    center: [],
    cite: [],
    code: [],
    col: ["align", "valign", "span", "width"],
    colgroup: ["align", "valign", "span", "width"],
    dd: [],
    del: ["datetime"],
    details: ["open"],
    div: [],
    dl: [],
    dt: [],
    em: [],
    figcaption: [],
    figure: [],
    font: ["color", "size", "face"],
    footer: [],
    h1: [],
    h2: [],
    h3: [],
    h4: [],
    h5: [],
    h6: [],
    header: [],
    hr: [],
    i: [],
    img: ["src", "alt", "title", "width", "height"],
    ins: ["datetime"],
    li: [],
    mark: [],
    nav: [],
    ol: [],
    p: [],
    pre: [],
    s: [],
    section: [],
    small: [],
    span: [],
    sub: [],
    summary: [],
    sup: [],
    strong: [],
    strike: [],
    table: ["width", "border", "align", "valign"],
    tbody: ["align", "valign"],
    td: ["width", "rowspan", "colspan", "align", "valign"],
    tfoot: ["align", "valign"],
    th: ["width", "rowspan", "colspan", "align", "valign"],
    thead: ["align", "valign"],
    tr: ["rowspan", "align", "valign"],
    tt: [],
    u: [],
    ul: [],
    video: ["autoplay", "controls", "crossorigin", "loop", "muted", "playsinline", "poster", "preload", "src", "height", "width"]
  }, S_.getDefaultWhiteList = G_, S_.onTag = function (t, e, i) {}, S_.onIgnoreTag = function (t, e, i) {}, S_.onTagAttr = function (t, e, i) {}, S_.onIgnoreTagAttr = function (t, e, i) {}, S_.safeAttrValue = function (t, e, i, n) {
    if (i = sC(i), "href" === e || "src" === e) {
      if ("#" === (i = H_.trim(i))) return "#";
      if ("http://" !== i.substr(0, 7) && "https://" !== i.substr(0, 8) && "mailto:" !== i.substr(0, 7) && "tel:" !== i.substr(0, 4) && "data:image/" !== i.substr(0, 11) && "ftp://" !== i.substr(0, 6) && "./" !== i.substr(0, 2) && "../" !== i.substr(0, 3) && "#" !== i[0] && "/" !== i[0]) return "";
    } else if ("background" === e) {
      if (Q_.lastIndex = 0, Q_.test(i)) return "";
    } else if ("style" === e) {
      if (J_.lastIndex = 0, J_.test(i)) return "";
      if (tC.lastIndex = 0, tC.test(i) && (Q_.lastIndex = 0, Q_.test(i))) return "";
      !1 !== n && (i = (n = n || W_).process(i));
    }
    return i = aC(i);
  }, S_.escapeHtml = Y_, S_.escapeQuote = eC, S_.unescapeQuote = iC, S_.escapeHtmlEntities = nC, S_.escapeDangerHtml5Entities = oC, S_.clearNonPrintableCharacter = rC, S_.friendlyAttrValue = sC, S_.escapeAttrValue = aC, S_.onIgnoreTagStripAll = function () {
    return "";
  }, S_.StripTagBody = function (t, e) {
    "function" != typeof e && (e = function () {});
    var i = !Array.isArray(t),
      n = [],
      o = !1;
    return {
      onIgnoreTag: function (r, s, a) {
        if (function (e) {
          return !!i || -1 !== H_.indexOf(t, e);
        }(r)) {
          if (a.isClosing) {
            var l = "[/removed]",
              h = a.position + l.length;
            return n.push([!1 !== o ? o : a.position, h]), o = !1, l;
          }
          return o || (o = a.position), "[removed]";
        }
        return e(r, s, a);
      },
      remove: function (t) {
        var e = "",
          i = 0;
        return H_.forEach(n, function (n) {
          e += t.slice(i, n[0]), i = n[1];
        }), e += t.slice(i);
      }
    };
  }, S_.stripCommentTag = function (t) {
    for (var e = "", i = 0; i < t.length;) {
      var n = t.indexOf("\x3c!--", i);
      if (-1 === n) {
        e += t.slice(i);
        break;
      }
      e += t.slice(i, n);
      var o = t.indexOf("--\x3e", n);
      if (-1 === o) break;
      i = o + 3;
    }
    return e;
  }, S_.stripBlankChar = function (t) {
    var e = t.split("");
    return (e = e.filter(function (t) {
      var e = t.charCodeAt(0);
      return 127 !== e && (!(e <= 31) || 10 === e || 13 === e);
    })).join("");
  }, S_.cssFilter = W_, S_.getDefaultCSSWhiteList = z_;
  var lC = {},
    hC = j_;
  function uC(t) {
    var e,
      i = hC.spaceIndex(t);
    return e = -1 === i ? t.slice(1, -1) : t.slice(1, i + 1), "/" === (e = hC.trim(e).toLowerCase()).slice(0, 1) && (e = e.slice(1)), "/" === e.slice(-1) && (e = e.slice(0, -1)), e;
  }
  function cC(t) {
    return "</" === t.slice(0, 2);
  }
  var dC = /[^a-zA-Z0-9\\_:.-]/gim;
  function pC(t, e) {
    for (; e < t.length; e++) {
      var i = t[e];
      if (" " !== i) return "=" === i ? e : -1;
    }
  }
  function mC(t, e) {
    for (; e < t.length; e++) {
      var i = t[e];
      if (" " !== i) return "'" === i || '"' === i ? e : -1;
    }
  }
  function fC(t, e) {
    for (; e > 0; e--) {
      var i = t[e];
      if (" " !== i) return "=" === i ? e : -1;
    }
  }
  function vC(t) {
    return function (t) {
      return '"' === t[0] && '"' === t[t.length - 1] || "'" === t[0] && "'" === t[t.length - 1];
    }(t) ? t.substr(1, t.length - 2) : t;
  }
  lC.parseTag = function (t, e, i) {
    var n = "",
      o = 0,
      r = !1,
      s = !1,
      a = 0,
      l = t.length,
      h = "",
      u = "";
    t: for (a = 0; a < l; a++) {
      var c = t.charAt(a);
      if (!1 === r) {
        if ("<" === c) {
          r = a;
          continue;
        }
      } else if (!1 === s) {
        if ("<" === c) {
          n += i(t.slice(o, a)), r = a, o = a;
          continue;
        }
        if (">" === c || a === l - 1) {
          n += i(t.slice(o, r)), h = uC(u = t.slice(r, a + 1)), n += e(r, n.length, h, u, cC(u)), o = a + 1, r = !1;
          continue;
        }
        if ('"' === c || "'" === c) for (var d = 1, p = t.charAt(a - d); "" === p.trim() || "=" === p;) {
          if ("=" === p) {
            s = c;
            continue t;
          }
          p = t.charAt(a - ++d);
        }
      } else if (c === s) {
        s = !1;
        continue;
      }
    }
    return o < l && (n += i(t.substr(o))), n;
  }, lC.parseAttr = function (t, e) {
    var i = 0,
      n = 0,
      o = [],
      r = !1,
      s = t.length;
    function a(t, i) {
      if (!((t = (t = hC.trim(t)).replace(dC, "").toLowerCase()).length < 1)) {
        var n = e(t, i || "");
        n && o.push(n);
      }
    }
    for (var l = 0; l < s; l++) {
      var h,
        u = t.charAt(l);
      if (!1 !== r || "=" !== u) {
        if (!1 === r || l !== n) {
          if (/\s|\n|\t/.test(u)) {
            if (t = t.replace(/\s|\n|\t/g, " "), !1 === r) {
              if (-1 === (h = pC(t, l))) {
                a(hC.trim(t.slice(i, l))), r = !1, i = l + 1;
                continue;
              }
              l = h - 1;
              continue;
            }
            if (-1 === (h = fC(t, l - 1))) {
              a(r, vC(hC.trim(t.slice(i, l)))), r = !1, i = l + 1;
              continue;
            }
          } else ;
        } else {
          if (-1 === (h = t.indexOf(u, l + 1))) break;
          a(r, hC.trim(t.slice(n + 1, h))), r = !1, i = (l = h) + 1;
        }
      } else r = t.slice(i, l), i = l + 1, n = '"' === t.charAt(i) || "'" === t.charAt(i) ? i : mC(t, l + 1);
    }
    return i < t.length && (!1 === r ? a(t.slice(i)) : a(r, vC(hC.trim(t.slice(i))))), hC.trim(o.join(" "));
  };
  var gC = D_.FilterCSS,
    yC = S_,
    bC = lC,
    wC = bC.parseTag,
    kC = bC.parseAttr,
    xC = j_;
  function _C(t) {
    return null == t;
  }
  function CC(t) {
    (t = function (t) {
      var e = {};
      for (var i in t) e[i] = t[i];
      return e;
    }(t || {})).stripIgnoreTag && (t.onIgnoreTag && console.error('Notes: cannot use these two options "stripIgnoreTag" and "onIgnoreTag" at the same time'), t.onIgnoreTag = yC.onIgnoreTagStripAll), t.whiteList || t.allowList ? t.whiteList = function (t) {
      var e = {};
      for (var i in t) Array.isArray(t[i]) ? e[i.toLowerCase()] = t[i].map(function (t) {
        return t.toLowerCase();
      }) : e[i.toLowerCase()] = t[i];
      return e;
    }(t.whiteList || t.allowList) : t.whiteList = yC.whiteList, t.onTag = t.onTag || yC.onTag, t.onTagAttr = t.onTagAttr || yC.onTagAttr, t.onIgnoreTag = t.onIgnoreTag || yC.onIgnoreTag, t.onIgnoreTagAttr = t.onIgnoreTagAttr || yC.onIgnoreTagAttr, t.safeAttrValue = t.safeAttrValue || yC.safeAttrValue, t.escapeHtml = t.escapeHtml || yC.escapeHtml, this.options = t, !1 === t.css ? this.cssFilter = !1 : (t.css = t.css || {}, this.cssFilter = new gC(t.css));
  }
  CC.prototype.process = function (t) {
    if (!(t = (t = t || "").toString())) return "";
    var e = this.options,
      i = e.whiteList,
      n = e.onTag,
      o = e.onIgnoreTag,
      r = e.onTagAttr,
      s = e.onIgnoreTagAttr,
      a = e.safeAttrValue,
      l = e.escapeHtml,
      h = this.cssFilter;
    e.stripBlankChar && (t = yC.stripBlankChar(t)), e.allowCommentTag || (t = yC.stripCommentTag(t));
    var u = !1;
    e.stripIgnoreTagBody && (u = yC.StripTagBody(e.stripIgnoreTagBody, o), o = u.onIgnoreTag);
    var c = wC(t, function (t, e, u, c, d) {
      var p = {
          sourcePosition: t,
          position: e,
          isClosing: d,
          isWhite: Object.prototype.hasOwnProperty.call(i, u)
        },
        m = n(u, c, p);
      if (!_C(m)) return m;
      if (p.isWhite) {
        if (p.isClosing) return "</" + u + ">";
        var f = function (t) {
            var e = xC.spaceIndex(t);
            if (-1 === e) return {
              html: "",
              closing: "/" === t[t.length - 2]
            };
            var i = "/" === (t = xC.trim(t.slice(e + 1, -1)))[t.length - 1];
            return i && (t = xC.trim(t.slice(0, -1))), {
              html: t,
              closing: i
            };
          }(c),
          v = i[u],
          g = kC(f.html, function (t, e) {
            var i = -1 !== xC.indexOf(v, t),
              n = r(u, t, e, i);
            return _C(n) ? i ? (e = a(u, t, e, h)) ? t + '="' + e + '"' : t : _C(n = s(u, t, e, i)) ? void 0 : n : n;
          });
        return c = "<" + u, g && (c += " " + g), f.closing && (c += " /"), c += ">";
      }
      return _C(m = o(u, c, p)) ? l(c) : m;
    }, l);
    return u && (c = u.remove(c)), c;
  };
  var SC = CC;
  !function (t, e) {
    var i = S_,
      n = lC,
      o = SC;
    function r(t, e) {
      return new o(e).process(t);
    }
    (e = t.exports = r).filterXSS = r, e.FilterXSS = o, function () {
      for (var t in i) e[t] = i[t];
      for (var o in n) e[o] = n[o];
    }(), "undefined" != typeof window && (window.filterXSS = t.exports), "undefined" != typeof self && "undefined" != typeof DedicatedWorkerGlobalScope && self instanceof DedicatedWorkerGlobalScope && (self.filterXSS = t.exports);
  }(C_, __);
  var DC = __;
  let TC;
  const OC = new Uint8Array(16);
  function EC() {
    if (!TC && (TC = "undefined" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto), !TC)) throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
    return TC(OC);
  }
  const AC = [];
  for (let t = 0; t < 256; ++t) AC.push((t + 256).toString(16).slice(1));
  var IC = {
    randomUUID: "undefined" != typeof crypto && crypto.randomUUID && crypto.randomUUID.bind(crypto)
  };
  function PC(t, e, i) {
    if (IC.randomUUID && !e && !t) return IC.randomUUID();
    const n = (t = t || {}).random || (t.rng || EC)();
    if (n[6] = 15 & n[6] | 64, n[8] = 63 & n[8] | 128, e) {
      i = i || 0;
      for (let t = 0; t < 16; ++t) e[i + t] = n[t];
      return e;
    }
    return function (t, e = 0) {
      return (AC[t[e + 0]] + AC[t[e + 1]] + AC[t[e + 2]] + AC[t[e + 3]] + "-" + AC[t[e + 4]] + AC[t[e + 5]] + "-" + AC[t[e + 6]] + AC[t[e + 7]] + "-" + AC[t[e + 8]] + AC[t[e + 9]] + "-" + AC[t[e + 10]] + AC[t[e + 11]] + AC[t[e + 12]] + AC[t[e + 13]] + AC[t[e + 14]] + AC[t[e + 15]]).toLowerCase();
    }(n);
  }
  function MC(t, e) {
    var i = Wm(t);
    if (mp) {
      var n = mp(t);
      e && (n = Cp(n).call(n, function (e) {
        return Lp(t, e).enumerable;
      })), i.push.apply(i, n);
    }
    return i;
  }
  function NC(t) {
    for (var e = 1; e < arguments.length; e++) {
      var i,
        n,
        o = null != arguments[e] ? arguments[e] : {};
      e % 2 ? hp(i = MC(Object(o), !0)).call(i, function (e) {
        hm(t, e, o[e]);
      }) : Zp ? lm(t, Zp(o)) : hp(n = MC(Object(o))).call(n, function (e) {
        Vm(t, e, Lp(o, e));
      });
    }
    return t;
  }
  function FC(t) {
    var e;
    if (!t) return !1;
    var i = null !== (e = t.idProp) && void 0 !== e ? e : t._idProp;
    return !!i && n.isDataViewLike(i, t);
  }
  var RC = /^\/?Date\((-?\d+)/i,
    LC = /^\d+$/;
  function jC(t, i) {
    var n;
    if (void 0 !== t) {
      if (null === t) return null;
      if (!i) return t;
      if ("string" != typeof i && !(i instanceof String)) throw new Error("Type must be a string");
      switch (i) {
        case "boolean":
        case "Boolean":
          return Boolean(t);
        case "number":
        case "Number":
          return Bx(t) && !isNaN(Date.parse(t)) ? e(t).valueOf() : Number(t.valueOf());
        case "string":
        case "String":
          return String(t);
        case "Date":
          try {
            return jC(t, "Moment").toDate();
          } catch (e) {
            throw e instanceof TypeError ? new TypeError("Cannot convert object of type " + Yx(t) + " to type " + i) : e;
          }
        case "Moment":
          if (jx(t)) return e(t);
          if (t instanceof Date) return e(t.valueOf());
          if (e.isMoment(t)) return e(t);
          if (Bx(t)) return (n = RC.exec(t)) ? e(Number(n[1])) : (n = LC.exec(t), e(n ? Number(t) : t));
          throw new TypeError("Cannot convert object of type " + Yx(t) + " to type " + i);
        case "ISODate":
          if (jx(t)) return new Date(t);
          if (t instanceof Date) return t.toISOString();
          if (e.isMoment(t)) return t.toDate().toISOString();
          if (Bx(t)) return (n = RC.exec(t)) ? new Date(Number(n[1])).toISOString() : e(t).format();
          throw new Error("Cannot convert object of type " + Yx(t) + " to type ISODate");
        case "ASPDate":
          if (jx(t)) return "/Date(" + t + ")/";
          if (t instanceof Date || e.isMoment(t)) return "/Date(" + t.valueOf() + ")/";
          if (Bx(t)) return "/Date(" + ((n = RC.exec(t)) ? new Date(Number(n[1])).valueOf() : new Date(t).valueOf()) + ")/";
          throw new Error("Cannot convert object of type " + Yx(t) + " to type ASPDate");
        default:
          throw new Error("Unknown type ".concat(i));
      }
    }
  }
  function BC(t) {
    var e,
      i,
      o,
      r,
      s,
      a,
      l = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
        start: "Date",
        end: "Date"
      },
      h = t._idProp,
      u = new n.DataSet({
        fieldId: h
      }),
      c = bm(e = n.createNewDataPipeFrom(t)).call(e, function (t) {
        var e;
        return Lm(e = Wm(t)).call(e, function (e, i) {
          return e[i] = jC(t[i], l[i]), e;
        }, {});
      }).to(u);
    return c.all().start(), {
      add: function () {
        var e;
        return (e = t.getDataSet()).add.apply(e, arguments);
      },
      remove: function () {
        var e;
        return (e = t.getDataSet()).remove.apply(e, arguments);
      },
      update: function () {
        var e;
        return (e = t.getDataSet()).update.apply(e, arguments);
      },
      updateOnly: function () {
        var e;
        return (e = t.getDataSet()).updateOnly.apply(e, arguments);
      },
      clear: function () {
        var e;
        return (e = t.getDataSet()).clear.apply(e, arguments);
      },
      forEach: Dd(i = hp(u)).call(i, u),
      get: Dd(o = u.get).call(o, u),
      getIds: Dd(r = u.getIds).call(r, u),
      off: Dd(s = u.off).call(s, u),
      on: Dd(a = u.on).call(a, u),
      get length() {
        return u.length;
      },
      idProp: h,
      type: l,
      rawDS: t,
      coercedDS: u,
      dispose: function () {
        return c.stop();
      }
    };
  }
  var zC = function (t) {
      var e = new DC.FilterXSS(t);
      return function (t) {
        return e.process(t);
      };
    },
    HC = function (t) {
      return t;
    },
    GC = zC(),
    WC = NC(NC({}, x_), {}, {
      convert: jC,
      setupXSSProtection: function (t) {
        t && (!0 === t.disabled ? (GC = HC, console.warn("You disabled XSS protection for vis-Timeline. I sure hope you know what you're doing!")) : t.filterOptions && (GC = zC(t.filterOptions)));
      }
    });
  Vm(WC, "xss", {
    get: function () {
      return GC;
    }
  });
  var YC = {},
    VC = {
      get exports() {
        return YC;
      },
      set exports(t) {
        YC = t;
      }
    },
    UC = h,
    XC = u,
    qC = zr,
    KC = tb.trim,
    $C = Uy,
    ZC = k("".charAt),
    QC = UC.parseFloat,
    JC = UC.Symbol,
    tS = JC && JC.iterator,
    eS = 1 / QC($C + "-0") != -1 / 0 || tS && !XC(function () {
      QC(Object(tS));
    }) ? function (t) {
      var e = KC(qC(t)),
        i = QC(e);
      return 0 === i && "-" == ZC(e, 0) ? -0 : i;
    } : QC;
  Pi({
    global: !0,
    forced: parseFloat != eS
  }, {
    parseFloat: eS
  });
  var iS = st.parseFloat;
  !function (t) {
    t.exports = iS;
  }(VC);
  var nS = r(YC),
    oS = function () {
      function t(e, i) {
        zo(this, t), this.options = null, this.props = null;
      }
      return Ac(t, [{
        key: "setOptions",
        value: function (t) {
          t && WC.extend(this.options, t);
        }
      }, {
        key: "redraw",
        value: function () {
          return !1;
        }
      }, {
        key: "destroy",
        value: function () {}
      }, {
        key: "_isResized",
        value: function () {
          var t = this.props._previousWidth !== this.props.width || this.props._previousHeight !== this.props.height;
          return this.props._previousWidth = this.props.width, this.props._previousHeight = this.props.height, t;
        }
      }]), t;
    }(),
    rS = {},
    sS = {
      get exports() {
        return rS;
      },
      set exports(t) {
        rS = t;
      }
    },
    aS = Tn,
    lS = zr,
    hS = J,
    uS = RangeError;
  Pi({
    target: "String",
    proto: !0
  }, {
    repeat: function (t) {
      var e = lS(hS(this)),
        i = "",
        n = aS(t);
      if (n < 0 || n == 1 / 0) throw uS("Wrong number of repetitions");
      for (; n > 0; (n >>>= 1) && (e += e)) 1 & n && (i += e);
      return i;
    }
  });
  var cS = Qc("String").repeat,
    dS = dt,
    pS = cS,
    mS = String.prototype,
    fS = function (t) {
      var e = t.repeat;
      return "string" == typeof t || t === mS || dS(mS, t) && e === mS.repeat ? pS : e;
    },
    vS = fS;
  !function (t) {
    t.exports = vS;
  }(sS);
  var gS = r(rS),
    yS = {},
    bS = {
      get exports() {
        return yS;
      },
      set exports(t) {
        yS = t;
      }
    },
    wS = $r,
    kS = Math.floor,
    xS = function (t, e) {
      var i = t.length,
        n = kS(i / 2);
      return i < 8 ? _S(t, e) : CS(t, xS(wS(t, 0, n), e), xS(wS(t, n), e), e);
    },
    _S = function (t, e) {
      for (var i, n, o = t.length, r = 1; r < o;) {
        for (n = r, i = t[r]; n && e(t[n - 1], i) > 0;) t[n] = t[--n];
        n !== r++ && (t[n] = i);
      }
      return t;
    },
    CS = function (t, e, i, n) {
      for (var o = e.length, r = i.length, s = 0, a = 0; s < o || a < r;) t[s + a] = s < o && a < r ? n(e[s], i[a]) <= 0 ? e[s++] : i[a++] : s < o ? e[s++] : i[a++];
      return t;
    },
    SS = xS,
    DS = pt.match(/firefox\/(\d+)/i),
    TS = !!DS && +DS[1],
    OS = /MSIE|Trident/.test(pt),
    ES = pt.match(/AppleWebKit\/(\d+)\./),
    AS = !!ES && +ES[1],
    IS = Pi,
    PS = k,
    MS = Ft,
    NS = Jt,
    FS = Fn,
    RS = wg,
    LS = zr,
    jS = u,
    BS = SS,
    zS = Qd,
    HS = TS,
    GS = OS,
    WS = wt,
    YS = AS,
    VS = [],
    US = PS(VS.sort),
    XS = PS(VS.push),
    qS = jS(function () {
      VS.sort(void 0);
    }),
    KS = jS(function () {
      VS.sort(null);
    }),
    $S = zS("sort"),
    ZS = !jS(function () {
      if (WS) return WS < 70;
      if (!(HS && HS > 3)) {
        if (GS) return !0;
        if (YS) return YS < 603;
        var t,
          e,
          i,
          n,
          o = "";
        for (t = 65; t < 76; t++) {
          switch (e = String.fromCharCode(t), t) {
            case 66:
            case 69:
            case 70:
            case 72:
              i = 3;
              break;
            case 68:
            case 71:
              i = 4;
              break;
            default:
              i = 2;
          }
          for (n = 0; n < 47; n++) VS.push({
            k: e + n,
            v: i
          });
        }
        for (VS.sort(function (t, e) {
          return e.v - t.v;
        }), n = 0; n < VS.length; n++) e = VS[n].k.charAt(0), o.charAt(o.length - 1) !== e && (o += e);
        return "DGBEFHACIJK" !== o;
      }
    });
  IS({
    target: "Array",
    proto: !0,
    forced: qS || !KS || !$S || !ZS
  }, {
    sort: function (t) {
      void 0 !== t && MS(t);
      var e = NS(this);
      if (ZS) return void 0 === t ? US(e) : US(e, t);
      var i,
        n,
        o = [],
        r = FS(e);
      for (n = 0; n < r; n++) n in e && XS(o, e[n]);
      for (BS(o, function (t) {
        return function (e, i) {
          return void 0 === i ? -1 : void 0 === e ? 1 : void 0 !== t ? +t(e, i) || 0 : LS(e) > LS(i) ? 1 : -1;
        };
      }(t)), i = FS(o), n = 0; n < i;) e[n] = o[n++];
      for (; n < r;) RS(e, n++);
      return e;
    }
  });
  var QS = Qc("Array").sort,
    JS = dt,
    tD = QS,
    eD = Array.prototype,
    iD = function (t) {
      var e = t.sort;
      return t === eD || JS(eD, t) && e === eD.sort ? tD : e;
    },
    nD = iD;
  !function (t) {
    t.exports = nD;
  }(bS);
  var oD = r(yS);
  function rD(t, e, i) {
    if (i && !Cd(i)) return rD(t, e, [i]);
    if (e.hiddenDates = [], i && 1 == Cd(i)) {
      for (var n, o = 0; o < i.length; o++) if (void 0 === gS(i[o])) {
        var r = {};
        r.start = t(i[o].start).toDate().valueOf(), r.end = t(i[o].end).toDate().valueOf(), e.hiddenDates.push(r);
      }
      oD(n = e.hiddenDates).call(n, function (t, e) {
        return t.start - e.start;
      });
    }
  }
  function sD(t, e, i) {
    if (i && !Cd(i)) return sD(t, e, [i]);
    if (i && void 0 !== e.domProps.centerContainer.width) {
      rD(t, e, i);
      for (var n = t(e.range.start), o = t(e.range.end), r = (e.range.end - e.range.start) / e.domProps.centerContainer.width, s = 0; s < i.length; s++) if (void 0 !== gS(i[s])) {
        var a = t(i[s].start),
          l = t(i[s].end);
        if ("Invalid Date" == a._d) throw new Error("Supplied start date is not valid: ".concat(i[s].start));
        if ("Invalid Date" == l._d) throw new Error("Supplied end date is not valid: ".concat(i[s].end));
        if (l - a >= 4 * r) {
          var h = 0,
            u = o.clone();
          switch (gS(i[s])) {
            case "daily":
              a.day() != l.day() && (h = 1), a.dayOfYear(n.dayOfYear()), a.year(n.year()), a.subtract(7, "days"), l.dayOfYear(n.dayOfYear()), l.year(n.year()), l.subtract(7 - h, "days"), u.add(1, "weeks");
              break;
            case "weekly":
              var c = l.diff(a, "days"),
                d = a.day();
              a.date(n.date()), a.month(n.month()), a.year(n.year()), l = a.clone(), a.day(d), l.day(d), l.add(c, "days"), a.subtract(1, "weeks"), l.subtract(1, "weeks"), u.add(1, "weeks");
              break;
            case "monthly":
              a.month() != l.month() && (h = 1), a.month(n.month()), a.year(n.year()), a.subtract(1, "months"), l.month(n.month()), l.year(n.year()), l.subtract(1, "months"), l.add(h, "months"), u.add(1, "months");
              break;
            case "yearly":
              a.year() != l.year() && (h = 1), a.year(n.year()), a.subtract(1, "years"), l.year(n.year()), l.subtract(1, "years"), l.add(h, "years"), u.add(1, "years");
              break;
            default:
              return void console.log("Wrong repeat format, allowed are: daily, weekly, monthly, yearly. Given:", gS(i[s]));
          }
          for (; a < u;) switch (e.hiddenDates.push({
            start: a.valueOf(),
            end: l.valueOf()
          }), gS(i[s])) {
            case "daily":
              a.add(1, "days"), l.add(1, "days");
              break;
            case "weekly":
              a.add(1, "weeks"), l.add(1, "weeks");
              break;
            case "monthly":
              a.add(1, "months"), l.add(1, "months");
              break;
            case "yearly":
              a.add(1, "y"), l.add(1, "y");
              break;
            default:
              return void console.log("Wrong repeat format, allowed are: daily, weekly, monthly, yearly. Given:", gS(i[s]));
          }
          e.hiddenDates.push({
            start: a.valueOf(),
            end: l.valueOf()
          });
        }
      }
      aD(e);
      var p = gD(e.range.start, e.hiddenDates),
        m = gD(e.range.end, e.hiddenDates),
        f = e.range.start,
        v = e.range.end;
      1 == p.hidden && (f = 1 == e.range.startToFront ? p.startDate - 1 : p.endDate + 1), 1 == m.hidden && (v = 1 == e.range.endToFront ? m.startDate - 1 : m.endDate + 1), 1 != p.hidden && 1 != m.hidden || e.range._applyRange(f, v);
    }
  }
  function aD(t) {
    for (var e, i = t.hiddenDates, n = [], o = 0; o < i.length; o++) for (var r = 0; r < i.length; r++) o != r && 1 != i[r].remove && 1 != i[o].remove && (i[r].start >= i[o].start && i[r].end <= i[o].end ? i[r].remove = !0 : i[r].start >= i[o].start && i[r].start <= i[o].end ? (i[o].end = i[r].end, i[r].remove = !0) : i[r].end >= i[o].start && i[r].end <= i[o].end && (i[o].start = i[r].start, i[r].remove = !0));
    for (o = 0; o < i.length; o++) !0 !== i[o].remove && n.push(i[o]);
    t.hiddenDates = n, oD(e = t.hiddenDates).call(e, function (t, e) {
      return t.start - e.start;
    });
  }
  function lD(t, e, i) {
    for (var n = !1, o = e.current.valueOf(), r = 0; r < e.hiddenDates.length; r++) {
      var s = e.hiddenDates[r].start,
        a = e.hiddenDates[r].end;
      if (o >= s && o < a) {
        n = !0;
        break;
      }
    }
    if (1 == n && o < e._end.valueOf() && o != i) {
      var l = t(i),
        h = t(a);
      l.year() != h.year() ? e.switchedYear = !0 : l.month() != h.month() ? e.switchedMonth = !0 : l.dayOfYear() != h.dayOfYear() && (e.switchedDay = !0), e.current = h;
    }
  }
  function hD(t, e, i) {
    var n;
    if (0 == t.body.hiddenDates.length) return n = t.range.conversion(i), (e.valueOf() - n.offset) * n.scale;
    var o = gD(e, t.body.hiddenDates);
    1 == o.hidden && (e = o.startDate);
    var r = cD(t.body.hiddenDates, t.range.start, t.range.end);
    if (e < t.range.start) {
      n = t.range.conversion(i, r);
      var s = dD(t.body.hiddenDates, e, n.offset);
      return e = t.options.moment(e).toDate().valueOf(), e += s, -(n.offset - e.valueOf()) * n.scale;
    }
    if (e > t.range.end) {
      var a = {
        start: t.range.start,
        end: e
      };
      return e = pD(t.options.moment, t.body.hiddenDates, a, e), n = t.range.conversion(i, r), (e.valueOf() - n.offset) * n.scale;
    }
    return e = pD(t.options.moment, t.body.hiddenDates, t.range, e), n = t.range.conversion(i, r), (e.valueOf() - n.offset) * n.scale;
  }
  function uD(t, e, i) {
    if (0 == t.body.hiddenDates.length) {
      var n = t.range.conversion(i);
      return new Date(e / n.scale + n.offset);
    }
    var o = cD(t.body.hiddenDates, t.range.start, t.range.end),
      r = (t.range.end - t.range.start - o) * e / i,
      s = fD(t.body.hiddenDates, t.range, r);
    return new Date(s + r + t.range.start);
  }
  function cD(t, e, i) {
    for (var n = 0, o = 0; o < t.length; o++) {
      var r = t[o].start,
        s = t[o].end;
      r >= e && s < i && (n += s - r);
    }
    return n;
  }
  function dD(t, e, i) {
    for (var n = 0, o = 0; o < t.length; o++) {
      var r = t[o].start,
        s = t[o].end;
      r >= e && s <= i && (n += s - r);
    }
    return n;
  }
  function pD(t, e, i, n) {
    return n = t(n).toDate().valueOf(), n -= mD(t, e, i, n);
  }
  function mD(t, e, i, n) {
    var o = 0;
    n = t(n).toDate().valueOf();
    for (var r = 0; r < e.length; r++) {
      var s = e[r].start,
        a = e[r].end;
      s >= i.start && a < i.end && n >= a && (o += a - s);
    }
    return o;
  }
  function fD(t, e, i) {
    for (var n = 0, o = 0, r = e.start, s = 0; s < t.length; s++) {
      var a = t[s].start,
        l = t[s].end;
      if (a >= e.start && l < e.end) {
        if (o += a - r, r = l, o >= i) break;
        n += l - a;
      }
    }
    return n;
  }
  function vD(t, e, i, n) {
    var o = gD(e, t);
    return 1 == o.hidden ? i < 0 ? 1 == n ? o.startDate - (o.endDate - e) - 1 : o.startDate - 1 : 1 == n ? o.endDate + (e - o.startDate) + 1 : o.endDate + 1 : e;
  }
  function gD(t, e) {
    for (var i = 0; i < e.length; i++) {
      var n = e[i].start,
        o = e[i].end;
      if (t >= n && t < o) return {
        hidden: !0,
        startDate: n,
        endDate: o
      };
    }
    return {
      hidden: !1,
      startDate: n,
      endDate: o
    };
  }
  var yD = Object.freeze({
    __proto__: null,
    convertHiddenOptions: rD,
    correctTimeForHidden: pD,
    getAccumulatedHiddenDuration: fD,
    getHiddenDurationBefore: mD,
    getHiddenDurationBeforeStart: dD,
    getHiddenDurationBetween: cD,
    getIsHidden: gD,
    printDates: function (t) {
      for (var e = 0; e < t.length; e++) console.log(e, new Date(t[e].start), new Date(t[e].end), t[e].start, t[e].end, t[e].remove);
    },
    removeDuplicates: aD,
    snapAwayFromHidden: vD,
    stepOverHiddenDates: lD,
    toScreen: hD,
    toTime: uD,
    updateHiddenDates: sD
  });
  function bD(t) {
    var e = function () {
      if ("undefined" == typeof Reflect || !Bo) return !1;
      if (Bo.sham) return !1;
      if ("function" == typeof Proxy) return !0;
      try {
        return Boolean.prototype.valueOf.call(Bo(Boolean, [], function () {})), !0;
      } catch (t) {
        return !1;
      }
    }();
    return function () {
      var i,
        n = wd(t);
      if (e) {
        var o = wd(this).constructor;
        i = Bo(n, arguments, o);
      } else i = n.apply(this, arguments);
      return hd(this, i);
    };
  }
  var wD = function (t) {
    ld(i, t);
    var e = bD(i);
    function i(t, n) {
      var o, r, s, a, l, h, u, c;
      zo(this, i), c = e.call(this);
      var d = up().hours(0).minutes(0).seconds(0).milliseconds(0),
        p = d.clone().add(-3, "days").valueOf(),
        m = d.clone().add(3, "days").valueOf();
      return c.millisecondsPerPixelCache = void 0, void 0 === n ? (c.start = p, c.end = m) : (c.start = n.start || p, c.end = n.end || m), c.rolling = !1, c.body = t, c.deltaDifference = 0, c.scaleOffset = 0, c.startToFront = !1, c.endToFront = !0, c.defaultOptions = {
        rtl: !1,
        start: null,
        end: null,
        moment: up,
        direction: "horizontal",
        moveable: !0,
        zoomable: !0,
        min: null,
        max: null,
        zoomMin: 10,
        zoomMax: 31536e10,
        rollingMode: {
          follow: !1,
          offset: .5
        }
      }, c.options = WC.extend({}, c.defaultOptions), c.props = {
        touch: {}
      }, c.animationTimer = null, c.body.emitter.on("panstart", Dd(o = c._onDragStart).call(o, Ic(c))), c.body.emitter.on("panmove", Dd(r = c._onDrag).call(r, Ic(c))), c.body.emitter.on("panend", Dd(s = c._onDragEnd).call(s, Ic(c))), c.body.emitter.on("mousewheel", Dd(a = c._onMouseWheel).call(a, Ic(c))), c.body.emitter.on("touch", Dd(l = c._onTouch).call(l, Ic(c))), c.body.emitter.on("pinch", Dd(h = c._onPinch).call(h, Ic(c))), c.body.dom.rollingModeBtn.addEventListener("click", Dd(u = c.startRolling).call(u, Ic(c))), c.setOptions(n), c;
    }
    return Ac(i, [{
      key: "setOptions",
      value: function (t) {
        if (t) {
          WC.selectiveExtend(["animation", "direction", "min", "max", "zoomMin", "zoomMax", "moveable", "zoomable", "moment", "activate", "hiddenDates", "zoomKey", "zoomFriction", "rtl", "showCurrentTime", "rollingMode", "horizontalScroll"], this.options, t), t.rollingMode && t.rollingMode.follow && this.startRolling(), ("start" in t || "end" in t) && this.setRange(t.start, t.end);
        }
      }
    }, {
      key: "startRolling",
      value: function () {
        var t = this;
        !function e() {
          t.stopRolling(), t.rolling = !0;
          var i = t.end - t.start,
            n = WC.convert(new Date(), "Date").valueOf(),
            o = t.options.rollingMode && t.options.rollingMode.offset || .5,
            r = n - i * o,
            s = n + i * (1 - o);
          t.setRange(r, s, {
            animation: !1
          }), (i = 1 / t.conversion(t.body.domProps.center.width).scale / 10) < 30 && (i = 30), i > 1e3 && (i = 1e3), t.body.dom.rollingModeBtn.style.visibility = "hidden", t.currentTimeTimer = qd(e, i);
        }();
      }
    }, {
      key: "stopRolling",
      value: function () {
        void 0 !== this.currentTimeTimer && (clearTimeout(this.currentTimeTimer), this.rolling = !1, this.body.dom.rollingModeBtn.style.visibility = "visible");
      }
    }, {
      key: "setRange",
      value: function (t, e, i, n, o) {
        i || (i = {}), !0 !== i.byUser && (i.byUser = !1);
        var r = this,
          s = null != t ? WC.convert(t, "Date").valueOf() : null,
          a = null != e ? WC.convert(e, "Date").valueOf() : null;
        if (this._cancelAnimation(), this.millisecondsPerPixelCache = void 0, i.animation) {
          var l,
            h = this.start,
            u = this.end,
            c = "object" === kc(i.animation) && "duration" in i.animation ? i.animation.duration : 500,
            d = "object" === kc(i.animation) && "easingFunction" in i.animation ? i.animation.easingFunction : "easeInOutQuad",
            p = WC.easingFunctions[d];
          if (!p) throw new Error(jv(l = "Unknown easing function ".concat($b(d), ". Choose from: ")).call(l, Wm(WC.easingFunctions).join(", ")));
          var m = Zv(),
            f = !1;
          return function t() {
            if (!r.props.touch.dragging) {
              var e = Zv() - m,
                l = p(e / c),
                d = e > c,
                g = d || null === s ? s : h + (s - h) * l,
                y = d || null === a ? a : u + (a - u) * l;
              v = r._applyRange(g, y), sD(r.options.moment, r.body, r.options.hiddenDates), f = f || v;
              var b = {
                start: new Date(r.start),
                end: new Date(r.end),
                byUser: i.byUser,
                event: i.event
              };
              if (o && o(l, v, d), v && r.body.emitter.emit("rangechange", b), d) {
                if (f && (r.body.emitter.emit("rangechanged", b), n)) return n();
              } else r.animationTimer = qd(t, 20);
            }
          }();
        }
        var v = this._applyRange(s, a);
        if (sD(this.options.moment, this.body, this.options.hiddenDates), v) {
          var g = {
            start: new Date(this.start),
            end: new Date(this.end),
            byUser: i.byUser,
            event: i.event
          };
          if (this.body.emitter.emit("rangechange", g), clearTimeout(r.timeoutID), r.timeoutID = qd(function () {
            r.body.emitter.emit("rangechanged", g);
          }, 200), n) return n();
        }
      }
    }, {
      key: "getMillisecondsPerPixel",
      value: function () {
        return void 0 === this.millisecondsPerPixelCache && (this.millisecondsPerPixelCache = (this.end - this.start) / this.body.dom.center.clientWidth), this.millisecondsPerPixelCache;
      }
    }, {
      key: "_cancelAnimation",
      value: function () {
        this.animationTimer && (clearTimeout(this.animationTimer), this.animationTimer = null);
      }
    }, {
      key: "_applyRange",
      value: function (t, e) {
        var i,
          n = null != t ? WC.convert(t, "Date").valueOf() : this.start,
          o = null != e ? WC.convert(e, "Date").valueOf() : this.end,
          r = null != this.options.max ? WC.convert(this.options.max, "Date").valueOf() : null,
          s = null != this.options.min ? WC.convert(this.options.min, "Date").valueOf() : null;
        if (isNaN(n) || null === n) throw new Error('Invalid start "'.concat(t, '"'));
        if (isNaN(o) || null === o) throw new Error('Invalid end "'.concat(e, '"'));
        if (o < n && (o = n), null !== s && n < s && (n += i = s - n, o += i, null != r && o > r && (o = r)), null !== r && o > r && (n -= i = o - r, o -= i, null != s && n < s && (n = s)), null !== this.options.zoomMin) {
          var a = nS(this.options.zoomMin);
          if (a < 0 && (a = 0), o - n < a) {
            this.end - this.start === a && n >= this.start - .5 && o <= this.end ? (n = this.start, o = this.end) : (n -= (i = a - (o - n)) / 2, o += i / 2);
          }
        }
        if (null !== this.options.zoomMax) {
          var l = nS(this.options.zoomMax);
          l < 0 && (l = 0), o - n > l && (this.end - this.start === l && n < this.start && o > this.end ? (n = this.start, o = this.end) : (n += (i = o - n - l) / 2, o -= i / 2));
        }
        var h = this.start != n || this.end != o;
        return n >= this.start && n <= this.end || o >= this.start && o <= this.end || this.start >= n && this.start <= o || this.end >= n && this.end <= o || this.body.emitter.emit("checkRangedItems"), this.start = n, this.end = o, h;
      }
    }, {
      key: "getRange",
      value: function () {
        return {
          start: this.start,
          end: this.end
        };
      }
    }, {
      key: "conversion",
      value: function (t, e) {
        return i.conversion(this.start, this.end, t, e);
      }
    }, {
      key: "_onDragStart",
      value: function (t) {
        this.deltaDifference = 0, this.previousDelta = 0, this.options.moveable && this._isInsideRange(t) && this.props.touch.allowDragging && (this.stopRolling(), this.props.touch.start = this.start, this.props.touch.end = this.end, this.props.touch.dragging = !0, this.body.dom.root && (this.body.dom.root.style.cursor = "move"));
      }
    }, {
      key: "_onDrag",
      value: function (t) {
        if (t && this.props.touch.dragging && this.options.moveable && this.props.touch.allowDragging) {
          var e = this.options.direction;
          kD(e);
          var i = "horizontal" == e ? t.deltaX : t.deltaY;
          i -= this.deltaDifference;
          var n = this.props.touch.end - this.props.touch.start;
          n -= cD(this.body.hiddenDates, this.start, this.end);
          var o,
            r = "horizontal" == e ? this.body.domProps.center.width : this.body.domProps.center.height;
          o = this.options.rtl ? i / r * n : -i / r * n;
          var s = this.props.touch.start + o,
            a = this.props.touch.end + o,
            l = vD(this.body.hiddenDates, s, this.previousDelta - i, !0),
            h = vD(this.body.hiddenDates, a, this.previousDelta - i, !0);
          if (l != s || h != a) return this.deltaDifference += i, this.props.touch.start = l, this.props.touch.end = h, void this._onDrag(t);
          this.previousDelta = i, this._applyRange(s, a);
          var u = new Date(this.start),
            c = new Date(this.end);
          this.body.emitter.emit("rangechange", {
            start: u,
            end: c,
            byUser: !0,
            event: t
          }), this.body.emitter.emit("panmove");
        }
      }
    }, {
      key: "_onDragEnd",
      value: function (t) {
        this.props.touch.dragging && this.options.moveable && this.props.touch.allowDragging && (this.props.touch.dragging = !1, this.body.dom.root && (this.body.dom.root.style.cursor = "auto"), this.body.emitter.emit("rangechanged", {
          start: new Date(this.start),
          end: new Date(this.end),
          byUser: !0,
          event: t
        }));
      }
    }, {
      key: "_onMouseWheel",
      value: function (t) {
        var e = 0;
        if (t.wheelDelta ? e = t.wheelDelta / 120 : t.detail ? e = -t.detail / 3 : t.deltaY && (e = -t.deltaY / 3), !(this.options.zoomKey && !t[this.options.zoomKey] && this.options.zoomable || !this.options.zoomable && this.options.moveable) && this.options.zoomable && this.options.moveable && this._isInsideRange(t) && e) {
          var i,
            n,
            o = this.options.zoomFriction || 5;
          if (i = e < 0 ? 1 - e / o : 1 / (1 + e / o), this.rolling) {
            var r = this.options.rollingMode && this.options.rollingMode.offset || .5;
            n = this.start + (this.end - this.start) * r;
          } else {
            var s = this.getPointer({
              x: t.clientX,
              y: t.clientY
            }, this.body.dom.center);
            n = this._pointerToDate(s);
          }
          this.zoom(i, n, e, t), t.preventDefault();
        }
      }
    }, {
      key: "_onTouch",
      value: function (t) {
        this.props.touch.start = this.start, this.props.touch.end = this.end, this.props.touch.allowDragging = !0, this.props.touch.center = null, this.props.touch.centerDate = null, this.scaleOffset = 0, this.deltaDifference = 0, WC.preventDefault(t);
      }
    }, {
      key: "_onPinch",
      value: function (t) {
        if (this.options.zoomable && this.options.moveable) {
          WC.preventDefault(t), this.props.touch.allowDragging = !1, this.props.touch.center || (this.props.touch.center = this.getPointer(t.center, this.body.dom.center), this.props.touch.centerDate = this._pointerToDate(this.props.touch.center)), this.stopRolling();
          var e = 1 / (t.scale + this.scaleOffset),
            i = this.props.touch.centerDate,
            n = cD(this.body.hiddenDates, this.start, this.end),
            o = mD(this.options.moment, this.body.hiddenDates, this, i),
            r = n - o,
            s = i - o + (this.props.touch.start - (i - o)) * e,
            a = i + r + (this.props.touch.end - (i + r)) * e;
          this.startToFront = 1 - e <= 0, this.endToFront = e - 1 <= 0;
          var l = vD(this.body.hiddenDates, s, 1 - e, !0),
            h = vD(this.body.hiddenDates, a, e - 1, !0);
          l == s && h == a || (this.props.touch.start = l, this.props.touch.end = h, this.scaleOffset = 1 - t.scale, s = l, a = h);
          var u = {
            animation: !1,
            byUser: !0,
            event: t
          };
          this.setRange(s, a, u), this.startToFront = !1, this.endToFront = !0;
        }
      }
    }, {
      key: "_isInsideRange",
      value: function (t) {
        var e = t.center ? t.center.x : t.clientX,
          i = this.body.dom.centerContainer.getBoundingClientRect(),
          n = this.options.rtl ? e - i.left : i.right - e,
          o = this.body.util.toTime(n);
        return o >= this.start && o <= this.end;
      }
    }, {
      key: "_pointerToDate",
      value: function (t) {
        var e,
          i = this.options.direction;
        if (kD(i), "horizontal" == i) return this.body.util.toTime(t.x).valueOf();
        var n = this.body.domProps.center.height;
        return e = this.conversion(n), t.y / e.scale + e.offset;
      }
    }, {
      key: "getPointer",
      value: function (t, e) {
        var i = e.getBoundingClientRect();
        return this.options.rtl ? {
          x: i.right - t.x,
          y: t.y - i.top
        } : {
          x: t.x - i.left,
          y: t.y - i.top
        };
      }
    }, {
      key: "zoom",
      value: function (t, e, i, n) {
        null == e && (e = (this.start + this.end) / 2);
        var o = cD(this.body.hiddenDates, this.start, this.end),
          r = mD(this.options.moment, this.body.hiddenDates, this, e),
          s = o - r,
          a = e - r + (this.start - (e - r)) * t,
          l = e + s + (this.end - (e + s)) * t;
        this.startToFront = !(i > 0), this.endToFront = !(-i > 0);
        var h = vD(this.body.hiddenDates, a, i, !0),
          u = vD(this.body.hiddenDates, l, -i, !0);
        h == a && u == l || (a = h, l = u);
        var c = {
          animation: !1,
          byUser: !0,
          event: n
        };
        this.setRange(a, l, c), this.startToFront = !1, this.endToFront = !0;
      }
    }, {
      key: "move",
      value: function (t) {
        var e = this.end - this.start,
          i = this.start + e * t,
          n = this.end + e * t;
        this.start = i, this.end = n;
      }
    }, {
      key: "moveTo",
      value: function (t) {
        var e = (this.start + this.end) / 2 - t,
          i = this.start - e,
          n = this.end - e;
        this.setRange(i, n, {
          animation: !1,
          byUser: !0,
          event: null
        });
      }
    }], [{
      key: "conversion",
      value: function (t, e, i, n) {
        return void 0 === n && (n = 0), 0 != i && e - t != 0 ? {
          offset: t,
          scale: i / (e - t - n)
        } : {
          offset: 0,
          scale: 1
        };
      }
    }]), i;
  }(oS);
  function kD(t) {
    if ("horizontal" != t && "vertical" != t) throw new TypeError('Unknown direction "'.concat(t, '". Choose "horizontal" or "vertical".'));
  }
  var xD = {},
    _D = {
      get exports() {
        return xD;
      },
      set exports(t) {
        xD = t;
      }
    },
    CD = ta.some;
  Pi({
    target: "Array",
    proto: !0,
    forced: !Qd("some")
  }, {
    some: function (t) {
      return CD(this, t, arguments.length > 1 ? arguments[1] : void 0);
    }
  });
  var SD = Qc("Array").some,
    DD = dt,
    TD = SD,
    OD = Array.prototype,
    ED = function (t) {
      var e = t.some;
      return t === OD || DD(OD, t) && e === OD.some ? TD : e;
    },
    AD = ED;
  !function (t) {
    t.exports = AD;
  }(_D);
  var ID = r(xD),
    PD = {},
    MD = st.setInterval;
  !function (t) {
    t.exports = MD;
  }({
    get exports() {
      return PD;
    },
    set exports(t) {
      PD = t;
    }
  });
  var ND,
    FD = r(PD),
    RD = null;
  "undefined" != typeof window ? ND = function t(e, i) {
    var n = i || {
      preventDefault: !1
    };
    if (e.Manager) {
      var o = e,
        r = function (e, i) {
          var r = Object.create(n);
          return i && o.assign(r, i), t(new o(e, r), r);
        };
      return o.assign(r, o), r.Manager = function (e, i) {
        var r = Object.create(n);
        return i && o.assign(r, i), t(new o.Manager(e, r), r);
      }, r;
    }
    var s = Object.create(e),
      a = e.element;
    function l(t) {
      return t.match(/[^ ]+/g);
    }
    function h(t) {
      if ("hammer.input" !== t.type) {
        if (t.srcEvent._handled || (t.srcEvent._handled = {}), t.srcEvent._handled[t.type]) return;
        t.srcEvent._handled[t.type] = !0;
      }
      var e = !1;
      t.stopPropagation = function () {
        e = !0;
      };
      var i = t.srcEvent.stopPropagation.bind(t.srcEvent);
      "function" == typeof i && (t.srcEvent.stopPropagation = function () {
        i(), t.stopPropagation();
      }), t.firstTarget = RD;
      for (var n = RD; n && !e;) {
        var o = n.hammer;
        if (o) for (var r, s = 0; s < o.length; s++) if (r = o[s]._handlers[t.type]) for (var a = 0; a < r.length && !e; a++) r[a](t);
        n = n.parentNode;
      }
    }
    return a.hammer || (a.hammer = []), a.hammer.push(s), e.on("hammer.input", function (t) {
      !0 !== n.preventDefault && n.preventDefault !== t.pointerType || t.preventDefault(), t.isFirst && (RD = t.target);
    }), s._handlers = {}, s.on = function (t, i) {
      return l(t).forEach(function (t) {
        var n = s._handlers[t];
        n || (s._handlers[t] = n = [], e.on(t, h)), n.push(i);
      }), s;
    }, s.off = function (t, i) {
      return l(t).forEach(function (t) {
        var n = s._handlers[t];
        n && ((n = i ? n.filter(function (t) {
          return t !== i;
        }) : []).length > 0 ? s._handlers[t] = n : (e.off(t, h), delete s._handlers[t]));
      }), s;
    }, s.emit = function (t, i) {
      RD = i.target, e.emit(t, i);
    }, s.destroy = function () {
      var t = e.element.hammer,
        i = t.indexOf(s);
      -1 !== i && t.splice(i, 1), t.length || delete e.element.hammer, s._handlers = {}, e.destroy();
    }, s;
  }(window.Hammer || kx, {
    preventDefault: "mouse"
  }) : ND = function () {
    return function () {
      var t = function () {};
      return {
        on: t,
        off: t,
        destroy: t,
        emit: t,
        get: function (e) {
          return {
            set: t
          };
        }
      };
    }();
  };
  var LD = ND;
  function jD(t, e) {
    e.inputHandler = function (t) {
      t.isFirst && e(t);
    }, t.on("hammer.input", e.inputHandler);
  }
  var BD = function () {
    function t(e, i, n, o, r) {
      zo(this, t), this.moment = r && r.moment || up, this.options = r || {}, this.current = this.moment(), this._start = this.moment(), this._end = this.moment(), this.autoScale = !0, this.scale = "day", this.step = 1, this.setRange(e, i, n), this.switchedDay = !1, this.switchedMonth = !1, this.switchedYear = !1, Cd(o) ? this.hiddenDates = o : this.hiddenDates = null != o ? [o] : [], this.format = t.FORMAT;
    }
    return Ac(t, [{
      key: "setMoment",
      value: function (t) {
        this.moment = t, this.current = this.moment(this.current.valueOf()), this._start = this.moment(this._start.valueOf()), this._end = this.moment(this._end.valueOf());
      }
    }, {
      key: "setFormat",
      value: function (e) {
        var i = WC.deepExtend({}, t.FORMAT);
        this.format = WC.deepExtend(i, e);
      }
    }, {
      key: "setRange",
      value: function (t, e, i) {
        if (!(t instanceof Date && e instanceof Date)) throw "No legal start or end date in method setRange";
        this._start = null != t ? this.moment(t.valueOf()) : Zv(), this._end = null != e ? this.moment(e.valueOf()) : Zv(), this.autoScale && this.setMinimumStep(i);
      }
    }, {
      key: "start",
      value: function () {
        this.current = this._start.clone(), this.roundToMinor();
      }
    }, {
      key: "roundToMinor",
      value: function () {
        switch ("week" == this.scale && this.current.weekday(0), this.scale) {
          case "year":
            this.current.year(this.step * Math.floor(this.current.year() / this.step)), this.current.month(0);
          case "month":
            this.current.date(1);
          case "week":
          case "day":
          case "weekday":
            this.current.hours(0);
          case "hour":
            this.current.minutes(0);
          case "minute":
            this.current.seconds(0);
          case "second":
            this.current.milliseconds(0);
        }
        if (1 != this.step) {
          var t = this.current.clone();
          switch (this.scale) {
            case "millisecond":
              this.current.subtract(this.current.milliseconds() % this.step, "milliseconds");
              break;
            case "second":
              this.current.subtract(this.current.seconds() % this.step, "seconds");
              break;
            case "minute":
              this.current.subtract(this.current.minutes() % this.step, "minutes");
              break;
            case "hour":
              this.current.subtract(this.current.hours() % this.step, "hours");
              break;
            case "weekday":
            case "day":
              this.current.subtract((this.current.date() - 1) % this.step, "day");
              break;
            case "week":
              this.current.subtract(this.current.week() % this.step, "week");
              break;
            case "month":
              this.current.subtract(this.current.month() % this.step, "month");
              break;
            case "year":
              this.current.subtract(this.current.year() % this.step, "year");
          }
          t.isSame(this.current) || (this.current = this.moment(vD(this.hiddenDates, this.current.valueOf(), -1, !0)));
        }
      }
    }, {
      key: "hasNext",
      value: function () {
        return this.current.valueOf() <= this._end.valueOf();
      }
    }, {
      key: "next",
      value: function () {
        var t = this.current.valueOf();
        switch (this.scale) {
          case "millisecond":
            this.current.add(this.step, "millisecond");
            break;
          case "second":
            this.current.add(this.step, "second");
            break;
          case "minute":
            this.current.add(this.step, "minute");
            break;
          case "hour":
            this.current.add(this.step, "hour"), this.current.month() < 6 ? this.current.subtract(this.current.hours() % this.step, "hour") : this.current.hours() % this.step != 0 && this.current.add(this.step - this.current.hours() % this.step, "hour");
            break;
          case "weekday":
          case "day":
            this.current.add(this.step, "day");
            break;
          case "week":
            if (0 !== this.current.weekday()) this.current.weekday(0), this.current.add(this.step, "week");else if (!1 === this.options.showMajorLabels) this.current.add(this.step, "week");else {
              var e = this.current.clone();
              e.add(1, "week"), e.isSame(this.current, "month") ? this.current.add(this.step, "week") : (this.current.add(this.step, "week"), this.current.date(1));
            }
            break;
          case "month":
            this.current.add(this.step, "month");
            break;
          case "year":
            this.current.add(this.step, "year");
        }
        if (1 != this.step) switch (this.scale) {
          case "millisecond":
            this.current.milliseconds() > 0 && this.current.milliseconds() < this.step && this.current.milliseconds(0);
            break;
          case "second":
            this.current.seconds() > 0 && this.current.seconds() < this.step && this.current.seconds(0);
            break;
          case "minute":
            this.current.minutes() > 0 && this.current.minutes() < this.step && this.current.minutes(0);
            break;
          case "hour":
            this.current.hours() > 0 && this.current.hours() < this.step && this.current.hours(0);
            break;
          case "weekday":
          case "day":
            this.current.date() < this.step + 1 && this.current.date(1);
            break;
          case "week":
            this.current.week() < this.step && this.current.week(1);
            break;
          case "month":
            this.current.month() < this.step && this.current.month(0);
        }
        this.current.valueOf() == t && (this.current = this._end.clone()), this.switchedDay = !1, this.switchedMonth = !1, this.switchedYear = !1, lD(this.moment, this, t);
      }
    }, {
      key: "getCurrent",
      value: function () {
        return this.current.clone();
      }
    }, {
      key: "setScale",
      value: function (t) {
        t && "string" == typeof t.scale && (this.scale = t.scale, this.step = t.step > 0 ? t.step : 1, this.autoScale = !1);
      }
    }, {
      key: "setAutoScale",
      value: function (t) {
        this.autoScale = t;
      }
    }, {
      key: "setMinimumStep",
      value: function (t) {
        if (null != t) {
          var e = 31104e6,
            i = 2592e6,
            n = 864e5,
            o = 36e5,
            r = 6e4,
            s = 1e3;
          1e3 * e > t && (this.scale = "year", this.step = 1e3), 500 * e > t && (this.scale = "year", this.step = 500), 100 * e > t && (this.scale = "year", this.step = 100), 50 * e > t && (this.scale = "year", this.step = 50), 10 * e > t && (this.scale = "year", this.step = 10), 5 * e > t && (this.scale = "year", this.step = 5), e > t && (this.scale = "year", this.step = 1), 7776e6 > t && (this.scale = "month", this.step = 3), i > t && (this.scale = "month", this.step = 1), 6048e5 > t && this.options.showWeekScale && (this.scale = "week", this.step = 1), 1728e5 > t && (this.scale = "day", this.step = 2), n > t && (this.scale = "day", this.step = 1), 432e5 > t && (this.scale = "weekday", this.step = 1), 144e5 > t && (this.scale = "hour", this.step = 4), o > t && (this.scale = "hour", this.step = 1), 9e5 > t && (this.scale = "minute", this.step = 15), 6e5 > t && (this.scale = "minute", this.step = 10), 3e5 > t && (this.scale = "minute", this.step = 5), r > t && (this.scale = "minute", this.step = 1), 15e3 > t && (this.scale = "second", this.step = 15), 1e4 > t && (this.scale = "second", this.step = 10), 5e3 > t && (this.scale = "second", this.step = 5), s > t && (this.scale = "second", this.step = 1), 200 > t && (this.scale = "millisecond", this.step = 200), 100 > t && (this.scale = "millisecond", this.step = 100), 50 > t && (this.scale = "millisecond", this.step = 50), 10 > t && (this.scale = "millisecond", this.step = 10), 5 > t && (this.scale = "millisecond", this.step = 5), 1 > t && (this.scale = "millisecond", this.step = 1);
        }
      }
    }, {
      key: "isMajor",
      value: function () {
        if (1 == this.switchedYear) switch (this.scale) {
          case "year":
          case "month":
          case "week":
          case "weekday":
          case "day":
          case "hour":
          case "minute":
          case "second":
          case "millisecond":
            return !0;
          default:
            return !1;
        } else if (1 == this.switchedMonth) switch (this.scale) {
          case "week":
          case "weekday":
          case "day":
          case "hour":
          case "minute":
          case "second":
          case "millisecond":
            return !0;
          default:
            return !1;
        } else if (1 == this.switchedDay) switch (this.scale) {
          case "millisecond":
          case "second":
          case "minute":
          case "hour":
            return !0;
          default:
            return !1;
        }
        var t = this.moment(this.current);
        switch (this.scale) {
          case "millisecond":
            return 0 == t.milliseconds();
          case "second":
            return 0 == t.seconds();
          case "minute":
            return 0 == t.hours() && 0 == t.minutes();
          case "hour":
            return 0 == t.hours();
          case "weekday":
          case "day":
            return this.options.showWeekScale ? 1 == t.isoWeekday() : 1 == t.date();
          case "week":
            return 1 == t.date();
          case "month":
            return 0 == t.month();
          default:
            return !1;
        }
      }
    }, {
      key: "getLabelMinor",
      value: function (t) {
        if (null == t && (t = this.current), t instanceof Date && (t = this.moment(t)), "function" == typeof this.format.minorLabels) return this.format.minorLabels(t, this.scale, this.step);
        var e = this.format.minorLabels[this.scale];
        return "week" === this.scale && 1 === t.date() && 0 !== t.weekday() ? "" : e && e.length > 0 ? this.moment(t).format(e) : "";
      }
    }, {
      key: "getLabelMajor",
      value: function (t) {
        if (null == t && (t = this.current), t instanceof Date && (t = this.moment(t)), "function" == typeof this.format.majorLabels) return this.format.majorLabels(t, this.scale, this.step);
        var e = this.format.majorLabels[this.scale];
        return e && e.length > 0 ? this.moment(t).format(e) : "";
      }
    }, {
      key: "getClassName",
      value: function () {
        var t,
          e = this.moment,
          i = this.moment(this.current),
          n = i.locale ? i.locale("en") : i.lang("en"),
          o = this.step,
          r = [];
        function s(t) {
          return t / o % 2 == 0 ? " vis-even" : " vis-odd";
        }
        function a(t) {
          return t.isSame(Zv(), "day") ? " vis-today" : t.isSame(e().add(1, "day"), "day") ? " vis-tomorrow" : t.isSame(e().add(-1, "day"), "day") ? " vis-yesterday" : "";
        }
        function l(t) {
          return t.isSame(Zv(), "week") ? " vis-current-week" : "";
        }
        function h(t) {
          return t.isSame(Zv(), "month") ? " vis-current-month" : "";
        }
        switch (this.scale) {
          case "millisecond":
            r.push(a(n)), r.push(s(n.milliseconds()));
            break;
          case "second":
            r.push(a(n)), r.push(s(n.seconds()));
            break;
          case "minute":
            r.push(a(n)), r.push(s(n.minutes()));
            break;
          case "hour":
            r.push(jv(t = "vis-h".concat(n.hours())).call(t, 4 == this.step ? "-h" + (n.hours() + 4) : "")), r.push(a(n)), r.push(s(n.hours()));
            break;
          case "weekday":
            r.push("vis-".concat(n.format("dddd").toLowerCase())), r.push(a(n)), r.push(l(n)), r.push(s(n.date()));
            break;
          case "day":
            r.push("vis-day".concat(n.date())), r.push("vis-".concat(n.format("MMMM").toLowerCase())), r.push(a(n)), r.push(h(n)), r.push(this.step <= 2 ? a(n) : ""), r.push(this.step <= 2 ? "vis-".concat(n.format("dddd").toLowerCase()) : ""), r.push(s(n.date() - 1));
            break;
          case "week":
            r.push("vis-week".concat(n.format("w"))), r.push(l(n)), r.push(s(n.week()));
            break;
          case "month":
            r.push("vis-".concat(n.format("MMMM").toLowerCase())), r.push(h(n)), r.push(s(n.month()));
            break;
          case "year":
            r.push("vis-year".concat(n.year())), r.push(function (t) {
              return t.isSame(Zv(), "year") ? " vis-current-year" : "";
            }(n)), r.push(s(n.year()));
        }
        return Cp(r).call(r, String).join(" ");
      }
    }], [{
      key: "snap",
      value: function (t, e, i) {
        var n = up(t);
        if ("year" == e) {
          var o = n.year() + Math.round(n.month() / 12);
          n.year(Math.round(o / i) * i), n.month(0), n.date(0), n.hours(0), n.minutes(0), n.seconds(0), n.milliseconds(0);
        } else if ("month" == e) n.date() > 15 ? (n.date(1), n.add(1, "month")) : n.date(1), n.hours(0), n.minutes(0), n.seconds(0), n.milliseconds(0);else if ("week" == e) n.weekday() > 2 ? (n.weekday(0), n.add(1, "week")) : n.weekday(0), n.hours(0), n.minutes(0), n.seconds(0), n.milliseconds(0);else if ("day" == e) {
          switch (i) {
            case 5:
            case 2:
              n.hours(24 * Math.round(n.hours() / 24));
              break;
            default:
              n.hours(12 * Math.round(n.hours() / 12));
          }
          n.minutes(0), n.seconds(0), n.milliseconds(0);
        } else if ("weekday" == e) {
          switch (i) {
            case 5:
            case 2:
              n.hours(12 * Math.round(n.hours() / 12));
              break;
            default:
              n.hours(6 * Math.round(n.hours() / 6));
          }
          n.minutes(0), n.seconds(0), n.milliseconds(0);
        } else if ("hour" == e) {
          if (4 === i) n.minutes(60 * Math.round(n.minutes() / 60));else n.minutes(30 * Math.round(n.minutes() / 30));
          n.seconds(0), n.milliseconds(0);
        } else if ("minute" == e) {
          switch (i) {
            case 15:
            case 10:
              n.minutes(5 * Math.round(n.minutes() / 5)), n.seconds(0);
              break;
            case 5:
              n.seconds(60 * Math.round(n.seconds() / 60));
              break;
            default:
              n.seconds(30 * Math.round(n.seconds() / 30));
          }
          n.milliseconds(0);
        } else if ("second" == e) switch (i) {
          case 15:
          case 10:
            n.seconds(5 * Math.round(n.seconds() / 5)), n.milliseconds(0);
            break;
          case 5:
            n.milliseconds(1e3 * Math.round(n.milliseconds() / 1e3));
            break;
          default:
            n.milliseconds(500 * Math.round(n.milliseconds() / 500));
        } else if ("millisecond" == e) {
          var r = i > 5 ? i / 2 : 1;
          n.milliseconds(Math.round(n.milliseconds() / r) * r);
        }
        return n;
      }
    }]), t;
  }();
  function zD(t) {
    var e = function () {
      if ("undefined" == typeof Reflect || !Bo) return !1;
      if (Bo.sham) return !1;
      if ("function" == typeof Proxy) return !0;
      try {
        return Boolean.prototype.valueOf.call(Bo(Boolean, [], function () {})), !0;
      } catch (t) {
        return !1;
      }
    }();
    return function () {
      var i,
        n = wd(t);
      if (e) {
        var o = wd(this).constructor;
        i = Bo(n, arguments, o);
      } else i = n.apply(this, arguments);
      return hd(this, i);
    };
  }
  BD.FORMAT = {
    minorLabels: {
      millisecond: "SSS",
      second: "s",
      minute: "HH:mm",
      hour: "HH:mm",
      weekday: "ddd D",
      day: "D",
      week: "w",
      month: "MMM",
      year: "YYYY"
    },
    majorLabels: {
      millisecond: "HH:mm:ss",
      second: "D MMMM HH:mm",
      minute: "ddd D MMMM",
      hour: "ddd D MMMM",
      weekday: "MMMM YYYY",
      day: "MMMM YYYY",
      week: "MMMM YYYY",
      month: "YYYY",
      year: ""
    }
  };
  var HD = function (t) {
      ld(i, t);
      var e = zD(i);
      function i(t, n) {
        var o;
        return zo(this, i), (o = e.call(this)).dom = {
          foreground: null,
          lines: [],
          majorTexts: [],
          minorTexts: [],
          redundant: {
            lines: [],
            majorTexts: [],
            minorTexts: []
          }
        }, o.props = {
          range: {
            start: 0,
            end: 0,
            minimumStep: 0
          },
          lineTop: 0
        }, o.defaultOptions = {
          orientation: {
            axis: "bottom"
          },
          showMinorLabels: !0,
          showMajorLabels: !0,
          showWeekScale: !1,
          maxMinorChars: 7,
          format: WC.extend({}, BD.FORMAT),
          moment: up,
          timeAxis: null
        }, o.options = WC.extend({}, o.defaultOptions), o.body = t, o._create(), o.setOptions(n), o;
      }
      return Ac(i, [{
        key: "setOptions",
        value: function (t) {
          t && (WC.selectiveExtend(["showMinorLabels", "showMajorLabels", "showWeekScale", "maxMinorChars", "hiddenDates", "timeAxis", "moment", "rtl"], this.options, t), WC.selectiveDeepExtend(["format"], this.options, t), "orientation" in t && ("string" == typeof t.orientation ? this.options.orientation.axis = t.orientation : "object" === kc(t.orientation) && "axis" in t.orientation && (this.options.orientation.axis = t.orientation.axis)), "locale" in t && ("function" == typeof up.locale ? up.locale(t.locale) : up.lang(t.locale)));
        }
      }, {
        key: "_create",
        value: function () {
          this.dom.foreground = document.createElement("div"), this.dom.background = document.createElement("div"), this.dom.foreground.className = "vis-time-axis vis-foreground", this.dom.background.className = "vis-time-axis vis-background";
        }
      }, {
        key: "destroy",
        value: function () {
          this.dom.foreground.parentNode && this.dom.foreground.parentNode.removeChild(this.dom.foreground), this.dom.background.parentNode && this.dom.background.parentNode.removeChild(this.dom.background), this.body = null;
        }
      }, {
        key: "redraw",
        value: function () {
          var t = this.props,
            e = this.dom.foreground,
            i = this.dom.background,
            n = "top" == this.options.orientation.axis ? this.body.dom.top : this.body.dom.bottom,
            o = e.parentNode !== n;
          this._calculateCharSize();
          var r = this.options.showMinorLabels && "none" !== this.options.orientation.axis,
            s = this.options.showMajorLabels && "none" !== this.options.orientation.axis;
          t.minorLabelHeight = r ? t.minorCharHeight : 0, t.majorLabelHeight = s ? t.majorCharHeight : 0, t.height = t.minorLabelHeight + t.majorLabelHeight, t.width = e.offsetWidth, t.minorLineHeight = this.body.domProps.root.height - t.majorLabelHeight - ("top" == this.options.orientation.axis ? this.body.domProps.bottom.height : this.body.domProps.top.height), t.minorLineWidth = 1, t.majorLineHeight = t.minorLineHeight + t.majorLabelHeight, t.majorLineWidth = 1;
          var a = e.nextSibling,
            l = i.nextSibling;
          return e.parentNode && e.parentNode.removeChild(e), i.parentNode && i.parentNode.removeChild(i), e.style.height = "".concat(this.props.height, "px"), this._repaintLabels(), a ? n.insertBefore(e, a) : n.appendChild(e), l ? this.body.dom.backgroundVertical.insertBefore(i, l) : this.body.dom.backgroundVertical.appendChild(i), this._isResized() || o;
        }
      }, {
        key: "_repaintLabels",
        value: function () {
          var t = this.options.orientation.axis,
            e = WC.convert(this.body.range.start, "Number"),
            i = WC.convert(this.body.range.end, "Number"),
            n = this.body.util.toTime((this.props.minorCharWidth || 10) * this.options.maxMinorChars).valueOf(),
            o = n - mD(this.options.moment, this.body.hiddenDates, this.body.range, n);
          o -= this.body.util.toTime(0).valueOf();
          var r = new BD(new Date(e), new Date(i), o, this.body.hiddenDates, this.options);
          r.setMoment(this.options.moment), this.options.format && r.setFormat(this.options.format), this.options.timeAxis && r.setScale(this.options.timeAxis), this.step = r;
          var s,
            a,
            l,
            h,
            u,
            c,
            d = this.dom;
          d.redundant.lines = d.lines, d.redundant.majorTexts = d.majorTexts, d.redundant.minorTexts = d.minorTexts, d.lines = [], d.majorTexts = [], d.minorTexts = [];
          var p,
            m,
            f,
            v = 0,
            g = void 0,
            y = 0,
            b = 1e3;
          for (r.start(), a = r.getCurrent(), h = this.body.util.toScreen(a); r.hasNext() && y < b;) {
            if (y++, u = r.isMajor(), f = r.getClassName(), s = a, l = h, r.next(), a = r.getCurrent(), p = v, v = (h = this.body.util.toScreen(a)) - l, "week" === r.scale) c = !0;else c = v >= .4 * p;
            if (this.options.showMinorLabels && c) {
              var w = this._repaintMinorText(l, r.getLabelMinor(s), t, f);
              w.style.width = "".concat(v, "px");
            }
            u && this.options.showMajorLabels ? (l > 0 && (null == g && (g = l), w = this._repaintMajorText(l, r.getLabelMajor(s), t, f)), m = this._repaintMajorLine(l, v, t, f)) : c ? m = this._repaintMinorLine(l, v, t, f) : m && (m.style.width = "".concat(mb(m.style.width) + v, "px"));
          }
          if (y !== b || GD || (console.warn("Something is wrong with the Timeline scale. Limited drawing of grid lines to ".concat(b, " lines.")), GD = !0), this.options.showMajorLabels) {
            var k = this.body.util.toTime(0),
              x = r.getLabelMajor(k),
              _ = x.length * (this.props.majorCharWidth || 10) + 10;
            (null == g || _ < g) && this._repaintMajorText(0, x, t, f);
          }
          hp(WC).call(WC, this.dom.redundant, function (t) {
            for (; t.length;) {
              var e = t.pop();
              e && e.parentNode && e.parentNode.removeChild(e);
            }
          });
        }
      }, {
        key: "_repaintMinorText",
        value: function (t, e, i, n) {
          var o = this.dom.redundant.minorTexts.shift();
          if (!o) {
            var r = document.createTextNode("");
            (o = document.createElement("div")).appendChild(r), this.dom.foreground.appendChild(o);
          }
          this.dom.minorTexts.push(o), o.innerHTML = WC.xss(e);
          var s = "top" == i ? this.props.majorLabelHeight : 0;
          return this._setXY(o, t, s), o.className = "vis-text vis-minor ".concat(n), o;
        }
      }, {
        key: "_repaintMajorText",
        value: function (t, e, i, n) {
          var o = this.dom.redundant.majorTexts.shift();
          if (!o) {
            var r = document.createElement("div");
            (o = document.createElement("div")).appendChild(r), this.dom.foreground.appendChild(o);
          }
          o.childNodes[0].innerHTML = WC.xss(e), o.className = "vis-text vis-major ".concat(n);
          var s = "top" == i ? 0 : this.props.minorLabelHeight;
          return this._setXY(o, t, s), this.dom.majorTexts.push(o), o;
        }
      }, {
        key: "_setXY",
        value: function (t, e, i) {
          var n,
            o = this.options.rtl ? -1 * e : e;
          t.style.transform = jv(n = "translate(".concat(o, "px, ")).call(n, i, "px)");
        }
      }, {
        key: "_repaintMinorLine",
        value: function (t, e, i, n) {
          var o,
            r = this.dom.redundant.lines.shift();
          r || (r = document.createElement("div"), this.dom.background.appendChild(r)), this.dom.lines.push(r);
          var s = this.props;
          r.style.width = "".concat(e, "px"), r.style.height = "".concat(s.minorLineHeight, "px");
          var a = "top" == i ? s.majorLabelHeight : this.body.domProps.top.height,
            l = t - s.minorLineWidth / 2;
          return this._setXY(r, l, a), r.className = jv(o = "vis-grid ".concat(this.options.rtl ? "vis-vertical-rtl" : "vis-vertical", " vis-minor ")).call(o, n), r;
        }
      }, {
        key: "_repaintMajorLine",
        value: function (t, e, i, n) {
          var o,
            r = this.dom.redundant.lines.shift();
          r || (r = document.createElement("div"), this.dom.background.appendChild(r)), this.dom.lines.push(r);
          var s = this.props;
          r.style.width = "".concat(e, "px"), r.style.height = "".concat(s.majorLineHeight, "px");
          var a = "top" == i ? 0 : this.body.domProps.top.height,
            l = t - s.majorLineWidth / 2;
          return this._setXY(r, l, a), r.className = jv(o = "vis-grid ".concat(this.options.rtl ? "vis-vertical-rtl" : "vis-vertical", " vis-major ")).call(o, n), r;
        }
      }, {
        key: "_calculateCharSize",
        value: function () {
          this.dom.measureCharMinor || (this.dom.measureCharMinor = document.createElement("DIV"), this.dom.measureCharMinor.className = "vis-text vis-minor vis-measure", this.dom.measureCharMinor.style.position = "absolute", this.dom.measureCharMinor.appendChild(document.createTextNode("0")), this.dom.foreground.appendChild(this.dom.measureCharMinor)), this.props.minorCharHeight = this.dom.measureCharMinor.clientHeight, this.props.minorCharWidth = this.dom.measureCharMinor.clientWidth, this.dom.measureCharMajor || (this.dom.measureCharMajor = document.createElement("DIV"), this.dom.measureCharMajor.className = "vis-text vis-major vis-measure", this.dom.measureCharMajor.style.position = "absolute", this.dom.measureCharMajor.appendChild(document.createTextNode("0")), this.dom.foreground.appendChild(this.dom.measureCharMajor)), this.props.majorCharHeight = this.dom.measureCharMajor.clientHeight, this.props.majorCharWidth = this.dom.measureCharMajor.clientWidth;
        }
      }]), i;
    }(oS),
    GD = !1;
  function WD(t) {
    var e, i;
    this.active = !1, this.dom = {
      container: t
    }, this.dom.overlay = document.createElement("div"), this.dom.overlay.className = "vis-overlay", this.dom.container.appendChild(this.dom.overlay), this.hammer = LD(this.dom.overlay), this.hammer.on("tap", Dd(e = this._onTapOverlay).call(e, this));
    var n = this,
      o = ["tap", "doubletap", "press", "pinch", "pan", "panstart", "panmove", "panend"];
    hp(o).call(o, function (t) {
      n.hammer.on(t, function (t) {
        t.stopPropagation();
      });
    }), document && document.body && (this.onClick = function (e) {
      (function (t, e) {
        for (; t;) {
          if (t === e) return !0;
          t = t.parentNode;
        }
        return !1;
      })(e.target, t) || n.deactivate();
    }, document.body.addEventListener("click", this.onClick)), void 0 !== this.keycharm && this.keycharm.destroy(), this.keycharm = function (t) {
      var e,
        i = t && t.preventDefault || !1,
        n = t && t.container || window,
        o = {},
        r = {
          keydown: {},
          keyup: {}
        },
        s = {};
      for (e = 97; e <= 122; e++) s[String.fromCharCode(e)] = {
        code: e - 97 + 65,
        shift: !1
      };
      for (e = 65; e <= 90; e++) s[String.fromCharCode(e)] = {
        code: e,
        shift: !0
      };
      for (e = 0; e <= 9; e++) s["" + e] = {
        code: 48 + e,
        shift: !1
      };
      for (e = 1; e <= 12; e++) s["F" + e] = {
        code: 111 + e,
        shift: !1
      };
      for (e = 0; e <= 9; e++) s["num" + e] = {
        code: 96 + e,
        shift: !1
      };
      s["num*"] = {
        code: 106,
        shift: !1
      }, s["num+"] = {
        code: 107,
        shift: !1
      }, s["num-"] = {
        code: 109,
        shift: !1
      }, s["num/"] = {
        code: 111,
        shift: !1
      }, s["num."] = {
        code: 110,
        shift: !1
      }, s.left = {
        code: 37,
        shift: !1
      }, s.up = {
        code: 38,
        shift: !1
      }, s.right = {
        code: 39,
        shift: !1
      }, s.down = {
        code: 40,
        shift: !1
      }, s.space = {
        code: 32,
        shift: !1
      }, s.enter = {
        code: 13,
        shift: !1
      }, s.shift = {
        code: 16,
        shift: void 0
      }, s.esc = {
        code: 27,
        shift: !1
      }, s.backspace = {
        code: 8,
        shift: !1
      }, s.tab = {
        code: 9,
        shift: !1
      }, s.ctrl = {
        code: 17,
        shift: !1
      }, s.alt = {
        code: 18,
        shift: !1
      }, s.delete = {
        code: 46,
        shift: !1
      }, s.pageup = {
        code: 33,
        shift: !1
      }, s.pagedown = {
        code: 34,
        shift: !1
      }, s["="] = {
        code: 187,
        shift: !1
      }, s["-"] = {
        code: 189,
        shift: !1
      }, s["]"] = {
        code: 221,
        shift: !1
      }, s["["] = {
        code: 219,
        shift: !1
      };
      var a = function (t) {
          h(t, "keydown");
        },
        l = function (t) {
          h(t, "keyup");
        },
        h = function (t, e) {
          if (void 0 !== r[e][t.keyCode]) {
            for (var n = r[e][t.keyCode], o = 0; o < n.length; o++) (void 0 === n[o].shift || 1 == n[o].shift && 1 == t.shiftKey || 0 == n[o].shift && 0 == t.shiftKey) && n[o].fn(t);
            1 == i && t.preventDefault();
          }
        };
      return o.bind = function (t, e, i) {
        if (void 0 === i && (i = "keydown"), void 0 === s[t]) throw new Error("unsupported key: " + t);
        void 0 === r[i][s[t].code] && (r[i][s[t].code] = []), r[i][s[t].code].push({
          fn: e,
          shift: s[t].shift
        });
      }, o.bindAll = function (t, e) {
        for (var i in void 0 === e && (e = "keydown"), s) s.hasOwnProperty(i) && o.bind(i, t, e);
      }, o.getKey = function (t) {
        for (var e in s) if (s.hasOwnProperty(e)) {
          if (1 == t.shiftKey && 1 == s[e].shift && t.keyCode == s[e].code) return e;
          if (0 == t.shiftKey && 0 == s[e].shift && t.keyCode == s[e].code) return e;
          if (t.keyCode == s[e].code && "shift" == e) return e;
        }
        return "unknown key, currently not supported";
      }, o.unbind = function (t, e, i) {
        if (void 0 === i && (i = "keydown"), void 0 === s[t]) throw new Error("unsupported key: " + t);
        if (void 0 !== e) {
          var n = [],
            o = r[i][s[t].code];
          if (void 0 !== o) for (var a = 0; a < o.length; a++) o[a].fn == e && o[a].shift == s[t].shift || n.push(r[i][s[t].code][a]);
          r[i][s[t].code] = n;
        } else r[i][s[t].code] = [];
      }, o.reset = function () {
        r = {
          keydown: {},
          keyup: {}
        };
      }, o.destroy = function () {
        r = {
          keydown: {},
          keyup: {}
        }, n.removeEventListener("keydown", a, !0), n.removeEventListener("keyup", l, !0);
      }, n.addEventListener("keydown", a, !0), n.addEventListener("keyup", l, !0), o;
    }(), this.escListener = Dd(i = this.deactivate).call(i, this);
  }
  dw(WD.prototype), WD.current = null, WD.prototype.destroy = function () {
    this.deactivate(), this.dom.overlay.parentNode.removeChild(this.dom.overlay), this.onClick && document.body.removeEventListener("click", this.onClick), void 0 !== this.keycharm && this.keycharm.destroy(), this.keycharm = null, this.hammer.destroy(), this.hammer = null;
  }, WD.prototype.activate = function () {
    var t;
    WD.current && WD.current.deactivate(), WD.current = this, this.active = !0, this.dom.overlay.style.display = "none", WC.addClassName(this.dom.container, "vis-active"), this.emit("change"), this.emit("activate"), Dd(t = this.keycharm).call(t, "esc", this.escListener);
  }, WD.prototype.deactivate = function () {
    WD.current === this && (WD.current = null), this.active = !1, this.dom.overlay.style.display = "", WC.removeClassName(this.dom.container, "vis-active"), this.keycharm.unbind("esc", this.escListener), this.emit("change"), this.emit("deactivate");
  }, WD.prototype._onTapOverlay = function (t) {
    this.activate(), t.stopPropagation();
  };
  var YD = {
      current: "current",
      time: "time",
      deleteSelected: "Delete selected"
    },
    VD = {
      current: "attuale",
      time: "tempo",
      deleteSelected: "Cancella la selezione"
    },
    UD = {
      current: "huidige",
      time: "tijd",
      deleteSelected: "Selectie verwijderen"
    },
    XD = {
      current: "Aktuelle",
      time: "Zeit",
      deleteSelected: "Lösche Auswahl"
    },
    qD = {
      current: "actuel",
      time: "heure",
      deleteSelected: "Effacer la selection"
    },
    KD = {
      current: "corriente",
      time: "hora",
      deleteSelected: "Eliminar selección"
    },
    $D = {
      current: "поточний",
      time: "час",
      deleteSelected: "Видалити обране"
    },
    ZD = {
      current: "текущее",
      time: "время",
      deleteSelected: "Удалить выбранное"
    },
    QD = {
      current: "aktualny",
      time: "czas",
      deleteSelected: "Usuń wybrane"
    },
    JD = {
      current: "atual",
      time: "data",
      deleteSelected: "Apagar selecionado"
    },
    tT = {
      current: "現在",
      time: "時刻",
      deleteSelected: "選択されたものを削除"
    },
    eT = {
      current: "nuvarande",
      time: "tid",
      deleteSelected: "Radera valda"
    },
    iT = {
      current: "nåværende",
      time: "tid",
      deleteSelected: "Slett valgte"
    },
    nT = {
      current: "einamas",
      time: "laikas",
      deleteSelected: "Pašalinti pasirinktą"
    },
    oT = {
      en: YD,
      en_EN: YD,
      en_US: YD,
      it: VD,
      it_IT: VD,
      it_CH: VD,
      nl: UD,
      nl_NL: UD,
      nl_BE: UD,
      de: XD,
      de_DE: XD,
      fr: qD,
      fr_FR: qD,
      fr_CA: qD,
      fr_BE: qD,
      es: KD,
      es_ES: KD,
      uk: $D,
      uk_UA: $D,
      ru: ZD,
      ru_RU: ZD,
      pl: QD,
      pl_PL: QD,
      pt: JD,
      pt_BR: JD,
      pt_PT: JD,
      ja: tT,
      ja_JP: tT,
      lt: nT,
      lt_LT: nT,
      sv: eT,
      sv_SE: eT,
      nb: iT,
      nn: iT,
      nb_NO: iT,
      nn_NO: iT
    };
  function rT(t) {
    var e = function () {
      if ("undefined" == typeof Reflect || !Bo) return !1;
      if (Bo.sham) return !1;
      if ("function" == typeof Proxy) return !0;
      try {
        return Boolean.prototype.valueOf.call(Bo(Boolean, [], function () {})), !0;
      } catch (t) {
        return !1;
      }
    }();
    return function () {
      var i,
        n = wd(t);
      if (e) {
        var o = wd(this).constructor;
        i = Bo(n, arguments, o);
      } else i = n.apply(this, arguments);
      return hd(this, i);
    };
  }
  var sT = function (t) {
      ld(i, t);
      var e = rT(i);
      function i(t, n) {
        var o, r;
        zo(this, i), (r = e.call(this)).body = t, r.defaultOptions = {
          moment: up,
          locales: oT,
          locale: "en",
          id: void 0,
          title: void 0
        }, r.options = WC.extend({}, r.defaultOptions), r.setOptions(n), r.options.locales = WC.extend({}, oT, r.options.locales);
        var s = r.defaultOptions.locales[r.defaultOptions.locale];
        return hp(o = Wm(r.options.locales)).call(o, function (t) {
          r.options.locales[t] = WC.extend({}, s, r.options.locales[t]);
        }), n && null != n.time ? r.customTime = n.time : r.customTime = new Date(), r.eventParams = {}, r._create(), r;
      }
      return Ac(i, [{
        key: "setOptions",
        value: function (t) {
          t && WC.selectiveExtend(["moment", "locale", "locales", "id", "title", "rtl", "snap"], this.options, t);
        }
      }, {
        key: "_create",
        value: function () {
          var t,
            e,
            i,
            n = document.createElement("div");
          n["custom-time"] = this, n.className = "vis-custom-time ".concat(this.options.id || ""), n.style.position = "absolute", n.style.top = "0px", n.style.height = "100%", this.bar = n;
          var o = document.createElement("div");
          function r(t) {
            this.body.range._onMouseWheel(t);
          }
          o.style.position = "relative", o.style.top = "0px", this.options.rtl ? o.style.right = "-10px" : o.style.left = "-10px", o.style.height = "100%", o.style.width = "20px", o.addEventListener ? (o.addEventListener("mousewheel", Dd(r).call(r, this), !1), o.addEventListener("DOMMouseScroll", Dd(r).call(r, this), !1)) : o.attachEvent("onmousewheel", Dd(r).call(r, this)), n.appendChild(o), this.hammer = new LD(o), this.hammer.on("panstart", Dd(t = this._onDragStart).call(t, this)), this.hammer.on("panmove", Dd(e = this._onDrag).call(e, this)), this.hammer.on("panend", Dd(i = this._onDragEnd).call(i, this)), this.hammer.get("pan").set({
            threshold: 5,
            direction: LD.DIRECTION_ALL
          }), this.hammer.get("press").set({
            time: 1e4
          });
        }
      }, {
        key: "destroy",
        value: function () {
          this.hide(), this.hammer.destroy(), this.hammer = null, this.body = null;
        }
      }, {
        key: "redraw",
        value: function () {
          var t = this.body.dom.backgroundVertical;
          this.bar.parentNode != t && (this.bar.parentNode && this.bar.parentNode.removeChild(this.bar), t.appendChild(this.bar));
          var e = this.body.util.toScreen(this.customTime),
            i = this.options.locales[this.options.locale];
          i || (this.warned || (console.warn("WARNING: options.locales['".concat(this.options.locale, "'] not found. See https://visjs.github.io/vis-timeline/docs/timeline/#Localization")), this.warned = !0), i = this.options.locales.en);
          var n,
            o = this.options.title;
          void 0 === o ? o = (o = jv(n = "".concat(i.time, ": ")).call(n, this.options.moment(this.customTime).format("dddd, MMMM Do YYYY, H:mm:ss"))).charAt(0).toUpperCase() + o.substring(1) : "function" == typeof o && (o = o.call(this, this.customTime));
          return this.options.rtl ? this.bar.style.right = "".concat(e, "px") : this.bar.style.left = "".concat(e, "px"), this.bar.title = o, !1;
        }
      }, {
        key: "hide",
        value: function () {
          this.bar.parentNode && this.bar.parentNode.removeChild(this.bar);
        }
      }, {
        key: "setCustomTime",
        value: function (t) {
          this.customTime = WC.convert(t, "Date"), this.redraw();
        }
      }, {
        key: "getCustomTime",
        value: function () {
          return new Date(this.customTime.valueOf());
        }
      }, {
        key: "setCustomMarker",
        value: function (t, e) {
          var i,
            n,
            o = document.createElement("div");
          (o.className = "vis-custom-time-marker", o.innerHTML = WC.xss(t), o.style.position = "absolute", e) && (o.setAttribute("contenteditable", "true"), o.addEventListener("pointerdown", function () {
            o.focus();
          }), o.addEventListener("input", Dd(i = this._onMarkerChange).call(i, this)), o.title = t, o.addEventListener("blur", Dd(n = function (t) {
            this.title != t.target.innerHTML && (this._onMarkerChanged(t), this.title = t.target.innerHTML);
          }).call(n, this)));
          this.bar.appendChild(o);
        }
      }, {
        key: "setCustomTitle",
        value: function (t) {
          this.options.title = t;
        }
      }, {
        key: "_onDragStart",
        value: function (t) {
          this.eventParams.dragging = !0, this.eventParams.customTime = this.customTime, t.stopPropagation();
        }
      }, {
        key: "_onDrag",
        value: function (t) {
          if (this.eventParams.dragging) {
            var e = this.options.rtl ? -1 * t.deltaX : t.deltaX,
              i = this.body.util.toScreen(this.eventParams.customTime) + e,
              n = this.body.util.toTime(i),
              o = this.body.util.getScale(),
              r = this.body.util.getStep(),
              s = this.options.snap,
              a = s ? s(n, o, r) : n;
            this.setCustomTime(a), this.body.emitter.emit("timechange", {
              id: this.options.id,
              time: new Date(this.customTime.valueOf()),
              event: t
            }), t.stopPropagation();
          }
        }
      }, {
        key: "_onDragEnd",
        value: function (t) {
          this.eventParams.dragging && (this.body.emitter.emit("timechanged", {
            id: this.options.id,
            time: new Date(this.customTime.valueOf()),
            event: t
          }), t.stopPropagation());
        }
      }, {
        key: "_onMarkerChange",
        value: function (t) {
          this.body.emitter.emit("markerchange", {
            id: this.options.id,
            title: t.target.innerHTML,
            event: t
          }), t.stopPropagation();
        }
      }, {
        key: "_onMarkerChanged",
        value: function (t) {
          this.body.emitter.emit("markerchanged", {
            id: this.options.id,
            title: t.target.innerHTML,
            event: t
          }), t.stopPropagation();
        }
      }], [{
        key: "customTimeFromTarget",
        value: function (t) {
          for (var e = t.target; e;) {
            if (e.hasOwnProperty("custom-time")) return e["custom-time"];
            e = e.parentNode;
          }
          return null;
        }
      }]), i;
    }(oS),
    aT = function () {
      function t() {
        zo(this, t);
      }
      return Ac(t, [{
        key: "_create",
        value: function (t) {
          var e,
            i,
            n,
            o = this;
          this.dom = {}, this.dom.container = t, this.dom.container.style.position = "relative", this.dom.root = document.createElement("div"), this.dom.background = document.createElement("div"), this.dom.backgroundVertical = document.createElement("div"), this.dom.backgroundHorizontal = document.createElement("div"), this.dom.centerContainer = document.createElement("div"), this.dom.leftContainer = document.createElement("div"), this.dom.rightContainer = document.createElement("div"), this.dom.center = document.createElement("div"), this.dom.left = document.createElement("div"), this.dom.right = document.createElement("div"), this.dom.top = document.createElement("div"), this.dom.bottom = document.createElement("div"), this.dom.shadowTop = document.createElement("div"), this.dom.shadowBottom = document.createElement("div"), this.dom.shadowTopLeft = document.createElement("div"), this.dom.shadowBottomLeft = document.createElement("div"), this.dom.shadowTopRight = document.createElement("div"), this.dom.shadowBottomRight = document.createElement("div"), this.dom.rollingModeBtn = document.createElement("div"), this.dom.loadingScreen = document.createElement("div"), this.dom.root.className = "vis-timeline", this.dom.background.className = "vis-panel vis-background", this.dom.backgroundVertical.className = "vis-panel vis-background vis-vertical", this.dom.backgroundHorizontal.className = "vis-panel vis-background vis-horizontal", this.dom.centerContainer.className = "vis-panel vis-center", this.dom.leftContainer.className = "vis-panel vis-left", this.dom.rightContainer.className = "vis-panel vis-right", this.dom.top.className = "vis-panel vis-top", this.dom.bottom.className = "vis-panel vis-bottom", this.dom.left.className = "vis-content", this.dom.center.className = "vis-content", this.dom.right.className = "vis-content", this.dom.shadowTop.className = "vis-shadow vis-top", this.dom.shadowBottom.className = "vis-shadow vis-bottom", this.dom.shadowTopLeft.className = "vis-shadow vis-top", this.dom.shadowBottomLeft.className = "vis-shadow vis-bottom", this.dom.shadowTopRight.className = "vis-shadow vis-top", this.dom.shadowBottomRight.className = "vis-shadow vis-bottom", this.dom.rollingModeBtn.className = "vis-rolling-mode-btn", this.dom.loadingScreen.className = "vis-loading-screen", this.dom.root.appendChild(this.dom.background), this.dom.root.appendChild(this.dom.backgroundVertical), this.dom.root.appendChild(this.dom.backgroundHorizontal), this.dom.root.appendChild(this.dom.centerContainer), this.dom.root.appendChild(this.dom.leftContainer), this.dom.root.appendChild(this.dom.rightContainer), this.dom.root.appendChild(this.dom.top), this.dom.root.appendChild(this.dom.bottom), this.dom.root.appendChild(this.dom.rollingModeBtn), this.dom.centerContainer.appendChild(this.dom.center), this.dom.leftContainer.appendChild(this.dom.left), this.dom.rightContainer.appendChild(this.dom.right), this.dom.centerContainer.appendChild(this.dom.shadowTop), this.dom.centerContainer.appendChild(this.dom.shadowBottom), this.dom.leftContainer.appendChild(this.dom.shadowTopLeft), this.dom.leftContainer.appendChild(this.dom.shadowBottomLeft), this.dom.rightContainer.appendChild(this.dom.shadowTopRight), this.dom.rightContainer.appendChild(this.dom.shadowBottomRight), this.props = {
            root: {},
            background: {},
            centerContainer: {},
            leftContainer: {},
            rightContainer: {},
            center: {},
            left: {},
            right: {},
            top: {},
            bottom: {},
            border: {},
            scrollTop: 0,
            scrollTopMin: 0
          }, this.on("rangechange", function () {
            !0 === o.initialDrawDone && o._redraw();
          }), this.on("rangechanged", function () {
            o.initialRangeChangeDone || (o.initialRangeChangeDone = !0);
          }), this.on("touch", Dd(e = this._onTouch).call(e, this)), this.on("panmove", Dd(i = this._onDrag).call(i, this));
          var r = this;
          this._origRedraw = Dd(n = this._redraw).call(n, this), this._redraw = WC.throttle(this._origRedraw), this.on("_change", function (t) {
            r.itemSet && r.itemSet.initialItemSetDrawn && t && 1 == t.queue ? r._redraw() : r._origRedraw();
          }), this.hammer = new LD(this.dom.root);
          var s = this.hammer.get("pinch").set({
            enable: !0
          });
          s && function (t) {
            t.getTouchAction = function () {
              return ["pan-y"];
            };
          }(s), this.hammer.get("pan").set({
            threshold: 5,
            direction: LD.DIRECTION_ALL
          }), this.timelineListeners = {};
          var a,
            l,
            h = ["tap", "doubletap", "press", "pinch", "pan", "panstart", "panmove", "panend"];
          function u(t) {
            this.isActive() && this.emit("mousewheel", t);
            var e = 0,
              i = 0;
            if ("detail" in t && (i = -1 * t.detail), "wheelDelta" in t && (i = t.wheelDelta), "wheelDeltaY" in t && (i = t.wheelDeltaY), "wheelDeltaX" in t && (e = -1 * t.wheelDeltaX), "axis" in t && t.axis === t.HORIZONTAL_AXIS && (e = -1 * i, i = 0), "deltaY" in t && (i = -1 * t.deltaY), "deltaX" in t && (e = t.deltaX), t.deltaMode && (1 === t.deltaMode ? (e *= 40, i *= 40) : (e *= 40, i *= 800)), this.options.preferZoom) {
              if (!this.options.zoomKey || t[this.options.zoomKey]) return;
            } else if (this.options.zoomKey && t[this.options.zoomKey]) return;
            if (this.options.verticalScroll || this.options.horizontalScroll) if (this.options.verticalScroll && Math.abs(i) >= Math.abs(e)) {
              var n = this.props.scrollTop,
                o = n + i;
              if (this.isActive()) this._setScrollTop(o) !== n && (this._redraw(), this.emit("scroll", t), t.preventDefault());
            } else if (this.options.horizontalScroll) {
              var r = (Math.abs(e) >= Math.abs(i) ? e : i) / 120 * (this.range.end - this.range.start) / 20,
                s = this.range.start + r,
                a = this.range.end + r,
                l = {
                  animation: !1,
                  byUser: !0,
                  event: t
                };
              this.range.setRange(s, a, l), t.preventDefault();
            }
          }
          hp(h).call(h, function (t) {
            var e = function (e) {
              r.isActive() && r.emit(t, e);
            };
            r.hammer.on(t, e), r.timelineListeners[t] = e;
          }), jD(this.hammer, function (t) {
            r.emit("touch", t);
          }), a = this.hammer, (l = function (t) {
            r.emit("release", t);
          }).inputHandler = function (t) {
            t.isFinal && l(t);
          }, a.on("hammer.input", l.inputHandler);
          var c = "onwheel" in document.createElement("div") ? "wheel" : void 0 !== document.onmousewheel ? "mousewheel" : this.dom.centerContainer.addEventListener ? "DOMMouseScroll" : "onmousewheel";
          function d(t) {
            if (r.options.verticalScroll && (t.preventDefault(), r.isActive())) {
              var e = -t.target.scrollTop;
              r._setScrollTop(e), r._redraw(), r.emit("scrollSide", t);
            }
          }
          this.dom.top.addEventListener, this.dom.bottom.addEventListener, this.dom.centerContainer.addEventListener(c, Dd(u).call(u, this), !1), this.dom.top.addEventListener(c, Dd(u).call(u, this), !1), this.dom.bottom.addEventListener(c, Dd(u).call(u, this), !1), this.dom.left.parentNode.addEventListener("scroll", Dd(d).call(d, this)), this.dom.right.parentNode.addEventListener("scroll", Dd(d).call(d, this));
          var p = !1;
          function m(t) {
            var e;
            if (t.preventDefault && (r.emit("dragover", r.getEventProperties(t)), t.preventDefault()), Ob(e = t.target.className).call(e, "timeline") > -1 && !p) return t.dataTransfer.dropEffect = "move", p = !0, !1;
          }
          function f(t) {
            t.preventDefault && t.preventDefault(), t.stopPropagation && t.stopPropagation();
            try {
              var e = JSON.parse(t.dataTransfer.getData("text"));
              if (!e || !e.content) return;
            } catch (t) {
              return !1;
            }
            return p = !1, t.center = {
              x: t.clientX,
              y: t.clientY
            }, "item" !== e.target ? r.itemSet._onAddItem(t) : r.itemSet._onDropObjectOnItem(t), r.emit("drop", r.getEventProperties(t)), !1;
          }
          if (this.dom.center.addEventListener("dragover", Dd(m).call(m, this), !1), this.dom.center.addEventListener("drop", Dd(f).call(f, this), !1), this.customTimes = [], this.touch = {}, this.redrawCount = 0, this.initialDrawDone = !1, this.initialRangeChangeDone = !1, !t) throw new Error("No container provided");
          t.appendChild(this.dom.root), t.appendChild(this.dom.loadingScreen);
        }
      }, {
        key: "setOptions",
        value: function (t) {
          var e;
          if (t) {
            if (WC.selectiveExtend(["width", "height", "minHeight", "maxHeight", "autoResize", "start", "end", "clickToUse", "dataAttributes", "hiddenDates", "locale", "locales", "moment", "preferZoom", "rtl", "zoomKey", "horizontalScroll", "verticalScroll", "longSelectPressTime", "snap"], this.options, t), this.dom.rollingModeBtn.style.visibility = "hidden", this.options.rtl && (this.dom.container.style.direction = "rtl", this.dom.backgroundVertical.className = "vis-panel vis-background vis-vertical-rtl"), this.options.verticalScroll && (this.options.rtl ? this.dom.rightContainer.className = "vis-panel vis-right vis-vertical-scroll" : this.dom.leftContainer.className = "vis-panel vis-left vis-vertical-scroll"), "object" !== kc(this.options.orientation) && (this.options.orientation = {
              item: void 0,
              axis: void 0
            }), "orientation" in t && ("string" == typeof t.orientation ? this.options.orientation = {
              item: t.orientation,
              axis: t.orientation
            } : "object" === kc(t.orientation) && ("item" in t.orientation && (this.options.orientation.item = t.orientation.item), "axis" in t.orientation && (this.options.orientation.axis = t.orientation.axis))), "both" === this.options.orientation.axis) {
              if (!this.timeAxis2) {
                var i = this.timeAxis2 = new HD(this.body);
                i.setOptions = function (t) {
                  var e = t ? WC.extend({}, t) : {};
                  e.orientation = "top", HD.prototype.setOptions.call(i, e);
                }, this.components.push(i);
              }
            } else if (this.timeAxis2) {
              var n,
                o,
                r = Ob(n = this.components).call(n, this.timeAxis2);
              if (-1 !== r) zg(o = this.components).call(o, r, 1);
              this.timeAxis2.destroy(), this.timeAxis2 = null;
            }
            "function" == typeof t.drawPoints && (t.drawPoints = {
              onRender: t.drawPoints
            }), "hiddenDates" in this.options && rD(this.options.moment, this.body, this.options.hiddenDates), "clickToUse" in t && (t.clickToUse ? this.activator || (this.activator = new WD(this.dom.root)) : this.activator && (this.activator.destroy(), delete this.activator)), this._initAutoResize();
          }
          if (hp(e = this.components).call(e, function (e) {
            return e.setOptions(t);
          }), "configure" in t) {
            var s;
            this.configurator || (this.configurator = this._createConfigurator()), this.configurator.setOptions(t.configure);
            var a = WC.deepExtend({}, this.options);
            hp(s = this.components).call(s, function (t) {
              WC.deepExtend(a, t.options);
            }), this.configurator.setModuleOptions({
              global: a
            });
          }
          this._redraw();
        }
      }, {
        key: "isActive",
        value: function () {
          return !this.activator || this.activator.active;
        }
      }, {
        key: "destroy",
        value: function () {
          var t;
          for (var e in this.setItems(null), this.setGroups(null), this.off(), this._stopAutoResize(), this.dom.root.parentNode && this.dom.root.parentNode.removeChild(this.dom.root), this.dom = null, this.activator && (this.activator.destroy(), delete this.activator), this.timelineListeners) this.timelineListeners.hasOwnProperty(e) && delete this.timelineListeners[e];
          this.timelineListeners = null, this.hammer && this.hammer.destroy(), this.hammer = null, hp(t = this.components).call(t, function (t) {
            return t.destroy();
          }), this.body = null;
        }
      }, {
        key: "setCustomTime",
        value: function (t, e) {
          var i,
            n = Cp(i = this.customTimes).call(i, function (t) {
              return e === t.options.id;
            });
          if (0 === n.length) throw new Error("No custom time bar found with id ".concat($b(e)));
          n.length > 0 && n[0].setCustomTime(t);
        }
      }, {
        key: "getCustomTime",
        value: function (t) {
          var e,
            i = Cp(e = this.customTimes).call(e, function (e) {
              return e.options.id === t;
            });
          if (0 === i.length) throw new Error("No custom time bar found with id ".concat($b(t)));
          return i[0].getCustomTime();
        }
      }, {
        key: "setCustomTimeMarker",
        value: function (t, e, i) {
          var n,
            o = Cp(n = this.customTimes).call(n, function (t) {
              return t.options.id === e;
            });
          if (0 === o.length) throw new Error("No custom time bar found with id ".concat($b(e)));
          o.length > 0 && o[0].setCustomMarker(t, i);
        }
      }, {
        key: "setCustomTimeTitle",
        value: function (t, e) {
          var i,
            n = Cp(i = this.customTimes).call(i, function (t) {
              return t.options.id === e;
            });
          if (0 === n.length) throw new Error("No custom time bar found with id ".concat($b(e)));
          if (n.length > 0) return n[0].setCustomTitle(t);
        }
      }, {
        key: "getEventProperties",
        value: function (t) {
          return {
            event: t
          };
        }
      }, {
        key: "addCustomTime",
        value: function (t, e) {
          var i,
            n = void 0 !== t ? WC.convert(t, "Date") : new Date(),
            o = ID(i = this.customTimes).call(i, function (t) {
              return t.options.id === e;
            });
          if (o) throw new Error("A custom time with id ".concat($b(e), " already exists"));
          var r = new sT(this.body, WC.extend({}, this.options, {
            time: n,
            id: e,
            snap: this.itemSet ? this.itemSet.options.snap : this.options.snap
          }));
          return this.customTimes.push(r), this.components.push(r), this._redraw(), e;
        }
      }, {
        key: "removeCustomTime",
        value: function (t) {
          var e,
            i = this,
            n = Cp(e = this.customTimes).call(e, function (e) {
              return e.options.id === t;
            });
          if (0 === n.length) throw new Error("No custom time bar found with id ".concat($b(t)));
          hp(n).call(n, function (t) {
            var e, n, o, r;
            zg(e = i.customTimes).call(e, Ob(n = i.customTimes).call(n, t), 1), zg(o = i.components).call(o, Ob(r = i.components).call(r, t), 1), t.destroy();
          });
        }
      }, {
        key: "getVisibleItems",
        value: function () {
          return this.itemSet && this.itemSet.getVisibleItems() || [];
        }
      }, {
        key: "getItemsAtCurrentTime",
        value: function (t) {
          return this.time = t, this.itemSet && this.itemSet.getItemsAtCurrentTime(this.time) || [];
        }
      }, {
        key: "getVisibleGroups",
        value: function () {
          return this.itemSet && this.itemSet.getVisibleGroups() || [];
        }
      }, {
        key: "fit",
        value: function (t, e) {
          var i = this.getDataRange();
          if (null !== i.min || null !== i.max) {
            var n = i.max - i.min,
              o = new Date(i.min.valueOf() - .01 * n),
              r = new Date(i.max.valueOf() + .01 * n),
              s = !t || void 0 === t.animation || t.animation;
            this.range.setRange(o, r, {
              animation: s
            }, e);
          }
        }
      }, {
        key: "getDataRange",
        value: function () {
          throw new Error("Cannot invoke abstract method getDataRange");
        }
      }, {
        key: "setWindow",
        value: function (t, e, i, n) {
          var o, r;
          "function" == typeof arguments[2] && (n = arguments[2], i = {}), 1 == arguments.length ? (o = void 0 === (r = arguments[0]).animation || r.animation, this.range.setRange(r.start, r.end, {
            animation: o
          })) : 2 == arguments.length && "function" == typeof arguments[1] ? (n = arguments[1], o = void 0 === (r = arguments[0]).animation || r.animation, this.range.setRange(r.start, r.end, {
            animation: o
          }, n)) : (o = !i || void 0 === i.animation || i.animation, this.range.setRange(t, e, {
            animation: o
          }, n));
        }
      }, {
        key: "moveTo",
        value: function (t, e, i) {
          "function" == typeof arguments[1] && (i = arguments[1], e = {});
          var n = this.range.end - this.range.start,
            o = WC.convert(t, "Date").valueOf(),
            r = o - n / 2,
            s = o + n / 2,
            a = !e || void 0 === e.animation || e.animation;
          this.range.setRange(r, s, {
            animation: a
          }, i);
        }
      }, {
        key: "getWindow",
        value: function () {
          var t = this.range.getRange();
          return {
            start: new Date(t.start),
            end: new Date(t.end)
          };
        }
      }, {
        key: "zoomIn",
        value: function (t, e, i) {
          if (!(!t || t < 0 || t > 1)) {
            "function" == typeof arguments[1] && (i = arguments[1], e = {});
            var n = this.getWindow(),
              o = n.start.valueOf(),
              r = n.end.valueOf(),
              s = r - o,
              a = (s - s / (1 + t)) / 2,
              l = o + a,
              h = r - a;
            this.setWindow(l, h, e, i);
          }
        }
      }, {
        key: "zoomOut",
        value: function (t, e, i) {
          if (!(!t || t < 0 || t > 1)) {
            "function" == typeof arguments[1] && (i = arguments[1], e = {});
            var n = this.getWindow(),
              o = n.start.valueOf(),
              r = n.end.valueOf(),
              s = r - o,
              a = o - s * t / 2,
              l = r + s * t / 2;
            this.setWindow(a, l, e, i);
          }
        }
      }, {
        key: "redraw",
        value: function () {
          this._redraw();
        }
      }, {
        key: "_redraw",
        value: function () {
          var t;
          this.redrawCount++;
          var e = this.dom;
          if (e && e.container && 0 != e.root.offsetWidth) {
            var i = !1,
              n = this.options,
              o = this.props;
            sD(this.options.moment, this.body, this.options.hiddenDates), "top" == n.orientation ? (WC.addClassName(e.root, "vis-top"), WC.removeClassName(e.root, "vis-bottom")) : (WC.removeClassName(e.root, "vis-top"), WC.addClassName(e.root, "vis-bottom")), n.rtl ? (WC.addClassName(e.root, "vis-rtl"), WC.removeClassName(e.root, "vis-ltr")) : (WC.addClassName(e.root, "vis-ltr"), WC.removeClassName(e.root, "vis-rtl")), e.root.style.maxHeight = WC.option.asSize(n.maxHeight, ""), e.root.style.minHeight = WC.option.asSize(n.minHeight, ""), e.root.style.width = WC.option.asSize(n.width, "");
            var r = e.root.offsetWidth;
            o.border.left = 1, o.border.right = 1, o.border.top = 1, o.border.bottom = 1, o.center.height = e.center.offsetHeight, o.left.height = e.left.offsetHeight, o.right.height = e.right.offsetHeight, o.top.height = e.top.clientHeight || -o.border.top, o.bottom.height = Math.round(e.bottom.getBoundingClientRect().height) || e.bottom.clientHeight || -o.border.bottom;
            var s = Math.max(o.left.height, o.center.height, o.right.height),
              a = o.top.height + s + o.bottom.height + o.border.top + o.border.bottom;
            e.root.style.height = WC.option.asSize(n.height, "".concat(a, "px")), o.root.height = e.root.offsetHeight, o.background.height = o.root.height;
            var l = o.root.height - o.top.height - o.bottom.height;
            o.centerContainer.height = l, o.leftContainer.height = l, o.rightContainer.height = o.leftContainer.height, o.root.width = r, o.background.width = o.root.width, this.initialDrawDone || (o.scrollbarWidth = WC.getScrollBarWidth());
            var h = e.leftContainer.clientWidth,
              u = e.rightContainer.clientWidth;
            n.verticalScroll ? n.rtl ? (o.left.width = h || -o.border.left, o.right.width = u + o.scrollbarWidth || -o.border.right) : (o.left.width = h + o.scrollbarWidth || -o.border.left, o.right.width = u || -o.border.right) : (o.left.width = h || -o.border.left, o.right.width = u || -o.border.right), this._setDOM();
            var c = this._updateScrollTop();
            "top" != n.orientation.item && (c += Math.max(o.centerContainer.height - o.center.height - o.border.top - o.border.bottom, 0)), e.center.style.transform = "translateY(".concat(c, "px)");
            var d = 0 == o.scrollTop ? "hidden" : "",
              p = o.scrollTop == o.scrollTopMin ? "hidden" : "";
            e.shadowTop.style.visibility = d, e.shadowBottom.style.visibility = p, e.shadowTopLeft.style.visibility = d, e.shadowBottomLeft.style.visibility = p, e.shadowTopRight.style.visibility = d, e.shadowBottomRight.style.visibility = p, n.verticalScroll && (e.rightContainer.className = "vis-panel vis-right vis-vertical-scroll", e.leftContainer.className = "vis-panel vis-left vis-vertical-scroll", e.shadowTopRight.style.visibility = "hidden", e.shadowBottomRight.style.visibility = "hidden", e.shadowTopLeft.style.visibility = "hidden", e.shadowBottomLeft.style.visibility = "hidden", e.left.style.top = "0px", e.right.style.top = "0px"), (!n.verticalScroll || o.center.height < o.centerContainer.height) && (e.left.style.top = "".concat(c, "px"), e.right.style.top = "".concat(c, "px"), e.rightContainer.className = e.rightContainer.className.replace(new RegExp("(?:^|\\s)vis-vertical-scroll(?:\\s|$)"), " "), e.leftContainer.className = e.leftContainer.className.replace(new RegExp("(?:^|\\s)vis-vertical-scroll(?:\\s|$)"), " "), o.left.width = h || -o.border.left, o.right.width = u || -o.border.right, this._setDOM());
            var m = o.center.height > o.centerContainer.height;
            this.hammer.get("pan").set({
              direction: m ? LD.DIRECTION_ALL : LD.DIRECTION_HORIZONTAL
            }), this.hammer.get("press").set({
              time: this.options.longSelectPressTime
            }), hp(t = this.components).call(t, function (t) {
              i = t.redraw() || i;
            });
            if (i) {
              if (this.redrawCount < 5) return void this.body.emitter.emit("_change");
              console.log("WARNING: infinite loop in redraw?");
            } else this.redrawCount = 0;
            this.body.emitter.emit("changed");
          }
        }
      }, {
        key: "_setDOM",
        value: function () {
          var t = this.props,
            e = this.dom;
          t.leftContainer.width = t.left.width, t.rightContainer.width = t.right.width;
          var i = t.root.width - t.left.width - t.right.width;
          t.center.width = i, t.centerContainer.width = i, t.top.width = i, t.bottom.width = i, e.background.style.height = "".concat(t.background.height, "px"), e.backgroundVertical.style.height = "".concat(t.background.height, "px"), e.backgroundHorizontal.style.height = "".concat(t.centerContainer.height, "px"), e.centerContainer.style.height = "".concat(t.centerContainer.height, "px"), e.leftContainer.style.height = "".concat(t.leftContainer.height, "px"), e.rightContainer.style.height = "".concat(t.rightContainer.height, "px"), e.background.style.width = "".concat(t.background.width, "px"), e.backgroundVertical.style.width = "".concat(t.centerContainer.width, "px"), e.backgroundHorizontal.style.width = "".concat(t.background.width, "px"), e.centerContainer.style.width = "".concat(t.center.width, "px"), e.top.style.width = "".concat(t.top.width, "px"), e.bottom.style.width = "".concat(t.bottom.width, "px"), e.background.style.left = "0", e.background.style.top = "0", e.backgroundVertical.style.left = "".concat(t.left.width + t.border.left, "px"), e.backgroundVertical.style.top = "0", e.backgroundHorizontal.style.left = "0", e.backgroundHorizontal.style.top = "".concat(t.top.height, "px"), e.centerContainer.style.left = "".concat(t.left.width, "px"), e.centerContainer.style.top = "".concat(t.top.height, "px"), e.leftContainer.style.left = "0", e.leftContainer.style.top = "".concat(t.top.height, "px"), e.rightContainer.style.left = "".concat(t.left.width + t.center.width, "px"), e.rightContainer.style.top = "".concat(t.top.height, "px"), e.top.style.left = "".concat(t.left.width, "px"), e.top.style.top = "0", e.bottom.style.left = "".concat(t.left.width, "px"), e.bottom.style.top = "".concat(t.top.height + t.centerContainer.height, "px"), e.center.style.left = "0", e.left.style.left = "0", e.right.style.left = "0";
        }
      }, {
        key: "setCurrentTime",
        value: function (t) {
          if (!this.currentTime) throw new Error("Option showCurrentTime must be true");
          this.currentTime.setCurrentTime(t);
        }
      }, {
        key: "getCurrentTime",
        value: function () {
          if (!this.currentTime) throw new Error("Option showCurrentTime must be true");
          return this.currentTime.getCurrentTime();
        }
      }, {
        key: "_toTime",
        value: function (t) {
          return uD(this, t, this.props.center.width);
        }
      }, {
        key: "_toGlobalTime",
        value: function (t) {
          return uD(this, t, this.props.root.width);
        }
      }, {
        key: "_toScreen",
        value: function (t) {
          return hD(this, t, this.props.center.width);
        }
      }, {
        key: "_toGlobalScreen",
        value: function (t) {
          return hD(this, t, this.props.root.width);
        }
      }, {
        key: "_initAutoResize",
        value: function () {
          1 == this.options.autoResize ? this._startAutoResize() : this._stopAutoResize();
        }
      }, {
        key: "_startAutoResize",
        value: function () {
          var t = this;
          this._stopAutoResize(), this._onResize = function () {
            if (1 == t.options.autoResize) {
              if (t.dom.root) {
                var e = t.dom.root.offsetHeight,
                  i = t.dom.root.offsetWidth;
                i == t.props.lastWidth && e == t.props.lastHeight || (t.props.lastWidth = i, t.props.lastHeight = e, t.props.scrollbarWidth = WC.getScrollBarWidth(), t.body.emitter.emit("_change"));
              }
            } else t._stopAutoResize();
          }, WC.addEventListener(window, "resize", this._onResize), t.dom.root && (t.props.lastWidth = t.dom.root.offsetWidth, t.props.lastHeight = t.dom.root.offsetHeight), this.watchTimer = FD(this._onResize, 1e3);
        }
      }, {
        key: "_stopAutoResize",
        value: function () {
          this.watchTimer && (clearInterval(this.watchTimer), this.watchTimer = void 0), this._onResize && (WC.removeEventListener(window, "resize", this._onResize), this._onResize = null);
        }
      }, {
        key: "_onTouch",
        value: function (t) {
          this.touch.allowDragging = !0, this.touch.initialScrollTop = this.props.scrollTop;
        }
      }, {
        key: "_onPinch",
        value: function (t) {
          this.touch.allowDragging = !1;
        }
      }, {
        key: "_onDrag",
        value: function (t) {
          if (t && this.touch.allowDragging) {
            var e = t.deltaY,
              i = this._getScrollTop(),
              n = this._setScrollTop(this.touch.initialScrollTop + e);
            this.options.verticalScroll && (this.dom.left.parentNode.scrollTop = -this.props.scrollTop, this.dom.right.parentNode.scrollTop = -this.props.scrollTop), n != i && this.emit("verticalDrag");
          }
        }
      }, {
        key: "_setScrollTop",
        value: function (t) {
          return this.props.scrollTop = t, this._updateScrollTop(), this.props.scrollTop;
        }
      }, {
        key: "_updateScrollTop",
        value: function () {
          var t = Math.min(this.props.centerContainer.height - this.props.border.top - this.props.border.bottom - this.props.center.height, 0);
          return t != this.props.scrollTopMin && ("top" != this.options.orientation.item && (this.props.scrollTop += t - this.props.scrollTopMin), this.props.scrollTopMin = t), this.props.scrollTop > 0 && (this.props.scrollTop = 0), this.props.scrollTop < t && (this.props.scrollTop = t), this.options.verticalScroll && (this.dom.left.parentNode.scrollTop = -this.props.scrollTop, this.dom.right.parentNode.scrollTop = -this.props.scrollTop), this.props.scrollTop;
        }
      }, {
        key: "_getScrollTop",
        value: function () {
          return this.props.scrollTop;
        }
      }, {
        key: "_createConfigurator",
        value: function () {
          throw new Error("Cannot invoke abstract method _createConfigurator");
        }
      }]), t;
    }();
  function lT(t) {
    var e = function () {
      if ("undefined" == typeof Reflect || !Bo) return !1;
      if (Bo.sham) return !1;
      if ("function" == typeof Proxy) return !0;
      try {
        return Boolean.prototype.valueOf.call(Bo(Boolean, [], function () {})), !0;
      } catch (t) {
        return !1;
      }
    }();
    return function () {
      var i,
        n = wd(t);
      if (e) {
        var o = wd(this).constructor;
        i = Bo(n, arguments, o);
      } else i = n.apply(this, arguments);
      return hd(this, i);
    };
  }
  dw(aT.prototype);
  var hT = function (t) {
      ld(i, t);
      var e = lT(i);
      function i(t, n) {
        var o, r;
        zo(this, i), (r = e.call(this)).body = t, r.defaultOptions = {
          rtl: !1,
          showCurrentTime: !0,
          alignCurrentTime: void 0,
          moment: up,
          locales: oT,
          locale: "en"
        }, r.options = WC.extend({}, r.defaultOptions), r.setOptions(n), r.options.locales = WC.extend({}, oT, r.options.locales);
        var s = r.defaultOptions.locales[r.defaultOptions.locale];
        return hp(o = Wm(r.options.locales)).call(o, function (t) {
          r.options.locales[t] = WC.extend({}, s, r.options.locales[t]);
        }), r.offset = 0, r._create(), r;
      }
      return Ac(i, [{
        key: "_create",
        value: function () {
          var t = document.createElement("div");
          t.className = "vis-current-time", t.style.position = "absolute", t.style.top = "0px", t.style.height = "100%", this.bar = t;
        }
      }, {
        key: "destroy",
        value: function () {
          this.options.showCurrentTime = !1, this.redraw(), this.body = null;
        }
      }, {
        key: "setOptions",
        value: function (t) {
          t && WC.selectiveExtend(["rtl", "showCurrentTime", "alignCurrentTime", "moment", "locale", "locales"], this.options, t);
        }
      }, {
        key: "redraw",
        value: function () {
          if (this.options.showCurrentTime) {
            var t,
              e,
              i = this.body.dom.backgroundVertical;
            this.bar.parentNode != i && (this.bar.parentNode && this.bar.parentNode.removeChild(this.bar), i.appendChild(this.bar), this.start());
            var n = this.options.moment(Zv() + this.offset);
            this.options.alignCurrentTime && (n = n.startOf(this.options.alignCurrentTime));
            var o = this.body.util.toScreen(n),
              r = this.options.locales[this.options.locale];
            r || (this.warned || (console.warn("WARNING: options.locales['".concat(this.options.locale, "'] not found. See https://visjs.github.io/vis-timeline/docs/timeline/#Localization")), this.warned = !0), r = this.options.locales.en);
            var s = jv(t = jv(e = "".concat(r.current, " ")).call(e, r.time, ": ")).call(t, n.format("dddd, MMMM Do YYYY, H:mm:ss"));
            s = s.charAt(0).toUpperCase() + s.substring(1), this.options.rtl ? this.bar.style.transform = "translateX(".concat(-1 * o, "px)") : this.bar.style.transform = "translateX(".concat(o, "px)"), this.bar.title = s;
          } else this.bar.parentNode && this.bar.parentNode.removeChild(this.bar), this.stop();
          return !1;
        }
      }, {
        key: "start",
        value: function () {
          var t = this;
          !function e() {
            t.stop();
            var i = 1 / t.body.range.conversion(t.body.domProps.center.width).scale / 10;
            i < 30 && (i = 30), i > 1e3 && (i = 1e3), t.redraw(), t.body.emitter.emit("currentTimeTick"), t.currentTimeTimer = qd(e, i);
          }();
        }
      }, {
        key: "stop",
        value: function () {
          void 0 !== this.currentTimeTimer && (clearTimeout(this.currentTimeTimer), delete this.currentTimeTimer);
        }
      }, {
        key: "setCurrentTime",
        value: function (t) {
          var e = WC.convert(t, "Date").valueOf(),
            i = Zv();
          this.offset = e - i, this.redraw();
        }
      }, {
        key: "getCurrentTime",
        value: function () {
          return new Date(Zv() + this.offset);
        }
      }]), i;
    }(oS),
    uT = {},
    cT = {
      get exports() {
        return uT;
      },
      set exports(t) {
        uT = t;
      }
    },
    dT = Pi,
    pT = ta.find,
    mT = "find",
    fT = !0;
  mT in [] && Array(1)[mT](function () {
    fT = !1;
  }), dT({
    target: "Array",
    proto: !0,
    forced: fT
  }, {
    find: function (t) {
      return pT(this, t, arguments.length > 1 ? arguments[1] : void 0);
    }
  });
  var vT = Qc("Array").find,
    gT = dt,
    yT = vT,
    bT = Array.prototype,
    wT = function (t) {
      var e = t.find;
      return t === bT || gT(bT, t) && e === bT.find ? yT : e;
    },
    kT = wT;
  !function (t) {
    t.exports = kT;
  }(cT);
  var xT = r(uT),
    _T = {},
    CT = {
      get exports() {
        return _T;
      },
      set exports(t) {
        _T = t;
      }
    },
    ST = {},
    DT = {
      get exports() {
        return ST;
      },
      set exports(t) {
        ST = t;
      }
    },
    TT = u(function () {
      if ("function" == typeof ArrayBuffer) {
        var t = new ArrayBuffer(8);
        Object.isExtensible(t) && Object.defineProperty(t, "a", {
          value: 8
        });
      }
    }),
    OT = u,
    ET = rt,
    AT = S,
    IT = TT,
    PT = Object.isExtensible,
    MT = OT(function () {
      PT(1);
    }) || IT ? function (t) {
      return !!ET(t) && (!IT || "ArrayBuffer" != AT(t)) && (!PT || PT(t));
    } : PT,
    NT = !u(function () {
      return Object.isExtensible(Object.preventExtensions({}));
    }),
    FT = Pi,
    RT = k,
    LT = Hn,
    jT = rt,
    BT = ie,
    zT = ei.f,
    HT = Hr,
    GT = Yr,
    WT = MT,
    YT = NT,
    VT = !1,
    UT = ae("meta"),
    XT = 0,
    qT = function (t) {
      zT(t, UT, {
        value: {
          objectID: "O" + XT++,
          weakData: {}
        }
      });
    },
    KT = DT.exports = {
      enable: function () {
        KT.enable = function () {}, VT = !0;
        var t = HT.f,
          e = RT([].splice),
          i = {};
        i[UT] = 1, t(i).length && (HT.f = function (i) {
          for (var n = t(i), o = 0, r = n.length; o < r; o++) if (n[o] === UT) {
            e(n, o, 1);
            break;
          }
          return n;
        }, FT({
          target: "Object",
          stat: !0,
          forced: !0
        }, {
          getOwnPropertyNames: GT.f
        }));
      },
      fastKey: function (t, e) {
        if (!jT(t)) return "symbol" == typeof t ? t : ("string" == typeof t ? "S" : "P") + t;
        if (!BT(t, UT)) {
          if (!WT(t)) return "F";
          if (!e) return "E";
          qT(t);
        }
        return t[UT].objectID;
      },
      getWeakData: function (t, e) {
        if (!BT(t, UT)) {
          if (!WT(t)) return !0;
          if (!e) return !1;
          qT(t);
        }
        return t[UT].weakData;
      },
      onFreeze: function (t) {
        return YT && VT && WT(t) && !BT(t, UT) && qT(t), t;
      }
    };
  LT[UT] = !0;
  var $T = ti,
    ZT = L,
    QT = si,
    JT = It,
    tO = of,
    eO = Fn,
    iO = dt,
    nO = gf,
    oO = uf,
    rO = Zm,
    sO = TypeError,
    aO = function (t, e) {
      this.stopped = t, this.result = e;
    },
    lO = aO.prototype,
    hO = function (t, e, i) {
      var n,
        o,
        r,
        s,
        a,
        l,
        h,
        u = i && i.that,
        c = !(!i || !i.AS_ENTRIES),
        d = !(!i || !i.IS_RECORD),
        p = !(!i || !i.IS_ITERATOR),
        m = !(!i || !i.INTERRUPTED),
        f = $T(e, u),
        v = function (t) {
          return n && rO(n, "normal", t), new aO(!0, t);
        },
        g = function (t) {
          return c ? (QT(t), m ? f(t[0], t[1], v) : f(t[0], t[1])) : m ? f(t, v) : f(t);
        };
      if (d) n = t.iterator;else if (p) n = t;else {
        if (!(o = oO(t))) throw sO(JT(t) + " is not iterable");
        if (tO(o)) {
          for (r = 0, s = eO(t); s > r; r++) if ((a = g(t[r])) && iO(lO, a)) return a;
          return new aO(!1);
        }
        n = nO(t, o);
      }
      for (l = d ? t.next : n.next; !(h = ZT(l, n)).done;) {
        try {
          a = g(h.value);
        } catch (t) {
          rO(n, "throw", t);
        }
        if ("object" == typeof a && a && iO(lO, a)) return a;
      }
      return new aO(!1);
    },
    uO = dt,
    cO = TypeError,
    dO = function (t, e) {
      if (uO(e, t)) return t;
      throw cO("Incorrect invocation");
    },
    pO = Pi,
    mO = h,
    fO = ST,
    vO = u,
    gO = wi,
    yO = hO,
    bO = dO,
    wO = P,
    kO = rt,
    xO = As,
    _O = ei.f,
    CO = ta.forEach,
    SO = N,
    DO = Us.set,
    TO = Us.getterFor,
    OO = os,
    EO = ct,
    AO = ss,
    IO = N,
    PO = ve("species"),
    MO = _o,
    NO = ss,
    FO = function (t, e, i) {
      for (var n in e) i && i.unsafe && t[n] ? t[n] = e[n] : OO(t, n, e[n], i);
      return t;
    },
    RO = ti,
    LO = dO,
    jO = $,
    BO = hO,
    zO = uu,
    HO = cu,
    GO = function (t) {
      var e = EO(t);
      IO && e && !e[PO] && AO(e, PO, {
        configurable: !0,
        get: function () {
          return this;
        }
      });
    },
    WO = N,
    YO = ST.fastKey,
    VO = Us.set,
    UO = Us.getterFor,
    XO = {
      getConstructor: function (t, e, i, n) {
        var o = t(function (t, o) {
            LO(t, r), VO(t, {
              type: e,
              index: MO(null),
              first: void 0,
              last: void 0,
              size: 0
            }), WO || (t.size = 0), jO(o) || BO(o, t[n], {
              that: t,
              AS_ENTRIES: i
            });
          }),
          r = o.prototype,
          s = UO(e),
          a = function (t, e, i) {
            var n,
              o,
              r = s(t),
              a = l(t, e);
            return a ? a.value = i : (r.last = a = {
              index: o = YO(e, !0),
              key: e,
              value: i,
              previous: n = r.last,
              next: void 0,
              removed: !1
            }, r.first || (r.first = a), n && (n.next = a), WO ? r.size++ : t.size++, "F" !== o && (r.index[o] = a)), t;
          },
          l = function (t, e) {
            var i,
              n = s(t),
              o = YO(e);
            if ("F" !== o) return n.index[o];
            for (i = n.first; i; i = i.next) if (i.key == e) return i;
          };
        return FO(r, {
          clear: function () {
            for (var t = s(this), e = t.index, i = t.first; i;) i.removed = !0, i.previous && (i.previous = i.previous.next = void 0), delete e[i.index], i = i.next;
            t.first = t.last = void 0, WO ? t.size = 0 : this.size = 0;
          },
          delete: function (t) {
            var e = this,
              i = s(e),
              n = l(e, t);
            if (n) {
              var o = n.next,
                r = n.previous;
              delete i.index[n.index], n.removed = !0, r && (r.next = o), o && (o.previous = r), i.first == n && (i.first = o), i.last == n && (i.last = r), WO ? i.size-- : e.size--;
            }
            return !!n;
          },
          forEach: function (t) {
            for (var e, i = s(this), n = RO(t, arguments.length > 1 ? arguments[1] : void 0); e = e ? e.next : i.first;) for (n(e.value, e.key, this); e && e.removed;) e = e.previous;
          },
          has: function (t) {
            return !!l(this, t);
          }
        }), FO(r, i ? {
          get: function (t) {
            var e = l(this, t);
            return e && e.value;
          },
          set: function (t, e) {
            return a(this, 0 === t ? 0 : t, e);
          }
        } : {
          add: function (t) {
            return a(this, t = 0 === t ? 0 : t, t);
          }
        }), WO && NO(r, "size", {
          configurable: !0,
          get: function () {
            return s(this).size;
          }
        }), o;
      },
      setStrong: function (t, e, i) {
        var n = e + " Iterator",
          o = UO(e),
          r = UO(n);
        zO(t, e, function (t, e) {
          VO(this, {
            type: n,
            target: t,
            state: o(t),
            kind: e,
            last: void 0
          });
        }, function () {
          for (var t = r(this), e = t.kind, i = t.last; i && i.removed;) i = i.previous;
          return t.target && (t.last = i = i ? i.next : t.state.first) ? HO("keys" == e ? i.key : "values" == e ? i.value : [i.key, i.value], !1) : (t.target = void 0, HO(void 0, !0));
        }, i ? "entries" : "values", !i, !0), GO(e);
      }
    },
    qO = function (t, e, i) {
      var n,
        o = -1 !== t.indexOf("Map"),
        r = -1 !== t.indexOf("Weak"),
        s = o ? "set" : "add",
        a = mO[t],
        l = a && a.prototype,
        h = {};
      if (SO && wO(a) && (r || l.forEach && !vO(function () {
        new a().entries().next();
      }))) {
        var u = (n = e(function (e, i) {
            DO(bO(e, u), {
              type: t,
              collection: new a()
            }), null != i && yO(i, e[s], {
              that: e,
              AS_ENTRIES: o
            });
          })).prototype,
          c = TO(t);
        CO(["add", "clear", "delete", "forEach", "get", "has", "set", "keys", "values", "entries"], function (t) {
          var e = "add" == t || "set" == t;
          !(t in l) || r && "clear" == t || gO(u, t, function (i, n) {
            var o = c(this).collection;
            if (!e && r && !kO(i)) return "get" == t && void 0;
            var s = o[t](0 === i ? 0 : i, n);
            return e ? this : s;
          });
        }), r || _O(u, "size", {
          configurable: !0,
          get: function () {
            return c(this).collection.size;
          }
        });
      } else n = i.getConstructor(e, t, o, s), fO.enable();
      return xO(n, t, !1, !0), h[t] = n, pO({
        global: !0,
        forced: !0
      }, h), r || i.setStrong(n, t, o), n;
    };
  qO("Set", function (t) {
    return function () {
      return t(this, arguments.length ? arguments[0] : void 0);
    };
  }, XO);
  var KO = st.Set;
  !function (t) {
    t.exports = KO;
  }(CT);
  var $O = r(_T),
    ZO = {},
    QO = {
      get exports() {
        return ZO;
      },
      set exports(t) {
        ZO = t;
      }
    },
    JO = Pi,
    tE = ta.findIndex,
    eE = "findIndex",
    iE = !0;
  eE in [] && Array(1)[eE](function () {
    iE = !1;
  }), JO({
    target: "Array",
    proto: !0,
    forced: iE
  }, {
    findIndex: function (t) {
      return tE(this, t, arguments.length > 1 ? arguments[1] : void 0);
    }
  });
  var nE = Qc("Array").findIndex,
    oE = dt,
    rE = nE,
    sE = Array.prototype,
    aE = function (t) {
      var e = t.findIndex;
      return t === sE || oE(sE, t) && e === sE.findIndex ? rE : e;
    },
    lE = aE;
  !function (t) {
    t.exports = lE;
  }(QO);
  var hE = r(ZO);
  function uE(t, e) {
    var i = void 0 !== Ev && Hf(t) || t["@@iterator"];
    if (!i) {
      if (Cd(t) || (i = function (t, e) {
        var i;
        if (!t) return;
        if ("string" == typeof t) return cE(t, e);
        var n = zv(i = Object.prototype.toString.call(t)).call(i, 8, -1);
        "Object" === n && t.constructor && (n = t.constructor.name);
        if ("Map" === n || "Set" === n) return Rf(t);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return cE(t, e);
      }(t)) || e && t && "number" == typeof t.length) {
        i && (t = i);
        var n = 0,
          o = function () {};
        return {
          s: o,
          n: function () {
            return n >= t.length ? {
              done: !0
            } : {
              done: !1,
              value: t[n++]
            };
          },
          e: function (t) {
            throw t;
          },
          f: o
        };
      }
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var r,
      s = !0,
      a = !1;
    return {
      s: function () {
        i = i.call(t);
      },
      n: function () {
        var t = i.next();
        return s = t.done, t;
      },
      e: function (t) {
        a = !0, r = t;
      },
      f: function () {
        try {
          s || null == i.return || i.return();
        } finally {
          if (a) throw r;
        }
      }
    };
  }
  function cE(t, e) {
    (null == e || e > t.length) && (e = t.length);
    for (var i = 0, n = new Array(e); i < e; i++) n[i] = t[i];
    return n;
  }
  var dE = .001;
  function pE(t) {
    oD(t).call(t, function (t, e) {
      return t.data.start - e.data.start;
    });
  }
  function mE(t) {
    oD(t).call(t, function (t, e) {
      return ("end" in t.data ? t.data.end : t.data.start) - ("end" in e.data ? e.data.end : e.data.start);
    });
  }
  function fE(t, e, i, n) {
    return null === wE(t, e.item, !1, function (t) {
      return t.stack && (i || null === t.top);
    }, function (t) {
      return t.stack;
    }, function (t) {
      return e.axis;
    }, n);
  }
  function vE(t, e, i) {
    var n = wE(t, e.item, !1, function (t) {
      return t.stack;
    }, function (t) {
      return !0;
    }, function (t) {
      return t.baseTop;
    });
    i.height = n - i.top + .5 * e.item.vertical;
  }
  function gE(t, e, i, n) {
    for (var o = 0; o < t.length; o++) if (null == t[o].data.subgroup) t[o].top = e.item.vertical;else if (void 0 !== t[o].data.subgroup && n) {
      var r = 0;
      for (var s in i) i.hasOwnProperty(s) && 1 == i[s].visible && i[s].index < i[t[o].data.subgroup].index && (r += i[s].height, i[t[o].data.subgroup].top = r);
      t[o].top = r + .5 * e.item.vertical;
    }
    n || yE(t, e, i);
  }
  function yE(t, e, i) {
    var n;
    wE(oD(n = Wy(i)).call(n, function (t, e) {
      return t.index > e.index ? 1 : t.index < e.index ? -1 : 0;
    }), {
      vertical: 0
    }, !0, function (t) {
      return !0;
    }, function (t) {
      return !0;
    }, function (t) {
      return 0;
    });
    for (var o = 0; o < t.length; o++) void 0 !== t[o].data.subgroup && (t[o].top = i[t[o].data.subgroup].top + .5 * e.item.vertical);
  }
  function bE(t, e, i) {
    var n = !1,
      o = [];
    for (var r in i) i[r].hasOwnProperty("index") ? o[i[r].index] = r : o.push(r);
    for (var s = 0; s < o.length; s++) if (r = o[s], i.hasOwnProperty(r)) {
      for (var a in n = n || i[r].stack, i[r].top = 0, i) i[a].visible && i[r].index > i[a].index && (i[r].top += i[a].height);
      for (var l = t[r], h = 0; h < l.length; h++) void 0 !== l[h].data.subgroup && (l[h].top = i[l[h].data.subgroup].top + .5 * e.item.vertical, i[r].stack && (l[h].baseTop = l[h].top));
      n && i[r].stack && vE(t[r], e, i[r]);
    }
  }
  function wE(t, e, n, o, r, s, a) {
    var l = function (t) {
        return t.start;
      },
      h = function (t) {
        return t.end;
      };
    if (!n) {
      var u = !(!t[0] || !t[0].options.rtl);
      l = u ? function (t) {
        return t.right;
      } : function (t) {
        return t.left;
      }, h = function (t) {
        return l(t) + t.width + e.horizontal;
      };
    }
    var c,
      d = [],
      p = [],
      m = null,
      f = 0,
      v = uE(t);
    try {
      var g = function () {
        var t = c.value;
        if (o(t)) d.push(t);else if (r(t)) {
          var e = l(t);
          null !== m && e < m - dE && (f = 0), m = e, f = kE(p, function (t) {
            return l(t) - dE > e;
          }, f), zg(p).call(p, f, 0, t), f++;
        }
      };
      for (v.s(); !(c = v.n()).done;) g();
    } catch (t) {
      v.e(t);
    } finally {
      v.f();
    }
    m = null;
    var y = null;
    f = 0;
    for (var b = 0, w = 0, k = 0, x = function () {
        var t,
          n,
          o = d.shift();
        o.top = s(o);
        var u = l(o),
          c = h(o);
        null !== m && u < m - dE && (b = 0, w = 0, f = 0, y = null), m = u, b = kE(p, function (t) {
          return u < h(t) - dE;
        }, b), (null === y || y < c - dE) && (w = kE(p, function (t) {
          return c < l(t) - dE;
        }, Math.max(b, w))), null !== y && y - dE > c && (w = function (t, e, n, o) {
          n || (n = 0);
          o || (o = t.length);
          for (i = o - 1; i >= n; i--) if (e(t[i])) return i;
          return n - 1;
        }(p, function (t) {
          return c + dE >= l(t);
        }, b, horizontalOVerlapEndIndex) + 1);
        for (var v, g, x, _ = oD(t = Cp(n = zv(p).call(p, b, w)).call(n, function (t) {
            return u < h(t) - dE && c - dE > l(t);
          })).call(t, function (t, e) {
            return t.top - e.top;
          }), C = 0; C < _.length; C++) {
          var S = _[C];
          g = S, x = e, (v = o).top - x.vertical + dE < g.top + g.height && v.top + v.height + x.vertical - dE > g.top && (o.top = S.top + S.height + e.vertical);
        }
        r(o) && (f = kE(p, function (t) {
          return l(t) - dE > u;
        }, f), zg(p).call(p, f, 0, o), f++);
        var D = o.top + o.height;
        if (D > k && (k = D), a && a()) return {
          v: null
        };
      }; d.length > 0;) {
      var _ = x();
      if ("object" === kc(_)) return _.v;
    }
    return k;
  }
  function kE(t, e, i) {
    var n;
    i || (i = 0);
    var o = hE(n = zv(t).call(t, i)).call(n, e);
    return -1 === o ? t.length : o + i;
  }
  var xE = Object.freeze({
      __proto__: null,
      nostack: gE,
      orderByEnd: mE,
      orderByStart: pE,
      stack: fE,
      stackSubgroups: yE,
      stackSubgroupsWithInnerStack: bE,
      substack: vE
    }),
    _E = "__background__",
    CE = function () {
      function t(e, i, n) {
        var o = this;
        if (zo(this, t), this.groupId = e, this.subgroups = {}, this.subgroupStack = {}, this.subgroupStackAll = !1, this.subgroupVisibility = {}, this.doInnerStack = !1, this.shouldBailStackItems = !1, this.subgroupIndex = 0, this.subgroupOrderer = i && i.subgroupOrder, this.itemSet = n, this.isVisible = null, this.stackDirty = !0, this._disposeCallbacks = [], i && i.nestedGroups && (this.nestedGroups = i.nestedGroups, 0 == i.showNested ? this.showNested = !1 : this.showNested = !0), i && i.subgroupStack) if ("boolean" == typeof i.subgroupStack) this.doInnerStack = i.subgroupStack, this.subgroupStackAll = i.subgroupStack;else for (var r in i.subgroupStack) this.subgroupStack[r] = i.subgroupStack[r], this.doInnerStack = this.doInnerStack || i.subgroupStack[r];
        i && i.heightMode ? this.heightMode = i.heightMode : this.heightMode = n.options.groupHeightMode, this.nestedInGroup = null, this.dom = {}, this.props = {
          label: {
            width: 0,
            height: 0
          }
        }, this.className = null, this.items = {}, this.visibleItems = [], this.itemsInRange = [], this.orderedItems = {
          byStart: [],
          byEnd: []
        }, this.checkRangedItems = !1;
        var s = function () {
          o.checkRangedItems = !0;
        };
        this.itemSet.body.emitter.on("checkRangedItems", s), this._disposeCallbacks.push(function () {
          o.itemSet.body.emitter.off("checkRangedItems", s);
        }), this._create(), this.setData(i);
      }
      return Ac(t, [{
        key: "_create",
        value: function () {
          var t = document.createElement("div");
          this.itemSet.options.groupEditable.order ? t.className = "vis-label draggable" : t.className = "vis-label", this.dom.label = t;
          var e = document.createElement("div");
          e.className = "vis-inner", t.appendChild(e), this.dom.inner = e;
          var i = document.createElement("div");
          i.className = "vis-group", i["vis-group"] = this, this.dom.foreground = i, this.dom.background = document.createElement("div"), this.dom.background.className = "vis-group", this.dom.axis = document.createElement("div"), this.dom.axis.className = "vis-group", this.dom.marker = document.createElement("div"), this.dom.marker.style.visibility = "hidden", this.dom.marker.style.position = "absolute", this.dom.marker.innerHTML = "", this.dom.background.appendChild(this.dom.marker);
        }
      }, {
        key: "setData",
        value: function (t) {
          if (!this.itemSet.groupTouchParams.isDragging) {
            var e, i, n;
            if (t && t.subgroupVisibility) for (var o in t.subgroupVisibility) this.subgroupVisibility[o] = t.subgroupVisibility[o];
            if (this.itemSet.options && this.itemSet.options.groupTemplate) e = (i = Dd(n = this.itemSet.options.groupTemplate).call(n, this))(t, this.dom.inner);else e = t && t.content;
            if (e instanceof Element) {
              for (; this.dom.inner.firstChild;) this.dom.inner.removeChild(this.dom.inner.firstChild);
              this.dom.inner.appendChild(e);
            } else e instanceof Object && e.isReactComponent || (e instanceof Object ? i(t, this.dom.inner) : this.dom.inner.innerHTML = null != e ? WC.xss(e) : WC.xss(this.groupId || ""));
            this.dom.label.title = t && t.title || "", this.dom.inner.firstChild ? WC.removeClassName(this.dom.inner, "vis-hidden") : WC.addClassName(this.dom.inner, "vis-hidden"), t && t.nestedGroups ? (this.nestedGroups && this.nestedGroups == t.nestedGroups || (this.nestedGroups = t.nestedGroups), void 0 === t.showNested && void 0 !== this.showNested || (0 == t.showNested ? this.showNested = !1 : this.showNested = !0), WC.addClassName(this.dom.label, "vis-nesting-group"), this.showNested ? (WC.removeClassName(this.dom.label, "collapsed"), WC.addClassName(this.dom.label, "expanded")) : (WC.removeClassName(this.dom.label, "expanded"), WC.addClassName(this.dom.label, "collapsed"))) : this.nestedGroups && (this.nestedGroups = null, WC.removeClassName(this.dom.label, "collapsed"), WC.removeClassName(this.dom.label, "expanded"), WC.removeClassName(this.dom.label, "vis-nesting-group")), t && (t.treeLevel || t.nestedInGroup) ? (WC.addClassName(this.dom.label, "vis-nested-group"), t.treeLevel ? WC.addClassName(this.dom.label, "vis-group-level-" + t.treeLevel) : WC.addClassName(this.dom.label, "vis-group-level-unknown-but-gte1")) : WC.addClassName(this.dom.label, "vis-group-level-0");
            var r = t && t.className || null;
            r != this.className && (this.className && (WC.removeClassName(this.dom.label, this.className), WC.removeClassName(this.dom.foreground, this.className), WC.removeClassName(this.dom.background, this.className), WC.removeClassName(this.dom.axis, this.className)), WC.addClassName(this.dom.label, r), WC.addClassName(this.dom.foreground, r), WC.addClassName(this.dom.background, r), WC.addClassName(this.dom.axis, r), this.className = r), this.style && (WC.removeCssText(this.dom.label, this.style), this.style = null), t && t.style && (WC.addCssText(this.dom.label, t.style), this.style = t.style);
          }
        }
      }, {
        key: "getLabelWidth",
        value: function () {
          return this.props.label.width;
        }
      }, {
        key: "_didMarkerHeightChange",
        value: function () {
          var t = this.dom.marker.clientHeight;
          if (t != this.lastMarkerHeight) {
            this.lastMarkerHeight = t;
            var e = {},
              i = 0;
            if (hp(WC).call(WC, this.items, function (t, n) {
              if (t.dirty = !0, t.displayed) {
                e[n] = t.redraw(!0), i = e[n].length;
              }
            }), i > 0) for (var n = function (t) {
                hp(WC).call(WC, e, function (e) {
                  e[t]();
                });
              }, o = 0; o < i; o++) n(o);
            return !0;
          }
          return !1;
        }
      }, {
        key: "_calculateGroupSizeAndPosition",
        value: function () {
          var t = this.dom.foreground,
            e = t.offsetTop,
            i = t.offsetLeft,
            n = t.offsetWidth;
          this.top = e, this.right = i, this.width = n;
        }
      }, {
        key: "_shouldBailItemsRedraw",
        value: function () {
          var t = this,
            e = this.itemSet.options.onTimeout,
            i = {
              relativeBailingTime: this.itemSet.itemsSettingTime,
              bailTimeMs: e && e.timeoutMs,
              userBailFunction: e && e.callback,
              shouldBailStackItems: this.shouldBailStackItems
            },
            n = null;
          if (!this.itemSet.initialDrawDone) {
            if (i.shouldBailStackItems) return !0;
            Math.abs(Zv() - new Date(i.relativeBailingTime)) > i.bailTimeMs && (i.userBailFunction && null == this.itemSet.userContinueNotBail ? i.userBailFunction(function (e) {
              t.itemSet.userContinueNotBail = e, n = !e;
            }) : n = 0 == t.itemSet.userContinueNotBail);
          }
          return n;
        }
      }, {
        key: "_redrawItems",
        value: function (t, e, i, n) {
          var o = this;
          if (t || this.stackDirty || this.isVisible && !e) {
            var r,
              s,
              a,
              l,
              h,
              u,
              c = {
                byEnd: Cp(r = this.orderedItems.byEnd).call(r, function (t) {
                  return !t.isCluster;
                }),
                byStart: Cp(s = this.orderedItems.byStart).call(s, function (t) {
                  return !t.isCluster;
                })
              },
              d = {
                byEnd: Tv(new $O(Cp(a = bm(l = this.orderedItems.byEnd).call(l, function (t) {
                  return t.cluster;
                })).call(a, function (t) {
                  return !!t;
                }))),
                byStart: Tv(new $O(Cp(h = bm(u = this.orderedItems.byStart).call(u, function (t) {
                  return t.cluster;
                })).call(h, function (t) {
                  return !!t;
                })))
              },
              p = function () {
                var t,
                  e,
                  i,
                  r = o._updateItemsInRange(c, Cp(t = o.visibleItems).call(t, function (t) {
                    return !t.isCluster;
                  }), n),
                  s = o._updateClustersInRange(d, Cp(e = o.visibleItems).call(e, function (t) {
                    return t.isCluster;
                  }), n);
                return jv(i = []).call(i, Tv(r), Tv(s));
              },
              m = function (t) {
                var e = {},
                  i = function (i) {
                    var n,
                      r = Cp(n = o.visibleItems).call(n, function (t) {
                        return t.data.subgroup === i;
                      });
                    e[i] = t ? oD(r).call(r, function (e, i) {
                      return t(e.data, i.data);
                    }) : r;
                  };
                for (var n in o.subgroups) i(n);
                return e;
              };
            if ("function" == typeof this.itemSet.options.order) {
              var f = this;
              if (this.doInnerStack && this.itemSet.options.stackSubgroups) {
                bE(m(this.itemSet.options.order), i, this.subgroups), this.visibleItems = p(), this._updateSubGroupHeights(i);
              } else {
                var v, g, y, b;
                this.visibleItems = p(), this._updateSubGroupHeights(i);
                var w = oD(v = Cp(g = zv(y = this.visibleItems).call(y)).call(g, function (t) {
                  return t.isCluster || !t.isCluster && !t.cluster;
                })).call(v, function (t, e) {
                  return f.itemSet.options.order(t.data, e.data);
                });
                this.shouldBailStackItems = fE(w, i, !0, Dd(b = this._shouldBailItemsRedraw).call(b, this));
              }
            } else {
              var k;
              if (this.visibleItems = p(), this._updateSubGroupHeights(i), this.itemSet.options.stack) {
                if (this.doInnerStack && this.itemSet.options.stackSubgroups) bE(m(), i, this.subgroups);else this.shouldBailStackItems = fE(this.visibleItems, i, !0, Dd(k = this._shouldBailItemsRedraw).call(k, this));
              } else gE(this.visibleItems, i, this.subgroups, this.itemSet.options.stackSubgroups);
            }
            for (var x = 0; x < this.visibleItems.length; x++) this.visibleItems[x].repositionX(), void 0 !== this.subgroupVisibility[this.visibleItems[x].data.subgroup] && (this.subgroupVisibility[this.visibleItems[x].data.subgroup] || this.visibleItems[x].hide());
            this.itemSet.options.cluster && hp(WC).call(WC, this.items, function (t) {
              t.cluster && t.displayed && t.hide();
            }), this.shouldBailStackItems && this.itemSet.body.emitter.emit("destroyTimeline"), this.stackDirty = !1;
          }
        }
      }, {
        key: "_didResize",
        value: function (t, e) {
          t = WC.updateProperty(this, "height", e) || t;
          var i = this.dom.inner.clientWidth,
            n = this.dom.inner.clientHeight;
          return t = WC.updateProperty(this.props.label, "width", i) || t, t = WC.updateProperty(this.props.label, "height", n) || t;
        }
      }, {
        key: "_applyGroupHeight",
        value: function (t) {
          this.dom.background.style.height = "".concat(t, "px"), this.dom.foreground.style.height = "".concat(t, "px"), this.dom.label.style.height = "".concat(t, "px");
        }
      }, {
        key: "_updateItemsVerticalPosition",
        value: function (t) {
          for (var e = 0, i = this.visibleItems.length; e < i; e++) {
            var n = this.visibleItems[e];
            n.repositionY(t), this.isVisible || this.groupId == _E || n.displayed && n.hide();
          }
        }
      }, {
        key: "redraw",
        value: function (t, e, i, n) {
          var o,
            r,
            s,
            a,
            l,
            h,
            u,
            c = this,
            d = !1,
            p = this.isVisible,
            m = [function () {
              i = c._didMarkerHeightChange.call(c) || i;
            }, Dd(o = this._updateSubGroupHeights).call(o, this, e), Dd(r = this._calculateGroupSizeAndPosition).call(r, this), function () {
              var i;
              c.isVisible = Dd(i = c._isGroupVisible).call(i, c)(t, e);
            }, function () {
              var n;
              Dd(n = c._redrawItems).call(n, c)(i, p, e, t);
            }, Dd(s = this._updateSubgroupsSizes).call(s, this), function () {
              var t;
              h = Dd(t = c._calculateHeight).call(t, c)(e);
            }, Dd(a = this._calculateGroupSizeAndPosition).call(a, this), function () {
              var t;
              d = Dd(t = c._didResize).call(t, c)(d, h);
            }, function () {
              var t;
              Dd(t = c._applyGroupHeight).call(t, c)(h);
            }, function () {
              var t;
              Dd(t = c._updateItemsVerticalPosition).call(t, c)(e);
            }, Dd(l = function () {
              return !c.isVisible && c.height && (d = !1), d;
            }).call(l, this)];
          return n ? m : (hp(m).call(m, function (t) {
            u = t();
          }), u);
        }
      }, {
        key: "_updateSubGroupHeights",
        value: function (t) {
          var e = this;
          if (Wm(this.subgroups).length > 0) {
            var i = this;
            this._resetSubgroups(), hp(WC).call(WC, this.visibleItems, function (n) {
              void 0 !== n.data.subgroup && (i.subgroups[n.data.subgroup].height = Math.max(i.subgroups[n.data.subgroup].height, n.height + t.item.vertical), i.subgroups[n.data.subgroup].visible = void 0 === e.subgroupVisibility[n.data.subgroup] || Boolean(e.subgroupVisibility[n.data.subgroup]));
            });
          }
        }
      }, {
        key: "_isGroupVisible",
        value: function (t, e) {
          return this.top <= t.body.domProps.centerContainer.height - t.body.domProps.scrollTop + e.axis && this.top + this.height + e.axis >= -t.body.domProps.scrollTop;
        }
      }, {
        key: "_calculateHeight",
        value: function (t) {
          var e, i;
          if ((i = "fixed" === this.heightMode ? WC.toArray(this.items) : this.visibleItems).length > 0) {
            var n = i[0].top,
              o = i[0].top + i[0].height;
            if (hp(WC).call(WC, i, function (t) {
              n = Math.min(n, t.top), o = Math.max(o, t.top + t.height);
            }), n > t.axis) {
              var r = n - t.axis;
              o -= r, hp(WC).call(WC, i, function (t) {
                t.top -= r;
              });
            }
            e = Math.ceil(o + t.item.vertical / 2), "fitItems" !== this.heightMode && (e = Math.max(e, this.props.label.height));
          } else e = this.props.label.height;
          return e;
        }
      }, {
        key: "show",
        value: function () {
          this.dom.label.parentNode || this.itemSet.dom.labelSet.appendChild(this.dom.label), this.dom.foreground.parentNode || this.itemSet.dom.foreground.appendChild(this.dom.foreground), this.dom.background.parentNode || this.itemSet.dom.background.appendChild(this.dom.background), this.dom.axis.parentNode || this.itemSet.dom.axis.appendChild(this.dom.axis);
        }
      }, {
        key: "hide",
        value: function () {
          var t = this.dom.label;
          t.parentNode && t.parentNode.removeChild(t);
          var e = this.dom.foreground;
          e.parentNode && e.parentNode.removeChild(e);
          var i = this.dom.background;
          i.parentNode && i.parentNode.removeChild(i);
          var n = this.dom.axis;
          n.parentNode && n.parentNode.removeChild(n);
        }
      }, {
        key: "add",
        value: function (t) {
          var e;
          if (this.items[t.id] = t, t.setParent(this), this.stackDirty = !0, void 0 !== t.data.subgroup && (this._addToSubgroup(t), this.orderSubgroups()), !Ey(e = this.visibleItems).call(e, t)) {
            var i = this.itemSet.body.range;
            this._checkIfVisible(t, this.visibleItems, i);
          }
        }
      }, {
        key: "_addToSubgroup",
        value: function (t) {
          var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : t.data.subgroup;
          null != e && void 0 === this.subgroups[e] && (this.subgroups[e] = {
            height: 0,
            top: 0,
            start: t.data.start,
            end: t.data.end || t.data.start,
            visible: !1,
            index: this.subgroupIndex,
            items: [],
            stack: this.subgroupStackAll || this.subgroupStack[e] || !1
          }, this.subgroupIndex++), new Date(t.data.start) < new Date(this.subgroups[e].start) && (this.subgroups[e].start = t.data.start);
          var i = t.data.end || t.data.start;
          new Date(i) > new Date(this.subgroups[e].end) && (this.subgroups[e].end = i), this.subgroups[e].items.push(t);
        }
      }, {
        key: "_updateSubgroupsSizes",
        value: function () {
          var t = this;
          if (t.subgroups) {
            var e = function () {
              var e,
                n = t.subgroups[i].items[0].data.end || t.subgroups[i].items[0].data.start,
                o = t.subgroups[i].items[0].data.start,
                r = n - 1;
              hp(e = t.subgroups[i].items).call(e, function (t) {
                new Date(t.data.start) < new Date(o) && (o = t.data.start);
                var e = t.data.end || t.data.start;
                new Date(e) > new Date(r) && (r = e);
              }), t.subgroups[i].start = o, t.subgroups[i].end = new Date(r - 1);
            };
            for (var i in t.subgroups) e();
          }
        }
      }, {
        key: "orderSubgroups",
        value: function () {
          if (void 0 !== this.subgroupOrderer) {
            var t = [];
            if ("string" == typeof this.subgroupOrderer) {
              for (var e in this.subgroups) t.push({
                subgroup: e,
                sortField: this.subgroups[e].items[0].data[this.subgroupOrderer]
              });
              oD(t).call(t, function (t, e) {
                return t.sortField - e.sortField;
              });
            } else if ("function" == typeof this.subgroupOrderer) {
              for (var i in this.subgroups) t.push(this.subgroups[i].items[0].data);
              oD(t).call(t, this.subgroupOrderer);
            }
            if (t.length > 0) for (var n = 0; n < t.length; n++) this.subgroups[t[n].subgroup].index = n;
          }
        }
      }, {
        key: "_resetSubgroups",
        value: function () {
          for (var t in this.subgroups) this.subgroups.hasOwnProperty(t) && (this.subgroups[t].visible = !1, this.subgroups[t].height = 0);
        }
      }, {
        key: "remove",
        value: function (t) {
          var e, i;
          delete this.items[t.id], t.setParent(null), this.stackDirty = !0;
          var n = Ob(e = this.visibleItems).call(e, t);
          -1 != n && zg(i = this.visibleItems).call(i, n, 1), void 0 !== t.data.subgroup && (this._removeFromSubgroup(t), this.orderSubgroups());
        }
      }, {
        key: "_removeFromSubgroup",
        value: function (t) {
          var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : t.data.subgroup;
          if (null != e) {
            var i = this.subgroups[e];
            if (i) {
              var n,
                o,
                r = Ob(n = i.items).call(n, t);
              if (r >= 0) zg(o = i.items).call(o, r, 1), i.items.length ? this._updateSubgroupsSizes() : delete this.subgroups[e];
            }
          }
        }
      }, {
        key: "removeFromDataSet",
        value: function (t) {
          this.itemSet.removeItem(t.id);
        }
      }, {
        key: "order",
        value: function () {
          for (var t = WC.toArray(this.items), e = [], i = [], n = 0; n < t.length; n++) void 0 !== t[n].data.end && i.push(t[n]), e.push(t[n]);
          this.orderedItems = {
            byStart: e,
            byEnd: i
          }, pE(this.orderedItems.byStart), mE(this.orderedItems.byEnd);
        }
      }, {
        key: "_updateItemsInRange",
        value: function (t, e, i) {
          var n = [],
            o = {};
          if (!this.isVisible && this.groupId != _E) {
            for (var r = 0; r < e.length; r++) {
              var s = e[r];
              s.displayed && s.hide();
            }
            return n;
          }
          var a = (i.end - i.start) / 4,
            l = i.start - a,
            h = i.end + a;
          if (e.length > 0) for (var u = 0; u < e.length; u++) this._checkIfVisibleWithReference(e[u], n, o, i);
          var c = WC.binarySearchCustom(t.byStart, function (t) {
            return t < l ? -1 : t <= h ? 0 : 1;
          }, "data", "start");
          if (this._traceVisible(c, t.byStart, n, o, function (t) {
            return t.data.start < l || t.data.start > h;
          }), 1 == this.checkRangedItems) {
            this.checkRangedItems = !1;
            for (var d = 0; d < t.byEnd.length; d++) this._checkIfVisibleWithReference(t.byEnd[d], n, o, i);
          } else {
            var p = WC.binarySearchCustom(t.byEnd, function (t) {
              var e = t.start;
              return t.end < l ? -1 : e <= h ? 0 : 1;
            }, "data");
            this._traceVisible(p, t.byEnd, n, o, function (t) {
              return t.data.end < l || t.data.start > h;
            });
          }
          for (var m = {}, f = 0, v = 0; v < n.length; v++) {
            var g = n[v];
            if (!g.displayed) {
              m[v] = g.redraw(!0), f = m[v].length;
            }
          }
          if (f > 0) for (var y = function (t) {
              hp(WC).call(WC, m, function (e) {
                e[t]();
              });
            }, b = 0; b < f; b++) y(b);
          for (var w = 0; w < n.length; w++) n[w].repositionX();
          return n;
        }
      }, {
        key: "_traceVisible",
        value: function (t, e, i, n, o) {
          if (-1 != t) {
            for (var r = t; r >= 0; r--) {
              var s = e[r];
              if (o(s)) break;
              s.isCluster && !s.hasItems() || s.cluster || void 0 === n[s.id] && (n[s.id] = !0, i.push(s));
            }
            for (var a = t + 1; a < e.length; a++) {
              var l = e[a];
              if (o(l)) break;
              l.isCluster && !l.hasItems() || l.cluster || void 0 === n[l.id] && (n[l.id] = !0, i.push(l));
            }
          }
        }
      }, {
        key: "_checkIfVisible",
        value: function (t, e, i) {
          t.isVisible(i) ? (t.displayed || t.show(), t.repositionX(), e.push(t)) : t.displayed && t.hide();
        }
      }, {
        key: "_checkIfVisibleWithReference",
        value: function (t, e, i, n) {
          t.isVisible(n) ? void 0 === i[t.id] && (i[t.id] = !0, e.push(t)) : t.displayed && t.hide();
        }
      }, {
        key: "_updateClustersInRange",
        value: function (t, e, i) {
          var n = [],
            o = {};
          if (e.length > 0) for (var r = 0; r < e.length; r++) this._checkIfVisibleWithReference(e[r], n, o, i);
          for (var s = 0; s < t.byStart.length; s++) this._checkIfVisibleWithReference(t.byStart[s], n, o, i);
          for (var a = 0; a < t.byEnd.length; a++) this._checkIfVisibleWithReference(t.byEnd[a], n, o, i);
          for (var l = {}, h = 0, u = 0; u < n.length; u++) {
            var c = n[u];
            if (!c.displayed) {
              l[u] = c.redraw(!0), h = l[u].length;
            }
          }
          if (h > 0) for (var d = 0; d < h; d++) hp(WC).call(WC, l, function (t) {
            t[d]();
          });
          for (var p = 0; p < n.length; p++) n[p].repositionX();
          return n;
        }
      }, {
        key: "changeSubgroup",
        value: function (t, e, i) {
          this._removeFromSubgroup(t, e), this._addToSubgroup(t, i), this.orderSubgroups();
        }
      }, {
        key: "dispose",
        value: function () {
          var t;
          for (this.hide(); t = this._disposeCallbacks.pop();) t();
        }
      }]), t;
    }();
  function SE(t) {
    var e = function () {
      if ("undefined" == typeof Reflect || !Bo) return !1;
      if (Bo.sham) return !1;
      if ("function" == typeof Proxy) return !0;
      try {
        return Boolean.prototype.valueOf.call(Bo(Boolean, [], function () {})), !0;
      } catch (t) {
        return !1;
      }
    }();
    return function () {
      var i,
        n = wd(t);
      if (e) {
        var o = wd(this).constructor;
        i = Bo(n, arguments, o);
      } else i = n.apply(this, arguments);
      return hd(this, i);
    };
  }
  var DE = function (t) {
    ld(i, t);
    var e = SE(i);
    function i(t, n, o) {
      var r;
      return zo(this, i), (r = e.call(this, t, n, o)).width = 0, r.height = 0, r.top = 0, r.left = 0, r;
    }
    return Ac(i, [{
      key: "redraw",
      value: function (t, e, i) {
        this.visibleItems = this._updateItemsInRange(this.orderedItems, this.visibleItems, t), this.width = this.dom.background.offsetWidth, this.dom.background.style.height = "0";
        for (var n = 0, o = this.visibleItems.length; n < o; n++) {
          this.visibleItems[n].repositionY(e);
        }
        return !1;
      }
    }, {
      key: "show",
      value: function () {
        this.dom.background.parentNode || this.itemSet.dom.background.appendChild(this.dom.background);
      }
    }]), i;
  }(CE);
  function TE(t, e) {
    var i = void 0 !== Ev && Hf(t) || t["@@iterator"];
    if (!i) {
      if (Cd(t) || (i = function (t, e) {
        var i;
        if (!t) return;
        if ("string" == typeof t) return OE(t, e);
        var n = zv(i = Object.prototype.toString.call(t)).call(i, 8, -1);
        "Object" === n && t.constructor && (n = t.constructor.name);
        if ("Map" === n || "Set" === n) return Rf(t);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return OE(t, e);
      }(t)) || e && t && "number" == typeof t.length) {
        i && (t = i);
        var n = 0,
          o = function () {};
        return {
          s: o,
          n: function () {
            return n >= t.length ? {
              done: !0
            } : {
              done: !1,
              value: t[n++]
            };
          },
          e: function (t) {
            throw t;
          },
          f: o
        };
      }
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var r,
      s = !0,
      a = !1;
    return {
      s: function () {
        i = i.call(t);
      },
      n: function () {
        var t = i.next();
        return s = t.done, t;
      },
      e: function (t) {
        a = !0, r = t;
      },
      f: function () {
        try {
          s || null == i.return || i.return();
        } finally {
          if (a) throw r;
        }
      }
    };
  }
  function OE(t, e) {
    (null == e || e > t.length) && (e = t.length);
    for (var i = 0, n = new Array(e); i < e; i++) n[i] = t[i];
    return n;
  }
  var EE = function () {
    function t(e, i, n) {
      var o,
        r = this;
      zo(this, t), this.id = null, this.parent = null, this.data = e, this.dom = null, this.conversion = i || {}, this.defaultOptions = {
        locales: oT,
        locale: "en"
      }, this.options = WC.extend({}, this.defaultOptions, n), this.options.locales = WC.extend({}, oT, this.options.locales);
      var s = this.defaultOptions.locales[this.defaultOptions.locale];
      hp(o = Wm(this.options.locales)).call(o, function (t) {
        r.options.locales[t] = WC.extend({}, s, r.options.locales[t]);
      }), this.selected = !1, this.displayed = !1, this.groupShowing = !0, this.selectable = n && n.selectable || !1, this.dirty = !0, this.top = null, this.right = null, this.left = null, this.width = null, this.height = null, this.setSelectability(e), this.editable = null, this._updateEditStatus();
    }
    return Ac(t, [{
      key: "select",
      value: function () {
        this.selectable && (this.selected = !0, this.dirty = !0, this.displayed && this.redraw());
      }
    }, {
      key: "unselect",
      value: function () {
        this.selected = !1, this.dirty = !0, this.displayed && this.redraw();
      }
    }, {
      key: "setData",
      value: function (t) {
        null != t.group && this.data.group != t.group && null != this.parent && this.parent.itemSet._moveToGroup(this, t.group), this.setSelectability(t), this.parent && (this.parent.stackDirty = !0), null != t.subgroup && this.data.subgroup != t.subgroup && null != this.parent && this.parent.changeSubgroup(this, this.data.subgroup, t.subgroup), this.data = t, this._updateEditStatus(), this.dirty = !0, this.displayed && this.redraw();
      }
    }, {
      key: "setSelectability",
      value: function (t) {
        t && (this.selectable = void 0 === t.selectable || Boolean(t.selectable));
      }
    }, {
      key: "setParent",
      value: function (t) {
        this.displayed ? (this.hide(), this.parent = t, this.parent && this.show()) : this.parent = t;
      }
    }, {
      key: "isVisible",
      value: function (t) {
        return !1;
      }
    }, {
      key: "show",
      value: function () {
        return !1;
      }
    }, {
      key: "hide",
      value: function () {
        return !1;
      }
    }, {
      key: "redraw",
      value: function () {}
    }, {
      key: "repositionX",
      value: function () {}
    }, {
      key: "repositionY",
      value: function () {}
    }, {
      key: "_repaintDragCenter",
      value: function () {
        if (this.selected && this.editable.updateTime && !this.dom.dragCenter) {
          var t,
            e,
            i = this,
            n = document.createElement("div");
          n.className = "vis-drag-center", n.dragCenterItem = this, this.hammerDragCenter = new LD(n), this.hammerDragCenter.on("tap", function (t) {
            i.parent.itemSet.body.emitter.emit("click", {
              event: t,
              item: i.id
            });
          }), this.hammerDragCenter.on("doubletap", function (t) {
            t.stopPropagation(), i.parent.itemSet._onUpdateItem(i), i.parent.itemSet.body.emitter.emit("doubleClick", {
              event: t,
              item: i.id
            });
          }), this.hammerDragCenter.on("panstart", function (t) {
            t.stopPropagation(), i.parent.itemSet._onDragStart(t);
          }), this.hammerDragCenter.on("panmove", Dd(t = i.parent.itemSet._onDrag).call(t, i.parent.itemSet)), this.hammerDragCenter.on("panend", Dd(e = i.parent.itemSet._onDragEnd).call(e, i.parent.itemSet)), this.hammerDragCenter.get("press").set({
            time: 1e4
          }), this.dom.box ? this.dom.dragLeft ? this.dom.box.insertBefore(n, this.dom.dragLeft) : this.dom.box.appendChild(n) : this.dom.point && this.dom.point.appendChild(n), this.dom.dragCenter = n;
        } else !this.selected && this.dom.dragCenter && (this.dom.dragCenter.parentNode && this.dom.dragCenter.parentNode.removeChild(this.dom.dragCenter), this.dom.dragCenter = null, this.hammerDragCenter && (this.hammerDragCenter.destroy(), this.hammerDragCenter = null));
      }
    }, {
      key: "_repaintDeleteButton",
      value: function (t) {
        var e = (this.options.editable.overrideItems || null == this.editable) && this.options.editable.remove || !this.options.editable.overrideItems && null != this.editable && this.editable.remove;
        if (this.selected && e && !this.dom.deleteButton) {
          var i = this,
            n = document.createElement("div");
          this.options.rtl ? n.className = "vis-delete-rtl" : n.className = "vis-delete";
          var o = this.options.locales[this.options.locale];
          o || (this.warned || (console.warn("WARNING: options.locales['".concat(this.options.locale, "'] not found. See https://visjs.github.io/vis-timeline/docs/timeline/#Localization")), this.warned = !0), o = this.options.locales.en), n.title = o.deleteSelected, this.hammerDeleteButton = new LD(n).on("tap", function (t) {
            t.stopPropagation(), i.parent.removeFromDataSet(i);
          }), t.appendChild(n), this.dom.deleteButton = n;
        } else this.selected && e || !this.dom.deleteButton || (this.dom.deleteButton.parentNode && this.dom.deleteButton.parentNode.removeChild(this.dom.deleteButton), this.dom.deleteButton = null, this.hammerDeleteButton && (this.hammerDeleteButton.destroy(), this.hammerDeleteButton = null));
      }
    }, {
      key: "_repaintOnItemUpdateTimeTooltip",
      value: function (t) {
        if (this.options.tooltipOnItemUpdateTime) {
          var e = (this.options.editable.updateTime || !0 === this.data.editable) && !1 !== this.data.editable;
          if (this.selected && e && !this.dom.onItemUpdateTimeTooltip) {
            var i = document.createElement("div");
            i.className = "vis-onUpdateTime-tooltip", t.appendChild(i), this.dom.onItemUpdateTimeTooltip = i;
          } else !this.selected && this.dom.onItemUpdateTimeTooltip && (this.dom.onItemUpdateTimeTooltip.parentNode && this.dom.onItemUpdateTimeTooltip.parentNode.removeChild(this.dom.onItemUpdateTimeTooltip), this.dom.onItemUpdateTimeTooltip = null);
          if (this.dom.onItemUpdateTimeTooltip) {
            this.dom.onItemUpdateTimeTooltip.style.visibility = this.parent.itemSet.touchParams.itemIsDragging ? "visible" : "hidden", this.dom.onItemUpdateTimeTooltip.style.transform = "translateX(-50%)", this.dom.onItemUpdateTimeTooltip.style.left = "50%";
            var n,
              o,
              r = this.parent.itemSet.body.domProps.scrollTop;
            if (("top" == this.options.orientation.item ? this.top : this.parent.height - this.top - this.height) + this.parent.top - 50 < -r ? (this.dom.onItemUpdateTimeTooltip.style.bottom = "", this.dom.onItemUpdateTimeTooltip.style.top = "".concat(this.height + 2, "px")) : (this.dom.onItemUpdateTimeTooltip.style.top = "", this.dom.onItemUpdateTimeTooltip.style.bottom = "".concat(this.height + 2, "px")), this.options.tooltipOnItemUpdateTime && this.options.tooltipOnItemUpdateTime.template) n = Dd(o = this.options.tooltipOnItemUpdateTime.template).call(o, this)(this.data);else n = "start: ".concat(up(this.data.start).format("MM/DD/YYYY hh:mm")), this.data.end && (n += "<br> end: ".concat(up(this.data.end).format("MM/DD/YYYY hh:mm")));
            this.dom.onItemUpdateTimeTooltip.innerHTML = WC.xss(n);
          }
        }
      }
    }, {
      key: "_getItemData",
      value: function () {
        return this.parent.itemSet.itemsData.get(this.id);
      }
    }, {
      key: "_updateContents",
      value: function (t) {
        var e,
          i,
          n,
          o,
          r,
          s,
          a = this._getItemData(),
          l = (this.dom.box || this.dom.point).getElementsByClassName("vis-item-visible-frame")[0];
        this.options.visibleFrameTemplate ? (o = Dd(r = this.options.visibleFrameTemplate).call(r, this), n = WC.xss(o(a, l))) : n = "";
        if (l) if (n instanceof Object && !(n instanceof Element)) o(a, l);else if (this._contentToString(this.itemVisibleFrameContent) !== this._contentToString(n)) {
          if (n instanceof Element) l.innerHTML = "", l.appendChild(n);else if (null != n) l.innerHTML = WC.xss(n);else if ("background" != this.data.type || void 0 !== this.data.content) throw new Error('Property "content" missing in item '.concat(this.id));
          this.itemVisibleFrameContent = n;
        }
        this.options.template ? e = (i = Dd(s = this.options.template).call(s, this))(a, t, this.data) : e = this.data.content;
        if (e instanceof Object && !(e instanceof Element)) i(a, t);else if (this._contentToString(this.content) !== this._contentToString(e)) {
          if (e instanceof Element) t.innerHTML = "", t.appendChild(e);else if (null != e) t.innerHTML = WC.xss(e);else if ("background" != this.data.type || void 0 !== this.data.content) throw new Error('Property "content" missing in item '.concat(this.id));
          this.content = e;
        }
      }
    }, {
      key: "_updateDataAttributes",
      value: function (t) {
        if (this.options.dataAttributes && this.options.dataAttributes.length > 0) {
          var e = [];
          if (Cd(this.options.dataAttributes)) e = this.options.dataAttributes;else {
            if ("all" != this.options.dataAttributes) return;
            e = Wm(this.data);
          }
          var i,
            n = TE(e);
          try {
            for (n.s(); !(i = n.n()).done;) {
              var o = i.value,
                r = this.data[o];
              null != r ? t.setAttribute("data-".concat(o), r) : t.removeAttribute("data-".concat(o));
            }
          } catch (t) {
            n.e(t);
          } finally {
            n.f();
          }
        }
      }
    }, {
      key: "_updateStyle",
      value: function (t) {
        this.style && (WC.removeCssText(t, this.style), this.style = null), this.data.style && (WC.addCssText(t, this.data.style), this.style = this.data.style);
      }
    }, {
      key: "_contentToString",
      value: function (t) {
        return "string" == typeof t ? t : t && "outerHTML" in t ? t.outerHTML : t;
      }
    }, {
      key: "_updateEditStatus",
      value: function () {
        this.options && ("boolean" == typeof this.options.editable ? this.editable = {
          updateTime: this.options.editable,
          updateGroup: this.options.editable,
          remove: this.options.editable
        } : "object" === kc(this.options.editable) && (this.editable = {}, WC.selectiveExtend(["updateTime", "updateGroup", "remove"], this.editable, this.options.editable))), this.options && this.options.editable && !0 === this.options.editable.overrideItems || this.data && ("boolean" == typeof this.data.editable ? this.editable = {
          updateTime: this.data.editable,
          updateGroup: this.data.editable,
          remove: this.data.editable
        } : "object" === kc(this.data.editable) && (this.editable = {}, WC.selectiveExtend(["updateTime", "updateGroup", "remove"], this.editable, this.data.editable)));
      }
    }, {
      key: "getWidthLeft",
      value: function () {
        return 0;
      }
    }, {
      key: "getWidthRight",
      value: function () {
        return 0;
      }
    }, {
      key: "getTitle",
      value: function () {
        var t;
        return this.options.tooltip && this.options.tooltip.template ? Dd(t = this.options.tooltip.template).call(t, this)(this._getItemData(), this.data) : this.data.title;
      }
    }]), t;
  }();
  function AE(t) {
    var e = function () {
      if ("undefined" == typeof Reflect || !Bo) return !1;
      if (Bo.sham) return !1;
      if ("function" == typeof Proxy) return !0;
      try {
        return Boolean.prototype.valueOf.call(Bo(Boolean, [], function () {})), !0;
      } catch (t) {
        return !1;
      }
    }();
    return function () {
      var i,
        n = wd(t);
      if (e) {
        var o = wd(this).constructor;
        i = Bo(n, arguments, o);
      } else i = n.apply(this, arguments);
      return hd(this, i);
    };
  }
  EE.prototype.stack = !0;
  var IE = function (t) {
    ld(i, t);
    var e = AE(i);
    function i(t, n, o) {
      var r;
      if (zo(this, i), (r = e.call(this, t, n, o)).props = {
        dot: {
          width: 0,
          height: 0
        },
        line: {
          width: 0,
          height: 0
        }
      }, t && null == t.start) throw new Error('Property "start" missing in item '.concat(t));
      return r;
    }
    return Ac(i, [{
      key: "isVisible",
      value: function (t) {
        if (this.cluster) return !1;
        var e,
          i = this.data.align || this.options.align,
          n = this.width * t.getMillisecondsPerPixel();
        return e = "right" == i ? this.data.start.getTime() > t.start && this.data.start.getTime() - n < t.end : "left" == i ? this.data.start.getTime() + n > t.start && this.data.start.getTime() < t.end : this.data.start.getTime() + n / 2 > t.start && this.data.start.getTime() - n / 2 < t.end, e;
      }
    }, {
      key: "_createDomElement",
      value: function () {
        this.dom || (this.dom = {}, this.dom.box = document.createElement("DIV"), this.dom.content = document.createElement("DIV"), this.dom.content.className = "vis-item-content", this.dom.box.appendChild(this.dom.content), this.dom.line = document.createElement("DIV"), this.dom.line.className = "vis-line", this.dom.dot = document.createElement("DIV"), this.dom.dot.className = "vis-dot", this.dom.box["vis-item"] = this, this.dirty = !0);
      }
    }, {
      key: "_appendDomElement",
      value: function () {
        if (!this.parent) throw new Error("Cannot redraw item: no parent attached");
        if (!this.dom.box.parentNode) {
          var t = this.parent.dom.foreground;
          if (!t) throw new Error("Cannot redraw item: parent has no foreground container element");
          t.appendChild(this.dom.box);
        }
        if (!this.dom.line.parentNode) {
          var e = this.parent.dom.background;
          if (!e) throw new Error("Cannot redraw item: parent has no background container element");
          e.appendChild(this.dom.line);
        }
        if (!this.dom.dot.parentNode) {
          var i = this.parent.dom.axis;
          if (!e) throw new Error("Cannot redraw item: parent has no axis container element");
          i.appendChild(this.dom.dot);
        }
        this.displayed = !0;
      }
    }, {
      key: "_updateDirtyDomComponents",
      value: function () {
        if (this.dirty) {
          this._updateContents(this.dom.content), this._updateDataAttributes(this.dom.box), this._updateStyle(this.dom.box);
          var t = this.editable.updateTime || this.editable.updateGroup,
            e = (this.data.className ? " " + this.data.className : "") + (this.selected ? " vis-selected" : "") + (t ? " vis-editable" : " vis-readonly");
          this.dom.box.className = "vis-item vis-box".concat(e), this.dom.line.className = "vis-item vis-line".concat(e), this.dom.dot.className = "vis-item vis-dot".concat(e);
        }
      }
    }, {
      key: "_getDomComponentsSizes",
      value: function () {
        return {
          previous: {
            right: this.dom.box.style.right,
            left: this.dom.box.style.left
          },
          dot: {
            height: this.dom.dot.offsetHeight,
            width: this.dom.dot.offsetWidth
          },
          line: {
            width: this.dom.line.offsetWidth
          },
          box: {
            width: this.dom.box.offsetWidth,
            height: this.dom.box.offsetHeight
          }
        };
      }
    }, {
      key: "_updateDomComponentsSizes",
      value: function (t) {
        this.options.rtl ? this.dom.box.style.right = "0px" : this.dom.box.style.left = "0px", this.props.dot.height = t.dot.height, this.props.dot.width = t.dot.width, this.props.line.width = t.line.width, this.width = t.box.width, this.height = t.box.height, this.options.rtl ? this.dom.box.style.right = t.previous.right : this.dom.box.style.left = t.previous.left, this.dirty = !1;
      }
    }, {
      key: "_repaintDomAdditionals",
      value: function () {
        this._repaintOnItemUpdateTimeTooltip(this.dom.box), this._repaintDragCenter(), this._repaintDeleteButton(this.dom.box);
      }
    }, {
      key: "redraw",
      value: function (t) {
        var e,
          i,
          n,
          o,
          r,
          s,
          a = this,
          l = [Dd(e = this._createDomElement).call(e, this), Dd(i = this._appendDomElement).call(i, this), Dd(n = this._updateDirtyDomComponents).call(n, this), function () {
            a.dirty && (r = a._getDomComponentsSizes());
          }, function () {
            var t;
            a.dirty && Dd(t = a._updateDomComponentsSizes).call(t, a)(r);
          }, Dd(o = this._repaintDomAdditionals).call(o, this)];
        return t ? l : (hp(l).call(l, function (t) {
          s = t();
        }), s);
      }
    }, {
      key: "show",
      value: function (t) {
        if (!this.displayed) return this.redraw(t);
      }
    }, {
      key: "hide",
      value: function () {
        if (this.displayed) {
          var t = this.dom;
          t.box.remove ? t.box.remove() : t.box.parentNode && t.box.parentNode.removeChild(t.box), t.line.remove ? t.line.remove() : t.line.parentNode && t.line.parentNode.removeChild(t.line), t.dot.remove ? t.dot.remove() : t.dot.parentNode && t.dot.parentNode.removeChild(t.dot), this.displayed = !1;
        }
      }
    }, {
      key: "repositionXY",
      value: function () {
        var t = this.options.rtl,
          e = function (t, e, i) {
            var n;
            if (void 0 !== e || void 0 !== i) {
              var o = arguments.length > 3 && void 0 !== arguments[3] && arguments[3] ? -1 * e : e;
              t.style.transform = void 0 !== i ? void 0 !== e ? jv(n = "translate(".concat(o, "px, ")).call(n, i, "px)") : "translateY(".concat(i, "px)") : "translateX(".concat(o, "px)");
            }
          };
        e(this.dom.box, this.boxX, this.boxY, t), e(this.dom.dot, this.dotX, this.dotY, t), e(this.dom.line, this.lineX, this.lineY, t);
      }
    }, {
      key: "repositionX",
      value: function () {
        var t = this.conversion.toScreen(this.data.start),
          e = void 0 === this.data.align ? this.options.align : this.data.align,
          i = this.props.line.width,
          n = this.props.dot.width;
        "right" == e ? (this.boxX = t - this.width, this.lineX = t - i, this.dotX = t - i / 2 - n / 2) : "left" == e ? (this.boxX = t, this.lineX = t, this.dotX = t + i / 2 - n / 2) : (this.boxX = t - this.width / 2, this.lineX = this.options.rtl ? t - i : t - i / 2, this.dotX = t - n / 2), this.options.rtl ? this.right = this.boxX : this.left = this.boxX, this.repositionXY();
      }
    }, {
      key: "repositionY",
      value: function () {
        var t = this.options.orientation.item,
          e = this.dom.line.style;
        if ("top" == t) {
          var i = this.parent.top + this.top + 1;
          this.boxY = this.top || 0, e.height = "".concat(i, "px"), e.bottom = "", e.top = "0";
        } else {
          var n = this.parent.itemSet.props.height - this.parent.top - this.parent.height + this.top;
          this.boxY = this.parent.height - this.top - (this.height || 0), e.height = "".concat(n, "px"), e.top = "", e.bottom = "0";
        }
        this.dotY = -this.props.dot.height / 2, this.repositionXY();
      }
    }, {
      key: "getWidthLeft",
      value: function () {
        return this.width / 2;
      }
    }, {
      key: "getWidthRight",
      value: function () {
        return this.width / 2;
      }
    }]), i;
  }(EE);
  function PE(t) {
    var e = function () {
      if ("undefined" == typeof Reflect || !Bo) return !1;
      if (Bo.sham) return !1;
      if ("function" == typeof Proxy) return !0;
      try {
        return Boolean.prototype.valueOf.call(Bo(Boolean, [], function () {})), !0;
      } catch (t) {
        return !1;
      }
    }();
    return function () {
      var i,
        n = wd(t);
      if (e) {
        var o = wd(this).constructor;
        i = Bo(n, arguments, o);
      } else i = n.apply(this, arguments);
      return hd(this, i);
    };
  }
  var ME = function (t) {
    ld(i, t);
    var e = PE(i);
    function i(t, n, o) {
      var r;
      if (zo(this, i), (r = e.call(this, t, n, o)).props = {
        dot: {
          top: 0,
          width: 0,
          height: 0
        },
        content: {
          height: 0,
          marginLeft: 0,
          marginRight: 0
        }
      }, t && null == t.start) throw new Error('Property "start" missing in item '.concat(t));
      return r;
    }
    return Ac(i, [{
      key: "isVisible",
      value: function (t) {
        if (this.cluster) return !1;
        var e = this.width * t.getMillisecondsPerPixel();
        return this.data.start.getTime() + e > t.start && this.data.start < t.end;
      }
    }, {
      key: "_createDomElement",
      value: function () {
        this.dom || (this.dom = {}, this.dom.point = document.createElement("div"), this.dom.content = document.createElement("div"), this.dom.content.className = "vis-item-content", this.dom.point.appendChild(this.dom.content), this.dom.dot = document.createElement("div"), this.dom.point.appendChild(this.dom.dot), this.dom.point["vis-item"] = this, this.dirty = !0);
      }
    }, {
      key: "_appendDomElement",
      value: function () {
        if (!this.parent) throw new Error("Cannot redraw item: no parent attached");
        if (!this.dom.point.parentNode) {
          var t = this.parent.dom.foreground;
          if (!t) throw new Error("Cannot redraw item: parent has no foreground container element");
          t.appendChild(this.dom.point);
        }
        this.displayed = !0;
      }
    }, {
      key: "_updateDirtyDomComponents",
      value: function () {
        if (this.dirty) {
          this._updateContents(this.dom.content), this._updateDataAttributes(this.dom.point), this._updateStyle(this.dom.point);
          var t = this.editable.updateTime || this.editable.updateGroup,
            e = (this.data.className ? " " + this.data.className : "") + (this.selected ? " vis-selected" : "") + (t ? " vis-editable" : " vis-readonly");
          this.dom.point.className = "vis-item vis-point".concat(e), this.dom.dot.className = "vis-item vis-dot".concat(e);
        }
      }
    }, {
      key: "_getDomComponentsSizes",
      value: function () {
        return {
          dot: {
            width: this.dom.dot.offsetWidth,
            height: this.dom.dot.offsetHeight
          },
          content: {
            width: this.dom.content.offsetWidth,
            height: this.dom.content.offsetHeight
          },
          point: {
            width: this.dom.point.offsetWidth,
            height: this.dom.point.offsetHeight
          }
        };
      }
    }, {
      key: "_updateDomComponentsSizes",
      value: function (t) {
        this.props.dot.width = t.dot.width, this.props.dot.height = t.dot.height, this.props.content.height = t.content.height, this.options.rtl ? this.dom.content.style.marginRight = "".concat(this.props.dot.width / 2, "px") : this.dom.content.style.marginLeft = "".concat(this.props.dot.width / 2, "px"), this.width = t.point.width, this.height = t.point.height, this.dom.dot.style.top = "".concat((this.height - this.props.dot.height) / 2, "px");
        var e = this.props.dot.width,
          i = this.options.rtl ? e / 2 : e / 2 * -1;
        this.dom.dot.style.transform = "translateX(".concat(i, "px"), this.dirty = !1;
      }
    }, {
      key: "_repaintDomAdditionals",
      value: function () {
        this._repaintOnItemUpdateTimeTooltip(this.dom.point), this._repaintDragCenter(), this._repaintDeleteButton(this.dom.point);
      }
    }, {
      key: "redraw",
      value: function (t) {
        var e,
          i,
          n,
          o,
          r,
          s,
          a = this,
          l = [Dd(e = this._createDomElement).call(e, this), Dd(i = this._appendDomElement).call(i, this), Dd(n = this._updateDirtyDomComponents).call(n, this), function () {
            a.dirty && (r = a._getDomComponentsSizes());
          }, function () {
            var t;
            a.dirty && Dd(t = a._updateDomComponentsSizes).call(t, a)(r);
          }, Dd(o = this._repaintDomAdditionals).call(o, this)];
        return t ? l : (hp(l).call(l, function (t) {
          s = t();
        }), s);
      }
    }, {
      key: "repositionXY",
      value: function () {
        var t = this.options.rtl,
          e = function (t, e, i) {
            var n;
            if (void 0 !== e || void 0 !== i) {
              var o = arguments.length > 3 && void 0 !== arguments[3] && arguments[3] ? -1 * e : e;
              t.style.transform = void 0 !== i ? void 0 !== e ? jv(n = "translate(".concat(o, "px, ")).call(n, i, "px)") : "translateY(".concat(i, "px)") : "translateX(".concat(o, "px)");
            }
          };
        e(this.dom.point, this.pointX, this.pointY, t);
      }
    }, {
      key: "show",
      value: function (t) {
        if (!this.displayed) return this.redraw(t);
      }
    }, {
      key: "hide",
      value: function () {
        this.displayed && (this.dom.point.parentNode && this.dom.point.parentNode.removeChild(this.dom.point), this.displayed = !1);
      }
    }, {
      key: "repositionX",
      value: function () {
        var t = this.conversion.toScreen(this.data.start);
        this.pointX = t, this.options.rtl ? this.right = t - this.props.dot.width : this.left = t - this.props.dot.width, this.repositionXY();
      }
    }, {
      key: "repositionY",
      value: function () {
        var t = this.options.orientation.item;
        this.pointY = "top" == t ? this.top : this.parent.height - this.top - this.height, this.repositionXY();
      }
    }, {
      key: "getWidthLeft",
      value: function () {
        return this.props.dot.width;
      }
    }, {
      key: "getWidthRight",
      value: function () {
        return this.props.dot.width;
      }
    }]), i;
  }(EE);
  function NE(t) {
    var e = function () {
      if ("undefined" == typeof Reflect || !Bo) return !1;
      if (Bo.sham) return !1;
      if ("function" == typeof Proxy) return !0;
      try {
        return Boolean.prototype.valueOf.call(Bo(Boolean, [], function () {})), !0;
      } catch (t) {
        return !1;
      }
    }();
    return function () {
      var i,
        n = wd(t);
      if (e) {
        var o = wd(this).constructor;
        i = Bo(n, arguments, o);
      } else i = n.apply(this, arguments);
      return hd(this, i);
    };
  }
  var FE = function (t) {
    ld(i, t);
    var e = NE(i);
    function i(t, n, o) {
      var r;
      if (zo(this, i), (r = e.call(this, t, n, o)).props = {
        content: {
          width: 0
        }
      }, r.overflow = !1, t) {
        if (null == t.start) throw new Error('Property "start" missing in item '.concat(t.id));
        if (null == t.end) throw new Error('Property "end" missing in item '.concat(t.id));
      }
      return r;
    }
    return Ac(i, [{
      key: "isVisible",
      value: function (t) {
        return !this.cluster && this.data.start < t.end && this.data.end > t.start;
      }
    }, {
      key: "_createDomElement",
      value: function () {
        this.dom || (this.dom = {}, this.dom.box = document.createElement("div"), this.dom.frame = document.createElement("div"), this.dom.frame.className = "vis-item-overflow", this.dom.box.appendChild(this.dom.frame), this.dom.visibleFrame = document.createElement("div"), this.dom.visibleFrame.className = "vis-item-visible-frame", this.dom.box.appendChild(this.dom.visibleFrame), this.dom.content = document.createElement("div"), this.dom.content.className = "vis-item-content", this.dom.frame.appendChild(this.dom.content), this.dom.box["vis-item"] = this, this.dirty = !0);
      }
    }, {
      key: "_appendDomElement",
      value: function () {
        if (!this.parent) throw new Error("Cannot redraw item: no parent attached");
        if (!this.dom.box.parentNode) {
          var t = this.parent.dom.foreground;
          if (!t) throw new Error("Cannot redraw item: parent has no foreground container element");
          t.appendChild(this.dom.box);
        }
        this.displayed = !0;
      }
    }, {
      key: "_updateDirtyDomComponents",
      value: function () {
        if (this.dirty) {
          this._updateContents(this.dom.content), this._updateDataAttributes(this.dom.box), this._updateStyle(this.dom.box);
          var t = this.editable.updateTime || this.editable.updateGroup,
            e = (this.data.className ? " " + this.data.className : "") + (this.selected ? " vis-selected" : "") + (t ? " vis-editable" : " vis-readonly");
          this.dom.box.className = this.baseClassName + e, this.dom.content.style.maxWidth = "none";
        }
      }
    }, {
      key: "_getDomComponentsSizes",
      value: function () {
        return this.overflow = "hidden" !== window.getComputedStyle(this.dom.frame).overflow, this.whiteSpace = "nowrap" !== window.getComputedStyle(this.dom.content).whiteSpace, {
          content: {
            width: this.dom.content.offsetWidth
          },
          box: {
            height: this.dom.box.offsetHeight
          }
        };
      }
    }, {
      key: "_updateDomComponentsSizes",
      value: function (t) {
        this.props.content.width = t.content.width, this.height = t.box.height, this.dom.content.style.maxWidth = "", this.dirty = !1;
      }
    }, {
      key: "_repaintDomAdditionals",
      value: function () {
        this._repaintOnItemUpdateTimeTooltip(this.dom.box), this._repaintDeleteButton(this.dom.box), this._repaintDragCenter(), this._repaintDragLeft(), this._repaintDragRight();
      }
    }, {
      key: "redraw",
      value: function (t) {
        var e,
          i,
          n,
          o,
          r,
          s,
          a = this,
          l = [Dd(e = this._createDomElement).call(e, this), Dd(i = this._appendDomElement).call(i, this), Dd(n = this._updateDirtyDomComponents).call(n, this), function () {
            var t;
            a.dirty && (r = Dd(t = a._getDomComponentsSizes).call(t, a)());
          }, function () {
            var t;
            a.dirty && Dd(t = a._updateDomComponentsSizes).call(t, a)(r);
          }, Dd(o = this._repaintDomAdditionals).call(o, this)];
        return t ? l : (hp(l).call(l, function (t) {
          s = t();
        }), s);
      }
    }, {
      key: "show",
      value: function (t) {
        if (!this.displayed) return this.redraw(t);
      }
    }, {
      key: "hide",
      value: function () {
        if (this.displayed) {
          var t = this.dom.box;
          t.parentNode && t.parentNode.removeChild(t), this.displayed = !1;
        }
      }
    }, {
      key: "repositionX",
      value: function (t) {
        var e,
          i,
          n = this.parent.width,
          o = this.conversion.toScreen(this.data.start),
          r = this.conversion.toScreen(this.data.end),
          s = void 0 === this.data.align ? this.options.align : this.data.align;
        !1 === this.data.limitSize || void 0 !== t && !0 !== t || (o < -n && (o = -n), r > 2 * n && (r = 2 * n));
        var a = Math.max(Math.round(1e3 * (r - o)) / 1e3, 1);
        switch (this.overflow ? (this.options.rtl ? this.right = o : this.left = o, this.width = a + this.props.content.width, i = this.props.content.width) : (this.options.rtl ? this.right = o : this.left = o, this.width = a, i = Math.min(r - o, this.props.content.width)), this.options.rtl ? this.dom.box.style.transform = "translateX(".concat(-1 * this.right, "px)") : this.dom.box.style.transform = "translateX(".concat(this.left, "px)"), this.dom.box.style.width = "".concat(a, "px"), this.whiteSpace && (this.height = this.dom.box.offsetHeight), s) {
          case "left":
            this.dom.content.style.transform = "translateX(0)";
            break;
          case "right":
            if (this.options.rtl) {
              var l = -1 * Math.max(a - i, 0);
              this.dom.content.style.transform = "translateX(".concat(l, "px)");
            } else this.dom.content.style.transform = "translateX(".concat(Math.max(a - i, 0), "px)");
            break;
          case "center":
            if (this.options.rtl) {
              var h = -1 * Math.max((a - i) / 2, 0);
              this.dom.content.style.transform = "translateX(".concat(h, "px)");
            } else this.dom.content.style.transform = "translateX(".concat(Math.max((a - i) / 2, 0), "px)");
            break;
          default:
            if (e = this.overflow ? r > 0 ? Math.max(-o, 0) : -i : o < 0 ? -o : 0, this.options.rtl) {
              var u = -1 * e;
              this.dom.content.style.transform = "translateX(".concat(u, "px)");
            } else this.dom.content.style.transform = "translateX(".concat(e, "px)");
        }
      }
    }, {
      key: "repositionY",
      value: function () {
        var t = this.options.orientation.item,
          e = this.dom.box;
        e.style.top = "".concat("top" == t ? this.top : this.parent.height - this.top - this.height, "px");
      }
    }, {
      key: "_repaintDragLeft",
      value: function () {
        if ((this.selected || this.options.itemsAlwaysDraggable.range) && this.editable.updateTime && !this.dom.dragLeft) {
          var t = document.createElement("div");
          t.className = "vis-drag-left", t.dragLeftItem = this, this.dom.box.appendChild(t), this.dom.dragLeft = t;
        } else this.selected || this.options.itemsAlwaysDraggable.range || !this.dom.dragLeft || (this.dom.dragLeft.parentNode && this.dom.dragLeft.parentNode.removeChild(this.dom.dragLeft), this.dom.dragLeft = null);
      }
    }, {
      key: "_repaintDragRight",
      value: function () {
        if ((this.selected || this.options.itemsAlwaysDraggable.range) && this.editable.updateTime && !this.dom.dragRight) {
          var t = document.createElement("div");
          t.className = "vis-drag-right", t.dragRightItem = this, this.dom.box.appendChild(t), this.dom.dragRight = t;
        } else this.selected || this.options.itemsAlwaysDraggable.range || !this.dom.dragRight || (this.dom.dragRight.parentNode && this.dom.dragRight.parentNode.removeChild(this.dom.dragRight), this.dom.dragRight = null);
      }
    }]), i;
  }(EE);
  function RE(t) {
    var e = function () {
      if ("undefined" == typeof Reflect || !Bo) return !1;
      if (Bo.sham) return !1;
      if ("function" == typeof Proxy) return !0;
      try {
        return Boolean.prototype.valueOf.call(Bo(Boolean, [], function () {})), !0;
      } catch (t) {
        return !1;
      }
    }();
    return function () {
      var i,
        n = wd(t);
      if (e) {
        var o = wd(this).constructor;
        i = Bo(n, arguments, o);
      } else i = n.apply(this, arguments);
      return hd(this, i);
    };
  }
  FE.prototype.baseClassName = "vis-item vis-range";
  var LE = function (t) {
    ld(i, t);
    var e = RE(i);
    function i(t, n, o) {
      var r;
      if (zo(this, i), (r = e.call(this, t, n, o)).props = {
        content: {
          width: 0
        }
      }, r.overflow = !1, t) {
        if (null == t.start) throw new Error('Property "start" missing in item '.concat(t.id));
        if (null == t.end) throw new Error('Property "end" missing in item '.concat(t.id));
      }
      return r;
    }
    return Ac(i, [{
      key: "isVisible",
      value: function (t) {
        return this.data.start < t.end && this.data.end > t.start;
      }
    }, {
      key: "_createDomElement",
      value: function () {
        this.dom || (this.dom = {}, this.dom.box = document.createElement("div"), this.dom.frame = document.createElement("div"), this.dom.frame.className = "vis-item-overflow", this.dom.box.appendChild(this.dom.frame), this.dom.content = document.createElement("div"), this.dom.content.className = "vis-item-content", this.dom.frame.appendChild(this.dom.content), this.dirty = !0);
      }
    }, {
      key: "_appendDomElement",
      value: function () {
        if (!this.parent) throw new Error("Cannot redraw item: no parent attached");
        if (!this.dom.box.parentNode) {
          var t = this.parent.dom.background;
          if (!t) throw new Error("Cannot redraw item: parent has no background container element");
          t.appendChild(this.dom.box);
        }
        this.displayed = !0;
      }
    }, {
      key: "_updateDirtyDomComponents",
      value: function () {
        if (this.dirty) {
          this._updateContents(this.dom.content), this._updateDataAttributes(this.dom.content), this._updateStyle(this.dom.box);
          var t = (this.data.className ? " " + this.data.className : "") + (this.selected ? " vis-selected" : "");
          this.dom.box.className = this.baseClassName + t;
        }
      }
    }, {
      key: "_getDomComponentsSizes",
      value: function () {
        return this.overflow = "hidden" !== window.getComputedStyle(this.dom.content).overflow, {
          content: {
            width: this.dom.content.offsetWidth
          }
        };
      }
    }, {
      key: "_updateDomComponentsSizes",
      value: function (t) {
        this.props.content.width = t.content.width, this.height = 0, this.dirty = !1;
      }
    }, {
      key: "_repaintDomAdditionals",
      value: function () {}
    }, {
      key: "redraw",
      value: function (t) {
        var e,
          i,
          n,
          o,
          r,
          s,
          a = this,
          l = [Dd(e = this._createDomElement).call(e, this), Dd(i = this._appendDomElement).call(i, this), Dd(n = this._updateDirtyDomComponents).call(n, this), function () {
            var t;
            a.dirty && (r = Dd(t = a._getDomComponentsSizes).call(t, a)());
          }, function () {
            var t;
            a.dirty && Dd(t = a._updateDomComponentsSizes).call(t, a)(r);
          }, Dd(o = this._repaintDomAdditionals).call(o, this)];
        return t ? l : (hp(l).call(l, function (t) {
          s = t();
        }), s);
      }
    }, {
      key: "repositionY",
      value: function (t) {
        var e,
          i = this.options.orientation.item;
        if (void 0 !== this.data.subgroup) {
          var n = this.data.subgroup;
          this.dom.box.style.height = "".concat(this.parent.subgroups[n].height, "px"), this.dom.box.style.top = "".concat("top" == i ? this.parent.top + this.parent.subgroups[n].top : this.parent.top + this.parent.height - this.parent.subgroups[n].top - this.parent.subgroups[n].height, "px"), this.dom.box.style.bottom = "";
        } else this.parent instanceof DE ? (e = Math.max(this.parent.height, this.parent.itemSet.body.domProps.center.height, this.parent.itemSet.body.domProps.centerContainer.height), this.dom.box.style.bottom = "bottom" == i ? "0" : "", this.dom.box.style.top = "top" == i ? "0" : "") : (e = this.parent.height, this.dom.box.style.top = "".concat(this.parent.top, "px"), this.dom.box.style.bottom = "");
        this.dom.box.style.height = "".concat(e, "px");
      }
    }]), i;
  }(EE);
  LE.prototype.baseClassName = "vis-item vis-background", LE.prototype.stack = !1, LE.prototype.show = FE.prototype.show, LE.prototype.hide = FE.prototype.hide, LE.prototype.repositionX = FE.prototype.repositionX;
  var jE = function () {
      function t(e, i) {
        zo(this, t), this.container = e, this.overflowMethod = i || "cap", this.x = 0, this.y = 0, this.padding = 5, this.hidden = !1, this.frame = document.createElement("div"), this.frame.className = "vis-tooltip", this.container.appendChild(this.frame);
      }
      return Ac(t, [{
        key: "setPosition",
        value: function (t, e) {
          this.x = mb(t), this.y = mb(e);
        }
      }, {
        key: "setText",
        value: function (t) {
          t instanceof Element ? (this.frame.innerHTML = "", this.frame.appendChild(t)) : this.frame.innerHTML = WC.xss(t);
        }
      }, {
        key: "show",
        value: function (t) {
          if (void 0 === t && (t = !0), !0 === t) {
            var e = this.frame.clientHeight,
              i = this.frame.clientWidth,
              n = this.frame.parentNode.clientHeight,
              o = this.frame.parentNode.clientWidth,
              r = 0,
              s = 0;
            if ("flip" == this.overflowMethod || "none" == this.overflowMethod) {
              var a = !1,
                l = !0;
              "flip" == this.overflowMethod && (this.y - e < this.padding && (l = !1), this.x + i > o - this.padding && (a = !0)), r = a ? this.x - i : this.x, s = l ? this.y - e : this.y;
            } else (s = this.y - e) + e + this.padding > n && (s = n - e - this.padding), s < this.padding && (s = this.padding), (r = this.x) + i + this.padding > o && (r = o - i - this.padding), r < this.padding && (r = this.padding);
            this.frame.style.left = r + "px", this.frame.style.top = s + "px", this.frame.style.visibility = "visible", this.hidden = !1;
          } else this.hide();
        }
      }, {
        key: "hide",
        value: function () {
          this.hidden = !0, this.frame.style.left = "0", this.frame.style.top = "0", this.frame.style.visibility = "hidden";
        }
      }, {
        key: "destroy",
        value: function () {
          this.frame.parentNode.removeChild(this.frame);
        }
      }]), t;
    }(),
    BE = {},
    zE = {
      get exports() {
        return BE;
      },
      set exports(t) {
        BE = t;
      }
    },
    HE = ta.every;
  Pi({
    target: "Array",
    proto: !0,
    forced: !Qd("every")
  }, {
    every: function (t) {
      return HE(this, t, arguments.length > 1 ? arguments[1] : void 0);
    }
  });
  var GE = Qc("Array").every,
    WE = dt,
    YE = GE,
    VE = Array.prototype,
    UE = function (t) {
      var e = t.every;
      return t === VE || WE(VE, t) && e === VE.every ? YE : e;
    },
    XE = UE;
  !function (t) {
    t.exports = XE;
  }(zE);
  var qE = r(BE);
  function KE(t, e) {
    var i = void 0 !== Ev && Hf(t) || t["@@iterator"];
    if (!i) {
      if (Cd(t) || (i = function (t, e) {
        var i;
        if (!t) return;
        if ("string" == typeof t) return $E(t, e);
        var n = zv(i = Object.prototype.toString.call(t)).call(i, 8, -1);
        "Object" === n && t.constructor && (n = t.constructor.name);
        if ("Map" === n || "Set" === n) return Rf(t);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return $E(t, e);
      }(t)) || e && t && "number" == typeof t.length) {
        i && (t = i);
        var n = 0,
          o = function () {};
        return {
          s: o,
          n: function () {
            return n >= t.length ? {
              done: !0
            } : {
              done: !1,
              value: t[n++]
            };
          },
          e: function (t) {
            throw t;
          },
          f: o
        };
      }
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var r,
      s = !0,
      a = !1;
    return {
      s: function () {
        i = i.call(t);
      },
      n: function () {
        var t = i.next();
        return s = t.done, t;
      },
      e: function (t) {
        a = !0, r = t;
      },
      f: function () {
        try {
          s || null == i.return || i.return();
        } finally {
          if (a) throw r;
        }
      }
    };
  }
  function $E(t, e) {
    (null == e || e > t.length) && (e = t.length);
    for (var i = 0, n = new Array(e); i < e; i++) n[i] = t[i];
    return n;
  }
  function ZE(t) {
    var e = function () {
      if ("undefined" == typeof Reflect || !Bo) return !1;
      if (Bo.sham) return !1;
      if ("function" == typeof Proxy) return !0;
      try {
        return Boolean.prototype.valueOf.call(Bo(Boolean, [], function () {})), !0;
      } catch (t) {
        return !1;
      }
    }();
    return function () {
      var i,
        n = wd(t);
      if (e) {
        var o = wd(this).constructor;
        i = Bo(n, arguments, o);
      } else i = n.apply(this, arguments);
      return hd(this, i);
    };
  }
  var QE = function (t) {
    ld(i, t);
    var e = ZE(i);
    function i(t, n, o) {
      var r;
      zo(this, i);
      var s = oy({}, {
        fitOnDoubleClick: !0
      }, o, {
        editable: !1
      });
      if ((r = e.call(this, t, n, s)).props = {
        content: {
          width: 0,
          height: 0
        }
      }, !t || null == t.uiItems) throw new Error('Property "uiItems" missing in item ' + t.id);
      return r.id = PC(), r.group = t.group, r._setupRange(), r.emitter = r.data.eventEmitter, r.range = r.data.range, r.attached = !1, r.isCluster = !0, r.data.isCluster = !0, r;
    }
    return Ac(i, [{
      key: "hasItems",
      value: function () {
        return this.data.uiItems && this.data.uiItems.length && this.attached;
      }
    }, {
      key: "setUiItems",
      value: function (t) {
        this.detach(), this.data.uiItems = t, this._setupRange(), this.attach();
      }
    }, {
      key: "isVisible",
      value: function (t) {
        var e = this.data.end ? this.data.end - this.data.start : 0,
          i = this.width * t.getMillisecondsPerPixel(),
          n = Math.max(this.data.start.getTime() + e, this.data.start.getTime() + i);
        return this.data.start < t.end && n > t.start && this.hasItems();
      }
    }, {
      key: "getData",
      value: function () {
        return {
          isCluster: !0,
          id: this.id,
          items: this.data.items || [],
          data: this.data
        };
      }
    }, {
      key: "redraw",
      value: function (t) {
        var e,
          i,
          n,
          o,
          r,
          s,
          a,
          l,
          h = [Dd(e = this._createDomElement).call(e, this), Dd(i = this._appendDomElement).call(i, this), Dd(n = this._updateDirtyDomComponents).call(n, this), Dd(o = function () {
            this.dirty && (a = this._getDomComponentsSizes());
          }).call(o, this), Dd(r = function () {
            var t;
            this.dirty && Dd(t = this._updateDomComponentsSizes).call(t, this)(a);
          }).call(r, this), Dd(s = this._repaintDomAdditionals).call(s, this)];
        return t ? h : (hp(h).call(h, function (t) {
          l = t();
        }), l);
      }
    }, {
      key: "show",
      value: function () {
        this.displayed || this.redraw();
      }
    }, {
      key: "hide",
      value: function () {
        if (this.displayed) {
          var t = this.dom;
          t.box.parentNode && t.box.parentNode.removeChild(t.box), this.options.showStipes && (t.line.parentNode && t.line.parentNode.removeChild(t.line), t.dot.parentNode && t.dot.parentNode.removeChild(t.dot)), this.displayed = !1;
        }
      }
    }, {
      key: "repositionX",
      value: function () {
        var t = this.conversion.toScreen(this.data.start),
          e = this.data.end ? this.conversion.toScreen(this.data.end) : 0;
        if (e) this.repositionXWithRanges(t, e);else {
          var i = void 0 === this.data.align ? this.options.align : this.data.align;
          this.repositionXWithoutRanges(t, i);
        }
        this.options.showStipes && (this.dom.line.style.display = this._isStipeVisible() ? "block" : "none", this.dom.dot.style.display = this._isStipeVisible() ? "block" : "none", this._isStipeVisible() && this.repositionStype(t, e));
      }
    }, {
      key: "repositionStype",
      value: function (t, e) {
        this.dom.line.style.display = "block", this.dom.dot.style.display = "block";
        var i = this.dom.line.offsetWidth,
          n = this.dom.dot.offsetWidth;
        if (e) {
          var o = i + t + (e - t) / 2,
            r = o - n / 2,
            s = this.options.rtl ? -1 * o : o,
            a = this.options.rtl ? -1 * r : r;
          this.dom.line.style.transform = "translateX(".concat(s, "px)"), this.dom.dot.style.transform = "translateX(".concat(a, "px)");
        } else {
          var l = this.options.rtl ? -1 * t : t,
            h = this.options.rtl ? -1 * (t - n / 2) : t - n / 2;
          this.dom.line.style.transform = "translateX(".concat(l, "px)"), this.dom.dot.style.transform = "translateX(".concat(h, "px)");
        }
      }
    }, {
      key: "repositionXWithoutRanges",
      value: function (t, e) {
        "right" == e ? this.options.rtl ? (this.right = t - this.width, this.dom.box.style.right = this.right + "px") : (this.left = t - this.width, this.dom.box.style.left = this.left + "px") : "left" == e ? this.options.rtl ? (this.right = t, this.dom.box.style.right = this.right + "px") : (this.left = t, this.dom.box.style.left = this.left + "px") : this.options.rtl ? (this.right = t - this.width / 2, this.dom.box.style.right = this.right + "px") : (this.left = t - this.width / 2, this.dom.box.style.left = this.left + "px");
      }
    }, {
      key: "repositionXWithRanges",
      value: function (t, e) {
        var i = Math.round(Math.max(e - t + .5, 1));
        this.options.rtl ? this.right = t : this.left = t, this.width = Math.max(i, this.minWidth || 0), this.options.rtl ? this.dom.box.style.right = this.right + "px" : this.dom.box.style.left = this.left + "px", this.dom.box.style.width = i + "px";
      }
    }, {
      key: "repositionY",
      value: function () {
        var t = this.options.orientation.item,
          e = this.dom.box;
        if (e.style.top = "top" == t ? (this.top || 0) + "px" : (this.parent.height - this.top - this.height || 0) + "px", this.options.showStipes) {
          if ("top" == t) this.dom.line.style.top = "0", this.dom.line.style.height = this.parent.top + this.top + 1 + "px", this.dom.line.style.bottom = "";else {
            var i = this.parent.itemSet.props.height,
              n = i - this.parent.top - this.parent.height + this.top;
            this.dom.line.style.top = i - n + "px", this.dom.line.style.bottom = "0";
          }
          this.dom.dot.style.top = -this.dom.dot.offsetHeight / 2 + "px";
        }
      }
    }, {
      key: "getWidthLeft",
      value: function () {
        return this.width / 2;
      }
    }, {
      key: "getWidthRight",
      value: function () {
        return this.width / 2;
      }
    }, {
      key: "move",
      value: function () {
        this.repositionX(), this.repositionY();
      }
    }, {
      key: "attach",
      value: function () {
        var t,
          e,
          i = KE(this.data.uiItems);
        try {
          for (i.s(); !(e = i.n()).done;) {
            e.value.cluster = this;
          }
        } catch (t) {
          i.e(t);
        } finally {
          i.f();
        }
        this.data.items = bm(t = this.data.uiItems).call(t, function (t) {
          return t.data;
        }), this.attached = !0, this.dirty = !0;
      }
    }, {
      key: "detach",
      value: function () {
        var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
        if (this.hasItems()) {
          var e,
            i = KE(this.data.uiItems);
          try {
            for (i.s(); !(e = i.n()).done;) {
              delete e.value.cluster;
            }
          } catch (t) {
            i.e(t);
          } finally {
            i.f();
          }
          this.attached = !1, t && this.group && (this.group.remove(this), this.group = null), this.data.items = [], this.dirty = !0;
        }
      }
    }, {
      key: "_onDoubleClick",
      value: function () {
        this._fit();
      }
    }, {
      key: "_setupRange",
      value: function () {
        var t,
          e,
          i,
          n = bm(t = this.data.uiItems).call(t, function (t) {
            return {
              start: t.data.start.valueOf(),
              end: t.data.end ? t.data.end.valueOf() : t.data.start.valueOf()
            };
          });
        this.data.min = Math.min.apply(Math, Tv(bm(n).call(n, function (t) {
          return Math.min(t.start, t.end || t.start);
        }))), this.data.max = Math.max.apply(Math, Tv(bm(n).call(n, function (t) {
          return Math.max(t.start, t.end || t.start);
        })));
        var o = bm(e = this.data.uiItems).call(e, function (t) {
            return t.center;
          }),
          r = Lm(o).call(o, function (t, e) {
            return t + e;
          }, 0) / this.data.uiItems.length;
        ID(i = this.data.uiItems).call(i, function (t) {
          return t.data.end;
        }) ? (this.data.start = new Date(this.data.min), this.data.end = new Date(this.data.max)) : (this.data.start = new Date(r), this.data.end = null);
      }
    }, {
      key: "_getUiItems",
      value: function () {
        var t,
          e = this;
        return this.data.uiItems && this.data.uiItems.length ? Cp(t = this.data.uiItems).call(t, function (t) {
          return t.cluster === e;
        }) : [];
      }
    }, {
      key: "_createDomElement",
      value: function () {
        if (!this.dom) {
          var t;
          if (this.dom = {}, this.dom.box = document.createElement("DIV"), this.dom.content = document.createElement("DIV"), this.dom.content.className = "vis-item-content", this.dom.box.appendChild(this.dom.content), this.options.showStipes && (this.dom.line = document.createElement("DIV"), this.dom.line.className = "vis-cluster-line", this.dom.line.style.display = "none", this.dom.dot = document.createElement("DIV"), this.dom.dot.className = "vis-cluster-dot", this.dom.dot.style.display = "none"), this.options.fitOnDoubleClick) this.dom.box.ondblclick = Dd(t = i.prototype._onDoubleClick).call(t, this);
          this.dom.box["vis-item"] = this, this.dirty = !0;
        }
      }
    }, {
      key: "_appendDomElement",
      value: function () {
        if (!this.parent) throw new Error("Cannot redraw item: no parent attached");
        if (!this.dom.box.parentNode) {
          var t = this.parent.dom.foreground;
          if (!t) throw new Error("Cannot redraw item: parent has no foreground container element");
          t.appendChild(this.dom.box);
        }
        var e = this.parent.dom.background;
        if (this.options.showStipes) {
          if (!this.dom.line.parentNode) {
            if (!e) throw new Error("Cannot redraw item: parent has no background container element");
            e.appendChild(this.dom.line);
          }
          if (!this.dom.dot.parentNode) {
            var i = this.parent.dom.axis;
            if (!e) throw new Error("Cannot redraw item: parent has no axis container element");
            i.appendChild(this.dom.dot);
          }
        }
        this.displayed = !0;
      }
    }, {
      key: "_updateDirtyDomComponents",
      value: function () {
        if (this.dirty) {
          this._updateContents(this.dom.content), this._updateDataAttributes(this.dom.box), this._updateStyle(this.dom.box);
          var t = this.baseClassName + " " + (this.data.className ? " " + this.data.className : "") + (this.selected ? " vis-selected" : "") + " vis-readonly";
          this.dom.box.className = "vis-item " + t, this.options.showStipes && (this.dom.line.className = "vis-item vis-cluster-line " + (this.selected ? " vis-selected" : ""), this.dom.dot.className = "vis-item vis-cluster-dot " + (this.selected ? " vis-selected" : "")), this.data.end && (this.dom.content.style.maxWidth = "none");
        }
      }
    }, {
      key: "_getDomComponentsSizes",
      value: function () {
        var t = {
          previous: {
            right: this.dom.box.style.right,
            left: this.dom.box.style.left
          },
          box: {
            width: this.dom.box.offsetWidth,
            height: this.dom.box.offsetHeight
          }
        };
        return this.options.showStipes && (t.dot = {
          height: this.dom.dot.offsetHeight,
          width: this.dom.dot.offsetWidth
        }, t.line = {
          width: this.dom.line.offsetWidth
        }), t;
      }
    }, {
      key: "_updateDomComponentsSizes",
      value: function (t) {
        this.options.rtl ? this.dom.box.style.right = "0px" : this.dom.box.style.left = "0px", this.data.end ? this.minWidth = t.box.width : this.width = t.box.width, this.height = t.box.height, this.options.rtl ? this.dom.box.style.right = t.previous.right : this.dom.box.style.left = t.previous.left, this.dirty = !1;
      }
    }, {
      key: "_repaintDomAdditionals",
      value: function () {
        this._repaintOnItemUpdateTimeTooltip(this.dom.box);
      }
    }, {
      key: "_isStipeVisible",
      value: function () {
        return this.minWidth >= this.width || !this.data.end;
      }
    }, {
      key: "_getFitRange",
      value: function () {
        var t = .05 * (this.data.max - this.data.min) / 2;
        return {
          fitStart: this.data.min - t,
          fitEnd: this.data.max + t
        };
      }
    }, {
      key: "_fit",
      value: function () {
        if (this.emitter) {
          var t = this._getFitRange(),
            e = t.fitStart,
            i = t.fitEnd,
            n = {
              start: new Date(e),
              end: new Date(i),
              animation: !0
            };
          this.emitter.emit("fit", n);
        }
      }
    }, {
      key: "_getItemData",
      value: function () {
        return this.data;
      }
    }]), i;
  }(EE);
  function JE(t, e) {
    var i = void 0 !== Ev && Hf(t) || t["@@iterator"];
    if (!i) {
      if (Cd(t) || (i = function (t, e) {
        var i;
        if (!t) return;
        if ("string" == typeof t) return tA(t, e);
        var n = zv(i = Object.prototype.toString.call(t)).call(i, 8, -1);
        "Object" === n && t.constructor && (n = t.constructor.name);
        if ("Map" === n || "Set" === n) return Rf(t);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return tA(t, e);
      }(t)) || e && t && "number" == typeof t.length) {
        i && (t = i);
        var n = 0,
          o = function () {};
        return {
          s: o,
          n: function () {
            return n >= t.length ? {
              done: !0
            } : {
              done: !1,
              value: t[n++]
            };
          },
          e: function (t) {
            throw t;
          },
          f: o
        };
      }
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var r,
      s = !0,
      a = !1;
    return {
      s: function () {
        i = i.call(t);
      },
      n: function () {
        var t = i.next();
        return s = t.done, t;
      },
      e: function (t) {
        a = !0, r = t;
      },
      f: function () {
        try {
          s || null == i.return || i.return();
        } finally {
          if (a) throw r;
        }
      }
    };
  }
  function tA(t, e) {
    (null == e || e > t.length) && (e = t.length);
    for (var i = 0, n = new Array(e); i < e; i++) n[i] = t[i];
    return n;
  }
  QE.prototype.baseClassName = "vis-item vis-range vis-cluster";
  var eA = "__ungrouped__",
    iA = function () {
      function t(e) {
        zo(this, t), this.itemSet = e, this.groups = {}, this.cache = {}, this.cache[-1] = [];
      }
      return Ac(t, [{
        key: "createClusterItem",
        value: function (t, e, i) {
          return new QE(t, e, i);
        }
      }, {
        key: "setItems",
        value: function (t, e) {
          this.items = t || [], this.dataChanged = !0, this.applyOnChangedLevel = !1, e && e.applyOnChangedLevel && (this.applyOnChangedLevel = e.applyOnChangedLevel);
        }
      }, {
        key: "updateData",
        value: function () {
          this.dataChanged = !0, this.applyOnChangedLevel = !1;
        }
      }, {
        key: "getClusters",
        value: function (t, e, i) {
          var n = "boolean" == typeof i ? {} : i,
            o = n.maxItems,
            r = n.clusterCriteria;
          r || (r = function () {
            return !0;
          }), o = o || 1;
          var s = -1,
            a = 0;
          if (e > 0) {
            if (e >= 1) return [];
            s = Math.abs(Math.round(Math.log(100 / e) / Math.log(2))), a = Math.abs(Math.pow(2, s));
          }
          if (this.dataChanged) {
            var l = s != this.cacheLevel;
            (!this.applyOnChangedLevel || l) && (this._dropLevelsCache(), this._filterData());
          }
          this.cacheLevel = s;
          var h = this.cache[s];
          if (!h) {
            for (var u in h = [], this.groups) if (this.groups.hasOwnProperty(u)) for (var c = this.groups[u], d = c.length, p = 0; p < d;) {
              for (var m = c[p], f = 1, v = p - 1; v >= 0 && m.center - c[v].center < a / 2;) !c[v].cluster && r(m.data, c[v].data) && f++, v--;
              for (var g = p + 1; g < c.length && c[g].center - m.center < a / 2;) r(m.data, c[g].data) && f++, g++;
              for (var y = h.length - 1; y >= 0 && m.center - h[y].center < a;) m.group == h[y].group && r(m.data, h[y].data) && f++, y--;
              if (f > o) {
                for (var b = f - o + 1, w = [], k = p; w.length < b && k < c.length;) r(c[p].data, c[k].data) && w.push(c[k]), k++;
                var x = this.itemSet.getGroupId(m.data),
                  _ = this.itemSet.groups[x] || this.itemSet.groups[eA],
                  C = this._getClusterForItems(w, _, t, i);
                h.push(C), p += b;
              } else delete m.cluster, p += 1;
            }
            this.cache[s] = h;
          }
          return h;
        }
      }, {
        key: "_filterData",
        value: function () {
          var t = {};
          this.groups = t;
          for (var e = 0, i = Wy(this.items); e < i.length; e++) {
            var n = i[e],
              o = n.parent ? n.parent.groupId : "",
              r = t[o];
            r || (r = [], t[o] = r), r.push(n), n.data.start && (n.data.end ? n.center = (n.data.start.valueOf() + n.data.end.valueOf()) / 2 : n.center = n.data.start.valueOf());
          }
          for (var s in t) {
            var a;
            if (t.hasOwnProperty(s)) oD(a = t[s]).call(a, function (t, e) {
              return t.center - e.center;
            });
          }
          this.dataChanged = !1;
        }
      }, {
        key: "_getClusterForItems",
        value: function (t, e, i, n) {
          var o,
            r,
            s = bm(o = i || []).call(o, function (t) {
              var e;
              return {
                cluster: t,
                itemsIds: new $O(bm(e = t.data.uiItems).call(e, function (t) {
                  return t.id;
                }))
              };
            });
          if (s.length) {
            var a,
              l = JE(s);
            try {
              var h = function () {
                var e = a.value;
                if (e.itemsIds.size === t.length && qE(t).call(t, function (t) {
                  return e.itemsIds.has(t.id);
                })) return r = e.cluster, "break";
              };
              for (l.s(); !(a = l.n()).done;) {
                if ("break" === h()) break;
              }
            } catch (t) {
              l.e(t);
            } finally {
              l.f();
            }
          }
          if (r) return r.setUiItems(t), r.group !== e && (r.group && r.group.remove(r), e && (e.add(r), r.group = e)), r;
          var u = n.titleTemplate || "",
            c = {
              toScreen: this.itemSet.body.util.toScreen,
              toTime: this.itemSet.body.util.toTime
            },
            d = u.replace(/{count}/, t.length),
            p = '<div title="' + d + '">' + t.length + "</div>",
            m = oy({}, n, this.itemSet.options),
            f = {
              content: p,
              title: d,
              group: e,
              uiItems: t,
              eventEmitter: this.itemSet.body.emitter,
              range: this.itemSet.body.range
            };
          return r = this.createClusterItem(f, c, m), e && (e.add(r), r.group = e), r.attach(), r;
        }
      }, {
        key: "_dropLevelsCache",
        value: function () {
          this.cache = {}, this.cacheLevel = -1, this.cache[this.cacheLevel] = [];
        }
      }]), t;
    }();
  function nA(t, e) {
    var i = void 0 !== Ev && Hf(t) || t["@@iterator"];
    if (!i) {
      if (Cd(t) || (i = function (t, e) {
        var i;
        if (!t) return;
        if ("string" == typeof t) return oA(t, e);
        var n = zv(i = Object.prototype.toString.call(t)).call(i, 8, -1);
        "Object" === n && t.constructor && (n = t.constructor.name);
        if ("Map" === n || "Set" === n) return Rf(t);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return oA(t, e);
      }(t)) || e && t && "number" == typeof t.length) {
        i && (t = i);
        var n = 0,
          o = function () {};
        return {
          s: o,
          n: function () {
            return n >= t.length ? {
              done: !0
            } : {
              done: !1,
              value: t[n++]
            };
          },
          e: function (t) {
            throw t;
          },
          f: o
        };
      }
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var r,
      s = !0,
      a = !1;
    return {
      s: function () {
        i = i.call(t);
      },
      n: function () {
        var t = i.next();
        return s = t.done, t;
      },
      e: function (t) {
        a = !0, r = t;
      },
      f: function () {
        try {
          s || null == i.return || i.return();
        } finally {
          if (a) throw r;
        }
      }
    };
  }
  function oA(t, e) {
    (null == e || e > t.length) && (e = t.length);
    for (var i = 0, n = new Array(e); i < e; i++) n[i] = t[i];
    return n;
  }
  function rA(t) {
    var e = function () {
      if ("undefined" == typeof Reflect || !Bo) return !1;
      if (Bo.sham) return !1;
      if ("function" == typeof Proxy) return !0;
      try {
        return Boolean.prototype.valueOf.call(Bo(Boolean, [], function () {})), !0;
      } catch (t) {
        return !1;
      }
    }();
    return function () {
      var i,
        n = wd(t);
      if (e) {
        var o = wd(this).constructor;
        i = Bo(n, arguments, o);
      } else i = n.apply(this, arguments);
      return hd(this, i);
    };
  }
  var sA = "__ungrouped__",
    aA = "__background__",
    lA = function (t) {
      ld(i, t);
      var e = rA(i);
      function i(t, n) {
        var o;
        zo(this, i), (o = e.call(this)).body = t, o.defaultOptions = {
          type: null,
          orientation: {
            item: "bottom"
          },
          align: "auto",
          stack: !0,
          stackSubgroups: !0,
          groupOrderSwap: function (t, e, i) {
            var n = e.order;
            e.order = t.order, t.order = n;
          },
          groupOrder: "order",
          selectable: !0,
          multiselect: !1,
          longSelectPressTime: 251,
          itemsAlwaysDraggable: {
            item: !1,
            range: !1
          },
          editable: {
            updateTime: !1,
            updateGroup: !1,
            add: !1,
            remove: !1,
            overrideItems: !1
          },
          groupEditable: {
            order: !1,
            add: !1,
            remove: !1
          },
          snap: BD.snap,
          onDropObjectOnItem: function (t, e, i) {
            i(e);
          },
          onAdd: function (t, e) {
            e(t);
          },
          onUpdate: function (t, e) {
            e(t);
          },
          onMove: function (t, e) {
            e(t);
          },
          onRemove: function (t, e) {
            e(t);
          },
          onMoving: function (t, e) {
            e(t);
          },
          onAddGroup: function (t, e) {
            e(t);
          },
          onMoveGroup: function (t, e) {
            e(t);
          },
          onRemoveGroup: function (t, e) {
            e(t);
          },
          margin: {
            item: {
              horizontal: 10,
              vertical: 10
            },
            axis: 20
          },
          showTooltips: !0,
          tooltip: {
            followMouse: !1,
            overflowMethod: "flip",
            delay: 500
          },
          tooltipOnItemUpdateTime: !1
        }, o.options = WC.extend({}, o.defaultOptions), o.options.rtl = n.rtl, o.options.onTimeout = n.onTimeout, o.conversion = {
          toScreen: t.util.toScreen,
          toTime: t.util.toTime
        }, o.dom = {}, o.props = {}, o.hammer = null;
        var r = Ic(o);
        return o.itemsData = null, o.groupsData = null, o.itemsSettingTime = null, o.initialItemSetDrawn = !1, o.userContinueNotBail = null, o.sequentialSelection = !1, o.itemListeners = {
          add: function (t, e, i) {
            r._onAdd(e.items), r.options.cluster && r.clusterGenerator.setItems(r.items, {
              applyOnChangedLevel: !1
            }), r.redraw();
          },
          update: function (t, e, i) {
            r._onUpdate(e.items), r.options.cluster && r.clusterGenerator.setItems(r.items, {
              applyOnChangedLevel: !1
            }), r.redraw();
          },
          remove: function (t, e, i) {
            r._onRemove(e.items), r.options.cluster && r.clusterGenerator.setItems(r.items, {
              applyOnChangedLevel: !1
            }), r.redraw();
          }
        }, o.groupListeners = {
          add: function (t, e, i) {
            if (r._onAddGroups(e.items), r.groupsData && r.groupsData.length > 0) {
              var n,
                o = r.groupsData.getDataSet();
              hp(n = o.get()).call(n, function (t) {
                if (t.nestedGroups) {
                  var e;
                  0 != t.showNested && (t.showNested = !0);
                  var n = [];
                  hp(e = t.nestedGroups).call(e, function (e) {
                    var i = o.get(e);
                    i && (i.nestedInGroup = t.id, 0 == t.showNested && (i.visible = !1), n = jv(n).call(n, i));
                  }), o.update(n, i);
                }
              });
            }
          },
          update: function (t, e, i) {
            r._onUpdateGroups(e.items);
          },
          remove: function (t, e, i) {
            r._onRemoveGroups(e.items);
          }
        }, o.items = {}, o.groups = {}, o.groupIds = [], o.selection = [], o.popup = null, o.popupTimer = null, o.touchParams = {}, o.groupTouchParams = {
          group: null,
          isDragging: !1
        }, o._create(), o.setOptions(n), o.clusters = [], o;
      }
      return Ac(i, [{
        key: "_create",
        value: function () {
          var t,
            e,
            i,
            n,
            o,
            r,
            s,
            a,
            l,
            h,
            u,
            c,
            d,
            p,
            m,
            f = this,
            v = document.createElement("div");
          v.className = "vis-itemset", v["vis-itemset"] = this, this.dom.frame = v;
          var g = document.createElement("div");
          g.className = "vis-background", v.appendChild(g), this.dom.background = g;
          var y = document.createElement("div");
          y.className = "vis-foreground", v.appendChild(y), this.dom.foreground = y;
          var b = document.createElement("div");
          b.className = "vis-axis", this.dom.axis = b;
          var w = document.createElement("div");
          w.className = "vis-labelset", this.dom.labelSet = w, this._updateUngrouped();
          var k = new DE(aA, null, this);
          k.show(), this.groups[aA] = k, this.hammer = new LD(this.body.dom.centerContainer), this.hammer.on("hammer.input", function (t) {
            t.isFirst && f._onTouch(t);
          }), this.hammer.on("panstart", Dd(t = this._onDragStart).call(t, this)), this.hammer.on("panmove", Dd(e = this._onDrag).call(e, this)), this.hammer.on("panend", Dd(i = this._onDragEnd).call(i, this)), this.hammer.get("pan").set({
            threshold: 5,
            direction: LD.ALL
          }), this.hammer.get("press").set({
            time: 1e4
          }), this.hammer.on("tap", Dd(n = this._onSelectItem).call(n, this)), this.hammer.on("press", Dd(o = this._onMultiSelectItem).call(o, this)), this.hammer.get("press").set({
            time: 1e4
          }), this.hammer.on("doubletap", Dd(r = this._onAddItem).call(r, this)), this.options.rtl ? this.groupHammer = new LD(this.body.dom.rightContainer) : this.groupHammer = new LD(this.body.dom.leftContainer), this.groupHammer.on("tap", Dd(s = this._onGroupClick).call(s, this)), this.groupHammer.on("panstart", Dd(a = this._onGroupDragStart).call(a, this)), this.groupHammer.on("panmove", Dd(l = this._onGroupDrag).call(l, this)), this.groupHammer.on("panend", Dd(h = this._onGroupDragEnd).call(h, this)), this.groupHammer.get("pan").set({
            threshold: 5,
            direction: LD.DIRECTION_VERTICAL
          }), this.body.dom.centerContainer.addEventListener("mouseover", Dd(u = this._onMouseOver).call(u, this)), this.body.dom.centerContainer.addEventListener("mouseout", Dd(c = this._onMouseOut).call(c, this)), this.body.dom.centerContainer.addEventListener("mousemove", Dd(d = this._onMouseMove).call(d, this)), this.body.dom.centerContainer.addEventListener("contextmenu", Dd(p = this._onDragEnd).call(p, this)), this.body.dom.centerContainer.addEventListener("mousewheel", Dd(m = this._onMouseWheel).call(m, this)), this.show();
        }
      }, {
        key: "setOptions",
        value: function (t) {
          var e = this;
          if (t) {
            var i, n;
            WC.selectiveExtend(["type", "rtl", "align", "order", "stack", "stackSubgroups", "selectable", "multiselect", "sequentialSelection", "multiselectPerGroup", "longSelectPressTime", "groupOrder", "dataAttributes", "template", "groupTemplate", "visibleFrameTemplate", "hide", "snap", "groupOrderSwap", "showTooltips", "tooltip", "tooltipOnItemUpdateTime", "groupHeightMode", "onTimeout"], this.options, t), "itemsAlwaysDraggable" in t && ("boolean" == typeof t.itemsAlwaysDraggable ? (this.options.itemsAlwaysDraggable.item = t.itemsAlwaysDraggable, this.options.itemsAlwaysDraggable.range = !1) : "object" === kc(t.itemsAlwaysDraggable) && (WC.selectiveExtend(["item", "range"], this.options.itemsAlwaysDraggable, t.itemsAlwaysDraggable), this.options.itemsAlwaysDraggable.item || (this.options.itemsAlwaysDraggable.range = !1))), "sequentialSelection" in t && "boolean" == typeof t.sequentialSelection && (this.options.sequentialSelection = t.sequentialSelection), "orientation" in t && ("string" == typeof t.orientation ? this.options.orientation.item = "top" === t.orientation ? "top" : "bottom" : "object" === kc(t.orientation) && "item" in t.orientation && (this.options.orientation.item = t.orientation.item)), "margin" in t && ("number" == typeof t.margin ? (this.options.margin.axis = t.margin, this.options.margin.item.horizontal = t.margin, this.options.margin.item.vertical = t.margin) : "object" === kc(t.margin) && (WC.selectiveExtend(["axis"], this.options.margin, t.margin), "item" in t.margin && ("number" == typeof t.margin.item ? (this.options.margin.item.horizontal = t.margin.item, this.options.margin.item.vertical = t.margin.item) : "object" === kc(t.margin.item) && WC.selectiveExtend(["horizontal", "vertical"], this.options.margin.item, t.margin.item)))), hp(i = ["locale", "locales"]).call(i, function (i) {
              i in t && (e.options[i] = t[i]);
            }), "editable" in t && ("boolean" == typeof t.editable ? (this.options.editable.updateTime = t.editable, this.options.editable.updateGroup = t.editable, this.options.editable.add = t.editable, this.options.editable.remove = t.editable, this.options.editable.overrideItems = !1) : "object" === kc(t.editable) && WC.selectiveExtend(["updateTime", "updateGroup", "add", "remove", "overrideItems"], this.options.editable, t.editable)), "groupEditable" in t && ("boolean" == typeof t.groupEditable ? (this.options.groupEditable.order = t.groupEditable, this.options.groupEditable.add = t.groupEditable, this.options.groupEditable.remove = t.groupEditable) : "object" === kc(t.groupEditable) && WC.selectiveExtend(["order", "add", "remove"], this.options.groupEditable, t.groupEditable));
            hp(n = ["onDropObjectOnItem", "onAdd", "onUpdate", "onRemove", "onMove", "onMoving", "onAddGroup", "onMoveGroup", "onRemoveGroup"]).call(n, function (i) {
              var n = t[i];
              if (n) {
                var o;
                if ("function" != typeof n) throw new Error(jv(o = "option ".concat(i, " must be a function ")).call(o, i, "(item, callback)"));
                e.options[i] = n;
              }
            }), t.cluster ? (oy(this.options, {
              cluster: t.cluster
            }), this.clusterGenerator || (this.clusterGenerator = new iA(this)), this.clusterGenerator.setItems(this.items, {
              applyOnChangedLevel: !1
            }), this.markDirty({
              refreshItems: !0,
              restackGroups: !0
            }), this.redraw()) : this.clusterGenerator ? (this._detachAllClusters(), this.clusters = [], this.clusterGenerator = null, this.options.cluster = void 0, this.markDirty({
              refreshItems: !0,
              restackGroups: !0
            }), this.redraw()) : this.markDirty();
          }
        }
      }, {
        key: "markDirty",
        value: function (t) {
          this.groupIds = [], t && (t.refreshItems && hp(WC).call(WC, this.items, function (t) {
            t.dirty = !0, t.displayed && t.redraw();
          }), t.restackGroups && hp(WC).call(WC, this.groups, function (t, e) {
            e !== aA && (t.stackDirty = !0);
          }));
        }
      }, {
        key: "destroy",
        value: function () {
          this.clearPopupTimer(), this.hide(), this.setItems(null), this.setGroups(null), this.hammer && this.hammer.destroy(), this.groupHammer && this.groupHammer.destroy(), this.hammer = null, this.body = null, this.conversion = null;
        }
      }, {
        key: "hide",
        value: function () {
          this.dom.frame.parentNode && this.dom.frame.parentNode.removeChild(this.dom.frame), this.dom.axis.parentNode && this.dom.axis.parentNode.removeChild(this.dom.axis), this.dom.labelSet.parentNode && this.dom.labelSet.parentNode.removeChild(this.dom.labelSet);
        }
      }, {
        key: "show",
        value: function () {
          this.dom.frame.parentNode || this.body.dom.center.appendChild(this.dom.frame), this.dom.axis.parentNode || this.body.dom.backgroundVertical.appendChild(this.dom.axis), this.dom.labelSet.parentNode || (this.options.rtl ? this.body.dom.right.appendChild(this.dom.labelSet) : this.body.dom.left.appendChild(this.dom.labelSet));
        }
      }, {
        key: "setPopupTimer",
        value: function (t) {
          if (this.clearPopupTimer(), t) {
            var e = this.options.tooltip.delay || "number" == typeof this.options.tooltip.delay ? this.options.tooltip.delay : 500;
            this.popupTimer = qd(function () {
              t.show();
            }, e);
          }
        }
      }, {
        key: "clearPopupTimer",
        value: function () {
          null != this.popupTimer && (clearTimeout(this.popupTimer), this.popupTimer = null);
        }
      }, {
        key: "setSelection",
        value: function (t) {
          var e;
          null == t && (t = []), Cd(t) || (t = [t]);
          var i,
            n = Cp(e = this.selection).call(e, function (e) {
              return -1 === Ob(t).call(t, e);
            }),
            o = nA(n);
          try {
            for (o.s(); !(i = o.n()).done;) {
              var r = i.value,
                s = this.getItemById(r);
              s && s.unselect();
            }
          } catch (t) {
            o.e(t);
          } finally {
            o.f();
          }
          this.selection = Tv(t);
          var a,
            l = nA(t);
          try {
            for (l.s(); !(a = l.n()).done;) {
              var h = a.value,
                u = this.getItemById(h);
              u && u.select();
            }
          } catch (t) {
            l.e(t);
          } finally {
            l.f();
          }
        }
      }, {
        key: "getSelection",
        value: function () {
          var t;
          return jv(t = this.selection).call(t, []);
        }
      }, {
        key: "getVisibleItems",
        value: function () {
          var t,
            e,
            i = this.body.range.getRange();
          this.options.rtl ? (t = this.body.util.toScreen(i.start), e = this.body.util.toScreen(i.end)) : (e = this.body.util.toScreen(i.start), t = this.body.util.toScreen(i.end));
          var n = [];
          for (var o in this.groups) if (this.groups.hasOwnProperty(o)) {
            var r,
              s = this.groups[o],
              a = nA(s.isVisible ? s.visibleItems : []);
            try {
              for (a.s(); !(r = a.n()).done;) {
                var l = r.value;
                this.options.rtl ? l.right < e && l.right + l.width > t && n.push(l.id) : l.left < t && l.left + l.width > e && n.push(l.id);
              }
            } catch (t) {
              a.e(t);
            } finally {
              a.f();
            }
          }
          return n;
        }
      }, {
        key: "getItemsAtCurrentTime",
        value: function (t) {
          var e, i;
          this.options.rtl ? (e = this.body.util.toScreen(t), i = this.body.util.toScreen(t)) : (i = this.body.util.toScreen(t), e = this.body.util.toScreen(t));
          var n = [];
          for (var o in this.groups) if (this.groups.hasOwnProperty(o)) {
            var r,
              s = this.groups[o],
              a = nA(s.isVisible ? s.visibleItems : []);
            try {
              for (a.s(); !(r = a.n()).done;) {
                var l = r.value;
                this.options.rtl ? l.right < i && l.right + l.width > e && n.push(l.id) : l.left < e && l.left + l.width > i && n.push(l.id);
              }
            } catch (t) {
              a.e(t);
            } finally {
              a.f();
            }
          }
          return n;
        }
      }, {
        key: "getVisibleGroups",
        value: function () {
          var t = [];
          for (var e in this.groups) {
            if (this.groups.hasOwnProperty(e)) this.groups[e].isVisible && t.push(e);
          }
          return t;
        }
      }, {
        key: "getItemById",
        value: function (t) {
          var e;
          return this.items[t] || xT(e = this.clusters).call(e, function (e) {
            return e.id === t;
          });
        }
      }, {
        key: "_deselect",
        value: function (t) {
          for (var e = this.selection, i = 0, n = e.length; i < n; i++) if (e[i] == t) {
            zg(e).call(e, i, 1);
            break;
          }
        }
      }, {
        key: "redraw",
        value: function () {
          var t = this.options.margin,
            e = this.body.range,
            i = WC.option.asSize,
            n = this.options,
            o = n.orientation.item,
            r = !1,
            s = this.dom.frame;
          this.props.top = this.body.domProps.top.height + this.body.domProps.border.top, this.options.rtl ? this.props.right = this.body.domProps.right.width + this.body.domProps.border.right : this.props.left = this.body.domProps.left.width + this.body.domProps.border.left, s.className = "vis-itemset", this.options.cluster && this._clusterItems(), r = this._orderGroups() || r;
          var a = e.end - e.start,
            l = a != this.lastVisibleInterval || this.props.width != this.props.lastWidth,
            h = e.start != this.lastRangeStart,
            u = n.stack != this.lastStack,
            c = n.stackSubgroups != this.lastStackSubgroups,
            d = l || h || u || c;
          this.lastVisibleInterval = a, this.lastRangeStart = e.start, this.lastStack = n.stack, this.lastStackSubgroups = n.stackSubgroups, this.props.lastWidth = this.props.width;
          var p = this._firstGroup(),
            m = {
              item: t.item,
              axis: t.axis
            },
            f = {
              item: t.item,
              axis: t.item.vertical / 2
            },
            v = 0,
            g = t.axis + t.item.vertical;
          this.groups[aA].redraw(e, f, d);
          var y = {},
            b = 0;
          if (hp(WC).call(WC, this.groups, function (t, i) {
            if (i !== aA) {
              var n = t == p ? m : f;
              y[i] = t.redraw(e, n, d, !0), b = y[i].length;
            }
          }), b > 0) {
            for (var w = {}, k = function (t) {
                hp(WC).call(WC, y, function (e, i) {
                  w[i] = e[t]();
                });
              }, x = 0; x < b; x++) k(x);
            hp(WC).call(WC, this.groups, function (t, e) {
              if (e !== aA) {
                var i = w[e];
                r = i || r, v += t.height;
              }
            }), v = Math.max(v, g);
          }
          return v = Math.max(v, g), s.style.height = i(v), this.props.width = s.offsetWidth, this.props.height = v, this.dom.axis.style.top = i("top" == o ? this.body.domProps.top.height + this.body.domProps.border.top : this.body.domProps.top.height + this.body.domProps.centerContainer.height), this.options.rtl ? this.dom.axis.style.right = "0" : this.dom.axis.style.left = "0", this.hammer.get("press").set({
            time: this.options.longSelectPressTime
          }), this.initialItemSetDrawn = !0, r = this._isResized() || r;
        }
      }, {
        key: "_firstGroup",
        value: function () {
          var t = "top" == this.options.orientation.item ? 0 : this.groupIds.length - 1,
            e = this.groupIds[t];
          return this.groups[e] || this.groups[sA] || null;
        }
      }, {
        key: "_updateUngrouped",
        value: function () {
          var t,
            e,
            i = this.groups[sA];
          if (this.groupsData) {
            if (i) for (e in i.dispose(), delete this.groups[sA], this.items) if (this.items.hasOwnProperty(e)) {
              (t = this.items[e]).parent && t.parent.remove(t);
              var n = this.getGroupId(t.data),
                o = this.groups[n];
              o && o.add(t) || t.hide();
            }
          } else if (!i) {
            for (e in i = new CE(null, null, this), this.groups[sA] = i, this.items) this.items.hasOwnProperty(e) && (t = this.items[e], i.add(t));
            i.show();
          }
        }
      }, {
        key: "getLabelSet",
        value: function () {
          return this.dom.labelSet;
        }
      }, {
        key: "setItems",
        value: function (t) {
          this.itemsSettingTime = new Date();
          var e,
            i = this,
            n = this.itemsData;
          if (t) {
            if (!FC(t)) throw new TypeError("Data must implement the interface of DataSet or DataView");
            this.itemsData = BC(t);
          } else this.itemsData = null;
          if (n && (hp(WC).call(WC, this.itemListeners, function (t, e) {
            n.off(e, t);
          }), n.dispose(), e = n.getIds(), this._onRemove(e)), this.itemsData) {
            var o = this.id;
            hp(WC).call(WC, this.itemListeners, function (t, e) {
              i.itemsData.on(e, t, o);
            }), e = this.itemsData.getIds(), this._onAdd(e), this._updateUngrouped();
          }
          this.body.emitter.emit("_change", {
            queue: !0
          });
        }
      }, {
        key: "getItems",
        value: function () {
          return null != this.itemsData ? this.itemsData.rawDS : null;
        }
      }, {
        key: "setGroups",
        value: function (t) {
          var e,
            i = this;
          if (this.groupsData && (hp(WC).call(WC, this.groupListeners, function (t, e) {
            i.groupsData.off(e, t);
          }), e = this.groupsData.getIds(), this.groupsData = null, this._onRemoveGroups(e)), t) {
            if (!FC(t)) throw new TypeError("Data must implement the interface of DataSet or DataView");
            this.groupsData = t;
          } else this.groupsData = null;
          if (this.groupsData) {
            var n,
              o = this.groupsData.getDataSet();
            hp(n = o.get()).call(n, function (t) {
              var e;
              t.nestedGroups && hp(e = t.nestedGroups).call(e, function (e) {
                var i = o.get(e);
                i.nestedInGroup = t.id, 0 == t.showNested && (i.visible = !1), o.update(i);
              });
            });
            var r = this.id;
            hp(WC).call(WC, this.groupListeners, function (t, e) {
              i.groupsData.on(e, t, r);
            }), e = this.groupsData.getIds(), this._onAddGroups(e);
          }
          this._updateUngrouped(), this._order(), this.options.cluster && (this.clusterGenerator.updateData(), this._clusterItems(), this.markDirty({
            refreshItems: !0,
            restackGroups: !0
          })), this.body.emitter.emit("_change", {
            queue: !0
          });
        }
      }, {
        key: "getGroups",
        value: function () {
          return this.groupsData;
        }
      }, {
        key: "removeItem",
        value: function (t) {
          var e = this,
            i = this.itemsData.get(t);
          i && this.options.onRemove(i, function (i) {
            i && e.itemsData.remove(t);
          });
        }
      }, {
        key: "_getType",
        value: function (t) {
          return t.type || this.options.type || (t.end ? "range" : "box");
        }
      }, {
        key: "getGroupId",
        value: function (t) {
          return "background" == this._getType(t) && null == t.group ? aA : this.groupsData ? t.group : sA;
        }
      }, {
        key: "_onUpdate",
        value: function (t) {
          var e = this,
            n = this;
          hp(t).call(t, function (t) {
            var o,
              r = n.itemsData.get(t),
              s = n.items[t],
              a = r ? n._getType(r) : null,
              l = i.types[a];
            if (s && (l && s instanceof l ? n._updateItem(s, r) : (o = s.selected, n._removeItem(s), s = null)), !s && r) {
              if (!l) throw new TypeError('Unknown item type "'.concat(a, '"'));
              (s = new l(r, n.conversion, n.options)).id = t, n._addItem(s), o && (e.selection.push(t), s.select());
            }
          }), this._order(), this.options.cluster && (this.clusterGenerator.setItems(this.items, {
            applyOnChangedLevel: !1
          }), this._clusterItems()), this.body.emitter.emit("_change", {
            queue: !0
          });
        }
      }, {
        key: "_onRemove",
        value: function (t) {
          var e = 0,
            i = this;
          hp(t).call(t, function (t) {
            var n = i.items[t];
            n && (e++, i._removeItem(n));
          }), e && (this._order(), this.body.emitter.emit("_change", {
            queue: !0
          }));
        }
      }, {
        key: "_order",
        value: function () {
          hp(WC).call(WC, this.groups, function (t) {
            t.order();
          });
        }
      }, {
        key: "_onUpdateGroups",
        value: function (t) {
          this._onAddGroups(t);
        }
      }, {
        key: "_onAddGroups",
        value: function (t) {
          var e = this;
          hp(t).call(t, function (t) {
            var i = e.groupsData.get(t),
              n = e.groups[t];
            if (n) n.setData(i);else {
              if (t == sA || t == aA) throw new Error("Illegal group id. ".concat(t, " is a reserved id."));
              var o = Wb(e.options);
              for (var r in WC.extend(o, {
                height: null
              }), n = new CE(t, i, e), e.groups[t] = n, e.items) if (e.items.hasOwnProperty(r)) {
                var s = e.items[r];
                s.data.group == t && n.add(s);
              }
              n.order(), n.show();
            }
          }), this.body.emitter.emit("_change", {
            queue: !0
          });
        }
      }, {
        key: "_onRemoveGroups",
        value: function (t) {
          var e = this;
          hp(t).call(t, function (t) {
            var i = e.groups[t];
            i && (i.dispose(), delete e.groups[t]);
          }), this.options.cluster && (this.clusterGenerator.updateData(), this._clusterItems()), this.markDirty({
            restackGroups: !!this.options.cluster
          }), this.body.emitter.emit("_change", {
            queue: !0
          });
        }
      }, {
        key: "_orderGroups",
        value: function () {
          if (this.groupsData) {
            var t = this.groupsData.getIds({
              order: this.options.groupOrder
            });
            t = this._orderNestedGroups(t);
            var e = !WC.equalArray(t, this.groupIds);
            if (e) {
              var i = this.groups;
              hp(t).call(t, function (t) {
                i[t].hide();
              }), hp(t).call(t, function (t) {
                i[t].show();
              }), this.groupIds = t;
            }
            return e;
          }
          return !1;
        }
      }, {
        key: "_orderNestedGroups",
        value: function (t) {
          var e = this;
          return function t(e, i) {
            var n = [];
            return hp(i).call(i, function (i) {
              if (n.push(i), e.groupsData.get(i).nestedGroups) {
                var o,
                  r = bm(o = e.groupsData.get({
                    filter: function (t) {
                      return t.nestedInGroup == i;
                    },
                    order: e.options.groupOrder
                  })).call(o, function (t) {
                    return t.id;
                  });
                n = jv(n).call(n, t(e, r));
              }
            }), n;
          }(this, Cp(t).call(t, function (t) {
            return !e.groupsData.get(t).nestedInGroup;
          }));
        }
      }, {
        key: "_addItem",
        value: function (t) {
          this.items[t.id] = t;
          var e = this.getGroupId(t.data),
            i = this.groups[e];
          i ? i && i.data && i.data.showNested && (t.groupShowing = !0) : t.groupShowing = !1, i && i.add(t);
        }
      }, {
        key: "_updateItem",
        value: function (t, e) {
          t.setData(e);
          var i = this.getGroupId(t.data),
            n = this.groups[i];
          n ? n && n.data && n.data.showNested && (t.groupShowing = !0) : t.groupShowing = !1;
        }
      }, {
        key: "_removeItem",
        value: function (t) {
          var e, i;
          t.hide(), delete this.items[t.id];
          var n = Ob(e = this.selection).call(e, t.id);
          -1 != n && zg(i = this.selection).call(i, n, 1), t.parent && t.parent.remove(t), null != this.popup && this.popup.hide();
        }
      }, {
        key: "_constructByEndArray",
        value: function (t) {
          for (var e = [], i = 0; i < t.length; i++) t[i] instanceof FE && e.push(t[i]);
          return e;
        }
      }, {
        key: "_onTouch",
        value: function (t) {
          this.touchParams.item = this.itemFromTarget(t), this.touchParams.dragLeftItem = t.target.dragLeftItem || !1, this.touchParams.dragRightItem = t.target.dragRightItem || !1, this.touchParams.itemProps = null;
        }
      }, {
        key: "_getGroupIndex",
        value: function (t) {
          for (var e = 0; e < this.groupIds.length; e++) if (t == this.groupIds[e]) return e;
        }
      }, {
        key: "_onDragStart",
        value: function (t) {
          var e = this;
          if (!this.touchParams.itemIsDragging) {
            var i,
              n = this.touchParams.item || null,
              o = this;
            if (n && (n.selected || this.options.itemsAlwaysDraggable.item)) {
              if (this.options.editable.overrideItems && !this.options.editable.updateTime && !this.options.editable.updateGroup) return;
              if (null != n.editable && !n.editable.updateTime && !n.editable.updateGroup && !this.options.editable.overrideItems) return;
              var r = this.touchParams.dragLeftItem,
                s = this.touchParams.dragRightItem;
              if (this.touchParams.itemIsDragging = !0, this.touchParams.selectedItem = n, r) i = {
                item: r,
                initialX: t.center.x,
                dragLeft: !0,
                data: this._cloneItemData(n.data)
              }, this.touchParams.itemProps = [i];else if (s) i = {
                item: s,
                initialX: t.center.x,
                dragRight: !0,
                data: this._cloneItemData(n.data)
              }, this.touchParams.itemProps = [i];else if (this.options.editable.add && (t.srcEvent.ctrlKey || t.srcEvent.metaKey)) this._onDragStartAddItem(t);else {
                this.groupIds.length < 1 && this.redraw();
                var a = this._getGroupIndex(n.data.group),
                  l = this.options.itemsAlwaysDraggable.item && !n.selected ? [n.id] : this.getSelection();
                this.touchParams.itemProps = bm(l).call(l, function (i) {
                  var n = o.items[i],
                    r = o._getGroupIndex(n.data.group);
                  return {
                    item: n,
                    initialX: t.center.x,
                    groupOffset: a - r,
                    data: e._cloneItemData(n.data)
                  };
                });
              }
              t.stopPropagation();
            } else this.options.editable.add && (t.srcEvent.ctrlKey || t.srcEvent.metaKey) && this._onDragStartAddItem(t);
          }
        }
      }, {
        key: "_onDragStartAddItem",
        value: function (t) {
          var e = this.options.snap || null,
            i = this.dom.frame.getBoundingClientRect(),
            n = this.options.rtl ? i.right - t.center.x + 10 : t.center.x - i.left - 10,
            o = this.body.util.toTime(n),
            r = this.body.util.getScale(),
            s = this.body.util.getStep(),
            a = e ? e(o, r, s) : o,
            l = {
              type: "range",
              start: a,
              end: a,
              content: "new item"
            },
            h = PC();
          l[this.itemsData.idProp] = h;
          var u = this.groupFromTarget(t);
          u && (l.group = u.groupId);
          var c = new FE(l, this.conversion, this.options);
          c.id = h, c.data = this._cloneItemData(l), this._addItem(c), this.touchParams.selectedItem = c;
          var d = {
            item: c,
            initialX: t.center.x,
            data: c.data
          };
          this.options.rtl ? d.dragLeft = !0 : d.dragRight = !0, this.touchParams.itemProps = [d], t.stopPropagation();
        }
      }, {
        key: "_onDrag",
        value: function (t) {
          var e = this;
          if (null != this.popup && this.options.showTooltips && !this.popup.hidden) {
            var i = this.body.dom.centerContainer,
              n = i.getBoundingClientRect();
            this.popup.setPosition(t.center.x - n.left + i.offsetLeft, t.center.y - n.top + i.offsetTop), this.popup.show();
          }
          if (this.touchParams.itemProps) {
            var o;
            t.stopPropagation();
            var r = this,
              s = this.options.snap || null,
              a = this.body.dom.root.offsetLeft,
              l = this.options.rtl ? a + this.body.domProps.right.width : a + this.body.domProps.left.width,
              h = this.body.util.getScale(),
              u = this.body.util.getStep(),
              c = this.touchParams.selectedItem,
              d = (this.options.editable.overrideItems || null == c.editable) && this.options.editable.updateGroup || !this.options.editable.overrideItems && null != c.editable && c.editable.updateGroup,
              p = null;
            if (d && c && null != c.data.group) {
              var m = r.groupFromTarget(t);
              m && (p = this._getGroupIndex(m.groupId));
            }
            hp(o = this.touchParams.itemProps).call(o, function (i) {
              var n,
                o,
                a,
                m,
                f,
                v = r.body.util.toTime(t.center.x - l),
                g = r.body.util.toTime(i.initialX - l);
              n = e.options.rtl ? -(v - g) : v - g;
              var y = e._cloneItemData(i.item.data);
              if (null == i.item.editable || i.item.editable.updateTime || i.item.editable.updateGroup || r.options.editable.overrideItems) {
                if ((e.options.editable.overrideItems || null == c.editable) && e.options.editable.updateTime || !e.options.editable.overrideItems && null != c.editable && c.editable.updateTime) if (i.dragLeft) e.options.rtl ? null != y.end && (a = WC.convert(i.data.end, "Date"), f = new Date(a.valueOf() + n), y.end = s ? s(f, h, u) : f) : null != y.start && (o = WC.convert(i.data.start, "Date"), m = new Date(o.valueOf() + n), y.start = s ? s(m, h, u) : m);else if (i.dragRight) e.options.rtl ? null != y.start && (o = WC.convert(i.data.start, "Date"), m = new Date(o.valueOf() + n), y.start = s ? s(m, h, u) : m) : null != y.end && (a = WC.convert(i.data.end, "Date"), f = new Date(a.valueOf() + n), y.end = s ? s(f, h, u) : f);else if (null != y.start) if (o = WC.convert(i.data.start, "Date").valueOf(), m = new Date(o + n), null != y.end) {
                  var b = (a = WC.convert(i.data.end, "Date")).valueOf() - o.valueOf();
                  y.start = s ? s(m, h, u) : m, y.end = new Date(y.start.valueOf() + b);
                } else y.start = s ? s(m, h, u) : m;
                if (d && !i.dragLeft && !i.dragRight && null != p && null != y.group) {
                  var w = p - i.groupOffset;
                  w = Math.max(0, w), w = Math.min(r.groupIds.length - 1, w), y.group = r.groupIds[w];
                }
                y = e._cloneItemData(y), r.options.onMoving(y, function (t) {
                  t && i.item.setData(e._cloneItemData(t, "Date"));
                });
              }
            }), this.body.emitter.emit("_change");
          }
        }
      }, {
        key: "_moveToGroup",
        value: function (t, e) {
          var i = this.groups[e];
          if (i && i.groupId != t.data.group) {
            var n = t.parent;
            n.remove(t), n.order(), t.data.group = i.groupId, i.add(t), i.order();
          }
        }
      }, {
        key: "_onDragEnd",
        value: function (t) {
          var e = this;
          if (this.touchParams.itemIsDragging = !1, this.touchParams.itemProps) {
            t.stopPropagation();
            var i = this,
              n = this.touchParams.itemProps;
            this.touchParams.itemProps = null, hp(n).call(n, function (t) {
              var n = t.item.id;
              if (null != i.itemsData.get(n)) {
                var o = e._cloneItemData(t.item.data);
                i.options.onMove(o, function (o) {
                  o ? (o[e.itemsData.idProp] = n, e.itemsData.update(o)) : (t.item.setData(t.data), i.body.emitter.emit("_change"));
                });
              } else i.options.onAdd(t.item.data, function (e) {
                i._removeItem(t.item), e && i.itemsData.add(e), i.body.emitter.emit("_change");
              });
            });
          }
        }
      }, {
        key: "_onGroupClick",
        value: function (t) {
          var e = this,
            i = this.groupFromTarget(t);
          qd(function () {
            e.toggleGroupShowNested(i);
          }, 1);
        }
      }, {
        key: "toggleGroupShowNested",
        value: function (t) {
          var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0;
          if (t && t.nestedGroups) {
            var i = this.groupsData.getDataSet();
            t.showNested = null != e ? !!e : !t.showNested;
            var n = i.get(t.groupId);
            n.showNested = t.showNested;
            for (var o, r = t.nestedGroups, s = r; s.length > 0;) {
              var a = s;
              s = [];
              for (var l = 0; l < a.length; l++) {
                var h = i.get(a[l]);
                h.nestedGroups && (s = jv(s).call(s, h.nestedGroups));
              }
              s.length > 0 && (r = jv(r).call(r, s));
            }
            if (n.showNested) {
              for (var u = i.get(n.nestedGroups), c = 0; c < u.length; c++) {
                var d = u[c];
                d.nestedGroups && d.nestedGroups.length > 0 && (null == d.showNested || 1 == d.showNested) && u.push.apply(u, Tv(i.get(d.nestedGroups)));
              }
              o = bm(u).call(u, function (t) {
                return null == t.visible && (t.visible = !0), t.visible = !!n.showNested, t;
              });
            } else {
              var p;
              o = bm(p = i.get(r)).call(p, function (t) {
                return null == t.visible && (t.visible = !0), t.visible = !!n.showNested, t;
              });
            }
            i.update(jv(o).call(o, n)), n.showNested ? (WC.removeClassName(t.dom.label, "collapsed"), WC.addClassName(t.dom.label, "expanded")) : (WC.removeClassName(t.dom.label, "expanded"), WC.addClassName(t.dom.label, "collapsed"));
          }
        }
      }, {
        key: "toggleGroupDragClassName",
        value: function (t) {
          t.dom.label.classList.toggle("vis-group-is-dragging"), t.dom.foreground.classList.toggle("vis-group-is-dragging");
        }
      }, {
        key: "_onGroupDragStart",
        value: function (t) {
          this.groupTouchParams.isDragging || this.options.groupEditable.order && (this.groupTouchParams.group = this.groupFromTarget(t), this.groupTouchParams.group && (t.stopPropagation(), this.groupTouchParams.isDragging = !0, this.toggleGroupDragClassName(this.groupTouchParams.group), this.groupTouchParams.originalOrder = this.groupsData.getIds({
            order: this.options.groupOrder
          })));
        }
      }, {
        key: "_onGroupDrag",
        value: function (t) {
          if (this.options.groupEditable.order && this.groupTouchParams.group) {
            t.stopPropagation();
            var e = this.groupsData.getDataSet(),
              i = this.groupFromTarget(t);
            if (i && i.height != this.groupTouchParams.group.height) {
              var n = i.top < this.groupTouchParams.group.top,
                o = t.center ? t.center.y : t.clientY,
                r = i.dom.foreground.getBoundingClientRect(),
                s = this.groupTouchParams.group.height;
              if (n) {
                if (r.top + s < o) return;
              } else {
                var a = i.height;
                if (r.top + a - s > o) return;
              }
            }
            if (i && i != this.groupTouchParams.group) {
              var l = e.get(i.groupId),
                h = e.get(this.groupTouchParams.group.groupId);
              h && l && (this.options.groupOrderSwap(h, l, e), e.update(h), e.update(l));
              var u = e.getIds({
                order: this.options.groupOrder
              });
              if (!WC.equalArray(u, this.groupTouchParams.originalOrder)) for (var c = this.groupTouchParams.originalOrder, d = this.groupTouchParams.group.groupId, p = Math.min(c.length, u.length), m = 0, f = 0, v = 0; m < p;) {
                for (; m + f < p && m + v < p && u[m + f] == c[m + v];) m++;
                if (m + f >= p) break;
                if (u[m + f] == d) f = 1;else if (c[m + v] == d) v = 1;else {
                  var g = Ob(u).call(u, c[m + v]),
                    y = e.get(u[m + f]),
                    b = e.get(c[m + v]);
                  this.options.groupOrderSwap(y, b, e), e.update(y), e.update(b);
                  var w = u[m + f];
                  u[m + f] = c[m + v], u[g] = w, m++;
                }
              }
            }
          }
        }
      }, {
        key: "_onGroupDragEnd",
        value: function (t) {
          if (this.groupTouchParams.isDragging = !1, this.options.groupEditable.order && this.groupTouchParams.group) {
            t.stopPropagation();
            var e = this,
              i = e.groupTouchParams.group.groupId,
              n = e.groupsData.getDataSet(),
              o = WC.extend({}, n.get(i));
            e.options.onMoveGroup(o, function (t) {
              if (t) t[n._idProp] = i, n.update(t);else {
                var o = n.getIds({
                  order: e.options.groupOrder
                });
                if (!WC.equalArray(o, e.groupTouchParams.originalOrder)) for (var r = e.groupTouchParams.originalOrder, s = Math.min(r.length, o.length), a = 0; a < s;) {
                  for (; a < s && o[a] == r[a];) a++;
                  if (a >= s) break;
                  var l = Ob(o).call(o, r[a]),
                    h = n.get(o[a]),
                    u = n.get(r[a]);
                  e.options.groupOrderSwap(h, u, n), n.update(h), n.update(u);
                  var c = o[a];
                  o[a] = r[a], o[l] = c, a++;
                }
              }
            }), e.body.emitter.emit("groupDragged", {
              groupId: i
            }), this.toggleGroupDragClassName(this.groupTouchParams.group), this.groupTouchParams.group = null;
          }
        }
      }, {
        key: "_onSelectItem",
        value: function (t) {
          if (this.options.selectable) {
            var e = t.srcEvent && (t.srcEvent.ctrlKey || t.srcEvent.metaKey),
              i = t.srcEvent && t.srcEvent.shiftKey;
            if (e || i) this._onMultiSelectItem(t);else {
              var n = this.getSelection(),
                o = this.itemFromTarget(t),
                r = o && o.selectable ? [o.id] : [];
              this.setSelection(r);
              var s = this.getSelection();
              (s.length > 0 || n.length > 0) && this.body.emitter.emit("select", {
                items: s,
                event: t
              });
            }
          }
        }
      }, {
        key: "_onMouseOver",
        value: function (t) {
          var e = this.itemFromTarget(t);
          if (e && e !== this.itemFromRelatedTarget(t)) {
            var i = e.getTitle();
            if (this.options.showTooltips && i) {
              null == this.popup && (this.popup = new jE(this.body.dom.root, this.options.tooltip.overflowMethod || "flip")), this.popup.setText(i);
              var n = this.body.dom.centerContainer,
                o = n.getBoundingClientRect();
              this.popup.setPosition(t.clientX - o.left + n.offsetLeft, t.clientY - o.top + n.offsetTop), this.setPopupTimer(this.popup);
            } else this.clearPopupTimer(), null != this.popup && this.popup.hide();
            this.body.emitter.emit("itemover", {
              item: e.id,
              event: t
            });
          }
        }
      }, {
        key: "_onMouseOut",
        value: function (t) {
          var e = this.itemFromTarget(t);
          e && e !== this.itemFromRelatedTarget(t) && (this.clearPopupTimer(), null != this.popup && this.popup.hide(), this.body.emitter.emit("itemout", {
            item: e.id,
            event: t
          }));
        }
      }, {
        key: "_onMouseMove",
        value: function (t) {
          if (this.itemFromTarget(t) && (null != this.popupTimer && this.setPopupTimer(this.popup), this.options.showTooltips && this.options.tooltip.followMouse && this.popup && !this.popup.hidden)) {
            var e = this.body.dom.centerContainer,
              i = e.getBoundingClientRect();
            this.popup.setPosition(t.clientX - i.left + e.offsetLeft, t.clientY - i.top + e.offsetTop), this.popup.show();
          }
        }
      }, {
        key: "_onMouseWheel",
        value: function (t) {
          this.touchParams.itemIsDragging && this._onDragEnd(t);
        }
      }, {
        key: "_onUpdateItem",
        value: function (t) {
          if (this.options.selectable && (this.options.editable.updateTime || this.options.editable.updateGroup)) {
            var e = this;
            if (t) {
              var i = e.itemsData.get(t.id);
              this.options.onUpdate(i, function (t) {
                t && e.itemsData.update(t);
              });
            }
          }
        }
      }, {
        key: "_onDropObjectOnItem",
        value: function (t) {
          var e = this.itemFromTarget(t),
            i = JSON.parse(t.dataTransfer.getData("text"));
          this.options.onDropObjectOnItem(i, e);
        }
      }, {
        key: "_onAddItem",
        value: function (t) {
          if (this.options.selectable && this.options.editable.add) {
            var e,
              i,
              n = this,
              o = this.options.snap || null,
              r = this.dom.frame.getBoundingClientRect(),
              s = this.options.rtl ? r.right - t.center.x : t.center.x - r.left,
              a = this.body.util.toTime(s),
              l = this.body.util.getScale(),
              h = this.body.util.getStep();
            "drop" == t.type ? ((i = JSON.parse(t.dataTransfer.getData("text"))).content = i.content ? i.content : "new item", i.start = i.start ? i.start : o ? o(a, l, h) : a, i.type = i.type || "box", i[this.itemsData.idProp] = i.id || PC(), "range" != i.type || i.end || (e = this.body.util.toTime(s + this.props.width / 5), i.end = o ? o(e, l, h) : e)) : ((i = {
              start: o ? o(a, l, h) : a,
              content: "new item"
            })[this.itemsData.idProp] = PC(), "range" === this.options.type && (e = this.body.util.toTime(s + this.props.width / 5), i.end = o ? o(e, l, h) : e));
            var u = this.groupFromTarget(t);
            u && (i.group = u.groupId), i = this._cloneItemData(i), this.options.onAdd(i, function (e) {
              e && (n.itemsData.add(e), "drop" == t.type && n.setSelection([e.id]));
            });
          }
        }
      }, {
        key: "_onMultiSelectItem",
        value: function (t) {
          var e = this;
          if (this.options.selectable) {
            var n = this.itemFromTarget(t);
            if (n) {
              var o = this.options.multiselect ? this.getSelection() : [];
              if ((t.srcEvent && t.srcEvent.shiftKey || !1 || this.options.sequentialSelection) && this.options.multiselect) {
                var r = this.itemsData.get(n.id).group,
                  s = void 0;
                this.options.multiselectPerGroup && o.length > 0 && (s = this.itemsData.get(o[0]).group), this.options.multiselectPerGroup && null != s && s != r || o.push(n.id);
                var a = i._getItemRange(this.itemsData.get(o));
                if (!this.options.multiselectPerGroup || s == r) for (var l in o = [], this.items) if (this.items.hasOwnProperty(l)) {
                  var h = this.items[l],
                    u = h.data.start,
                    c = void 0 !== h.data.end ? h.data.end : u;
                  !(u >= a.min && c <= a.max) || this.options.multiselectPerGroup && s != this.itemsData.get(h.id).group || h instanceof LE || o.push(h.id);
                }
              } else {
                var d = Ob(o).call(o, n.id);
                -1 == d ? o.push(n.id) : zg(o).call(o, d, 1);
              }
              var p = Cp(o).call(o, function (t) {
                return e.getItemById(t).selectable;
              });
              this.setSelection(p), this.body.emitter.emit("select", {
                items: this.getSelection(),
                event: t
              });
            }
          }
        }
      }, {
        key: "itemFromElement",
        value: function (t) {
          for (var e = t; e;) {
            if (e.hasOwnProperty("vis-item")) return e["vis-item"];
            e = e.parentNode;
          }
          return null;
        }
      }, {
        key: "itemFromTarget",
        value: function (t) {
          return this.itemFromElement(t.target);
        }
      }, {
        key: "itemFromRelatedTarget",
        value: function (t) {
          return this.itemFromElement(t.relatedTarget);
        }
      }, {
        key: "groupFromTarget",
        value: function (t) {
          var e = t.center ? t.center.y : t.clientY,
            i = this.groupIds;
          i.length <= 0 && this.groupsData && (i = this.groupsData.getIds({
            order: this.options.groupOrder
          }));
          for (var n = 0; n < i.length; n++) {
            var o = i[n],
              r = this.groups[o],
              s = r.dom.foreground,
              a = s.getBoundingClientRect();
            if (e >= a.top && e < a.top + s.offsetHeight) return r;
            if ("top" === this.options.orientation.item) {
              if (n === this.groupIds.length - 1 && e > a.top) return r;
            } else if (0 === n && e < a.top + s.offset) return r;
          }
          return null;
        }
      }, {
        key: "_cloneItemData",
        value: function (t, e) {
          var i = WC.extend({}, t);
          return e || (e = this.itemsData.type), null != i.start && (i.start = WC.convert(i.start, e && e.start || "Date")), null != i.end && (i.end = WC.convert(i.end, e && e.end || "Date")), i;
        }
      }, {
        key: "_clusterItems",
        value: function () {
          if (this.options.cluster) {
            var t = this.body.range.conversion(this.body.domProps.center.width).scale,
              e = this.clusterGenerator.getClusters(this.clusters, t, this.options.cluster);
            if (this.clusters != e) {
              if (this._detachAllClusters(), e) {
                var i,
                  n = nA(e);
                try {
                  for (n.s(); !(i = n.n()).done;) {
                    i.value.attach();
                  }
                } catch (t) {
                  n.e(t);
                } finally {
                  n.f();
                }
                this.clusters = e;
              }
              this._updateClusters(e);
            }
          }
        }
      }, {
        key: "_detachAllClusters",
        value: function () {
          if (this.options.cluster && this.clusters && this.clusters.length) {
            var t,
              e = nA(this.clusters);
            try {
              for (e.s(); !(t = e.n()).done;) {
                t.value.detach();
              }
            } catch (t) {
              e.e(t);
            } finally {
              e.f();
            }
          }
        }
      }, {
        key: "_updateClusters",
        value: function (t) {
          if (this.clusters && this.clusters.length) {
            var e,
              i,
              n = new $O(bm(t).call(t, function (t) {
                return t.id;
              })),
              o = Cp(e = this.clusters).call(e, function (t) {
                return !n.has(t.id);
              }),
              r = !1,
              s = nA(o);
            try {
              for (s.s(); !(i = s.n()).done;) {
                var a,
                  l,
                  h = i.value,
                  u = Ob(a = this.selection).call(a, h.id);
                if (-1 !== u) h.unselect(), zg(l = this.selection).call(l, u, 1), r = !0;
              }
            } catch (t) {
              s.e(t);
            } finally {
              s.f();
            }
            if (r) {
              var c = this.getSelection();
              this.body.emitter.emit("select", {
                items: c,
                event: event
              });
            }
          }
          this.clusters = t || [];
        }
      }], [{
        key: "_getItemRange",
        value: function (t) {
          var e = null,
            i = null;
          return hp(t).call(t, function (t) {
            (null == i || t.start < i) && (i = t.start), null != t.end ? (null == e || t.end > e) && (e = t.end) : (null == e || t.start > e) && (e = t.start);
          }), {
            min: i,
            max: e
          };
        }
      }, {
        key: "itemSetFromTarget",
        value: function (t) {
          for (var e = t.target; e;) {
            if (e.hasOwnProperty("vis-itemset")) return e["vis-itemset"];
            e = e.parentNode;
          }
          return null;
        }
      }]), i;
    }(oS);
  lA.types = {
    background: LE,
    box: IE,
    range: FE,
    point: ME
  }, lA.prototype._onAdd = lA.prototype._onUpdate;
  var hA,
    uA = !1,
    cA = "background: #FFeeee; color: #dd0000",
    dA = function () {
      function t() {
        zo(this, t);
      }
      return Ac(t, null, [{
        key: "validate",
        value: function (e, i, n) {
          uA = !1, hA = i;
          var o = i;
          return void 0 !== n && (o = i[n]), t.parse(e, o, []), uA;
        }
      }, {
        key: "parse",
        value: function (e, i, n) {
          for (var o in e) e.hasOwnProperty(o) && t.check(o, e, i, n);
        }
      }, {
        key: "check",
        value: function (e, i, n, o) {
          if (void 0 !== n[e] || void 0 !== n.__any__) {
            var r = e,
              s = !0;
            void 0 === n[e] && void 0 !== n.__any__ && (r = "__any__", s = "object" === t.getType(i[e]));
            var a = n[r];
            s && void 0 !== a.__type__ && (a = a.__type__), t.checkFields(e, i, n, r, a, o);
          } else t.getSuggestion(e, n, o);
        }
      }, {
        key: "checkFields",
        value: function (e, i, n, o, r, s) {
          var a = function (i) {
              console.log("%c" + i + t.printLocation(s, e), cA);
            },
            l = t.getType(i[e]),
            h = r[l];
          void 0 !== h ? "array" === t.getType(h) && -1 === Ob(h).call(h, i[e]) ? (a('Invalid option detected in "' + e + '". Allowed values are:' + t.print(h) + ' not "' + i[e] + '". '), uA = !0) : "object" === l && "__any__" !== o && (s = WC.copyAndExtendArray(s, e), t.parse(i[e], n[o], s)) : void 0 === r.any && (a('Invalid type received for "' + e + '". Expected: ' + t.print(Wm(r)) + ". Received [" + l + '] "' + i[e] + '"'), uA = !0);
        }
      }, {
        key: "getType",
        value: function (t) {
          var e = kc(t);
          return "object" === e ? null === t ? "null" : t instanceof Boolean ? "boolean" : t instanceof Number ? "number" : t instanceof String ? "string" : Cd(t) ? "array" : t instanceof Date ? "date" : void 0 !== t.nodeType ? "dom" : !0 === t._isAMomentObject ? "moment" : "object" : "number" === e ? "number" : "boolean" === e ? "boolean" : "string" === e ? "string" : void 0 === e ? "undefined" : e;
        }
      }, {
        key: "getSuggestion",
        value: function (e, i, n) {
          var o,
            r = t.findInOptions(e, i, n, !1),
            s = t.findInOptions(e, hA, [], !0);
          o = void 0 !== r.indexMatch ? " in " + t.printLocation(r.path, e, "") + 'Perhaps it was incomplete? Did you mean: "' + r.indexMatch + '"?\n\n' : s.distance <= 4 && r.distance > s.distance ? " in " + t.printLocation(r.path, e, "") + "Perhaps it was misplaced? Matching option found at: " + t.printLocation(s.path, s.closestMatch, "") : r.distance <= 8 ? '. Did you mean "' + r.closestMatch + '"?' + t.printLocation(r.path, e) : ". Did you mean one of these: " + t.print(Wm(i)) + t.printLocation(n, e), console.log('%cUnknown option detected: "' + e + '"' + o, cA), uA = !0;
        }
      }, {
        key: "findInOptions",
        value: function (e, i, n) {
          var o = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
            r = 1e9,
            s = "",
            a = [],
            l = e.toLowerCase(),
            h = void 0;
          for (var u in i) {
            var c = void 0;
            if (void 0 !== i[u].__type__ && !0 === o) {
              var d = t.findInOptions(e, i[u], WC.copyAndExtendArray(n, u));
              r > d.distance && (s = d.closestMatch, a = d.path, r = d.distance, h = d.indexMatch);
            } else {
              var p;
              -1 !== Ob(p = u.toLowerCase()).call(p, l) && (h = u), r > (c = t.levenshteinDistance(e, u)) && (s = u, a = WC.copyArray(n), r = c);
            }
          }
          return {
            closestMatch: s,
            path: a,
            distance: r,
            indexMatch: h
          };
        }
      }, {
        key: "printLocation",
        value: function (t, e) {
          for (var i = "\n\n" + (arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "Problem value found at: \n") + "options = {\n", n = 0; n < t.length; n++) {
            for (var o = 0; o < n + 1; o++) i += "  ";
            i += t[n] + ": {\n";
          }
          for (var r = 0; r < t.length + 1; r++) i += "  ";
          i += e + "\n";
          for (var s = 0; s < t.length + 1; s++) {
            for (var a = 0; a < t.length - s; a++) i += "  ";
            i += "}\n";
          }
          return i + "\n\n";
        }
      }, {
        key: "print",
        value: function (t) {
          return $b(t).replace(/(\")|(\[)|(\])|(,"__type__")/g, "").replace(/(\,)/g, ", ");
        }
      }, {
        key: "levenshteinDistance",
        value: function (t, e) {
          if (0 === t.length) return e.length;
          if (0 === e.length) return t.length;
          var i,
            n,
            o = [];
          for (i = 0; i <= e.length; i++) o[i] = [i];
          for (n = 0; n <= t.length; n++) o[0][n] = n;
          for (i = 1; i <= e.length; i++) for (n = 1; n <= t.length; n++) e.charAt(i - 1) == t.charAt(n - 1) ? o[i][n] = o[i - 1][n - 1] : o[i][n] = Math.min(o[i - 1][n - 1] + 1, Math.min(o[i][n - 1] + 1, o[i - 1][n] + 1));
          return o[e.length][t.length];
        }
      }]), t;
    }(),
    pA = "string",
    mA = "boolean",
    fA = "number",
    vA = "array",
    gA = "date",
    yA = "object",
    bA = "moment",
    wA = {
      configure: {
        enabled: {
          boolean: mA
        },
        filter: {
          boolean: mA,
          function: "function"
        },
        container: {
          dom: "dom"
        },
        __type__: {
          object: yA,
          boolean: mA,
          function: "function"
        }
      },
      align: {
        string: pA
      },
      alignCurrentTime: {
        string: pA,
        undefined: "undefined"
      },
      rtl: {
        boolean: mA,
        undefined: "undefined"
      },
      rollingMode: {
        follow: {
          boolean: mA
        },
        offset: {
          number: fA,
          undefined: "undefined"
        },
        __type__: {
          object: yA
        }
      },
      onTimeout: {
        timeoutMs: {
          number: fA
        },
        callback: {
          function: "function"
        },
        __type__: {
          object: yA
        }
      },
      verticalScroll: {
        boolean: mA,
        undefined: "undefined"
      },
      horizontalScroll: {
        boolean: mA,
        undefined: "undefined"
      },
      autoResize: {
        boolean: mA
      },
      throttleRedraw: {
        number: fA
      },
      clickToUse: {
        boolean: mA
      },
      dataAttributes: {
        string: pA,
        array: vA
      },
      editable: {
        add: {
          boolean: mA,
          undefined: "undefined"
        },
        remove: {
          boolean: mA,
          undefined: "undefined"
        },
        updateGroup: {
          boolean: mA,
          undefined: "undefined"
        },
        updateTime: {
          boolean: mA,
          undefined: "undefined"
        },
        overrideItems: {
          boolean: mA,
          undefined: "undefined"
        },
        __type__: {
          boolean: mA,
          object: yA
        }
      },
      end: {
        number: fA,
        date: gA,
        string: pA,
        moment: bA
      },
      format: {
        minorLabels: {
          millisecond: {
            string: pA,
            undefined: "undefined"
          },
          second: {
            string: pA,
            undefined: "undefined"
          },
          minute: {
            string: pA,
            undefined: "undefined"
          },
          hour: {
            string: pA,
            undefined: "undefined"
          },
          weekday: {
            string: pA,
            undefined: "undefined"
          },
          day: {
            string: pA,
            undefined: "undefined"
          },
          week: {
            string: pA,
            undefined: "undefined"
          },
          month: {
            string: pA,
            undefined: "undefined"
          },
          year: {
            string: pA,
            undefined: "undefined"
          },
          __type__: {
            object: yA,
            function: "function"
          }
        },
        majorLabels: {
          millisecond: {
            string: pA,
            undefined: "undefined"
          },
          second: {
            string: pA,
            undefined: "undefined"
          },
          minute: {
            string: pA,
            undefined: "undefined"
          },
          hour: {
            string: pA,
            undefined: "undefined"
          },
          weekday: {
            string: pA,
            undefined: "undefined"
          },
          day: {
            string: pA,
            undefined: "undefined"
          },
          week: {
            string: pA,
            undefined: "undefined"
          },
          month: {
            string: pA,
            undefined: "undefined"
          },
          year: {
            string: pA,
            undefined: "undefined"
          },
          __type__: {
            object: yA,
            function: "function"
          }
        },
        __type__: {
          object: yA
        }
      },
      moment: {
        function: "function"
      },
      groupHeightMode: {
        string: pA
      },
      groupOrder: {
        string: pA,
        function: "function"
      },
      groupEditable: {
        add: {
          boolean: mA,
          undefined: "undefined"
        },
        remove: {
          boolean: mA,
          undefined: "undefined"
        },
        order: {
          boolean: mA,
          undefined: "undefined"
        },
        __type__: {
          boolean: mA,
          object: yA
        }
      },
      groupOrderSwap: {
        function: "function"
      },
      height: {
        string: pA,
        number: fA
      },
      hiddenDates: {
        start: {
          date: gA,
          number: fA,
          string: pA,
          moment: bA
        },
        end: {
          date: gA,
          number: fA,
          string: pA,
          moment: bA
        },
        repeat: {
          string: pA
        },
        __type__: {
          object: yA,
          array: vA
        }
      },
      itemsAlwaysDraggable: {
        item: {
          boolean: mA,
          undefined: "undefined"
        },
        range: {
          boolean: mA,
          undefined: "undefined"
        },
        __type__: {
          boolean: mA,
          object: yA
        }
      },
      limitSize: {
        boolean: mA
      },
      locale: {
        string: pA
      },
      locales: {
        __any__: {
          any: "any"
        },
        __type__: {
          object: yA
        }
      },
      longSelectPressTime: {
        number: fA
      },
      margin: {
        axis: {
          number: fA
        },
        item: {
          horizontal: {
            number: fA,
            undefined: "undefined"
          },
          vertical: {
            number: fA,
            undefined: "undefined"
          },
          __type__: {
            object: yA,
            number: fA
          }
        },
        __type__: {
          object: yA,
          number: fA
        }
      },
      max: {
        date: gA,
        number: fA,
        string: pA,
        moment: bA
      },
      maxHeight: {
        number: fA,
        string: pA
      },
      maxMinorChars: {
        number: fA
      },
      min: {
        date: gA,
        number: fA,
        string: pA,
        moment: bA
      },
      minHeight: {
        number: fA,
        string: pA
      },
      moveable: {
        boolean: mA
      },
      multiselect: {
        boolean: mA
      },
      multiselectPerGroup: {
        boolean: mA
      },
      onAdd: {
        function: "function"
      },
      onDropObjectOnItem: {
        function: "function"
      },
      onUpdate: {
        function: "function"
      },
      onMove: {
        function: "function"
      },
      onMoving: {
        function: "function"
      },
      onRemove: {
        function: "function"
      },
      onAddGroup: {
        function: "function"
      },
      onMoveGroup: {
        function: "function"
      },
      onRemoveGroup: {
        function: "function"
      },
      onInitialDrawComplete: {
        function: "function"
      },
      order: {
        function: "function"
      },
      orientation: {
        axis: {
          string: pA,
          undefined: "undefined"
        },
        item: {
          string: pA,
          undefined: "undefined"
        },
        __type__: {
          string: pA,
          object: yA
        }
      },
      selectable: {
        boolean: mA
      },
      sequentialSelection: {
        boolean: mA
      },
      showCurrentTime: {
        boolean: mA
      },
      showMajorLabels: {
        boolean: mA
      },
      showMinorLabels: {
        boolean: mA
      },
      showWeekScale: {
        boolean: mA
      },
      stack: {
        boolean: mA
      },
      stackSubgroups: {
        boolean: mA
      },
      cluster: {
        maxItems: {
          number: fA,
          undefined: "undefined"
        },
        titleTemplate: {
          string: pA,
          undefined: "undefined"
        },
        clusterCriteria: {
          function: "function",
          undefined: "undefined"
        },
        showStipes: {
          boolean: mA,
          undefined: "undefined"
        },
        fitOnDoubleClick: {
          boolean: mA,
          undefined: "undefined"
        },
        __type__: {
          boolean: mA,
          object: yA
        }
      },
      snap: {
        function: "function",
        null: "null"
      },
      start: {
        date: gA,
        number: fA,
        string: pA,
        moment: bA
      },
      template: {
        function: "function"
      },
      loadingScreenTemplate: {
        function: "function"
      },
      groupTemplate: {
        function: "function"
      },
      visibleFrameTemplate: {
        string: pA,
        function: "function"
      },
      showTooltips: {
        boolean: mA
      },
      tooltip: {
        followMouse: {
          boolean: mA
        },
        overflowMethod: {
          string: ["cap", "flip", "none"]
        },
        delay: {
          number: fA
        },
        template: {
          function: "function"
        },
        __type__: {
          object: yA
        }
      },
      tooltipOnItemUpdateTime: {
        template: {
          function: "function"
        },
        __type__: {
          boolean: mA,
          object: yA
        }
      },
      timeAxis: {
        scale: {
          string: pA,
          undefined: "undefined"
        },
        step: {
          number: fA,
          undefined: "undefined"
        },
        __type__: {
          object: yA
        }
      },
      type: {
        string: pA
      },
      width: {
        string: pA,
        number: fA
      },
      preferZoom: {
        boolean: mA
      },
      zoomable: {
        boolean: mA
      },
      zoomKey: {
        string: ["ctrlKey", "altKey", "shiftKey", "metaKey", ""]
      },
      zoomFriction: {
        number: fA
      },
      zoomMax: {
        number: fA
      },
      zoomMin: {
        number: fA
      },
      xss: {
        disabled: {
          boolean: mA
        },
        filterOptions: {
          __any__: {
            any: "any"
          },
          __type__: {
            object: yA
          }
        },
        __type__: {
          object: yA
        }
      },
      __type__: {
        object: yA
      }
    },
    kA = {
      global: {
        align: ["center", "left", "right"],
        alignCurrentTime: ["none", "year", "month", "quarter", "week", "isoWeek", "day", "date", "hour", "minute", "second"],
        direction: !1,
        autoResize: !0,
        clickToUse: !1,
        editable: {
          add: !1,
          remove: !1,
          updateGroup: !1,
          updateTime: !1
        },
        end: "",
        format: {
          minorLabels: {
            millisecond: "SSS",
            second: "s",
            minute: "HH:mm",
            hour: "HH:mm",
            weekday: "ddd D",
            day: "D",
            week: "w",
            month: "MMM",
            year: "YYYY"
          },
          majorLabels: {
            millisecond: "HH:mm:ss",
            second: "D MMMM HH:mm",
            minute: "ddd D MMMM",
            hour: "ddd D MMMM",
            weekday: "MMMM YYYY",
            day: "MMMM YYYY",
            week: "MMMM YYYY",
            month: "YYYY",
            year: ""
          }
        },
        groupHeightMode: ["auto", "fixed", "fitItems"],
        groupsDraggable: !1,
        height: "",
        locale: "",
        longSelectPressTime: 251,
        margin: {
          axis: [20, 0, 100, 1],
          item: {
            horizontal: [10, 0, 100, 1],
            vertical: [10, 0, 100, 1]
          }
        },
        max: "",
        maxHeight: "",
        maxMinorChars: [7, 0, 20, 1],
        min: "",
        minHeight: "",
        moveable: !1,
        multiselect: !1,
        multiselectPerGroup: !1,
        orientation: {
          axis: ["both", "bottom", "top"],
          item: ["bottom", "top"]
        },
        preferZoom: !1,
        selectable: !0,
        showCurrentTime: !1,
        showMajorLabels: !0,
        showMinorLabels: !0,
        stack: !0,
        stackSubgroups: !0,
        cluster: !1,
        start: "",
        showTooltips: !0,
        tooltip: {
          followMouse: !1,
          overflowMethod: "flip",
          delay: [500, 0, 99999, 100]
        },
        tooltipOnItemUpdateTime: !1,
        type: ["box", "point", "range", "background"],
        width: "100%",
        zoomable: !0,
        zoomKey: ["ctrlKey", "altKey", "shiftKey", "metaKey", ""],
        zoomMax: [31536e10, 10, 31536e10, 1],
        zoomMin: [10, 10, 31536e10, 1],
        xss: {
          disabled: !1
        }
      }
    },
    xA = {
      black: "#000000",
      navy: "#000080",
      darkblue: "#00008B",
      mediumblue: "#0000CD",
      blue: "#0000FF",
      darkgreen: "#006400",
      green: "#008000",
      teal: "#008080",
      darkcyan: "#008B8B",
      deepskyblue: "#00BFFF",
      darkturquoise: "#00CED1",
      mediumspringgreen: "#00FA9A",
      lime: "#00FF00",
      springgreen: "#00FF7F",
      aqua: "#00FFFF",
      cyan: "#00FFFF",
      midnightblue: "#191970",
      dodgerblue: "#1E90FF",
      lightseagreen: "#20B2AA",
      forestgreen: "#228B22",
      seagreen: "#2E8B57",
      darkslategray: "#2F4F4F",
      limegreen: "#32CD32",
      mediumseagreen: "#3CB371",
      turquoise: "#40E0D0",
      royalblue: "#4169E1",
      steelblue: "#4682B4",
      darkslateblue: "#483D8B",
      mediumturquoise: "#48D1CC",
      indigo: "#4B0082",
      darkolivegreen: "#556B2F",
      cadetblue: "#5F9EA0",
      cornflowerblue: "#6495ED",
      mediumaquamarine: "#66CDAA",
      dimgray: "#696969",
      slateblue: "#6A5ACD",
      olivedrab: "#6B8E23",
      slategray: "#708090",
      lightslategray: "#778899",
      mediumslateblue: "#7B68EE",
      lawngreen: "#7CFC00",
      chartreuse: "#7FFF00",
      aquamarine: "#7FFFD4",
      maroon: "#800000",
      purple: "#800080",
      olive: "#808000",
      gray: "#808080",
      skyblue: "#87CEEB",
      lightskyblue: "#87CEFA",
      blueviolet: "#8A2BE2",
      darkred: "#8B0000",
      darkmagenta: "#8B008B",
      saddlebrown: "#8B4513",
      darkseagreen: "#8FBC8F",
      lightgreen: "#90EE90",
      mediumpurple: "#9370D8",
      darkviolet: "#9400D3",
      palegreen: "#98FB98",
      darkorchid: "#9932CC",
      yellowgreen: "#9ACD32",
      sienna: "#A0522D",
      brown: "#A52A2A",
      darkgray: "#A9A9A9",
      lightblue: "#ADD8E6",
      greenyellow: "#ADFF2F",
      paleturquoise: "#AFEEEE",
      lightsteelblue: "#B0C4DE",
      powderblue: "#B0E0E6",
      firebrick: "#B22222",
      darkgoldenrod: "#B8860B",
      mediumorchid: "#BA55D3",
      rosybrown: "#BC8F8F",
      darkkhaki: "#BDB76B",
      silver: "#C0C0C0",
      mediumvioletred: "#C71585",
      indianred: "#CD5C5C",
      peru: "#CD853F",
      chocolate: "#D2691E",
      tan: "#D2B48C",
      lightgrey: "#D3D3D3",
      palevioletred: "#D87093",
      thistle: "#D8BFD8",
      orchid: "#DA70D6",
      goldenrod: "#DAA520",
      crimson: "#DC143C",
      gainsboro: "#DCDCDC",
      plum: "#DDA0DD",
      burlywood: "#DEB887",
      lightcyan: "#E0FFFF",
      lavender: "#E6E6FA",
      darksalmon: "#E9967A",
      violet: "#EE82EE",
      palegoldenrod: "#EEE8AA",
      lightcoral: "#F08080",
      khaki: "#F0E68C",
      aliceblue: "#F0F8FF",
      honeydew: "#F0FFF0",
      azure: "#F0FFFF",
      sandybrown: "#F4A460",
      wheat: "#F5DEB3",
      beige: "#F5F5DC",
      whitesmoke: "#F5F5F5",
      mintcream: "#F5FFFA",
      ghostwhite: "#F8F8FF",
      salmon: "#FA8072",
      antiquewhite: "#FAEBD7",
      linen: "#FAF0E6",
      lightgoldenrodyellow: "#FAFAD2",
      oldlace: "#FDF5E6",
      red: "#FF0000",
      fuchsia: "#FF00FF",
      magenta: "#FF00FF",
      deeppink: "#FF1493",
      orangered: "#FF4500",
      tomato: "#FF6347",
      hotpink: "#FF69B4",
      coral: "#FF7F50",
      darkorange: "#FF8C00",
      lightsalmon: "#FFA07A",
      orange: "#FFA500",
      lightpink: "#FFB6C1",
      pink: "#FFC0CB",
      gold: "#FFD700",
      peachpuff: "#FFDAB9",
      navajowhite: "#FFDEAD",
      moccasin: "#FFE4B5",
      bisque: "#FFE4C4",
      mistyrose: "#FFE4E1",
      blanchedalmond: "#FFEBCD",
      papayawhip: "#FFEFD5",
      lavenderblush: "#FFF0F5",
      seashell: "#FFF5EE",
      cornsilk: "#FFF8DC",
      lemonchiffon: "#FFFACD",
      floralwhite: "#FFFAF0",
      snow: "#FFFAFA",
      yellow: "#FFFF00",
      lightyellow: "#FFFFE0",
      ivory: "#FFFFF0",
      white: "#FFFFFF"
    },
    _A = function () {
      function t() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1;
        zo(this, t), this.pixelRatio = e, this.generated = !1, this.centerCoordinates = {
          x: 144.5,
          y: 144.5
        }, this.r = 289 * .49, this.color = {
          r: 255,
          g: 255,
          b: 255,
          a: 1
        }, this.hueCircle = void 0, this.initialColor = {
          r: 255,
          g: 255,
          b: 255,
          a: 1
        }, this.previousColor = void 0, this.applied = !1, this.updateCallback = function () {}, this.closeCallback = function () {}, this._create();
      }
      return Ac(t, [{
        key: "insertTo",
        value: function (t) {
          void 0 !== this.hammer && (this.hammer.destroy(), this.hammer = void 0), this.container = t, this.container.appendChild(this.frame), this._bindHammer(), this._setSize();
        }
      }, {
        key: "setUpdateCallback",
        value: function (t) {
          if ("function" != typeof t) throw new Error("Function attempted to set as colorPicker update callback is not a function.");
          this.updateCallback = t;
        }
      }, {
        key: "setCloseCallback",
        value: function (t) {
          if ("function" != typeof t) throw new Error("Function attempted to set as colorPicker closing callback is not a function.");
          this.closeCallback = t;
        }
      }, {
        key: "_isColorString",
        value: function (t) {
          if ("string" == typeof t) return xA[t];
        }
      }, {
        key: "setColor",
        value: function (t) {
          var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
          if ("none" !== t) {
            var i,
              n = this._isColorString(t);
            if (void 0 !== n && (t = n), !0 === WC.isString(t)) {
              if (!0 === WC.isValidRGB(t)) {
                var o = t.substr(4).substr(0, t.length - 5).split(",");
                i = {
                  r: o[0],
                  g: o[1],
                  b: o[2],
                  a: 1
                };
              } else if (!0 === WC.isValidRGBA(t)) {
                var r = t.substr(5).substr(0, t.length - 6).split(",");
                i = {
                  r: r[0],
                  g: r[1],
                  b: r[2],
                  a: r[3]
                };
              } else if (!0 === WC.isValidHex(t)) {
                var s = WC.hexToRGB(t);
                i = {
                  r: s.r,
                  g: s.g,
                  b: s.b,
                  a: 1
                };
              }
            } else if (t instanceof Object && void 0 !== t.r && void 0 !== t.g && void 0 !== t.b) {
              var a = void 0 !== t.a ? t.a : "1.0";
              i = {
                r: t.r,
                g: t.g,
                b: t.b,
                a: a
              };
            }
            if (void 0 === i) throw new Error("Unknown color passed to the colorPicker. Supported are strings: rgb, hex, rgba. Object: rgb ({r:r,g:g,b:b,[a:a]}). Supplied: " + $b(t));
            this._setColor(i, e);
          }
        }
      }, {
        key: "show",
        value: function () {
          void 0 !== this.closeCallback && (this.closeCallback(), this.closeCallback = void 0), this.applied = !1, this.frame.style.display = "block", this._generateHueCircle();
        }
      }, {
        key: "_hide",
        value: function () {
          var t = this;
          !0 === (!(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0]) && (this.previousColor = WC.extend({}, this.color)), !0 === this.applied && this.updateCallback(this.initialColor), this.frame.style.display = "none", qd(function () {
            void 0 !== t.closeCallback && (t.closeCallback(), t.closeCallback = void 0);
          }, 0);
        }
      }, {
        key: "_save",
        value: function () {
          this.updateCallback(this.color), this.applied = !1, this._hide();
        }
      }, {
        key: "_apply",
        value: function () {
          this.applied = !0, this.updateCallback(this.color), this._updatePicker(this.color);
        }
      }, {
        key: "_loadLast",
        value: function () {
          void 0 !== this.previousColor ? this.setColor(this.previousColor, !1) : alert("There is no last color to load...");
        }
      }, {
        key: "_setColor",
        value: function (t) {
          !0 === (!(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1]) && (this.initialColor = WC.extend({}, t)), this.color = t;
          var e = WC.RGBToHSV(t.r, t.g, t.b),
            i = 2 * Math.PI,
            n = this.r * e.s,
            o = this.centerCoordinates.x + n * Math.sin(i * e.h),
            r = this.centerCoordinates.y + n * Math.cos(i * e.h);
          this.colorPickerSelector.style.left = o - .5 * this.colorPickerSelector.clientWidth + "px", this.colorPickerSelector.style.top = r - .5 * this.colorPickerSelector.clientHeight + "px", this._updatePicker(t);
        }
      }, {
        key: "_setOpacity",
        value: function (t) {
          this.color.a = t / 100, this._updatePicker(this.color);
        }
      }, {
        key: "_setBrightness",
        value: function (t) {
          var e = WC.RGBToHSV(this.color.r, this.color.g, this.color.b);
          e.v = t / 100;
          var i = WC.HSVToRGB(e.h, e.s, e.v);
          i.a = this.color.a, this.color = i, this._updatePicker();
        }
      }, {
        key: "_updatePicker",
        value: function () {
          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.color,
            e = WC.RGBToHSV(t.r, t.g, t.b),
            i = this.colorPickerCanvas.getContext("2d");
          void 0 === this.pixelRation && (this.pixelRatio = (window.devicePixelRatio || 1) / (i.webkitBackingStorePixelRatio || i.mozBackingStorePixelRatio || i.msBackingStorePixelRatio || i.oBackingStorePixelRatio || i.backingStorePixelRatio || 1)), i.setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);
          var n = this.colorPickerCanvas.clientWidth,
            o = this.colorPickerCanvas.clientHeight;
          i.clearRect(0, 0, n, o), i.putImageData(this.hueCircle, 0, 0), i.fillStyle = "rgba(0,0,0," + (1 - e.v) + ")", i.circle(this.centerCoordinates.x, this.centerCoordinates.y, this.r), hw(i).call(i), this.brightnessRange.value = 100 * e.v, this.opacityRange.value = 100 * t.a, this.initialColorDiv.style.backgroundColor = "rgba(" + this.initialColor.r + "," + this.initialColor.g + "," + this.initialColor.b + "," + this.initialColor.a + ")", this.newColorDiv.style.backgroundColor = "rgba(" + this.color.r + "," + this.color.g + "," + this.color.b + "," + this.color.a + ")";
        }
      }, {
        key: "_setSize",
        value: function () {
          this.colorPickerCanvas.style.width = "100%", this.colorPickerCanvas.style.height = "100%", this.colorPickerCanvas.width = 289 * this.pixelRatio, this.colorPickerCanvas.height = 289 * this.pixelRatio;
        }
      }, {
        key: "_create",
        value: function () {
          var t, e, i, n;
          if (this.frame = document.createElement("div"), this.frame.className = "vis-color-picker", this.colorPickerDiv = document.createElement("div"), this.colorPickerSelector = document.createElement("div"), this.colorPickerSelector.className = "vis-selector", this.colorPickerDiv.appendChild(this.colorPickerSelector), this.colorPickerCanvas = document.createElement("canvas"), this.colorPickerDiv.appendChild(this.colorPickerCanvas), this.colorPickerCanvas.getContext) {
            var o = this.colorPickerCanvas.getContext("2d");
            this.pixelRatio = (window.devicePixelRatio || 1) / (o.webkitBackingStorePixelRatio || o.mozBackingStorePixelRatio || o.msBackingStorePixelRatio || o.oBackingStorePixelRatio || o.backingStorePixelRatio || 1), this.colorPickerCanvas.getContext("2d").setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);
          } else {
            var r = document.createElement("DIV");
            r.style.color = "red", r.style.fontWeight = "bold", r.style.padding = "10px", r.innerHTML = "Error: your browser does not support HTML canvas", this.colorPickerCanvas.appendChild(r);
          }
          this.colorPickerDiv.className = "vis-color", this.opacityDiv = document.createElement("div"), this.opacityDiv.className = "vis-opacity", this.brightnessDiv = document.createElement("div"), this.brightnessDiv.className = "vis-brightness", this.arrowDiv = document.createElement("div"), this.arrowDiv.className = "vis-arrow", this.opacityRange = document.createElement("input");
          try {
            this.opacityRange.type = "range", this.opacityRange.min = "0", this.opacityRange.max = "100";
          } catch (t) {}
          this.opacityRange.value = "100", this.opacityRange.className = "vis-range", this.brightnessRange = document.createElement("input");
          try {
            this.brightnessRange.type = "range", this.brightnessRange.min = "0", this.brightnessRange.max = "100";
          } catch (t) {}
          this.brightnessRange.value = "100", this.brightnessRange.className = "vis-range", this.opacityDiv.appendChild(this.opacityRange), this.brightnessDiv.appendChild(this.brightnessRange);
          var s = this;
          this.opacityRange.onchange = function () {
            s._setOpacity(this.value);
          }, this.opacityRange.oninput = function () {
            s._setOpacity(this.value);
          }, this.brightnessRange.onchange = function () {
            s._setBrightness(this.value);
          }, this.brightnessRange.oninput = function () {
            s._setBrightness(this.value);
          }, this.brightnessLabel = document.createElement("div"), this.brightnessLabel.className = "vis-label vis-brightness", this.brightnessLabel.innerHTML = "brightness:", this.opacityLabel = document.createElement("div"), this.opacityLabel.className = "vis-label vis-opacity", this.opacityLabel.innerHTML = "opacity:", this.newColorDiv = document.createElement("div"), this.newColorDiv.className = "vis-new-color", this.newColorDiv.innerHTML = "new", this.initialColorDiv = document.createElement("div"), this.initialColorDiv.className = "vis-initial-color", this.initialColorDiv.innerHTML = "initial", this.cancelButton = document.createElement("div"), this.cancelButton.className = "vis-button vis-cancel", this.cancelButton.innerHTML = "cancel", this.cancelButton.onclick = Dd(t = this._hide).call(t, this, !1), this.applyButton = document.createElement("div"), this.applyButton.className = "vis-button vis-apply", this.applyButton.innerHTML = "apply", this.applyButton.onclick = Dd(e = this._apply).call(e, this), this.saveButton = document.createElement("div"), this.saveButton.className = "vis-button vis-save", this.saveButton.innerHTML = "save", this.saveButton.onclick = Dd(i = this._save).call(i, this), this.loadButton = document.createElement("div"), this.loadButton.className = "vis-button vis-load", this.loadButton.innerHTML = "load last", this.loadButton.onclick = Dd(n = this._loadLast).call(n, this), this.frame.appendChild(this.colorPickerDiv), this.frame.appendChild(this.arrowDiv), this.frame.appendChild(this.brightnessLabel), this.frame.appendChild(this.brightnessDiv), this.frame.appendChild(this.opacityLabel), this.frame.appendChild(this.opacityDiv), this.frame.appendChild(this.newColorDiv), this.frame.appendChild(this.initialColorDiv), this.frame.appendChild(this.cancelButton), this.frame.appendChild(this.applyButton), this.frame.appendChild(this.saveButton), this.frame.appendChild(this.loadButton);
        }
      }, {
        key: "_bindHammer",
        value: function () {
          var t = this;
          this.drag = {}, this.pinch = {}, this.hammer = new LD(this.colorPickerCanvas), this.hammer.get("pinch").set({
            enable: !0
          }), jD(this.hammer, function (e) {
            t._moveSelector(e);
          }), this.hammer.on("tap", function (e) {
            t._moveSelector(e);
          }), this.hammer.on("panstart", function (e) {
            t._moveSelector(e);
          }), this.hammer.on("panmove", function (e) {
            t._moveSelector(e);
          }), this.hammer.on("panend", function (e) {
            t._moveSelector(e);
          });
        }
      }, {
        key: "_generateHueCircle",
        value: function () {
          if (!1 === this.generated) {
            var t = this.colorPickerCanvas.getContext("2d");
            void 0 === this.pixelRation && (this.pixelRatio = (window.devicePixelRatio || 1) / (t.webkitBackingStorePixelRatio || t.mozBackingStorePixelRatio || t.msBackingStorePixelRatio || t.oBackingStorePixelRatio || t.backingStorePixelRatio || 1)), t.setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);
            var e,
              i,
              n,
              o,
              r = this.colorPickerCanvas.clientWidth,
              s = this.colorPickerCanvas.clientHeight;
            t.clearRect(0, 0, r, s), this.centerCoordinates = {
              x: .5 * r,
              y: .5 * s
            }, this.r = .49 * r;
            var a,
              l = 2 * Math.PI / 360,
              h = 1 / this.r;
            for (n = 0; n < 360; n++) for (o = 0; o < this.r; o++) e = this.centerCoordinates.x + o * Math.sin(l * n), i = this.centerCoordinates.y + o * Math.cos(l * n), a = WC.HSVToRGB(.002777777777777778 * n, o * h, 1), t.fillStyle = "rgb(" + a.r + "," + a.g + "," + a.b + ")", t.fillRect(e - .5, i - .5, 2, 2);
            t.strokeStyle = "rgba(0,0,0,1)", t.circle(this.centerCoordinates.x, this.centerCoordinates.y, this.r), t.stroke(), this.hueCircle = t.getImageData(0, 0, r, s);
          }
          this.generated = !0;
        }
      }, {
        key: "_moveSelector",
        value: function (t) {
          var e = this.colorPickerDiv.getBoundingClientRect(),
            i = t.center.x - e.left,
            n = t.center.y - e.top,
            o = .5 * this.colorPickerDiv.clientHeight,
            r = .5 * this.colorPickerDiv.clientWidth,
            s = i - r,
            a = n - o,
            l = Math.atan2(s, a),
            h = .98 * Math.min(Math.sqrt(s * s + a * a), r),
            u = Math.cos(l) * h + o,
            c = Math.sin(l) * h + r;
          this.colorPickerSelector.style.top = u - .5 * this.colorPickerSelector.clientHeight + "px", this.colorPickerSelector.style.left = c - .5 * this.colorPickerSelector.clientWidth + "px";
          var d = l / (2 * Math.PI);
          d = d < 0 ? d + 1 : d;
          var p = h / this.r,
            m = WC.RGBToHSV(this.color.r, this.color.g, this.color.b);
          m.h = d, m.s = p;
          var f = WC.HSVToRGB(m.h, m.s, m.v);
          f.a = this.color.a, this.color = f, this.initialColorDiv.style.backgroundColor = "rgba(" + this.initialColor.r + "," + this.initialColor.g + "," + this.initialColor.b + "," + this.initialColor.a + ")", this.newColorDiv.style.backgroundColor = "rgba(" + this.color.r + "," + this.color.g + "," + this.color.b + "," + this.color.a + ")";
        }
      }]), t;
    }(),
    CA = function () {
      function t(e, i, n) {
        var o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
        zo(this, t), this.parent = e, this.changedOptions = [], this.container = i, this.allowCreation = !1, this.options = {}, this.initialized = !1, this.popupCounter = 0, this.defaultOptions = {
          enabled: !1,
          filter: !0,
          container: void 0,
          showButton: !0
        }, WC.extend(this.options, this.defaultOptions), this.configureOptions = n, this.moduleOptions = {}, this.domElements = [], this.popupDiv = {}, this.popupLimit = 5, this.popupHistory = {}, this.colorPicker = new _A(o), this.wrapper = void 0;
      }
      return Ac(t, [{
        key: "setOptions",
        value: function (t) {
          if (void 0 !== t) {
            this.popupHistory = {}, this._removePopup();
            var e = !0;
            if ("string" == typeof t) this.options.filter = t;else if (Cd(t)) this.options.filter = t.join();else if ("object" === kc(t)) {
              if (null == t) throw new TypeError("options cannot be null");
              void 0 !== t.container && (this.options.container = t.container), void 0 !== Cp(t) && (this.options.filter = Cp(t)), void 0 !== t.showButton && (this.options.showButton = t.showButton), void 0 !== t.enabled && (e = t.enabled);
            } else "boolean" == typeof t ? (this.options.filter = !0, e = t) : "function" == typeof t && (this.options.filter = t, e = !0);
            !1 === Cp(this.options) && (e = !1), this.options.enabled = e;
          }
          this._clean();
        }
      }, {
        key: "setModuleOptions",
        value: function (t) {
          this.moduleOptions = t, !0 === this.options.enabled && (this._clean(), void 0 !== this.options.container && (this.container = this.options.container), this._create());
        }
      }, {
        key: "_create",
        value: function () {
          this._clean(), this.changedOptions = [];
          var t = Cp(this.options),
            e = 0,
            i = !1;
          for (var n in this.configureOptions) this.configureOptions.hasOwnProperty(n) && (this.allowCreation = !1, i = !1, "function" == typeof t ? i = (i = t(n, [])) || this._handleObject(this.configureOptions[n], [n], !0) : !0 !== t && -1 === Ob(t).call(t, n) || (i = !0), !1 !== i && (this.allowCreation = !0, e > 0 && this._makeItem([]), this._makeHeader(n), this._handleObject(this.configureOptions[n], [n])), e++);
          this._makeButton(), this._push();
        }
      }, {
        key: "_push",
        value: function () {
          this.wrapper = document.createElement("div"), this.wrapper.className = "vis-configuration-wrapper", this.container.appendChild(this.wrapper);
          for (var t = 0; t < this.domElements.length; t++) this.wrapper.appendChild(this.domElements[t]);
          this._showPopupIfNeeded();
        }
      }, {
        key: "_clean",
        value: function () {
          for (var t = 0; t < this.domElements.length; t++) this.wrapper.removeChild(this.domElements[t]);
          void 0 !== this.wrapper && (this.container.removeChild(this.wrapper), this.wrapper = void 0), this.domElements = [], this._removePopup();
        }
      }, {
        key: "_getValue",
        value: function (t) {
          for (var e = this.moduleOptions, i = 0; i < t.length; i++) {
            if (void 0 === e[t[i]]) {
              e = void 0;
              break;
            }
            e = e[t[i]];
          }
          return e;
        }
      }, {
        key: "_makeItem",
        value: function (t) {
          if (!0 === this.allowCreation) {
            var e = document.createElement("div");
            e.className = "vis-configuration vis-config-item vis-config-s" + t.length;
            for (var i = arguments.length, n = new Array(i > 1 ? i - 1 : 0), o = 1; o < i; o++) n[o - 1] = arguments[o];
            return hp(n).call(n, function (t) {
              e.appendChild(t);
            }), this.domElements.push(e), this.domElements.length;
          }
          return 0;
        }
      }, {
        key: "_makeHeader",
        value: function (t) {
          var e = document.createElement("div");
          e.className = "vis-configuration vis-config-header", e.innerHTML = WC.xss(t), this._makeItem([], e);
        }
      }, {
        key: "_makeLabel",
        value: function (t, e) {
          var i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
            n = document.createElement("div");
          return n.className = "vis-configuration vis-config-label vis-config-s" + e.length, n.innerHTML = !0 === i ? WC.xss("<i><b>" + t + ":</b></i>") : WC.xss(t + ":"), n;
        }
      }, {
        key: "_makeDropdown",
        value: function (t, e, i) {
          var n = document.createElement("select");
          n.className = "vis-configuration vis-config-select";
          var o = 0;
          void 0 !== e && -1 !== Ob(t).call(t, e) && (o = Ob(t).call(t, e));
          for (var r = 0; r < t.length; r++) {
            var s = document.createElement("option");
            s.value = t[r], r === o && (s.selected = "selected"), s.innerHTML = t[r], n.appendChild(s);
          }
          var a = this;
          n.onchange = function () {
            a._update(this.value, i);
          };
          var l = this._makeLabel(i[i.length - 1], i);
          this._makeItem(i, l, n);
        }
      }, {
        key: "_makeRange",
        value: function (t, e, i) {
          var n = t[0],
            o = t[1],
            r = t[2],
            s = t[3],
            a = document.createElement("input");
          a.className = "vis-configuration vis-config-range";
          try {
            a.type = "range", a.min = o, a.max = r;
          } catch (t) {}
          a.step = s;
          var l = "",
            h = 0;
          if (void 0 !== e) {
            var u = 1.2;
            e < 0 && e * u < o ? (a.min = Math.ceil(e * u), h = a.min, l = "range increased") : e / u < o && (a.min = Math.ceil(e / u), h = a.min, l = "range increased"), e * u > r && 1 !== r && (a.max = Math.ceil(e * u), h = a.max, l = "range increased"), a.value = e;
          } else a.value = n;
          var c = document.createElement("input");
          c.className = "vis-configuration vis-config-rangeinput", c.value = Number(a.value);
          var d = this;
          a.onchange = function () {
            c.value = this.value, d._update(Number(this.value), i);
          }, a.oninput = function () {
            c.value = this.value;
          };
          var p = this._makeLabel(i[i.length - 1], i),
            m = this._makeItem(i, p, a, c);
          "" !== l && this.popupHistory[m] !== h && (this.popupHistory[m] = h, this._setupPopup(l, m));
        }
      }, {
        key: "_makeButton",
        value: function () {
          var t = this;
          if (!0 === this.options.showButton) {
            var e = document.createElement("div");
            e.className = "vis-configuration vis-config-button", e.innerHTML = "generate options", e.onclick = function () {
              t._printOptions();
            }, e.onmouseover = function () {
              e.className = "vis-configuration vis-config-button hover";
            }, e.onmouseout = function () {
              e.className = "vis-configuration vis-config-button";
            }, this.optionsContainer = document.createElement("div"), this.optionsContainer.className = "vis-configuration vis-config-option-container", this.domElements.push(this.optionsContainer), this.domElements.push(e);
          }
        }
      }, {
        key: "_setupPopup",
        value: function (t, e) {
          var i = this;
          if (!0 === this.initialized && !0 === this.allowCreation && this.popupCounter < this.popupLimit) {
            var n = document.createElement("div");
            n.id = "vis-configuration-popup", n.className = "vis-configuration-popup", n.innerHTML = WC.xss(t), n.onclick = function () {
              i._removePopup();
            }, this.popupCounter += 1, this.popupDiv = {
              html: n,
              index: e
            };
          }
        }
      }, {
        key: "_removePopup",
        value: function () {
          void 0 !== this.popupDiv.html && (this.popupDiv.html.parentNode.removeChild(this.popupDiv.html), clearTimeout(this.popupDiv.hideTimeout), clearTimeout(this.popupDiv.deleteTimeout), this.popupDiv = {});
        }
      }, {
        key: "_showPopupIfNeeded",
        value: function () {
          var t = this;
          if (void 0 !== this.popupDiv.html) {
            var e = this.domElements[this.popupDiv.index].getBoundingClientRect();
            this.popupDiv.html.style.left = e.left + "px", this.popupDiv.html.style.top = e.top - 30 + "px", document.body.appendChild(this.popupDiv.html), this.popupDiv.hideTimeout = qd(function () {
              t.popupDiv.html.style.opacity = 0;
            }, 1500), this.popupDiv.deleteTimeout = qd(function () {
              t._removePopup();
            }, 1800);
          }
        }
      }, {
        key: "_makeCheckbox",
        value: function (t, e, i) {
          var n = document.createElement("input");
          n.type = "checkbox", n.className = "vis-configuration vis-config-checkbox", n.checked = t, void 0 !== e && (n.checked = e, e !== t && ("object" === kc(t) ? e !== t.enabled && this.changedOptions.push({
            path: i,
            value: e
          }) : this.changedOptions.push({
            path: i,
            value: e
          })));
          var o = this;
          n.onchange = function () {
            o._update(this.checked, i);
          };
          var r = this._makeLabel(i[i.length - 1], i);
          this._makeItem(i, r, n);
        }
      }, {
        key: "_makeTextInput",
        value: function (t, e, i) {
          var n = document.createElement("input");
          n.type = "text", n.className = "vis-configuration vis-config-text", n.value = e, e !== t && this.changedOptions.push({
            path: i,
            value: e
          });
          var o = this;
          n.onchange = function () {
            o._update(this.value, i);
          };
          var r = this._makeLabel(i[i.length - 1], i);
          this._makeItem(i, r, n);
        }
      }, {
        key: "_makeColorField",
        value: function (t, e, i) {
          var n = this,
            o = t[1],
            r = document.createElement("div");
          "none" !== (e = void 0 === e ? o : e) ? (r.className = "vis-configuration vis-config-colorBlock", r.style.backgroundColor = e) : r.className = "vis-configuration vis-config-colorBlock none", e = void 0 === e ? o : e, r.onclick = function () {
            n._showColorPicker(e, r, i);
          };
          var s = this._makeLabel(i[i.length - 1], i);
          this._makeItem(i, s, r);
        }
      }, {
        key: "_showColorPicker",
        value: function (t, e, i) {
          var n = this;
          e.onclick = function () {}, this.colorPicker.insertTo(e), this.colorPicker.show(), this.colorPicker.setColor(t), this.colorPicker.setUpdateCallback(function (t) {
            var o = "rgba(" + t.r + "," + t.g + "," + t.b + "," + t.a + ")";
            e.style.backgroundColor = o, n._update(o, i);
          }), this.colorPicker.setCloseCallback(function () {
            e.onclick = function () {
              n._showColorPicker(t, e, i);
            };
          });
        }
      }, {
        key: "_handleObject",
        value: function (t) {
          var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
            i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
            n = !1,
            o = Cp(this.options),
            r = !1;
          for (var s in t) if (t.hasOwnProperty(s)) {
            n = !0;
            var a = t[s],
              l = WC.copyAndExtendArray(e, s);
            if ("function" == typeof o && !1 === (n = o(s, e)) && !Cd(a) && "string" != typeof a && "boolean" != typeof a && a instanceof Object && (this.allowCreation = !1, n = this._handleObject(a, l, !0), this.allowCreation = !1 === i), !1 !== n) {
              r = !0;
              var h = this._getValue(l);
              if (Cd(a)) this._handleArray(a, h, l);else if ("string" == typeof a) this._makeTextInput(a, h, l);else if ("boolean" == typeof a) this._makeCheckbox(a, h, l);else if (a instanceof Object) {
                var u = !0;
                if (-1 !== Ob(e).call(e, "physics") && this.moduleOptions.physics.solver !== s && (u = !1), !0 === u) if (void 0 !== a.enabled) {
                  var c = WC.copyAndExtendArray(l, "enabled"),
                    d = this._getValue(c);
                  if (!0 === d) {
                    var p = this._makeLabel(s, l, !0);
                    this._makeItem(l, p), r = this._handleObject(a, l) || r;
                  } else this._makeCheckbox(a, d, l);
                } else {
                  var m = this._makeLabel(s, l, !0);
                  this._makeItem(l, m), r = this._handleObject(a, l) || r;
                }
              } else console.error("dont know how to handle", a, s, l);
            }
          }
          return r;
        }
      }, {
        key: "_handleArray",
        value: function (t, e, i) {
          "string" == typeof t[0] && "color" === t[0] ? (this._makeColorField(t, e, i), t[1] !== e && this.changedOptions.push({
            path: i,
            value: e
          })) : "string" == typeof t[0] ? (this._makeDropdown(t, e, i), t[0] !== e && this.changedOptions.push({
            path: i,
            value: e
          })) : "number" == typeof t[0] && (this._makeRange(t, e, i), t[0] !== e && this.changedOptions.push({
            path: i,
            value: Number(e)
          }));
        }
      }, {
        key: "_update",
        value: function (t, e) {
          var i = this._constructOptions(t, e);
          this.parent.body && this.parent.body.emitter && this.parent.body.emitter.emit && this.parent.body.emitter.emit("configChange", i), this.initialized = !0, this.parent.setOptions(i);
        }
      }, {
        key: "_constructOptions",
        value: function (t, e) {
          var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
            n = i;
          t = "false" !== (t = "true" === t || t) && t;
          for (var o = 0; o < e.length; o++) "global" !== e[o] && (void 0 === n[e[o]] && (n[e[o]] = {}), o !== e.length - 1 ? n = n[e[o]] : n[e[o]] = t);
          return i;
        }
      }, {
        key: "_printOptions",
        value: function () {
          var t = this.getOptions();
          this.optionsContainer.innerHTML = "<pre>var options = " + $b(t, null, 2) + "</pre>";
        }
      }, {
        key: "getOptions",
        value: function () {
          for (var t = {}, e = 0; e < this.changedOptions.length; e++) this._constructOptions(this.changedOptions[e].value, this.changedOptions[e].path, t);
          return t;
        }
      }]), t;
    }();
  function SA(t) {
    var e = function () {
      if ("undefined" == typeof Reflect || !Bo) return !1;
      if (Bo.sham) return !1;
      if ("function" == typeof Proxy) return !0;
      try {
        return Boolean.prototype.valueOf.call(Bo(Boolean, [], function () {})), !0;
      } catch (t) {
        return !1;
      }
    }();
    return function () {
      var i,
        n = wd(t);
      if (e) {
        var o = wd(this).constructor;
        i = Bo(n, arguments, o);
      } else i = n.apply(this, arguments);
      return hd(this, i);
    };
  }
  var DA = function (t) {
    ld(i, t);
    var e = SA(i);
    function i(t, n, o, r) {
      var s, a, l, h, u, c, d, p;
      if (zo(this, i), (p = e.call(this)).initTime = new Date(), p.itemsDone = !1, !(Ic(p) instanceof i)) throw new SyntaxError("Constructor must be called with the new operator");
      if (!Cd(o) && !FC(o) && o instanceof Object) {
        var m = r;
        r = o, o = m;
      }
      r && r.throttleRedraw && console.warn('Timeline option "throttleRedraw" is DEPRICATED and no longer supported. It will be removed in the next MAJOR release.');
      var f = Ic(p);
      if (p.defaultOptions = {
        autoResize: !0,
        longSelectPressTime: 251,
        orientation: {
          axis: "bottom",
          item: "bottom"
        },
        moment: up
      }, p.options = WC.deepExtend({}, p.defaultOptions), r && WC.setupXSSProtection(r.xss), p._create(t), !r || r && void 0 === r.rtl) {
        var v;
        p.dom.root.style.visibility = "hidden";
        for (var g = p.dom.root; !v && g;) v = window.getComputedStyle(g, null).direction, g = g.parentElement;
        p.options.rtl = v && "rtl" == v.toLowerCase();
      } else p.options.rtl = r.rtl;
      r && (r.rollingMode && (p.options.rollingMode = r.rollingMode), r.onInitialDrawComplete && (p.options.onInitialDrawComplete = r.onInitialDrawComplete), r.onTimeout && (p.options.onTimeout = r.onTimeout), r.loadingScreenTemplate && (p.options.loadingScreenTemplate = r.loadingScreenTemplate));
      var y = document.createElement("div");
      if (p.options.loadingScreenTemplate) {
        var b,
          w = Dd(b = p.options.loadingScreenTemplate).call(b, Ic(p)),
          k = w(p.dom.loadingScreen);
        k instanceof Object && !(k instanceof Element) ? w(y) : k instanceof Element ? (y.innerHTML = "", y.appendChild(k)) : null != k && (y.innerHTML = WC.xss(k));
      }
      function x(t, e) {
        f.hasListeners(t) && f.emit(t, f.getEventProperties(e));
      }
      return p.dom.loadingScreen.appendChild(y), p.components = [], p.body = {
        dom: p.dom,
        domProps: p.props,
        emitter: {
          on: Dd(s = p.on).call(s, Ic(p)),
          off: Dd(a = p.off).call(a, Ic(p)),
          emit: Dd(l = p.emit).call(l, Ic(p))
        },
        hiddenDates: [],
        util: {
          getScale: function () {
            return f.timeAxis.step.scale;
          },
          getStep: function () {
            return f.timeAxis.step.step;
          },
          toScreen: Dd(h = f._toScreen).call(h, f),
          toGlobalScreen: Dd(u = f._toGlobalScreen).call(u, f),
          toTime: Dd(c = f._toTime).call(c, f),
          toGlobalTime: Dd(d = f._toGlobalTime).call(d, f)
        }
      }, p.range = new wD(p.body, p.options), p.components.push(p.range), p.body.range = p.range, p.timeAxis = new HD(p.body, p.options), p.timeAxis2 = null, p.components.push(p.timeAxis), p.currentTime = new hT(p.body, p.options), p.components.push(p.currentTime), p.itemSet = new lA(p.body, p.options), p.components.push(p.itemSet), p.itemsData = null, p.groupsData = null, p.dom.root.onclick = function (t) {
        x("click", t);
      }, p.dom.root.ondblclick = function (t) {
        x("doubleClick", t);
      }, p.dom.root.oncontextmenu = function (t) {
        x("contextmenu", t);
      }, p.dom.root.onmouseover = function (t) {
        x("mouseOver", t);
      }, window.PointerEvent ? (p.dom.root.onpointerdown = function (t) {
        x("mouseDown", t);
      }, p.dom.root.onpointermove = function (t) {
        x("mouseMove", t);
      }, p.dom.root.onpointerup = function (t) {
        x("mouseUp", t);
      }) : (p.dom.root.onmousemove = function (t) {
        x("mouseMove", t);
      }, p.dom.root.onmousedown = function (t) {
        x("mouseDown", t);
      }, p.dom.root.onmouseup = function (t) {
        x("mouseUp", t);
      }), p.initialFitDone = !1, p.on("changed", function () {
        if (null != f.itemsData) {
          if (!f.initialFitDone && !f.options.rollingMode) if (f.initialFitDone = !0, null != f.options.start || null != f.options.end) {
            if (null == f.options.start || null == f.options.end) var t = f.getItemRange();
            var e = null != f.options.start ? f.options.start : t.min,
              i = null != f.options.end ? f.options.end : t.max;
            f.setWindow(e, i, {
              animation: !1
            });
          } else f.fit({
            animation: !1
          });
          f.initialDrawDone || !f.initialRangeChangeDone && (f.options.start || f.options.end) && !f.options.rollingMode || (f.initialDrawDone = !0, f.itemSet.initialDrawDone = !0, f.dom.root.style.visibility = "visible", f.dom.loadingScreen.parentNode.removeChild(f.dom.loadingScreen), f.options.onInitialDrawComplete && qd(function () {
            return f.options.onInitialDrawComplete();
          }, 0));
        }
      }), p.on("destroyTimeline", function () {
        f.destroy();
      }), r && p.setOptions(r), p.body.emitter.on("fit", function (t) {
        p._onFit(t), p.redraw();
      }), o && p.setGroups(o), n && p.setItems(n), p._redraw(), p;
    }
    return Ac(i, [{
      key: "_createConfigurator",
      value: function () {
        return new CA(this, this.dom.container, kA);
      }
    }, {
      key: "redraw",
      value: function () {
        this.itemSet && this.itemSet.markDirty({
          refreshItems: !0
        }), this._redraw();
      }
    }, {
      key: "setOptions",
      value: function (t) {
        if (!0 === dA.validate(t, wA) && console.log("%cErrors have been found in the supplied options object.", cA), aT.prototype.setOptions.call(this, t), "type" in t && t.type !== this.options.type) {
          this.options.type = t.type;
          var e = this.itemsData;
          if (e) {
            var i = this.getSelection();
            this.setItems(null), this.setItems(e.rawDS), this.setSelection(i);
          }
        }
      }
    }, {
      key: "setItems",
      value: function (t) {
        var e;
        this.itemsDone = !1, e = t ? FC(t) ? BC(t) : BC(new n.DataSet(t)) : null, this.itemsData && this.itemsData.dispose(), this.itemsData = e, this.itemSet && this.itemSet.setItems(null != e ? e.rawDS : null);
      }
    }, {
      key: "setGroups",
      value: function (t) {
        var e;
        t ? (Cd(t) && (t = new n.DataSet(t)), e = new n.DataView(t, {
          filter: function (t) {
            return !1 !== t.visible;
          }
        })) : e = null, null != this.groupsData && "function" == typeof this.groupsData.setData && this.groupsData.setData(null), this.groupsData = e, this.itemSet.setGroups(e);
      }
    }, {
      key: "setData",
      value: function (t) {
        t && t.groups && this.setGroups(t.groups), t && t.items && this.setItems(t.items);
      }
    }, {
      key: "setSelection",
      value: function (t, e) {
        this.itemSet && this.itemSet.setSelection(t), e && e.focus && this.focus(t, e);
      }
    }, {
      key: "getSelection",
      value: function () {
        return this.itemSet && this.itemSet.getSelection() || [];
      }
    }, {
      key: "focus",
      value: function (t, e) {
        if (this.itemsData && null != t) {
          var i = Cd(t) ? t : [t],
            n = this.itemsData.get(i),
            o = null,
            r = null;
          if (hp(n).call(n, function (t) {
            var e = t.start.valueOf(),
              i = "end" in t ? t.end.valueOf() : t.start.valueOf();
            (null === o || e < o) && (o = e), (null === r || i > r) && (r = i);
          }), null !== o && null !== r) {
            var s = this,
              a = this.itemSet.items[i[0]],
              l = -1 * this._getScrollTop(),
              h = null,
              u = function () {
                var t = EA(s, a);
                t.shouldScroll && t.itemTop != h.itemTop && (s._setScrollTop(-t.scrollOffset), s._redraw());
              },
              c = !e || void 0 === e.zoom || e.zoom,
              d = (o + r) / 2,
              p = c ? 1.1 * (r - o) : Math.max(this.range.end - this.range.start, 1.1 * (r - o)),
              m = !e || void 0 === e.animation || e.animation;
            m || (h = {
              shouldScroll: !1,
              scrollOffset: -1,
              itemTop: -1
            }), this.range.setRange(d - p / 2, d + p / 2, {
              animation: m
            }, function () {
              u(), qd(u, 100);
            }, function (t, e, i) {
              var n = EA(s, a);
              if (!1 !== n && (h || (h = n), h.itemTop != n.itemTop || h.shouldScroll)) {
                h.itemTop != n.itemTop && n.shouldScroll && (h = n, l = -1 * s._getScrollTop());
                var o = l,
                  r = h.scrollOffset,
                  u = i ? r : o + (r - o) * t;
                s._setScrollTop(-u), e || s._redraw();
              }
            });
          }
        }
      }
    }, {
      key: "fit",
      value: function (t, e) {
        var i,
          n = !t || void 0 === t.animation || t.animation;
        1 === this.itemsData.length && void 0 === this.itemsData.get()[0].end ? (i = this.getDataRange(), this.moveTo(i.min.valueOf(), {
          animation: n
        }, e)) : (i = this.getItemRange(), this.range.setRange(i.min, i.max, {
          animation: n
        }, e));
      }
    }, {
      key: "getItemRange",
      value: function () {
        var t = this,
          e = this.getDataRange(),
          i = null !== e.min ? e.min.valueOf() : null,
          n = null !== e.max ? e.max.valueOf() : null,
          o = null,
          r = null;
        if (null != i && null != n) {
          var s = n - i;
          s <= 0 && (s = 10);
          var a = s / this.props.center.width,
            l = {},
            h = 0;
          if (hp(WC).call(WC, this.itemSet.items, function (t, e) {
            if (t.groupShowing) {
              l[e] = t.redraw(!0), h = l[e].length;
            }
          }), h > 0) for (var u = function (t) {
              hp(WC).call(WC, l, function (e) {
                e[t]();
              });
            }, c = 0; c < h; c++) u(c);
          if (hp(WC).call(WC, this.itemSet.items, function (e) {
            var s,
              l,
              h = TA(e),
              u = OA(e);
            t.options.rtl ? (s = h - (e.getWidthRight() + 10) * a, l = u + (e.getWidthLeft() + 10) * a) : (s = h - (e.getWidthLeft() + 10) * a, l = u + (e.getWidthRight() + 10) * a), s < i && (i = s, o = e), l > n && (n = l, r = e);
          }), o && r) {
            var d = o.getWidthLeft() + 10,
              p = r.getWidthRight() + 10,
              m = this.props.center.width - d - p;
            m > 0 && (this.options.rtl ? (i = TA(o) - p * s / m, n = OA(r) + d * s / m) : (i = TA(o) - d * s / m, n = OA(r) + p * s / m));
          }
        }
        return {
          min: null != i ? new Date(i) : null,
          max: null != n ? new Date(n) : null
        };
      }
    }, {
      key: "getDataRange",
      value: function () {
        var t,
          e = null,
          i = null;
        this.itemsData && hp(t = this.itemsData).call(t, function (t) {
          var n = WC.convert(t.start, "Date").valueOf(),
            o = WC.convert(null != t.end ? t.end : t.start, "Date").valueOf();
          (null === e || n < e) && (e = n), (null === i || o > i) && (i = o);
        });
        return {
          min: null != e ? new Date(e) : null,
          max: null != i ? new Date(i) : null
        };
      }
    }, {
      key: "getEventProperties",
      value: function (t) {
        var e = t.center ? t.center.x : t.clientX,
          i = t.center ? t.center.y : t.clientY,
          n = this.dom.centerContainer.getBoundingClientRect(),
          o = this.options.rtl ? n.right - e : e - n.left,
          r = i - n.top,
          s = this.itemSet.itemFromTarget(t),
          a = this.itemSet.groupFromTarget(t),
          l = sT.customTimeFromTarget(t),
          h = this.itemSet.options.snap || null,
          u = this.body.util.getScale(),
          c = this.body.util.getStep(),
          d = this._toTime(o),
          p = h ? h(d, u, c) : d,
          m = WC.getTarget(t),
          f = null;
        return null != s ? f = "item" : null != l ? f = "custom-time" : WC.hasParent(m, this.timeAxis.dom.foreground) || this.timeAxis2 && WC.hasParent(m, this.timeAxis2.dom.foreground) ? f = "axis" : WC.hasParent(m, this.itemSet.dom.labelSet) ? f = "group-label" : WC.hasParent(m, this.currentTime.bar) ? f = "current-time" : WC.hasParent(m, this.dom.center) && (f = "background"), {
          event: t,
          item: s ? s.id : null,
          isCluster: !!s && !!s.isCluster,
          items: s ? s.items || [] : null,
          group: a ? a.groupId : null,
          customTime: l ? l.options.id : null,
          what: f,
          pageX: t.srcEvent ? t.srcEvent.pageX : t.pageX,
          pageY: t.srcEvent ? t.srcEvent.pageY : t.pageY,
          x: o,
          y: r,
          time: d,
          snappedTime: p
        };
      }
    }, {
      key: "toggleRollingMode",
      value: function () {
        this.range.rolling ? this.range.stopRolling() : (null == this.options.rollingMode && this.setOptions(this.options), this.range.startRolling());
      }
    }, {
      key: "_redraw",
      value: function () {
        aT.prototype._redraw.call(this);
      }
    }, {
      key: "_onFit",
      value: function (t) {
        var e = t.start,
          i = t.end,
          n = t.animation;
        i ? this.range.setRange(e, i, {
          animation: n
        }) : this.moveTo(e.valueOf(), {
          animation: n
        });
      }
    }]), i;
  }(aT);
  function TA(t) {
    return WC.convert(t.data.start, "Date").valueOf();
  }
  function OA(t) {
    var e = null != t.data.end ? t.data.end : t.data.start;
    return WC.convert(e, "Date").valueOf();
  }
  function EA(t, e) {
    if (!e.parent) return !1;
    var i = t.options.rtl ? t.props.rightContainer.height : t.props.leftContainer.height,
      n = t.props.center.height,
      o = e.parent,
      r = o.top,
      s = !0,
      a = t.timeAxis.options.orientation.axis,
      l = function () {
        return "bottom" == a ? o.height - e.top - e.height : e.top;
      },
      h = -1 * t._getScrollTop(),
      u = r + l(),
      c = e.height;
    return u < h ? r + i <= r + l() + c && (r += l() - t.itemSet.options.margin.item.vertical) : u + c > h + i ? r += l() + c - i + t.itemSet.options.margin.item.vertical : s = !1, {
      shouldScroll: s,
      scrollOffset: r = Math.min(r, n - i),
      itemTop: u
    };
  }
  function AA(t) {
    for (var e in t) t.hasOwnProperty(e) && (t[e].redundant = t[e].used, t[e].used = []);
  }
  function IA(t) {
    for (var e in t) if (t.hasOwnProperty(e) && t[e].redundant) {
      for (var i = 0; i < t[e].redundant.length; i++) t[e].redundant[i].parentNode.removeChild(t[e].redundant[i]);
      t[e].redundant = [];
    }
  }
  function PA(t, e, i) {
    var n;
    return e.hasOwnProperty(t) ? e[t].redundant.length > 0 ? (n = e[t].redundant[0], e[t].redundant.shift()) : (n = document.createElementNS("http://www.w3.org/2000/svg", t), i.appendChild(n)) : (n = document.createElementNS("http://www.w3.org/2000/svg", t), e[t] = {
      used: [],
      redundant: []
    }, i.appendChild(n)), e[t].used.push(n), n;
  }
  function MA(t, e, i, n) {
    var o;
    return e.hasOwnProperty(t) ? e[t].redundant.length > 0 ? (o = e[t].redundant[0], e[t].redundant.shift()) : (o = document.createElement(t), void 0 !== n ? i.insertBefore(o, n) : i.appendChild(o)) : (o = document.createElement(t), e[t] = {
      used: [],
      redundant: []
    }, void 0 !== n ? i.insertBefore(o, n) : i.appendChild(o)), e[t].used.push(o), o;
  }
  function NA(t, e, i, n, o, r) {
    var s;
    if ("circle" == i.style ? ((s = PA("circle", n, o)).setAttributeNS(null, "cx", t), s.setAttributeNS(null, "cy", e), s.setAttributeNS(null, "r", .5 * i.size)) : ((s = PA("rect", n, o)).setAttributeNS(null, "x", t - .5 * i.size), s.setAttributeNS(null, "y", e - .5 * i.size), s.setAttributeNS(null, "width", i.size), s.setAttributeNS(null, "height", i.size)), void 0 !== i.styles && s.setAttributeNS(null, "style", i.styles), s.setAttributeNS(null, "class", i.className + " vis-point"), r) {
      var a = PA("text", n, o);
      r.xOffset && (t += r.xOffset), r.yOffset && (e += r.yOffset), r.content && (a.textContent = r.content), r.className && a.setAttributeNS(null, "class", r.className + " vis-label"), a.setAttributeNS(null, "x", t), a.setAttributeNS(null, "y", e);
    }
    return s;
  }
  function FA(t, e, i, n, o, r, s, a) {
    if (0 != n) {
      n < 0 && (e -= n *= -1);
      var l = PA("rect", r, s);
      l.setAttributeNS(null, "x", t - .5 * i), l.setAttributeNS(null, "y", e), l.setAttributeNS(null, "width", i), l.setAttributeNS(null, "height", n), l.setAttributeNS(null, "class", o), a && l.setAttributeNS(null, "style", a);
    }
  }
  var RA = function () {
    function t(e, i, n, o, r, s) {
      var a = arguments.length > 6 && void 0 !== arguments[6] && arguments[6],
        l = arguments.length > 7 && void 0 !== arguments[7] && arguments[7];
      if (zo(this, t), this.majorSteps = [1, 2, 5, 10], this.minorSteps = [.25, .5, 1, 2], this.customLines = null, this.containerHeight = r, this.majorCharHeight = s, this._start = e, this._end = i, this.scale = 1, this.minorStepIdx = -1, this.magnitudefactor = 1, this.determineScale(), this.zeroAlign = a, this.autoScaleStart = n, this.autoScaleEnd = o, this.formattingFunction = l, n || o) {
        var h = this,
          u = function (t) {
            var e = t - t % (h.magnitudefactor * h.minorSteps[h.minorStepIdx]);
            return t % (h.magnitudefactor * h.minorSteps[h.minorStepIdx]) > h.magnitudefactor * h.minorSteps[h.minorStepIdx] * .5 ? e + h.magnitudefactor * h.minorSteps[h.minorStepIdx] : e;
          };
        n && (this._start -= 2 * this.magnitudefactor * this.minorSteps[this.minorStepIdx], this._start = u(this._start)), o && (this._end += this.magnitudefactor * this.minorSteps[this.minorStepIdx], this._end = u(this._end)), this.determineScale();
      }
    }
    return Ac(t, [{
      key: "setCharHeight",
      value: function (t) {
        this.majorCharHeight = t;
      }
    }, {
      key: "setHeight",
      value: function (t) {
        this.containerHeight = t;
      }
    }, {
      key: "determineScale",
      value: function () {
        var t = this._end - this._start;
        this.scale = this.containerHeight / t;
        var e = this.majorCharHeight / this.scale,
          i = t > 0 ? Math.round(Math.log(t) / Math.LN10) : 0;
        this.minorStepIdx = -1, this.magnitudefactor = Math.pow(10, i);
        var n = 0;
        i < 0 && (n = i);
        for (var o = !1, r = n; Math.abs(r) <= Math.abs(i); r++) {
          this.magnitudefactor = Math.pow(10, r);
          for (var s = 0; s < this.minorSteps.length; s++) {
            if (this.magnitudefactor * this.minorSteps[s] >= e) {
              o = !0, this.minorStepIdx = s;
              break;
            }
          }
          if (!0 === o) break;
        }
      }
    }, {
      key: "is_major",
      value: function (t) {
        return t % (this.magnitudefactor * this.majorSteps[this.minorStepIdx]) == 0;
      }
    }, {
      key: "getStep",
      value: function () {
        return this.magnitudefactor * this.minorSteps[this.minorStepIdx];
      }
    }, {
      key: "getFirstMajor",
      value: function () {
        var t = this.magnitudefactor * this.majorSteps[this.minorStepIdx];
        return this.convertValue(this._start + (t - this._start % t) % t);
      }
    }, {
      key: "formatValue",
      value: function (t) {
        var e = t.toPrecision(5);
        return "function" == typeof this.formattingFunction && (e = this.formattingFunction(t)), "number" == typeof e ? "".concat(e) : "string" == typeof e ? e : t.toPrecision(5);
      }
    }, {
      key: "getLines",
      value: function () {
        for (var t = [], e = this.getStep(), i = (e - this._start % e) % e, n = this._start + i; this._end - n > 1e-5; n += e) n != this._start && t.push({
          major: this.is_major(n),
          y: this.convertValue(n),
          val: this.formatValue(n)
        });
        return t;
      }
    }, {
      key: "followScale",
      value: function (t) {
        var e = this.minorStepIdx,
          i = this._start,
          n = this._end,
          o = this,
          r = function () {
            o.magnitudefactor *= 2;
          },
          s = function () {
            o.magnitudefactor /= 2;
          };
        t.minorStepIdx <= 1 && this.minorStepIdx <= 1 || t.minorStepIdx > 1 && this.minorStepIdx > 1 || (t.minorStepIdx < this.minorStepIdx ? (this.minorStepIdx = 1, 2 == e || r(), r()) : (this.minorStepIdx = 2, 1 == e || s(), s()));
        for (var a = t.convertValue(0), l = t.getStep() * t.scale, h = !1, u = 0; !h && u++ < 5;) {
          this.scale = l / (this.minorSteps[this.minorStepIdx] * this.magnitudefactor);
          var c = this.containerHeight / this.scale;
          this._start = i, this._end = this._start + c;
          var d = this._end * this.scale,
            p = this.magnitudefactor * this.majorSteps[this.minorStepIdx],
            m = this.getFirstMajor() - t.getFirstMajor();
          if (this.zeroAlign) {
            var f = a - d;
            this._end += f / this.scale, this._start = this._end - c;
          } else this.autoScaleStart ? (this._start -= m / this.scale, this._end = this._start + c) : (this._start += p - m / this.scale, this._end = this._start + c);
          if (!this.autoScaleEnd && this._end > n + 1e-5) s(), h = !1;else {
            if (!this.autoScaleStart && this._start < i - 1e-5) {
              if (!(this.zeroAlign && i >= 0)) {
                s(), h = !1;
                continue;
              }
              console.warn("Can't adhere to given 'min' range, due to zeroalign");
            }
            this.autoScaleStart && this.autoScaleEnd && c < n - i ? (r(), h = !1) : h = !0;
          }
        }
      }
    }, {
      key: "convertValue",
      value: function (t) {
        return this.containerHeight - (t - this._start) * this.scale;
      }
    }, {
      key: "screenToValue",
      value: function (t) {
        return (this.containerHeight - t) / this.scale + this._start;
      }
    }]), t;
  }();
  function LA(t, e) {
    var i = void 0 !== Ev && Hf(t) || t["@@iterator"];
    if (!i) {
      if (Cd(t) || (i = function (t, e) {
        var i;
        if (!t) return;
        if ("string" == typeof t) return jA(t, e);
        var n = zv(i = Object.prototype.toString.call(t)).call(i, 8, -1);
        "Object" === n && t.constructor && (n = t.constructor.name);
        if ("Map" === n || "Set" === n) return Rf(t);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return jA(t, e);
      }(t)) || e && t && "number" == typeof t.length) {
        i && (t = i);
        var n = 0,
          o = function () {};
        return {
          s: o,
          n: function () {
            return n >= t.length ? {
              done: !0
            } : {
              done: !1,
              value: t[n++]
            };
          },
          e: function (t) {
            throw t;
          },
          f: o
        };
      }
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var r,
      s = !0,
      a = !1;
    return {
      s: function () {
        i = i.call(t);
      },
      n: function () {
        var t = i.next();
        return s = t.done, t;
      },
      e: function (t) {
        a = !0, r = t;
      },
      f: function () {
        try {
          s || null == i.return || i.return();
        } finally {
          if (a) throw r;
        }
      }
    };
  }
  function jA(t, e) {
    (null == e || e > t.length) && (e = t.length);
    for (var i = 0, n = new Array(e); i < e; i++) n[i] = t[i];
    return n;
  }
  function BA(t) {
    var e = function () {
      if ("undefined" == typeof Reflect || !Bo) return !1;
      if (Bo.sham) return !1;
      if ("function" == typeof Proxy) return !0;
      try {
        return Boolean.prototype.valueOf.call(Bo(Boolean, [], function () {})), !0;
      } catch (t) {
        return !1;
      }
    }();
    return function () {
      var i,
        n = wd(t);
      if (e) {
        var o = wd(this).constructor;
        i = Bo(n, arguments, o);
      } else i = n.apply(this, arguments);
      return hd(this, i);
    };
  }
  var zA = function (t) {
    ld(i, t);
    var e = BA(i);
    function i(t, n, o, r) {
      var s;
      zo(this, i), (s = e.call(this)).id = PC(), s.body = t, s.defaultOptions = {
        orientation: "left",
        showMinorLabels: !0,
        showMajorLabels: !0,
        showWeekScale: !1,
        icons: !1,
        majorLinesOffset: 7,
        minorLinesOffset: 4,
        labelOffsetX: 10,
        labelOffsetY: 2,
        iconWidth: 20,
        width: "40px",
        visible: !0,
        alignZeros: !0,
        left: {
          range: {
            min: void 0,
            max: void 0
          },
          format: function (t) {
            return "".concat(nS(t.toPrecision(3)));
          },
          title: {
            text: void 0,
            style: void 0
          }
        },
        right: {
          range: {
            min: void 0,
            max: void 0
          },
          format: function (t) {
            return "".concat(nS(t.toPrecision(3)));
          },
          title: {
            text: void 0,
            style: void 0
          }
        }
      }, s.linegraphOptions = r, s.linegraphSVG = o, s.props = {}, s.DOMelements = {
        lines: {},
        labels: {},
        title: {}
      }, s.dom = {}, s.scale = void 0, s.range = {
        start: 0,
        end: 0
      }, s.options = WC.extend({}, s.defaultOptions), s.conversionFactor = 1, s.setOptions(n), s.width = Number("".concat(s.options.width).replace("px", "")), s.minWidth = s.width, s.height = s.linegraphSVG.getBoundingClientRect().height, s.hidden = !1, s.stepPixels = 25, s.zeroCrossing = -1, s.amountOfSteps = -1, s.lineOffset = 0, s.master = !0, s.masterAxis = null, s.svgElements = {}, s.iconsRemoved = !1, s.groups = {}, s.amountOfGroups = 0, s._create(), null == s.scale && s._redrawLabels(), s.framework = {
        svg: s.svg,
        svgElements: s.svgElements,
        options: s.options,
        groups: s.groups
      };
      var a = Ic(s);
      return s.body.emitter.on("verticalDrag", function () {
        a.dom.lineContainer.style.top = "".concat(a.body.domProps.scrollTop, "px");
      }), s;
    }
    return Ac(i, [{
      key: "addGroup",
      value: function (t, e) {
        this.groups.hasOwnProperty(t) || (this.groups[t] = e), this.amountOfGroups += 1;
      }
    }, {
      key: "updateGroup",
      value: function (t, e) {
        this.groups.hasOwnProperty(t) || (this.amountOfGroups += 1), this.groups[t] = e;
      }
    }, {
      key: "removeGroup",
      value: function (t) {
        this.groups.hasOwnProperty(t) && (delete this.groups[t], this.amountOfGroups -= 1);
      }
    }, {
      key: "setOptions",
      value: function (t) {
        if (t) {
          var e = !1;
          this.options.orientation != t.orientation && void 0 !== t.orientation && (e = !0);
          WC.selectiveDeepExtend(["orientation", "showMinorLabels", "showMajorLabels", "icons", "majorLinesOffset", "minorLinesOffset", "labelOffsetX", "labelOffsetY", "iconWidth", "width", "visible", "left", "right", "alignZeros"], this.options, t), this.minWidth = Number("".concat(this.options.width).replace("px", "")), !0 === e && this.dom.frame && (this.hide(), this.show());
        }
      }
    }, {
      key: "_create",
      value: function () {
        this.dom.frame = document.createElement("div"), this.dom.frame.style.width = this.options.width, this.dom.frame.style.height = this.height, this.dom.lineContainer = document.createElement("div"), this.dom.lineContainer.style.width = "100%", this.dom.lineContainer.style.height = this.height, this.dom.lineContainer.style.position = "relative", this.dom.lineContainer.style.visibility = "visible", this.dom.lineContainer.style.display = "block", this.svg = document.createElementNS("http://www.w3.org/2000/svg", "svg"), this.svg.style.position = "absolute", this.svg.style.top = "0px", this.svg.style.height = "100%", this.svg.style.width = "100%", this.svg.style.display = "block", this.dom.frame.appendChild(this.svg);
      }
    }, {
      key: "_redrawGroupIcons",
      value: function () {
        var t;
        AA(this.svgElements);
        var e = this.options.iconWidth,
          i = 11.5;
        t = "left" === this.options.orientation ? 4 : this.width - e - 4;
        var n = Wm(this.groups);
        oD(n).call(n, function (t, e) {
          return t < e ? -1 : 1;
        });
        var o,
          r = LA(n);
        try {
          for (r.s(); !(o = r.n()).done;) {
            var s = o.value;
            !0 !== this.groups[s].visible || void 0 !== this.linegraphOptions.visibility[s] && !0 !== this.linegraphOptions.visibility[s] || (this.groups[s].getLegend(e, 15, this.framework, t, i), i += 19);
          }
        } catch (t) {
          r.e(t);
        } finally {
          r.f();
        }
        IA(this.svgElements), this.iconsRemoved = !1;
      }
    }, {
      key: "_cleanupIcons",
      value: function () {
        !1 === this.iconsRemoved && (AA(this.svgElements), IA(this.svgElements), this.iconsRemoved = !0);
      }
    }, {
      key: "show",
      value: function () {
        this.hidden = !1, this.dom.frame.parentNode || ("left" === this.options.orientation ? this.body.dom.left.appendChild(this.dom.frame) : this.body.dom.right.appendChild(this.dom.frame)), this.dom.lineContainer.parentNode || this.body.dom.backgroundHorizontal.appendChild(this.dom.lineContainer), this.dom.lineContainer.style.display = "block";
      }
    }, {
      key: "hide",
      value: function () {
        this.hidden = !0, this.dom.frame.parentNode && this.dom.frame.parentNode.removeChild(this.dom.frame), this.dom.lineContainer.style.display = "none";
      }
    }, {
      key: "setRange",
      value: function (t, e) {
        this.range.start = t, this.range.end = e;
      }
    }, {
      key: "redraw",
      value: function () {
        var t = !1,
          e = 0;
        for (var i in this.dom.lineContainer.style.top = "".concat(this.body.domProps.scrollTop, "px"), this.groups) this.groups.hasOwnProperty(i) && (!0 !== this.groups[i].visible || void 0 !== this.linegraphOptions.visibility[i] && !0 !== this.linegraphOptions.visibility[i] || e++);
        if (0 === this.amountOfGroups || 0 === e) this.hide();else {
          this.show(), this.height = Number(this.linegraphSVG.style.height.replace("px", "")), this.dom.lineContainer.style.height = "".concat(this.height, "px"), this.width = !0 === this.options.visible ? Number("".concat(this.options.width).replace("px", "")) : 0;
          var n = this.props,
            o = this.dom.frame;
          o.className = "vis-data-axis", this._calculateCharSize();
          var r = this.options.orientation,
            s = this.options.showMinorLabels,
            a = this.options.showMajorLabels,
            l = this.body.dom.backgroundHorizontal.offsetWidth;
          n.minorLabelHeight = s ? n.minorCharHeight : 0, n.majorLabelHeight = a ? n.majorCharHeight : 0, n.minorLineWidth = l - this.lineOffset - this.width + 2 * this.options.minorLinesOffset, n.minorLineHeight = 1, n.majorLineWidth = l - this.lineOffset - this.width + 2 * this.options.majorLinesOffset, n.majorLineHeight = 1, "left" === r ? (o.style.top = "0", o.style.left = "0", o.style.bottom = "", o.style.width = "".concat(this.width, "px"), o.style.height = "".concat(this.height, "px"), this.props.width = this.body.domProps.left.width, this.props.height = this.body.domProps.left.height) : (o.style.top = "", o.style.bottom = "0", o.style.left = "0", o.style.width = "".concat(this.width, "px"), o.style.height = "".concat(this.height, "px"), this.props.width = this.body.domProps.right.width, this.props.height = this.body.domProps.right.height), t = this._redrawLabels(), t = this._isResized() || t, !0 === this.options.icons ? this._redrawGroupIcons() : this._cleanupIcons(), this._redrawTitle(r);
        }
        return t;
      }
    }, {
      key: "_redrawLabels",
      value: function () {
        var t = this,
          e = !1;
        AA(this.DOMelements.lines), AA(this.DOMelements.labels);
        var i = this.options.orientation,
          n = null != this.options[i].range ? this.options[i].range : {},
          o = !0;
        null != n.max && (this.range.end = n.max, o = !1);
        var r = !0;
        null != n.min && (this.range.start = n.min, r = !1), this.scale = new RA(this.range.start, this.range.end, r, o, this.dom.frame.offsetHeight, this.props.majorCharHeight, this.options.alignZeros, this.options[i].format), !1 === this.master && null != this.masterAxis ? (this.scale.followScale(this.masterAxis.scale), this.dom.lineContainer.style.display = "none") : this.dom.lineContainer.style.display = "block", this.maxLabelSize = 0;
        var s = this.scale.getLines();
        hp(s).call(s, function (e) {
          var n = e.y,
            o = e.major;
          t.options.showMinorLabels && !1 === o && t._redrawLabel(n - 2, e.val, i, "vis-y-axis vis-minor", t.props.minorCharHeight), o && n >= 0 && t._redrawLabel(n - 2, e.val, i, "vis-y-axis vis-major", t.props.majorCharHeight), !0 === t.master && (o ? t._redrawLine(n, i, "vis-grid vis-horizontal vis-major", t.options.majorLinesOffset, t.props.majorLineWidth) : t._redrawLine(n, i, "vis-grid vis-horizontal vis-minor", t.options.minorLinesOffset, t.props.minorLineWidth));
        });
        var a = 0;
        void 0 !== this.options[i].title && void 0 !== this.options[i].title.text && (a = this.props.titleCharHeight);
        var l = !0 === this.options.icons ? Math.max(this.options.iconWidth, a) + this.options.labelOffsetX + 15 : a + this.options.labelOffsetX + 15;
        return this.maxLabelSize > this.width - l && !0 === this.options.visible ? (this.width = this.maxLabelSize + l, this.options.width = "".concat(this.width, "px"), IA(this.DOMelements.lines), IA(this.DOMelements.labels), this.redraw(), e = !0) : this.maxLabelSize < this.width - l && !0 === this.options.visible && this.width > this.minWidth ? (this.width = Math.max(this.minWidth, this.maxLabelSize + l), this.options.width = "".concat(this.width, "px"), IA(this.DOMelements.lines), IA(this.DOMelements.labels), this.redraw(), e = !0) : (IA(this.DOMelements.lines), IA(this.DOMelements.labels), e = !1), e;
      }
    }, {
      key: "convertValue",
      value: function (t) {
        return this.scale.convertValue(t);
      }
    }, {
      key: "screenToValue",
      value: function (t) {
        return this.scale.screenToValue(t);
      }
    }, {
      key: "_redrawLabel",
      value: function (t, e, i, n, o) {
        var r = MA("div", this.DOMelements.labels, this.dom.frame);
        r.className = n, r.innerHTML = WC.xss(e), "left" === i ? (r.style.left = "-".concat(this.options.labelOffsetX, "px"), r.style.textAlign = "right") : (r.style.right = "-".concat(this.options.labelOffsetX, "px"), r.style.textAlign = "left"), r.style.top = "".concat(t - .5 * o + this.options.labelOffsetY, "px"), e += "";
        var s = Math.max(this.props.majorCharWidth, this.props.minorCharWidth);
        this.maxLabelSize < e.length * s && (this.maxLabelSize = e.length * s);
      }
    }, {
      key: "_redrawLine",
      value: function (t, e, i, n, o) {
        if (!0 === this.master) {
          var r = MA("div", this.DOMelements.lines, this.dom.lineContainer);
          r.className = i, r.innerHTML = "", "left" === e ? r.style.left = "".concat(this.width - n, "px") : r.style.right = "".concat(this.width - n, "px"), r.style.width = "".concat(o, "px"), r.style.top = "".concat(t, "px");
        }
      }
    }, {
      key: "_redrawTitle",
      value: function (t) {
        if (AA(this.DOMelements.title), void 0 !== this.options[t].title && void 0 !== this.options[t].title.text) {
          var e = MA("div", this.DOMelements.title, this.dom.frame);
          e.className = "vis-y-axis vis-title vis-".concat(t), e.innerHTML = WC.xss(this.options[t].title.text), void 0 !== this.options[t].title.style && WC.addCssText(e, this.options[t].title.style), "left" === t ? e.style.left = "".concat(this.props.titleCharHeight, "px") : e.style.right = "".concat(this.props.titleCharHeight, "px"), e.style.width = "".concat(this.height, "px");
        }
        IA(this.DOMelements.title);
      }
    }, {
      key: "_calculateCharSize",
      value: function () {
        if (!("minorCharHeight" in this.props)) {
          var t = document.createTextNode("0"),
            e = document.createElement("div");
          e.className = "vis-y-axis vis-minor vis-measure", e.appendChild(t), this.dom.frame.appendChild(e), this.props.minorCharHeight = e.clientHeight, this.props.minorCharWidth = e.clientWidth, this.dom.frame.removeChild(e);
        }
        if (!("majorCharHeight" in this.props)) {
          var i = document.createTextNode("0"),
            n = document.createElement("div");
          n.className = "vis-y-axis vis-major vis-measure", n.appendChild(i), this.dom.frame.appendChild(n), this.props.majorCharHeight = n.clientHeight, this.props.majorCharWidth = n.clientWidth, this.dom.frame.removeChild(n);
        }
        if (!("titleCharHeight" in this.props)) {
          var o = document.createTextNode("0"),
            r = document.createElement("div");
          r.className = "vis-y-axis vis-title vis-measure", r.appendChild(o), this.dom.frame.appendChild(r), this.props.titleCharHeight = r.clientHeight, this.props.titleCharWidth = r.clientWidth, this.dom.frame.removeChild(r);
        }
      }
    }]), i;
  }(oS);
  function HA(t, e) {}
  function GA(t, e) {
    return {
      style: (e = void 0 === e ? {} : e).style || t.options.drawPoints.style,
      styles: e.styles || t.options.drawPoints.styles,
      size: e.size || t.options.drawPoints.size,
      className: e.className || t.className
    };
  }
  function WA(t, e) {}
  function YA(t, e) {}
  function VA(t, e, i, n) {
    this.id = e;
    this.options = WC.selectiveBridgeObject(["sampling", "style", "sort", "yAxisOrientation", "barChart", "drawPoints", "shaded", "interpolation", "zIndex", "excludeFromStacking", "excludeFromLegend"], i), this.usingDefaultStyle = void 0 === t.className, this.groupsUsingDefaultStyles = n, this.zeroPosition = 0, this.update(t), 1 == this.usingDefaultStyle && (this.groupsUsingDefaultStyles[0] += 1), this.itemsData = [], this.visible = void 0 === t.visible || t.visible;
  }
  function UA(t, e, i, n) {
    this.body = t, this.defaultOptions = {
      enabled: !1,
      icons: !0,
      iconSize: 20,
      iconSpacing: 6,
      left: {
        visible: !0,
        position: "top-left"
      },
      right: {
        visible: !0,
        position: "top-right"
      }
    }, this.side = i, this.options = WC.extend({}, this.defaultOptions), this.linegraphOptions = n, this.svgElements = {}, this.dom = {}, this.groups = {}, this.amountOfGroups = 0, this._create(), this.framework = {
      svg: this.svg,
      svgElements: this.svgElements,
      options: this.options,
      groups: this.groups
    }, this.setOptions(e);
  }
  HA.draw = function (t, e, i, n) {
    n = n || 0;
    for (var o = function (t, e) {
        var i = void 0;
        t.options && t.options.drawPoints && t.options.drawPoints.onRender && "function" == typeof t.options.drawPoints.onRender && (i = t.options.drawPoints.onRender);
        e.group.options && e.group.options.drawPoints && e.group.options.drawPoints.onRender && "function" == typeof e.group.options.drawPoints.onRender && (i = e.group.options.drawPoints.onRender);
        return i;
      }(i, e), r = 0; r < t.length; r++) if (o) {
      var s = o(t[r], e);
      !0 !== s && "object" !== kc(s) || NA(t[r].screen_x + n, t[r].screen_y, GA(e, s), i.svgElements, i.svg, t[r].label);
    } else NA(t[r].screen_x + n, t[r].screen_y, GA(e), i.svgElements, i.svg, t[r].label);
  }, HA.drawIcon = function (t, e, i, n, o, r) {
    var s = .5 * o,
      a = PA("rect", r.svgElements, r.svg);
    a.setAttributeNS(null, "x", e), a.setAttributeNS(null, "y", i - s), a.setAttributeNS(null, "width", n), a.setAttributeNS(null, "height", 2 * s), a.setAttributeNS(null, "class", "vis-outline"), NA(e + .5 * n, i, GA(t), r.svgElements, r.svg);
  }, WA.drawIcon = function (t, e, i, n, o, r) {
    var s = .5 * o,
      a = PA("rect", r.svgElements, r.svg);
    a.setAttributeNS(null, "x", e), a.setAttributeNS(null, "y", i - s), a.setAttributeNS(null, "width", n), a.setAttributeNS(null, "height", 2 * s), a.setAttributeNS(null, "class", "vis-outline");
    var l = Math.round(.3 * n),
      h = t.options.barChart.width / l,
      u = Math.round(.4 * o),
      c = Math.round(.75 * o),
      d = Math.round((n - 2 * l) / 3);
    if (FA(e + .5 * l + d, i + s - u - 1, l, u, t.className + " vis-bar", r.svgElements, r.svg, t.style), FA(e + 1.5 * l + d + 2, i + s - c - 1, l, c, t.className + " vis-bar", r.svgElements, r.svg, t.style), 1 == t.options.drawPoints.enabled) {
      var p = {
        style: t.options.drawPoints.style,
        styles: t.options.drawPoints.styles,
        size: t.options.drawPoints.size / h,
        className: t.className
      };
      NA(e + .5 * l + d, i + s - u - 1, p, r.svgElements, r.svg), NA(e + 1.5 * l + d + 2, i + s - c - 1, p, r.svgElements, r.svg);
    }
  }, WA.draw = function (t, e, i) {
    var n,
      o,
      r,
      s,
      a,
      l,
      h = [],
      u = {},
      c = 0;
    for (a = 0; a < t.length; a++) if ("bar" === (s = i.groups[t[a]]).options.style && !0 === s.visible && (void 0 === i.options.groups.visibility[t[a]] || !0 === i.options.groups.visibility[t[a]])) for (l = 0; l < e[t[a]].length; l++) h.push({
      screen_x: e[t[a]][l].screen_x,
      screen_end: e[t[a]][l].screen_end,
      screen_y: e[t[a]][l].screen_y,
      x: e[t[a]][l].x,
      end: e[t[a]][l].end,
      y: e[t[a]][l].y,
      groupId: t[a],
      label: e[t[a]][l].label
    }), c += 1;
    if (0 !== c) for (oD(h).call(h, function (t, e) {
      return t.screen_x === e.screen_x ? t.groupId < e.groupId ? -1 : 1 : t.screen_x - e.screen_x;
    }), WA._getDataIntersections(u, h), a = 0; a < h.length; a++) {
      var d = null != (s = i.groups[h[a].groupId]).options.barChart.minWidth ? s.options.barChart.minWidth : .1 * s.options.barChart.width,
        p = 0;
      if (void 0 === u[o = h[a].screen_x]) a + 1 < h.length && (n = Math.abs(h[a + 1].screen_x - o)), r = WA._getSafeDrawData(n, s, d);else {
        var m = a + (u[o].amount - u[o].resolved);
        m < h.length && (n = Math.abs(h[m].screen_x - o)), r = WA._getSafeDrawData(n, s, d), u[o].resolved += 1, !0 === s.options.stack && !0 !== s.options.excludeFromStacking ? h[a].screen_y < s.zeroPosition ? (p = u[o].accumulatedNegative, u[o].accumulatedNegative += s.zeroPosition - h[a].screen_y) : (p = u[o].accumulatedPositive, u[o].accumulatedPositive += s.zeroPosition - h[a].screen_y) : !0 === s.options.barChart.sideBySide && (r.width = r.width / u[o].amount, r.offset += u[o].resolved * r.width - .5 * r.width * (u[o].amount + 1));
      }
      var f = r.width,
        v = h[a].screen_x;
      if (null != h[a].screen_end ? v += .5 * (f = h[a].screen_end - h[a].screen_x) : v += r.offset, FA(v, h[a].screen_y - p, f, s.zeroPosition - h[a].screen_y, s.className + " vis-bar", i.svgElements, i.svg, s.style), !0 === s.options.drawPoints.enabled) {
        var g = {
          screen_x: h[a].screen_x,
          screen_y: h[a].screen_y - p,
          x: h[a].x,
          y: h[a].y,
          groupId: h[a].groupId,
          label: h[a].label
        };
        HA.draw([g], s, i, r.offset);
      }
    }
  }, WA._getDataIntersections = function (t, e) {
    for (var i, n = 0; n < e.length; n++) n + 1 < e.length && (i = Math.abs(e[n + 1].screen_x - e[n].screen_x)), n > 0 && (i = Math.min(i, Math.abs(e[n - 1].screen_x - e[n].screen_x))), 0 === i && (void 0 === t[e[n].screen_x] && (t[e[n].screen_x] = {
      amount: 0,
      resolved: 0,
      accumulatedPositive: 0,
      accumulatedNegative: 0
    }), t[e[n].screen_x].amount += 1);
  }, WA._getSafeDrawData = function (t, e, i) {
    var n, o;
    return t < e.options.barChart.width && t > 0 ? (n = t < i ? i : t, o = 0, "left" === e.options.barChart.align ? o -= .5 * t : "right" === e.options.barChart.align && (o += .5 * t)) : (n = e.options.barChart.width, o = 0, "left" === e.options.barChart.align ? o -= .5 * e.options.barChart.width : "right" === e.options.barChart.align && (o += .5 * e.options.barChart.width)), {
      width: n,
      offset: o
    };
  }, WA.getStackedYRange = function (t, e, i, n, o) {
    if (t.length > 0) {
      oD(t).call(t, function (t, e) {
        return t.screen_x === e.screen_x ? t.groupId < e.groupId ? -1 : 1 : t.screen_x - e.screen_x;
      });
      var r = {};
      WA._getDataIntersections(r, t), e[n] = WA._getStackedYRange(r, t), e[n].yAxisOrientation = o, i.push(n);
    }
  }, WA._getStackedYRange = function (t, e) {
    for (var i, n = e[0].screen_y, o = e[0].screen_y, r = 0; r < e.length; r++) void 0 === t[i = e[r].screen_x] ? (n = n > e[r].screen_y ? e[r].screen_y : n, o = o < e[r].screen_y ? e[r].screen_y : o) : e[r].screen_y < 0 ? t[i].accumulatedNegative += e[r].screen_y : t[i].accumulatedPositive += e[r].screen_y;
    for (var s in t) t.hasOwnProperty(s) && (n = (n = n > t[s].accumulatedNegative ? t[s].accumulatedNegative : n) > t[s].accumulatedPositive ? t[s].accumulatedPositive : n, o = (o = o < t[s].accumulatedNegative ? t[s].accumulatedNegative : o) < t[s].accumulatedPositive ? t[s].accumulatedPositive : o);
    return {
      min: n,
      max: o
    };
  }, YA.calcPath = function (t, e) {
    if (null != t && t.length > 0) {
      return 1 == e.options.interpolation.enabled ? YA._catmullRom(t, e) : YA._linear(t);
    }
  }, YA.drawIcon = function (t, e, i, n, o, r) {
    var s,
      a,
      l = .5 * o,
      h = PA("rect", r.svgElements, r.svg);
    (h.setAttributeNS(null, "x", e), h.setAttributeNS(null, "y", i - l), h.setAttributeNS(null, "width", n), h.setAttributeNS(null, "height", 2 * l), h.setAttributeNS(null, "class", "vis-outline"), (s = PA("path", r.svgElements, r.svg)).setAttributeNS(null, "class", t.className), void 0 !== t.style && s.setAttributeNS(null, "style", t.style), s.setAttributeNS(null, "d", "M" + e + "," + i + " L" + (e + n) + "," + i), 1 == t.options.shaded.enabled && (a = PA("path", r.svgElements, r.svg), "top" == t.options.shaded.orientation ? a.setAttributeNS(null, "d", "M" + e + ", " + (i - l) + "L" + e + "," + i + " L" + (e + n) + "," + i + " L" + (e + n) + "," + (i - l)) : a.setAttributeNS(null, "d", "M" + e + "," + i + " L" + e + "," + (i + l) + " L" + (e + n) + "," + (i + l) + "L" + (e + n) + "," + i), a.setAttributeNS(null, "class", t.className + " vis-icon-fill"), void 0 !== t.options.shaded.style && "" !== t.options.shaded.style && a.setAttributeNS(null, "style", t.options.shaded.style)), 1 == t.options.drawPoints.enabled) && NA(e + .5 * n, i, {
      style: t.options.drawPoints.style,
      styles: t.options.drawPoints.styles,
      size: t.options.drawPoints.size,
      className: t.className
    }, r.svgElements, r.svg);
  }, YA.drawShading = function (t, e, i, n) {
    if (1 == e.options.shaded.enabled) {
      var o,
        r = Number(n.svg.style.height.replace("px", "")),
        s = PA("path", n.svgElements, n.svg),
        a = "L";
      1 == e.options.interpolation.enabled && (a = "C");
      var l = 0;
      l = "top" == e.options.shaded.orientation ? 0 : "bottom" == e.options.shaded.orientation ? r : Math.min(Math.max(0, e.zeroPosition), r), o = "group" == e.options.shaded.orientation && null != i && null != i ? "M" + t[0][0] + "," + t[0][1] + " " + this.serializePath(t, a, !1) + " L" + i[i.length - 1][0] + "," + i[i.length - 1][1] + " " + this.serializePath(i, a, !0) + i[0][0] + "," + i[0][1] + " Z" : "M" + t[0][0] + "," + t[0][1] + " " + this.serializePath(t, a, !1) + " V" + l + " H" + t[0][0] + " Z", s.setAttributeNS(null, "class", e.className + " vis-fill"), void 0 !== e.options.shaded.style && s.setAttributeNS(null, "style", e.options.shaded.style), s.setAttributeNS(null, "d", o);
    }
  }, YA.draw = function (t, e, i) {
    if (null != t && null != t) {
      var n = PA("path", i.svgElements, i.svg);
      n.setAttributeNS(null, "class", e.className), void 0 !== e.style && n.setAttributeNS(null, "style", e.style);
      var o = "L";
      1 == e.options.interpolation.enabled && (o = "C"), n.setAttributeNS(null, "d", "M" + t[0][0] + "," + t[0][1] + " " + this.serializePath(t, o, !1));
    }
  }, YA.serializePath = function (t, e, i) {
    if (t.length < 2) return "";
    var n,
      o = e;
    if (i) for (n = t.length - 2; n > 0; n--) o += t[n][0] + "," + t[n][1] + " ";else for (n = 1; n < t.length; n++) o += t[n][0] + "," + t[n][1] + " ";
    return o;
  }, YA._catmullRomUniform = function (t) {
    var e,
      i,
      n,
      o,
      r,
      s,
      a = [];
    a.push([Math.round(t[0].screen_x), Math.round(t[0].screen_y)]);
    for (var l = 1 / 6, h = t.length, u = 0; u < h - 1; u++) e = 0 == u ? t[0] : t[u - 1], i = t[u], n = t[u + 1], o = u + 2 < h ? t[u + 2] : n, r = {
      screen_x: (-e.screen_x + 6 * i.screen_x + n.screen_x) * l,
      screen_y: (-e.screen_y + 6 * i.screen_y + n.screen_y) * l
    }, s = {
      screen_x: (i.screen_x + 6 * n.screen_x - o.screen_x) * l,
      screen_y: (i.screen_y + 6 * n.screen_y - o.screen_y) * l
    }, a.push([r.screen_x, r.screen_y]), a.push([s.screen_x, s.screen_y]), a.push([n.screen_x, n.screen_y]);
    return a;
  }, YA._catmullRom = function (t, e) {
    var i = e.options.interpolation.alpha;
    if (0 == i || void 0 === i) return this._catmullRomUniform(t);
    var n,
      o,
      r,
      s,
      a,
      l,
      h,
      u,
      c,
      d,
      p,
      m,
      f,
      v,
      g,
      y,
      b,
      w,
      k,
      x = [];
    x.push([Math.round(t[0].screen_x), Math.round(t[0].screen_y)]);
    for (var _ = t.length, C = 0; C < _ - 1; C++) n = 0 == C ? t[0] : t[C - 1], o = t[C], r = t[C + 1], s = C + 2 < _ ? t[C + 2] : r, h = Math.sqrt(Math.pow(n.screen_x - o.screen_x, 2) + Math.pow(n.screen_y - o.screen_y, 2)), u = Math.sqrt(Math.pow(o.screen_x - r.screen_x, 2) + Math.pow(o.screen_y - r.screen_y, 2)), c = Math.sqrt(Math.pow(r.screen_x - s.screen_x, 2) + Math.pow(r.screen_y - s.screen_y, 2)), v = Math.pow(c, i), y = Math.pow(c, 2 * i), g = Math.pow(u, i), b = Math.pow(u, 2 * i), k = Math.pow(h, i), d = 2 * (w = Math.pow(h, 2 * i)) + 3 * k * g + b, p = 2 * y + 3 * v * g + b, (m = 3 * k * (k + g)) > 0 && (m = 1 / m), (f = 3 * v * (v + g)) > 0 && (f = 1 / f), a = {
      screen_x: (-b * n.screen_x + d * o.screen_x + w * r.screen_x) * m,
      screen_y: (-b * n.screen_y + d * o.screen_y + w * r.screen_y) * m
    }, l = {
      screen_x: (y * o.screen_x + p * r.screen_x - b * s.screen_x) * f,
      screen_y: (y * o.screen_y + p * r.screen_y - b * s.screen_y) * f
    }, 0 == a.screen_x && 0 == a.screen_y && (a = o), 0 == l.screen_x && 0 == l.screen_y && (l = r), x.push([a.screen_x, a.screen_y]), x.push([l.screen_x, l.screen_y]), x.push([r.screen_x, r.screen_y]);
    return x;
  }, YA._linear = function (t) {
    for (var e = [], i = 0; i < t.length; i++) e.push([t[i].screen_x, t[i].screen_y]);
    return e;
  }, VA.prototype.setItems = function (t) {
    null != t ? (this.itemsData = t, 1 == oD(this.options) && WC.insertSort(this.itemsData, function (t, e) {
      return t.x > e.x ? 1 : -1;
    })) : this.itemsData = [];
  }, VA.prototype.getItems = function () {
    return this.itemsData;
  }, VA.prototype.setZeroPosition = function (t) {
    this.zeroPosition = t;
  }, VA.prototype.setOptions = function (t) {
    if (void 0 !== t) {
      WC.selectiveDeepExtend(["sampling", "style", "sort", "yAxisOrientation", "barChart", "zIndex", "excludeFromStacking", "excludeFromLegend"], this.options, t), "function" == typeof t.drawPoints && (t.drawPoints = {
        onRender: t.drawPoints
      }), WC.mergeOptions(this.options, t, "interpolation"), WC.mergeOptions(this.options, t, "drawPoints"), WC.mergeOptions(this.options, t, "shaded"), t.interpolation && "object" == kc(t.interpolation) && t.interpolation.parametrization && ("uniform" == t.interpolation.parametrization ? this.options.interpolation.alpha = 0 : "chordal" == t.interpolation.parametrization ? this.options.interpolation.alpha = 1 : (this.options.interpolation.parametrization = "centripetal", this.options.interpolation.alpha = .5));
    }
  }, VA.prototype.update = function (t) {
    this.group = t, this.content = t.content || "graph", this.className = t.className || this.className || "vis-graph-group" + this.groupsUsingDefaultStyles[0] % 10, this.visible = void 0 === t.visible || t.visible, this.style = t.style, this.setOptions(t.options);
  }, VA.prototype.getLegend = function (t, e, i, n, o) {
    null != i && null != i || (i = {
      svg: document.createElementNS("http://www.w3.org/2000/svg", "svg"),
      svgElements: {},
      options: this.options,
      groups: [this]
    });
    switch (null != n && null != n || (n = 0), null != o && null != o || (o = .5 * e), this.options.style) {
      case "line":
        YA.drawIcon(this, n, o, t, e, i);
        break;
      case "points":
      case "point":
        HA.drawIcon(this, n, o, t, e, i);
        break;
      case "bar":
        WA.drawIcon(this, n, o, t, e, i);
    }
    return {
      icon: i.svg,
      label: this.content,
      orientation: this.options.yAxisOrientation
    };
  }, VA.prototype.getYRange = function (t) {
    for (var e = t[0].y, i = t[0].y, n = 0; n < t.length; n++) e = e > t[n].y ? t[n].y : e, i = i < t[n].y ? t[n].y : i;
    return {
      min: e,
      max: i,
      yAxisOrientation: this.options.yAxisOrientation
    };
  }, UA.prototype = new oS(), UA.prototype.clear = function () {
    this.groups = {}, this.amountOfGroups = 0;
  }, UA.prototype.addGroup = function (t, e) {
    1 != e.options.excludeFromLegend && (this.groups.hasOwnProperty(t) || (this.groups[t] = e), this.amountOfGroups += 1);
  }, UA.prototype.updateGroup = function (t, e) {
    this.groups[t] = e;
  }, UA.prototype.removeGroup = function (t) {
    this.groups.hasOwnProperty(t) && (delete this.groups[t], this.amountOfGroups -= 1);
  }, UA.prototype._create = function () {
    this.dom.frame = document.createElement("div"), this.dom.frame.className = "vis-legend", this.dom.frame.style.position = "absolute", this.dom.frame.style.top = "10px", this.dom.frame.style.display = "block", this.dom.textArea = document.createElement("div"), this.dom.textArea.className = "vis-legend-text", this.dom.textArea.style.position = "relative", this.dom.textArea.style.top = "0px", this.svg = document.createElementNS("http://www.w3.org/2000/svg", "svg"), this.svg.style.position = "absolute", this.svg.style.top = "0px", this.svg.style.width = this.options.iconSize + 5 + "px", this.svg.style.height = "100%", this.dom.frame.appendChild(this.svg), this.dom.frame.appendChild(this.dom.textArea);
  }, UA.prototype.hide = function () {
    this.dom.frame.parentNode && this.dom.frame.parentNode.removeChild(this.dom.frame);
  }, UA.prototype.show = function () {
    this.dom.frame.parentNode || this.body.dom.center.appendChild(this.dom.frame);
  }, UA.prototype.setOptions = function (t) {
    WC.selectiveDeepExtend(["enabled", "orientation", "icons", "left", "right"], this.options, t);
  }, UA.prototype.redraw = function () {
    var t = 0,
      e = Wm(this.groups);
    oD(e).call(e, function (t, e) {
      return t < e ? -1 : 1;
    });
    for (var i = 0; i < e.length; i++) {
      var n = e[i];
      1 != this.groups[n].visible || void 0 !== this.linegraphOptions.visibility[n] && 1 != this.linegraphOptions.visibility[n] || t++;
    }
    if (0 == this.options[this.side].visible || 0 == this.amountOfGroups || 0 == this.options.enabled || 0 == t) this.hide();else {
      if (this.show(), "top-left" == this.options[this.side].position || "bottom-left" == this.options[this.side].position ? (this.dom.frame.style.left = "4px", this.dom.frame.style.textAlign = "left", this.dom.textArea.style.textAlign = "left", this.dom.textArea.style.left = this.options.iconSize + 15 + "px", this.dom.textArea.style.right = "", this.svg.style.left = "0px", this.svg.style.right = "") : (this.dom.frame.style.right = "4px", this.dom.frame.style.textAlign = "right", this.dom.textArea.style.textAlign = "right", this.dom.textArea.style.right = this.options.iconSize + 15 + "px", this.dom.textArea.style.left = "", this.svg.style.right = "0px", this.svg.style.left = ""), "top-left" == this.options[this.side].position || "top-right" == this.options[this.side].position) this.dom.frame.style.top = 4 - Number(this.body.dom.center.style.top.replace("px", "")) + "px", this.dom.frame.style.bottom = "";else {
        var o = this.body.domProps.center.height - this.body.domProps.centerContainer.height;
        this.dom.frame.style.bottom = 4 + o + Number(this.body.dom.center.style.top.replace("px", "")) + "px", this.dom.frame.style.top = "";
      }
      0 == this.options.icons ? (this.dom.frame.style.width = this.dom.textArea.offsetWidth + 10 + "px", this.dom.textArea.style.right = "", this.dom.textArea.style.left = "", this.svg.style.width = "0px") : (this.dom.frame.style.width = this.options.iconSize + 15 + this.dom.textArea.offsetWidth + 10 + "px", this.drawLegendIcons());
      var r = "";
      for (i = 0; i < e.length; i++) n = e[i], 1 != this.groups[n].visible || void 0 !== this.linegraphOptions.visibility[n] && 1 != this.linegraphOptions.visibility[n] || (r += this.groups[n].content + "<br />");
      this.dom.textArea.innerHTML = WC.xss(r), this.dom.textArea.style.lineHeight = .75 * this.options.iconSize + this.options.iconSpacing + "px";
    }
  }, UA.prototype.drawLegendIcons = function () {
    if (this.dom.frame.parentNode) {
      var t = Wm(this.groups);
      oD(t).call(t, function (t, e) {
        return t < e ? -1 : 1;
      }), AA(h = this.svgElements), IA(h), AA(h);
      var e = window.getComputedStyle(this.dom.frame).paddingTop,
        i = Number(e.replace("px", "")),
        n = i,
        o = this.options.iconSize,
        r = .75 * this.options.iconSize,
        s = i + .5 * r + 3;
      this.svg.style.width = o + 5 + i + "px";
      for (var a = 0; a < t.length; a++) {
        var l = t[a];
        1 != this.groups[l].visible || void 0 !== this.linegraphOptions.visibility[l] && 1 != this.linegraphOptions.visibility[l] || (this.groups[l].getLegend(o, r, this.framework, n, s), s += r + this.options.iconSpacing);
      }
    }
    var h;
  };
  var XA = "__ungrouped__";
  function qA(t, e) {
    this.id = PC(), this.body = t, this.defaultOptions = {
      yAxisOrientation: "left",
      defaultGroup: "default",
      sort: !0,
      sampling: !0,
      stack: !1,
      graphHeight: "400px",
      shaded: {
        enabled: !1,
        orientation: "bottom"
      },
      style: "line",
      barChart: {
        width: 50,
        sideBySide: !1,
        align: "center"
      },
      interpolation: {
        enabled: !0,
        parametrization: "centripetal",
        alpha: .5
      },
      drawPoints: {
        enabled: !0,
        size: 6,
        style: "square"
      },
      dataAxis: {},
      legend: {},
      groups: {
        visibility: {}
      }
    }, this.options = WC.extend({}, this.defaultOptions), this.dom = {}, this.props = {}, this.hammer = null, this.groups = {}, this.abortedGraphUpdate = !1, this.updateSVGheight = !1, this.updateSVGheightOnResize = !1, this.forceGraphUpdate = !0;
    var i = this;
    this.itemsData = null, this.groupsData = null, this.itemListeners = {
      add: function (t, e, n) {
        i._onAdd(e.items);
      },
      update: function (t, e, n) {
        i._onUpdate(e.items);
      },
      remove: function (t, e, n) {
        i._onRemove(e.items);
      }
    }, this.groupListeners = {
      add: function (t, e, n) {
        i._onAddGroups(e.items);
      },
      update: function (t, e, n) {
        i._onUpdateGroups(e.items);
      },
      remove: function (t, e, n) {
        i._onRemoveGroups(e.items);
      }
    }, this.items = {}, this.selection = [], this.lastStart = this.body.range.start, this.touchParams = {}, this.svgElements = {}, this.setOptions(e), this.groupsUsingDefaultStyles = [0], this.body.emitter.on("rangechanged", function () {
      i.svg.style.left = WC.option.asSize(-i.props.width), i.forceGraphUpdate = !0, i.redraw.call(i);
    }), this._create(), this.framework = {
      svg: this.svg,
      svgElements: this.svgElements,
      options: this.options,
      groups: this.groups
    };
  }
  qA.prototype = new oS(), qA.prototype._create = function () {
    var t = document.createElement("div");
    t.className = "vis-line-graph", this.dom.frame = t, this.svg = document.createElementNS("http://www.w3.org/2000/svg", "svg"), this.svg.style.position = "relative", this.svg.style.height = ("" + this.options.graphHeight).replace("px", "") + "px", this.svg.style.display = "block", t.appendChild(this.svg), this.options.dataAxis.orientation = "left", this.yAxisLeft = new zA(this.body, this.options.dataAxis, this.svg, this.options.groups), this.options.dataAxis.orientation = "right", this.yAxisRight = new zA(this.body, this.options.dataAxis, this.svg, this.options.groups), delete this.options.dataAxis.orientation, this.legendLeft = new UA(this.body, this.options.legend, "left", this.options.groups), this.legendRight = new UA(this.body, this.options.legend, "right", this.options.groups), this.show();
  }, qA.prototype.setOptions = function (t) {
    if (t) {
      void 0 === t.graphHeight && void 0 !== t.height ? (this.updateSVGheight = !0, this.updateSVGheightOnResize = !0) : void 0 !== this.body.domProps.centerContainer.height && void 0 !== t.graphHeight && mb((t.graphHeight + "").replace("px", "")) < this.body.domProps.centerContainer.height && (this.updateSVGheight = !0), WC.selectiveDeepExtend(["sampling", "defaultGroup", "stack", "height", "graphHeight", "yAxisOrientation", "style", "barChart", "dataAxis", "sort", "groups"], this.options, t), WC.mergeOptions(this.options, t, "interpolation"), WC.mergeOptions(this.options, t, "drawPoints"), WC.mergeOptions(this.options, t, "shaded"), WC.mergeOptions(this.options, t, "legend"), t.interpolation && "object" == kc(t.interpolation) && t.interpolation.parametrization && ("uniform" == t.interpolation.parametrization ? this.options.interpolation.alpha = 0 : "chordal" == t.interpolation.parametrization ? this.options.interpolation.alpha = 1 : (this.options.interpolation.parametrization = "centripetal", this.options.interpolation.alpha = .5)), this.yAxisLeft && void 0 !== t.dataAxis && (this.yAxisLeft.setOptions(this.options.dataAxis), this.yAxisRight.setOptions(this.options.dataAxis)), this.legendLeft && void 0 !== t.legend && (this.legendLeft.setOptions(this.options.legend), this.legendRight.setOptions(this.options.legend)), this.groups.hasOwnProperty(XA) && this.groups[XA].setOptions(t);
    }
    this.dom.frame && (this.forceGraphUpdate = !0, this.body.emitter.emit("_change", {
      queue: !0
    }));
  }, qA.prototype.hide = function () {
    this.dom.frame.parentNode && this.dom.frame.parentNode.removeChild(this.dom.frame);
  }, qA.prototype.show = function () {
    this.dom.frame.parentNode || this.body.dom.center.appendChild(this.dom.frame);
  }, qA.prototype.setItems = function (t) {
    var e,
      i = this,
      n = this.itemsData;
    if (t) {
      if (!FC(t)) throw new TypeError("Data must implement the interface of DataSet or DataView");
      this.itemsData = BC(t);
    } else this.itemsData = null;
    if (n && (hp(WC).call(WC, this.itemListeners, function (t, e) {
      n.off(e, t);
    }), n.dispose(), e = n.getIds(), this._onRemove(e)), this.itemsData) {
      var o = this.id;
      hp(WC).call(WC, this.itemListeners, function (t, e) {
        i.itemsData.on(e, t, o);
      }), e = this.itemsData.getIds(), this._onAdd(e);
    }
  }, qA.prototype.setGroups = function (t) {
    var e,
      i = this;
    if (this.groupsData) {
      hp(WC).call(WC, this.groupListeners, function (t, e) {
        i.groupsData.off(e, t);
      }), e = this.groupsData.getIds(), this.groupsData = null;
      for (var n = 0; n < e.length; n++) this._removeGroup(e[n]);
    }
    if (t) {
      if (!FC(t)) throw new TypeError("Data must implement the interface of DataSet or DataView");
      this.groupsData = t;
    } else this.groupsData = null;
    if (this.groupsData) {
      var o = this.id;
      hp(WC).call(WC, this.groupListeners, function (t, e) {
        i.groupsData.on(e, t, o);
      }), e = this.groupsData.getIds(), this._onAddGroups(e);
    }
  }, qA.prototype._onUpdate = function (t) {
    this._updateAllGroupData(t);
  }, qA.prototype._onAdd = function (t) {
    this._onUpdate(t);
  }, qA.prototype._onRemove = function (t) {
    this._onUpdate(t);
  }, qA.prototype._onUpdateGroups = function (t) {
    this._updateAllGroupData(null, t);
  }, qA.prototype._onAddGroups = function (t) {
    this._onUpdateGroups(t);
  }, qA.prototype._onRemoveGroups = function (t) {
    for (var e = 0; e < t.length; e++) this._removeGroup(t[e]);
    this.forceGraphUpdate = !0, this.body.emitter.emit("_change", {
      queue: !0
    });
  }, qA.prototype._removeGroup = function (t) {
    this.groups.hasOwnProperty(t) && ("right" == this.groups[t].options.yAxisOrientation ? (this.yAxisRight.removeGroup(t), this.legendRight.removeGroup(t), this.legendRight.redraw()) : (this.yAxisLeft.removeGroup(t), this.legendLeft.removeGroup(t), this.legendLeft.redraw()), delete this.groups[t]);
  }, qA.prototype._updateGroup = function (t, e) {
    this.groups.hasOwnProperty(e) ? (this.groups[e].update(t), "right" == this.groups[e].options.yAxisOrientation ? (this.yAxisRight.updateGroup(e, this.groups[e]), this.legendRight.updateGroup(e, this.groups[e]), this.yAxisLeft.removeGroup(e), this.legendLeft.removeGroup(e)) : (this.yAxisLeft.updateGroup(e, this.groups[e]), this.legendLeft.updateGroup(e, this.groups[e]), this.yAxisRight.removeGroup(e), this.legendRight.removeGroup(e))) : (this.groups[e] = new VA(t, e, this.options, this.groupsUsingDefaultStyles), "right" == this.groups[e].options.yAxisOrientation ? (this.yAxisRight.addGroup(e, this.groups[e]), this.legendRight.addGroup(e, this.groups[e])) : (this.yAxisLeft.addGroup(e, this.groups[e]), this.legendLeft.addGroup(e, this.groups[e]))), this.legendLeft.redraw(), this.legendRight.redraw();
  }, qA.prototype._updateAllGroupData = function (t, e) {
    if (null != this.itemsData) {
      var i = {},
        n = this.itemsData.get(),
        o = this.itemsData.idProp,
        r = {};
      t && bm(t).call(t, function (t) {
        r[t] = t;
      });
      for (var s = {}, a = 0; a < n.length; a++) {
        var l = n[a],
          h = l.group;
        null == h && (h = XA), s.hasOwnProperty(h) ? s[h]++ : s[h] = 1;
      }
      var u = {};
      if (!e && t) for (h in this.groups) if (this.groups.hasOwnProperty(h)) {
        var c = (f = this.groups[h]).getItems();
        i[h] = Cp(c).call(c, function (t) {
          return u[t[o]] = t[o], t[o] !== r[t[o]];
        });
        var d = s[h];
        s[h] -= i[h].length, i[h].length < d && (i[h][d - 1] = {});
      }
      for (a = 0; a < n.length; a++) if (null == (h = (l = n[a]).group) && (h = XA), e || !t || l[o] === r[l[o]] || !u.hasOwnProperty(l[o])) {
        i.hasOwnProperty(h) || (i[h] = new Array(s[h]));
        var p = WC.bridgeObject(l);
        p.x = WC.convert(l.x, "Date"), p.end = WC.convert(l.end, "Date"), p.orginalY = l.y, p.y = Number(l.y), p[o] = l[o];
        var m = i[h].length - s[h]--;
        i[h][m] = p;
      }
      for (h in this.groups) this.groups.hasOwnProperty(h) && (i.hasOwnProperty(h) || (i[h] = new Array(0)));
      for (h in i) if (i.hasOwnProperty(h)) if (0 == i[h].length) this.groups.hasOwnProperty(h) && this._removeGroup(h);else {
        var f = void 0;
        null != this.groupsData && (f = this.groupsData.get(h)), null == f && (f = {
          id: h,
          content: this.options.defaultGroup + h
        }), this._updateGroup(f, h), this.groups[h].setItems(i[h]);
      }
      this.forceGraphUpdate = !0, this.body.emitter.emit("_change", {
        queue: !0
      });
    }
  }, qA.prototype.redraw = function () {
    var t = !1;
    this.props.width = this.dom.frame.offsetWidth, this.props.height = this.body.domProps.centerContainer.height - this.body.domProps.border.top - this.body.domProps.border.bottom, t = this._isResized() || t;
    var e,
      i = this.body.range.end - this.body.range.start,
      n = i != this.lastVisibleInterval;
    (this.lastVisibleInterval = i, 1 == t) && (this.svg.style.width = WC.option.asSize(3 * this.props.width), this.svg.style.left = WC.option.asSize(-this.props.width), -1 == Ob(e = this.options.height + "").call(e, "%") && 1 != this.updateSVGheightOnResize || (this.updateSVGheight = !0));
    if (1 == this.updateSVGheight ? (this.options.graphHeight != this.props.height + "px" && (this.options.graphHeight = this.props.height + "px", this.svg.style.height = this.props.height + "px"), this.updateSVGheight = !1) : this.svg.style.height = ("" + this.options.graphHeight).replace("px", "") + "px", 1 == t || 1 == n || 1 == this.abortedGraphUpdate || 1 == this.forceGraphUpdate) t = this._updateGraph() || t, this.forceGraphUpdate = !1, this.lastStart = this.body.range.start, this.svg.style.left = -this.props.width + "px";else if (0 != this.lastStart) {
      var o = this.body.range.start - this.lastStart,
        r = this.body.range.end - this.body.range.start;
      if (0 != this.props.width) {
        var s = o * (this.props.width / r);
        this.svg.style.left = -this.props.width - s + "px";
      }
    }
    return this.legendLeft.redraw(), this.legendRight.redraw(), t;
  }, qA.prototype._getSortedGroupIds = function () {
    var t = [];
    for (var e in this.groups) if (this.groups.hasOwnProperty(e)) {
      var i = this.groups[e];
      1 != i.visible || void 0 !== this.options.groups.visibility[e] && 1 != this.options.groups.visibility[e] || t.push({
        id: e,
        zIndex: i.options.zIndex
      });
    }
    WC.insertSort(t, function (t, e) {
      var i = t.zIndex,
        n = e.zIndex;
      return void 0 === i && (i = 0), void 0 === n && (n = 0), i == n ? 0 : i < n ? -1 : 1;
    });
    for (var n = new Array(t.length), o = 0; o < t.length; o++) n[o] = t[o].id;
    return n;
  }, qA.prototype._updateGraph = function () {
    if (AA(this.svgElements), 0 != this.props.width && null != this.itemsData) {
      var t,
        e,
        i = {},
        n = this.body.util.toGlobalTime(-this.body.domProps.root.width),
        o = this.body.util.toGlobalTime(2 * this.body.domProps.root.width),
        r = this._getSortedGroupIds();
      if (r.length > 0) {
        var s = {};
        for (this._getRelevantData(r, s, n, o), this._applySampling(r, s), e = 0; e < r.length; e++) this._convertXcoordinates(s[r[e]]);
        if (this._getYRanges(r, s, i), 1 == this._updateYAxis(r, i)) return IA(this.svgElements), this.abortedGraphUpdate = !0, !0;
        this.abortedGraphUpdate = !1;
        var a = void 0;
        for (e = 0; e < r.length; e++) t = this.groups[r[e]], !0 === this.options.stack && "line" === this.options.style && (null != t.options.excludeFromStacking && t.options.excludeFromStacking || (null != a && (this._stack(s[t.id], s[a.id]), 1 == t.options.shaded.enabled && "group" !== t.options.shaded.orientation && ("top" == t.options.shaded.orientation && "group" !== a.options.shaded.orientation ? (a.options.shaded.orientation = "group", a.options.shaded.groupId = t.id) : (t.options.shaded.orientation = "group", t.options.shaded.groupId = a.id))), a = t)), this._convertYcoordinates(s[r[e]], t);
        var l = {};
        for (e = 0; e < r.length; e++) if ("line" === (t = this.groups[r[e]]).options.style && 1 == t.options.shaded.enabled) {
          var h = s[r[e]];
          if (null == h || 0 == h.length) continue;
          if (l.hasOwnProperty(r[e]) || (l[r[e]] = YA.calcPath(h, t)), "group" === t.options.shaded.orientation) {
            var u = t.options.shaded.groupId;
            if (-1 === Ob(r).call(r, u)) {
              console.log(t.id + ": Unknown shading group target given:" + u);
              continue;
            }
            l.hasOwnProperty(u) || (l[u] = YA.calcPath(s[u], this.groups[u])), YA.drawShading(l[r[e]], t, l[u], this.framework);
          } else YA.drawShading(l[r[e]], t, void 0, this.framework);
        }
        for (WA.draw(r, s, this.framework), e = 0; e < r.length; e++) if (t = this.groups[r[e]], s[r[e]].length > 0) switch (t.options.style) {
          case "line":
            l.hasOwnProperty(r[e]) || (l[r[e]] = YA.calcPath(s[r[e]], t)), YA.draw(l[r[e]], t, this.framework);
          case "point":
          case "points":
            "point" != t.options.style && "points" != t.options.style && 1 != t.options.drawPoints.enabled || HA.draw(s[r[e]], t, this.framework);
        }
      }
    }
    return IA(this.svgElements), !1;
  }, qA.prototype._stack = function (t, e) {
    var i, n, o, r, s;
    i = 0;
    for (var a = 0; a < t.length; a++) {
      r = void 0, s = void 0;
      for (var l = i; l < e.length; l++) {
        if (e[l].x === t[a].x) {
          r = e[l], s = e[l], i = l;
          break;
        }
        if (e[l].x > t[a].x) {
          s = e[l], r = 0 == l ? s : e[l - 1], i = l;
          break;
        }
      }
      void 0 === s && (r = e[e.length - 1], s = e[e.length - 1]), n = s.x - r.x, o = s.y - r.y, t[a].y = 0 == n ? t[a].orginalY + s.y : t[a].orginalY + o / n * (t[a].x - r.x) + r.y;
    }
  }, qA.prototype._getRelevantData = function (t, e, i, n) {
    var o, r, s, a;
    if (t.length > 0) for (r = 0; r < t.length; r++) {
      var l = (o = this.groups[t[r]]).getItems();
      if (1 == oD(o.options)) {
        var h = function (t, e) {
            return t.getTime() == e.getTime() ? 0 : t < e ? -1 : 1;
          },
          u = Math.max(0, WC.binarySearchValue(l, i, "x", "before", h)),
          c = Math.min(l.length, WC.binarySearchValue(l, n, "x", "after", h) + 1);
        c <= 0 && (c = l.length);
        var d = new Array(c - u);
        for (s = u; s < c; s++) a = o.itemsData[s], d[s - u] = a;
        e[t[r]] = d;
      } else e[t[r]] = o.itemsData;
    }
  }, qA.prototype._applySampling = function (t, e) {
    if (t.length > 0) for (var i = 0; i < t.length; i++) if (1 == this.groups[t[i]].options.sampling) {
      var n = e[t[i]];
      if (n.length > 0) {
        var o,
          r = n.length,
          s = r / (this.body.util.toGlobalScreen(n[n.length - 1].x) - this.body.util.toGlobalScreen(n[0].x));
        o = Math.min(Math.ceil(.2 * r), Math.max(1, Math.round(s)));
        for (var a = new Array(r), l = 0; l < r; l += o) {
          a[Math.round(l / o)] = n[l];
        }
        e[t[i]] = zg(a).call(a, 0, Math.round(r / o));
      }
    }
  }, qA.prototype._getYRanges = function (t, e, i) {
    var n,
      o,
      r,
      s,
      a = [],
      l = [];
    if (t.length > 0) {
      for (r = 0; r < t.length; r++) n = e[t[r]], s = this.groups[t[r]].options, n.length > 0 && (o = this.groups[t[r]], !0 === s.stack && "bar" === s.style ? "left" === s.yAxisOrientation ? a = jv(a).call(a, n) : l = jv(l).call(l, n) : i[t[r]] = o.getYRange(n, t[r]));
      WA.getStackedYRange(a, i, t, "__barStackLeft", "left"), WA.getStackedYRange(l, i, t, "__barStackRight", "right");
    }
  }, qA.prototype._updateYAxis = function (t, e) {
    var i,
      n,
      o = !1,
      r = !1,
      s = !1,
      a = 1e9,
      l = 1e9,
      h = -1e9,
      u = -1e9;
    if (t.length > 0) {
      for (var c = 0; c < t.length; c++) {
        var d = this.groups[t[c]];
        d && "right" != d.options.yAxisOrientation ? (r = !0, a = 1e9, h = -1e9) : d && d.options.yAxisOrientation && (s = !0, l = 1e9, u = -1e9);
      }
      for (c = 0; c < t.length; c++) e.hasOwnProperty(t[c]) && !0 !== e[t[c]].ignore && (i = e[t[c]].min, n = e[t[c]].max, "right" != e[t[c]].yAxisOrientation ? (r = !0, a = a > i ? i : a, h = h < n ? n : h) : (s = !0, l = l > i ? i : l, u = u < n ? n : u));
      1 == r && this.yAxisLeft.setRange(a, h), 1 == s && this.yAxisRight.setRange(l, u);
    }
    o = this._toggleAxisVisiblity(r, this.yAxisLeft) || o, o = this._toggleAxisVisiblity(s, this.yAxisRight) || o, 1 == s && 1 == r ? (this.yAxisLeft.drawIcons = !0, this.yAxisRight.drawIcons = !0) : (this.yAxisLeft.drawIcons = !1, this.yAxisRight.drawIcons = !1), this.yAxisRight.master = !r, this.yAxisRight.masterAxis = this.yAxisLeft, 0 == this.yAxisRight.master ? (this.yAxisLeft.lineOffset = 1 == s ? this.yAxisRight.width : 0, o = this.yAxisLeft.redraw() || o, o = this.yAxisRight.redraw() || o) : o = this.yAxisRight.redraw() || o;
    var p = ["__barStackLeft", "__barStackRight", "__lineStackLeft", "__lineStackRight"];
    for (c = 0; c < p.length; c++) -1 != Ob(t).call(t, p[c]) && zg(t).call(t, Ob(t).call(t, p[c]), 1);
    return o;
  }, qA.prototype._toggleAxisVisiblity = function (t, e) {
    var i = !1;
    return 0 == t ? e.dom.frame.parentNode && 0 == e.hidden && (e.hide(), i = !0) : e.dom.frame.parentNode || 1 != e.hidden || (e.show(), i = !0), i;
  }, qA.prototype._convertXcoordinates = function (t) {
    for (var e = this.body.util.toScreen, i = 0; i < t.length; i++) t[i].screen_x = e(t[i].x) + this.props.width, t[i].screen_y = t[i].y, null != t[i].end ? t[i].screen_end = e(t[i].end) + this.props.width : t[i].screen_end = void 0;
  }, qA.prototype._convertYcoordinates = function (t, e) {
    var i = this.yAxisLeft,
      n = Number(this.svg.style.height.replace("px", ""));
    "right" == e.options.yAxisOrientation && (i = this.yAxisRight);
    for (var o = 0; o < t.length; o++) t[o].screen_y = Math.round(i.convertValue(t[o].y));
    e.setZeroPosition(Math.min(n, i.convertValue(0)));
  };
  var KA = "string",
    $A = "boolean",
    ZA = "number",
    QA = "date",
    JA = "object",
    tI = "moment",
    eI = {
      configure: {
        enabled: {
          boolean: $A
        },
        filter: {
          boolean: $A,
          function: "function"
        },
        container: {
          dom: "dom"
        },
        __type__: {
          object: JA,
          boolean: $A,
          function: "function"
        }
      },
      alignCurrentTime: {
        string: KA,
        undefined: "undefined"
      },
      yAxisOrientation: {
        string: ["left", "right"]
      },
      defaultGroup: {
        string: KA
      },
      sort: {
        boolean: $A
      },
      sampling: {
        boolean: $A
      },
      stack: {
        boolean: $A
      },
      graphHeight: {
        string: KA,
        number: ZA
      },
      shaded: {
        enabled: {
          boolean: $A
        },
        orientation: {
          string: ["bottom", "top", "zero", "group"]
        },
        groupId: {
          object: JA
        },
        __type__: {
          boolean: $A,
          object: JA
        }
      },
      style: {
        string: ["line", "bar", "points"]
      },
      barChart: {
        width: {
          number: ZA
        },
        minWidth: {
          number: ZA
        },
        sideBySide: {
          boolean: $A
        },
        align: {
          string: ["left", "center", "right"]
        },
        __type__: {
          object: JA
        }
      },
      interpolation: {
        enabled: {
          boolean: $A
        },
        parametrization: {
          string: ["centripetal", "chordal", "uniform"]
        },
        alpha: {
          number: ZA
        },
        __type__: {
          object: JA,
          boolean: $A
        }
      },
      drawPoints: {
        enabled: {
          boolean: $A
        },
        onRender: {
          function: "function"
        },
        size: {
          number: ZA
        },
        style: {
          string: ["square", "circle"]
        },
        __type__: {
          object: JA,
          boolean: $A,
          function: "function"
        }
      },
      dataAxis: {
        showMinorLabels: {
          boolean: $A
        },
        showMajorLabels: {
          boolean: $A
        },
        showWeekScale: {
          boolean: $A
        },
        icons: {
          boolean: $A
        },
        width: {
          string: KA,
          number: ZA
        },
        visible: {
          boolean: $A
        },
        alignZeros: {
          boolean: $A
        },
        left: {
          range: {
            min: {
              number: ZA,
              undefined: "undefined"
            },
            max: {
              number: ZA,
              undefined: "undefined"
            },
            __type__: {
              object: JA
            }
          },
          format: {
            function: "function"
          },
          title: {
            text: {
              string: KA,
              number: ZA,
              undefined: "undefined"
            },
            style: {
              string: KA,
              undefined: "undefined"
            },
            __type__: {
              object: JA
            }
          },
          __type__: {
            object: JA
          }
        },
        right: {
          range: {
            min: {
              number: ZA,
              undefined: "undefined"
            },
            max: {
              number: ZA,
              undefined: "undefined"
            },
            __type__: {
              object: JA
            }
          },
          format: {
            function: "function"
          },
          title: {
            text: {
              string: KA,
              number: ZA,
              undefined: "undefined"
            },
            style: {
              string: KA,
              undefined: "undefined"
            },
            __type__: {
              object: JA
            }
          },
          __type__: {
            object: JA
          }
        },
        __type__: {
          object: JA
        }
      },
      legend: {
        enabled: {
          boolean: $A
        },
        icons: {
          boolean: $A
        },
        left: {
          visible: {
            boolean: $A
          },
          position: {
            string: ["top-right", "bottom-right", "top-left", "bottom-left"]
          },
          __type__: {
            object: JA
          }
        },
        right: {
          visible: {
            boolean: $A
          },
          position: {
            string: ["top-right", "bottom-right", "top-left", "bottom-left"]
          },
          __type__: {
            object: JA
          }
        },
        __type__: {
          object: JA,
          boolean: $A
        }
      },
      groups: {
        visibility: {
          any: "any"
        },
        __type__: {
          object: JA
        }
      },
      autoResize: {
        boolean: $A
      },
      throttleRedraw: {
        number: ZA
      },
      clickToUse: {
        boolean: $A
      },
      end: {
        number: ZA,
        date: QA,
        string: KA,
        moment: tI
      },
      format: {
        minorLabels: {
          millisecond: {
            string: KA,
            undefined: "undefined"
          },
          second: {
            string: KA,
            undefined: "undefined"
          },
          minute: {
            string: KA,
            undefined: "undefined"
          },
          hour: {
            string: KA,
            undefined: "undefined"
          },
          weekday: {
            string: KA,
            undefined: "undefined"
          },
          day: {
            string: KA,
            undefined: "undefined"
          },
          week: {
            string: KA,
            undefined: "undefined"
          },
          month: {
            string: KA,
            undefined: "undefined"
          },
          quarter: {
            string: KA,
            undefined: "undefined"
          },
          year: {
            string: KA,
            undefined: "undefined"
          },
          __type__: {
            object: JA
          }
        },
        majorLabels: {
          millisecond: {
            string: KA,
            undefined: "undefined"
          },
          second: {
            string: KA,
            undefined: "undefined"
          },
          minute: {
            string: KA,
            undefined: "undefined"
          },
          hour: {
            string: KA,
            undefined: "undefined"
          },
          weekday: {
            string: KA,
            undefined: "undefined"
          },
          day: {
            string: KA,
            undefined: "undefined"
          },
          week: {
            string: KA,
            undefined: "undefined"
          },
          month: {
            string: KA,
            undefined: "undefined"
          },
          quarter: {
            string: KA,
            undefined: "undefined"
          },
          year: {
            string: KA,
            undefined: "undefined"
          },
          __type__: {
            object: JA
          }
        },
        __type__: {
          object: JA
        }
      },
      moment: {
        function: "function"
      },
      height: {
        string: KA,
        number: ZA
      },
      hiddenDates: {
        start: {
          date: QA,
          number: ZA,
          string: KA,
          moment: tI
        },
        end: {
          date: QA,
          number: ZA,
          string: KA,
          moment: tI
        },
        repeat: {
          string: KA
        },
        __type__: {
          object: JA,
          array: "array"
        }
      },
      locale: {
        string: KA
      },
      locales: {
        __any__: {
          any: "any"
        },
        __type__: {
          object: JA
        }
      },
      max: {
        date: QA,
        number: ZA,
        string: KA,
        moment: tI
      },
      maxHeight: {
        number: ZA,
        string: KA
      },
      maxMinorChars: {
        number: ZA
      },
      min: {
        date: QA,
        number: ZA,
        string: KA,
        moment: tI
      },
      minHeight: {
        number: ZA,
        string: KA
      },
      moveable: {
        boolean: $A
      },
      multiselect: {
        boolean: $A
      },
      orientation: {
        string: KA
      },
      showCurrentTime: {
        boolean: $A
      },
      showMajorLabels: {
        boolean: $A
      },
      showMinorLabels: {
        boolean: $A
      },
      showWeekScale: {
        boolean: $A
      },
      snap: {
        function: "function",
        null: "null"
      },
      start: {
        date: QA,
        number: ZA,
        string: KA,
        moment: tI
      },
      timeAxis: {
        scale: {
          string: KA,
          undefined: "undefined"
        },
        step: {
          number: ZA,
          undefined: "undefined"
        },
        __type__: {
          object: JA
        }
      },
      width: {
        string: KA,
        number: ZA
      },
      zoomable: {
        boolean: $A
      },
      zoomKey: {
        string: ["ctrlKey", "altKey", "metaKey", ""]
      },
      zoomMax: {
        number: ZA
      },
      zoomMin: {
        number: ZA
      },
      zIndex: {
        number: ZA
      },
      __type__: {
        object: JA
      }
    },
    iI = {
      global: {
        alignCurrentTime: ["none", "year", "month", "quarter", "week", "isoWeek", "day", "date", "hour", "minute", "second"],
        sort: !0,
        sampling: !0,
        stack: !1,
        shaded: {
          enabled: !1,
          orientation: ["zero", "top", "bottom", "group"]
        },
        style: ["line", "bar", "points"],
        barChart: {
          width: [50, 5, 100, 5],
          minWidth: [50, 5, 100, 5],
          sideBySide: !1,
          align: ["left", "center", "right"]
        },
        interpolation: {
          enabled: !0,
          parametrization: ["centripetal", "chordal", "uniform"]
        },
        drawPoints: {
          enabled: !0,
          size: [6, 2, 30, 1],
          style: ["square", "circle"]
        },
        dataAxis: {
          showMinorLabels: !0,
          showMajorLabels: !0,
          showWeekScale: !1,
          icons: !1,
          width: [40, 0, 200, 1],
          visible: !0,
          alignZeros: !0,
          left: {
            title: {
              text: "",
              style: ""
            }
          },
          right: {
            title: {
              text: "",
              style: ""
            }
          }
        },
        legend: {
          enabled: !1,
          icons: !0,
          left: {
            visible: !0,
            position: ["top-right", "bottom-right", "top-left", "bottom-left"]
          },
          right: {
            visible: !0,
            position: ["top-right", "bottom-right", "top-left", "bottom-left"]
          }
        },
        autoResize: !0,
        clickToUse: !1,
        end: "",
        format: {
          minorLabels: {
            millisecond: "SSS",
            second: "s",
            minute: "HH:mm",
            hour: "HH:mm",
            weekday: "ddd D",
            day: "D",
            week: "w",
            month: "MMM",
            quarter: "[Q]Q",
            year: "YYYY"
          },
          majorLabels: {
            millisecond: "HH:mm:ss",
            second: "D MMMM HH:mm",
            minute: "ddd D MMMM",
            hour: "ddd D MMMM",
            weekday: "MMMM YYYY",
            day: "MMMM YYYY",
            week: "MMMM YYYY",
            month: "YYYY",
            quarter: "YYYY",
            year: ""
          }
        },
        height: "",
        locale: "",
        max: "",
        maxHeight: "",
        maxMinorChars: [7, 0, 20, 1],
        min: "",
        minHeight: "",
        moveable: !0,
        orientation: ["both", "bottom", "top"],
        showCurrentTime: !1,
        showMajorLabels: !0,
        showMinorLabels: !0,
        showWeekScale: !1,
        start: "",
        width: "100%",
        zoomable: !0,
        zoomKey: ["ctrlKey", "altKey", "metaKey", ""],
        zoomMax: [31536e10, 10, 31536e10, 1],
        zoomMin: [10, 10, 31536e10, 1],
        zIndex: 0
      }
    };
  function nI(t, e, i, n) {
    var o, r, s, a, l, h, u;
    if (!Cd(i) && !FC(i) && i instanceof Object) {
      var c = n;
      n = i, i = c;
    }
    n && n.throttleRedraw && console.warn('Graph2d option "throttleRedraw" is DEPRICATED and no longer supported. It will be removed in the next MAJOR release.');
    var d = this;
    this.defaultOptions = {
      start: null,
      end: null,
      autoResize: !0,
      orientation: {
        axis: "bottom",
        item: "bottom"
      },
      moment: up,
      width: null,
      height: null,
      maxHeight: null,
      minHeight: null
    }, this.options = WC.deepExtend({}, this.defaultOptions), this._create(t), this.components = [], this.body = {
      dom: this.dom,
      domProps: this.props,
      emitter: {
        on: Dd(o = this.on).call(o, this),
        off: Dd(r = this.off).call(r, this),
        emit: Dd(s = this.emit).call(s, this)
      },
      hiddenDates: [],
      util: {
        getScale: function () {
          return d.timeAxis.step.scale;
        },
        getStep: function () {
          return d.timeAxis.step.step;
        },
        toScreen: Dd(a = d._toScreen).call(a, d),
        toGlobalScreen: Dd(l = d._toGlobalScreen).call(l, d),
        toTime: Dd(h = d._toTime).call(h, d),
        toGlobalTime: Dd(u = d._toGlobalTime).call(u, d)
      }
    }, this.range = new wD(this.body), this.components.push(this.range), this.body.range = this.range, this.timeAxis = new HD(this.body), this.components.push(this.timeAxis), this.currentTime = new hT(this.body), this.components.push(this.currentTime), this.linegraph = new qA(this.body), this.components.push(this.linegraph), this.itemsData = null, this.groupsData = null, this.on("tap", function (t) {
      d.emit("click", d.getEventProperties(t));
    }), this.on("doubletap", function (t) {
      d.emit("doubleClick", d.getEventProperties(t));
    }), this.dom.root.oncontextmenu = function (t) {
      d.emit("contextmenu", d.getEventProperties(t));
    }, this.initialFitDone = !1, this.on("changed", function () {
      if (null != d.itemsData) {
        if (!d.initialFitDone && !d.options.rollingMode) if (d.initialFitDone = !0, null != d.options.start || null != d.options.end) {
          if (null == d.options.start || null == d.options.end) var t = d.getItemRange();
          var e = null != d.options.start ? d.options.start : t.min,
            i = null != d.options.end ? d.options.end : t.max;
          d.setWindow(e, i, {
            animation: !1
          });
        } else d.fit({
          animation: !1
        });
        d.initialDrawDone || !d.initialRangeChangeDone && (d.options.start || d.options.end) && !d.options.rollingMode || (d.initialDrawDone = !0, d.dom.root.style.visibility = "visible", d.dom.loadingScreen.parentNode.removeChild(d.dom.loadingScreen), d.options.onInitialDrawComplete && qd(function () {
          return d.options.onInitialDrawComplete();
        }, 0));
      }
    }), n && this.setOptions(n), i && this.setGroups(i), e && this.setItems(e), this._redraw();
  }
  nI.prototype = new aT(), nI.prototype.setOptions = function (t) {
    !0 === dA.validate(t, eI) && console.log("%cErrors have been found in the supplied options object.", cA), aT.prototype.setOptions.call(this, t);
  }, nI.prototype.setItems = function (t) {
    var e,
      i = null == this.itemsData;
    if (e = t ? FC(t) ? BC(t) : BC(new n.DataSet(t)) : null, this.itemsData && this.itemsData.dispose(), this.itemsData = e, this.linegraph && this.linegraph.setItems(null != e ? e.rawDS : null), i) if (null != this.options.start || null != this.options.end) {
      var o = null != this.options.start ? this.options.start : null,
        r = null != this.options.end ? this.options.end : null;
      this.setWindow(o, r, {
        animation: !1
      });
    } else this.fit({
      animation: !1
    });
  }, nI.prototype.setGroups = function (t) {
    var e;
    e = t ? FC(t) ? t : new n.DataSet(t) : null, this.groupsData = e, this.linegraph.setGroups(e);
  }, nI.prototype.getLegend = function (t, e, i) {
    return void 0 === e && (e = 15), void 0 === i && (i = 15), void 0 !== this.linegraph.groups[t] ? this.linegraph.groups[t].getLegend(e, i) : "cannot find group:'" + t + "'";
  }, nI.prototype.isGroupVisible = function (t) {
    return void 0 !== this.linegraph.groups[t] && this.linegraph.groups[t].visible && (void 0 === this.linegraph.options.groups.visibility[t] || 1 == this.linegraph.options.groups.visibility[t]);
  }, nI.prototype.getDataRange = function () {
    var t = null,
      e = null;
    for (var i in this.linegraph.groups) if (this.linegraph.groups.hasOwnProperty(i) && 1 == this.linegraph.groups[i].visible) for (var n = 0; n < this.linegraph.groups[i].itemsData.length; n++) {
      var o = this.linegraph.groups[i].itemsData[n],
        r = WC.convert(o.x, "Date").valueOf();
      t = null == t || t > r ? r : t, e = null == e || e < r ? r : e;
    }
    return {
      min: null != t ? new Date(t) : null,
      max: null != e ? new Date(e) : null
    };
  }, nI.prototype.getEventProperties = function (t) {
    var e = t.center ? t.center.x : t.clientX,
      i = t.center ? t.center.y : t.clientY,
      n = e - WC.getAbsoluteLeft(this.dom.centerContainer),
      o = i - WC.getAbsoluteTop(this.dom.centerContainer),
      r = this._toTime(n),
      s = sT.customTimeFromTarget(t),
      a = WC.getTarget(t),
      l = null;
    WC.hasParent(a, this.timeAxis.dom.foreground) || this.timeAxis2 && WC.hasParent(a, this.timeAxis2.dom.foreground) ? l = "axis" : WC.hasParent(a, this.linegraph.yAxisLeft.dom.frame) || WC.hasParent(a, this.linegraph.yAxisRight.dom.frame) ? l = "data-axis" : WC.hasParent(a, this.linegraph.legendLeft.dom.frame) || WC.hasParent(a, this.linegraph.legendRight.dom.frame) ? l = "legend" : null != s ? l = "custom-time" : WC.hasParent(a, this.currentTime.bar) ? l = "current-time" : WC.hasParent(a, this.dom.center) && (l = "background");
    var h = [],
      u = this.linegraph.yAxisLeft,
      c = this.linegraph.yAxisRight;
    return !u.hidden && this.itemsData.length > 0 && h.push(u.screenToValue(o)), !c.hidden && this.itemsData.length > 0 && h.push(c.screenToValue(o)), {
      event: t,
      customTime: s ? s.options.id : null,
      what: l,
      pageX: t.srcEvent ? t.srcEvent.pageX : t.pageX,
      pageY: t.srcEvent ? t.srcEvent.pageY : t.pageY,
      x: n,
      y: o,
      time: r,
      value: h
    };
  }, nI.prototype._createConfigurator = function () {
    return new CA(this, this.dom.container, iI);
  };
  var oI = function () {
    try {
      return navigator ? navigator.languages && navigator.languages.length ? navigator.languages : navigator.userLanguage || navigator.language || navigator.browserLanguage || "en" : "en";
    } catch (t) {
      return "en";
    }
  }();
  e.locale(oI);
  var rI = {
    Core: aT,
    DateUtil: yD,
    Range: wD,
    stack: xE,
    TimeStep: BD,
    components: {
      items: {
        Item: EE,
        BackgroundItem: LE,
        BoxItem: IE,
        ClusterItem: QE,
        PointItem: ME,
        RangeItem: FE
      },
      BackgroundGroup: DE,
      Component: oS,
      CurrentTime: hT,
      CustomTime: sT,
      DataAxis: zA,
      DataScale: RA,
      GraphGroup: VA,
      Group: CE,
      ItemSet: lA,
      Legend: UA,
      LineGraph: qA,
      TimeAxis: HD
    }
  };
  t.Graph2d = nI, t.Timeline = DA, t.timeline = rI;
});

/***/ }),

/***/ 2866:
/*!********************************************************************************************!*\
  !*** ./apps/web-app/src/app/core/components/list-item/list-item.component.scss?ngResource ***!
  \********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 9579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "@keyframes iisys-list-mousedown {\n  0% {\n    background-position: 31% 0;\n  }\n  50% {\n    background-position: 70% 100%;\n  }\n  100% {\n    background-position: 31% 0;\n  }\n}\n@keyframes iisys-list-hover {\n  0% {\n    background-position: 0 84%;\n  }\n  50% {\n    background-position: 100% 17%;\n  }\n  100% {\n    background-position: 0 84%;\n  }\n}\n@keyframes gradient-animation {\n  0% {\n    background-position: 0 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0 50%;\n  }\n}\napp-list-item {\n  width: 100%;\n  display: block;\n}\napp-list-item .iisys-mat-list-item {\n  padding: 6px 12px;\n  height: auto !important;\n  border-bottom: solid 1px #f2f2f2;\n  line-height: 24px;\n}\napp-list-item .iisys-mat-list-item.mousedown, app-list-item .iisys-mat-list-item:has(.mousedown) {\n  background: linear-gradient(109deg, #fbbcbb, #f5f5f5, #fdc8c7);\n  background-size: 600% 600%;\n  animation: iisys-list-mousedown 5s ease infinite;\n}\napp-list-item .iisys-mat-list-item.lightGrey-bg {\n  background: linear-gradient(114deg, #ebebeb, #f5f5f5, #d2d2d2);\n  background-size: 180% 180%;\n  animation: gradient-animation 9s ease infinite;\n  box-shadow: inset 0 0 12px -8px rgba(0, 0, 0, 0.3607843137);\n}\napp-list-item .iisys-mat-list-item.disabled {\n  opacity: 0.38;\n}\napp-list-item .iisys-mat-list-item .progress-wrapper .title-section {\n  font-size: 15px;\n  color: #222;\n}\napp-list-item .iisys-mat-list-item .progress-wrapper .text-section {\n  color: #a3a3a3;\n  font-size: 15px;\n  margin: 0;\n  display: block;\n}", "",{"version":3,"sources":["webpack://./apps/web-app/src/styles/animations.scss","webpack://./apps/web-app/src/app/core/components/list-item/list-item.component.scss"],"names":[],"mappings":"AAKA;EACE;IAAG,0BAAA;ECQH;EDPA;IAAI,6BAAA;ECUJ;EDTA;IAAK,0BAAA;ECYL;AACF;ADLA;EACE;IAAG,0BAAA;ECmBH;EDlBA;IAAI,6BAAA;ECqBJ;EDpBA;IAAK,0BAAA;ECuBL;AACF;ADrBA;EACE;IACE,0BAAA;ECuBF;EDrBA;IACE,6BAAA;ECuBF;EDrBA;IACE,0BAAA;ECuBF;AACF;AApDA;EACE,WAAA;EACA,cAAA;AAsDF;AApDE;EACE,iBAAA;EACA,uBAAA;EACA,gCAAA;EACA,iBAAA;AAsDJ;AApDI;EACE,8DAAA;EACA,0BAAA;EAEA,gDAAA;AAsDN;AAnDI;EACE,8DAAA;EACA,0BAAA;EACA,8CAAA;EACA,2DAAA;AAqDN;AAlDI;EACE,aAAA;AAoDN;AAhDM;EACE,eAAA;EACA,WAAA;AAkDR;AA/CM;EACE,cAAA;EACA,eAAA;EACA,SAAA;EACA,cAAA;AAiDR","sourcesContent":["@-webkit-keyframes iisys-list-mousedown {\r\n  0%{background-position:31% 0}\r\n  50%{background-position:70% 100%}\r\n  100%{background-position:31% 0}\r\n}\r\n@keyframes iisys-list-mousedown {\r\n  0%{background-position:31% 0}\r\n  50%{background-position:70% 100%}\r\n  100%{background-position:31% 0}\r\n}\r\n\r\n@-webkit-keyframes iisys-list-hover {\r\n  0%{background-position:0 84%}\r\n  50%{background-position:100% 17%}\r\n  100%{background-position:0 84%}\r\n}\r\n@keyframes iisys-list-hover {\r\n  0%{background-position:0 84%}\r\n  50%{background-position:100% 17%}\r\n  100%{background-position:0 84%}\r\n}\r\n\r\n@keyframes gradient-animation {\r\n  0% {\r\n    background-position: 0 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n  100% {\r\n    background-position: 0 50%;\r\n  }\r\n}\r\n","@import \"../../../../styles/animations.scss\";\r\n\r\napp-list-item {\r\n  width: 100%;\r\n  display: block;\r\n\r\n  .iisys-mat-list-item {\r\n    padding: 6px 12px;\r\n    height: auto !important;\r\n    border-bottom: solid 1px #f2f2f2;\r\n    line-height: 24px;\r\n    \r\n    &.mousedown, &:has(.mousedown) {\r\n      background: linear-gradient(109deg, #fbbcbb, #f5f5f5, #fdc8c7);\r\n      background-size: 600% 600%;\r\n      -webkit-animation: iisys-list-mousedown 5s ease infinite;\r\n      animation: iisys-list-mousedown 5s ease infinite;\r\n    }\r\n\r\n    &.lightGrey-bg {\r\n      background: linear-gradient(114deg,#ebebeb,#f5f5f5,#d2d2d2);\r\n      background-size: 180% 180%;\r\n      animation: gradient-animation 9s ease infinite;\r\n      box-shadow: inset 0 0 12px -8px #0000005c;\r\n    }\r\n\r\n    &.disabled {\r\n      opacity: 0.38;\r\n    }\r\n\r\n    .progress-wrapper {\r\n      .title-section {\r\n        font-size: 15px;\r\n        color: #222;\r\n      }\r\n\r\n      .text-section {\r\n        color: #a3a3a3;\r\n        font-size: 15px;\r\n        margin: 0;\r\n        display: block;\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 2752:
/*!**************************************************************************************************!*\
  !*** ./apps/web-app/src/app/core/components/search-field/search-field.component.scss?ngResource ***!
  \**************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 9579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../../node_modules/css-loader/dist/runtime/api.js */ 931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".search-field {\n  width: 100%;\n}", "",{"version":3,"sources":["webpack://./apps/web-app/src/app/core/components/search-field/search-field.component.scss"],"names":[],"mappings":"AAAA;EACI,WAAA;AACJ","sourcesContent":[".search-field {\r\n    width: 100%;\r\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 5955:
/*!*************************************************************************************************************!*\
  !*** ./apps/web-app/src/app/gantt demo/customization-dialog/customization-dialog.component.scss?ngResource ***!
  \*************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 9579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/api.js */ 931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "app-customization-dialog {\n  display: flex;\n  flex-direction: column;\n  max-width: 400px;\n  max-height: 80vh;\n}\napp-customization-dialog input::-webkit-outer-spin-button,\napp-customization-dialog input::-webkit-inner-spin-button {\n  display: none;\n}\napp-customization-dialog .mat-mdc-form-field {\n  width: 100%;\n}\napp-customization-dialog .mat-mdc-dialog-content {\n  overflow: hidden;\n}\napp-customization-dialog .mat-mdc-dialog-content .items-list {\n  height: 55vh;\n  overflow: auto;\n}", "",{"version":3,"sources":["webpack://./apps/web-app/src/app/gantt demo/customization-dialog/customization-dialog.component.scss","webpack://./apps/web-app/src/app/gantt%20demo/customization-dialog/customization-dialog.component.scss"],"names":[],"mappings":"AAAA;EACE,aAAA;EACA,sBAAA;EACA,gBAAA;EACA,gBAAA;ACCF;ADCE;;EAEE,aAAA;ACCJ;ADEE;EACE,WAAA;ACAJ;ADGE;EACE,gBAAA;ACDJ;ADGI;EACE,YAAA;EACA,cAAA;ACDN","sourcesContent":["app-customization-dialog {\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 400px;\r\n  max-height: 80vh;\r\n\r\n  input::-webkit-outer-spin-button,\r\n  input::-webkit-inner-spin-button {\r\n    display: none;\r\n  }\r\n\r\n  .mat-mdc-form-field {\r\n    width: 100%;\r\n  }\r\n\r\n  .mat-mdc-dialog-content {\r\n    overflow: hidden;\r\n\r\n    .items-list {\r\n      height: 55vh;\r\n      overflow: auto;\r\n    }\r\n  }\r\n}\r\n","app-customization-dialog {\n  display: flex;\n  flex-direction: column;\n  max-width: 400px;\n  max-height: 80vh;\n}\napp-customization-dialog input::-webkit-outer-spin-button,\napp-customization-dialog input::-webkit-inner-spin-button {\n  display: none;\n}\napp-customization-dialog .mat-mdc-form-field {\n  width: 100%;\n}\napp-customization-dialog .mat-mdc-dialog-content {\n  overflow: hidden;\n}\napp-customization-dialog .mat-mdc-dialog-content .items-list {\n  height: 55vh;\n  overflow: auto;\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 5465:
/*!***********************************************************************************************!*\
  !*** ./apps/web-app/src/app/gantt demo/delete-dialog/delete-dialog.component.scss?ngResource ***!
  \***********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 9579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/api.js */ 931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "mat-dialog-actions {\n  min-width: 30rem;\n  min-height: 100px;\n  padding-left: 20px;\n  padding-right: 20px;\n}", "",{"version":3,"sources":["webpack://./apps/web-app/src/app/gantt demo/delete-dialog/delete-dialog.component.scss","webpack://./apps/web-app/src/app/gantt%20demo/delete-dialog/delete-dialog.component.scss"],"names":[],"mappings":"AAAA;EACE,gBAAA;EACA,iBAAA;EACA,kBAAA;EACA,mBAAA;ACCF","sourcesContent":["mat-dialog-actions {\r\n  min-width: 30rem;\r\n  min-height: 100px;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n}\r\n","mat-dialog-actions {\n  min-width: 30rem;\n  min-height: 100px;\n  padding-left: 20px;\n  padding-right: 20px;\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 9222:
/*!***********************************************************************************************!*\
  !*** ./apps/web-app/src/app/gantt demo/filter-dialog/filter-dialog.component.scss?ngResource ***!
  \***********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 9579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/api.js */ 931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "input::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  display: none;\n}\n\nmat-dialog-content {\n  min-width: 30rem;\n}", "",{"version":3,"sources":["webpack://./apps/web-app/src/app/gantt demo/filter-dialog/filter-dialog.component.scss","webpack://./apps/web-app/src/app/gantt%20demo/filter-dialog/filter-dialog.component.scss"],"names":[],"mappings":"AAAA;;EAEE,aAAA;ACCF;;ADEA;EACE,gBAAA;ACCF","sourcesContent":["input::-webkit-outer-spin-button,\r\ninput::-webkit-inner-spin-button {\r\n  display: none;\r\n}\r\n\r\nmat-dialog-content {\r\n  min-width: 30rem;\r\n}\r\n","input::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  display: none;\n}\n\nmat-dialog-content {\n  min-width: 30rem;\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 9162:
/*!***********************************************************************************************************************!*\
  !*** ./apps/web-app/src/app/gantt demo/suborders-planning-dialog/suborders-planning-dialog.component.scss?ngResource ***!
  \***********************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 9579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/api.js */ 931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "mat-dialog-content {\n  min-width: 30rem;\n}", "",{"version":3,"sources":["webpack://./apps/web-app/src/app/gantt demo/suborders-planning-dialog/suborders-planning-dialog.component.scss","webpack://./apps/web-app/src/app/gantt%20demo/suborders-planning-dialog/suborders-planning-dialog.component.scss"],"names":[],"mappings":"AAAA;EACE,gBAAA;ACCF","sourcesContent":["mat-dialog-content {\r\n  min-width: 30rem;\r\n}\r\n","mat-dialog-content {\n  min-width: 30rem;\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 2878:
/*!******************************************************************************************************!*\
  !*** ./apps/web-app/src/app/gantt demo/view-settings/view-settings-dialog.component.scss?ngResource ***!
  \******************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 9579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/api.js */ 931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "", "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 1134:
/*!*********************************************************************************************!*\
  !*** ./apps/web-app/src/app/gantt demo/vis-timeline/vis-timeline.component.scss?ngResource ***!
  \*********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ 9579);
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../../node_modules/css-loader/dist/runtime/api.js */ 931);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "@keyframes iisys-list-mousedown {\n  0% {\n    background-position: 31% 0;\n  }\n  50% {\n    background-position: 70% 100%;\n  }\n  100% {\n    background-position: 31% 0;\n  }\n}\n@keyframes iisys-list-hover {\n  0% {\n    background-position: 0 84%;\n  }\n  50% {\n    background-position: 100% 17%;\n  }\n  100% {\n    background-position: 0 84%;\n  }\n}\n@keyframes gradient-animation {\n  0% {\n    background-position: 0 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0 50%;\n  }\n}\n.green-bg {\n  background-color: #5daf55 !important;\n}\n\n.iisys-vis-card {\n  display: grid !important;\n  gap: 24px;\n  grid-template-columns: 35% 10px auto;\n}\n\n.iisys-container {\n  padding: 14px;\n}\n\n#rightdragbar {\n  background-color: transparent;\n  cursor: ew-resize;\n  display: flex;\n  justify-content: center;\n}\n#rightdragbar #dragbar-inner {\n  background-color: lightgray;\n  background-image: linear-gradient(0deg, #eeeeee, #c5c5c5, #eeeeee);\n  width: 2px;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0 0 12px rgba(0, 0, 0, 0.1098039216);\n}\n#rightdragbar #dragbar-inner #dragbar-nubsi {\n  width: 6px;\n  height: 6%;\n  border: 1px solid #c5c5c5;\n  position: absolute;\n  border-radius: 20px;\n  background: #e5e5e5;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n#rightdragbar #dragbar-inner #dragbar-nubsi #dragbar-nubsi-inner {\n  width: 2px;\n  height: 32%;\n  border-radius: 20px;\n  background: rgba(152, 152, 152, 0.75);\n}\n\n.menu-backdrop {\n  -webkit-backdrop-filter: saturate(20%) brightness(95%);\n          backdrop-filter: saturate(20%) brightness(95%);\n}\n\n.mat-mdc-card-title {\n  font-weight: 500;\n  letter-spacing: 0.05rem;\n  font-size: 1.1rem;\n}\n\n.mat-mdc-card-header:not(.display-setting) {\n  border-bottom: 1px solid #f2f2f2;\n  padding-bottom: 12px;\n  margin-bottom: 12px;\n  box-shadow: 0px 6px 13px -9px rgba(0, 0, 0, 0.3882352941);\n}\n\n.display-setting {\n  padding-top: 0;\n}\n.display-setting .mat-mdc-card-header-text {\n  width: 100%;\n}\n.display-setting .mat-mdc-card-header-text h3 {\n  font-weight: 500;\n  margin: 6px 0;\n  padding-left: 12px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.iisys-left {\n  display: grid;\n  gap: 12px;\n  grid-template-columns: 100%;\n  grid-template-rows: auto 1fr;\n}\n.iisys-left .spalten {\n  flex-grow: 1;\n  display: grid;\n  gap: 12px;\n  grid-template-columns: repeat(auto-fill, calc(50% - 6px));\n  grid-template-rows: auto;\n}\n.iisys-left .spalten .header-section {\n  width: 100%;\n}\n.iisys-left .mat-button-toggle-group:first-child {\n  height: min-content;\n  padding-bottom: 0px;\n  grid-column: span 2;\n  width: 100%;\n}\n.iisys-left .mat-button-toggle-group:first-child .mat-button-toggle {\n  width: 50%;\n}\n.iisys-left .mat-button-toggle-group:first-child .mat-button-toggle span {\n  padding: 12px 8px;\n  line-height: normal;\n  white-space: normal;\n}\n.iisys-left .tree-container {\n  max-height: calc(100vh - 287px);\n  overflow-y: auto; /* Enable vertical scroll */\n}\n.iisys-left .tree-container .iisys-mat-list {\n  max-height: none;\n}\n.iisys-left .tree-container .iisys-mat-list::-webkit-scrollbar {\n  display: none;\n}\n.iisys-left .tree-container .iisys-mat-list .iisys-mat-list-item {\n  padding: 6px 12px;\n  height: auto !important;\n  border-bottom: solid 1px #f2f2f2;\n  line-height: 24px;\n}\n.iisys-left .tree-container .iisys-mat-list .iisys-mat-list-item.lightGrey-bg {\n  background: linear-gradient(114deg, #ebebeb, #f5f5f5, #d2d2d2);\n  background-size: 180% 180%;\n  animation: gradient-animation 9s ease infinite;\n  box-shadow: inset 0 0 12px -8px rgba(0, 0, 0, 0.3607843137);\n}\n.iisys-left .tree-container .iisys-mat-list .iisys-mat-list-item .progress-wrapper .title-section {\n  font-size: 15px;\n  color: #222;\n}\n.iisys-left .tree-container .iisys-mat-list .iisys-mat-list-item .progress-wrapper .text-section {\n  color: #a3a3a3;\n  font-size: 15px;\n  margin: 0;\n  display: block;\n}\n.iisys-left .iisys-mat-list {\n  padding: 0 !important;\n  max-height: calc(100vh - 231px);\n  overflow-x: auto !important;\n}\n.iisys-left .iisys-mat-list .mat-tree-invisible {\n  display: none;\n}\n.iisys-left .iisys-mat-list .cdk-tree-node {\n  display: block;\n  position: relative;\n}\n.iisys-left .iisys-mat-list .cdk-tree-node:not(:first-child) {\n  border-top: solid 1px #f2f2f2;\n}\n.iisys-left .iisys-mat-list .cdk-tree-node:last-child {\n  border-bottom: solid 1px #f2f2f2;\n}\n.iisys-left .iisys-mat-list .cdk-tree-node:hover {\n  background: linear-gradient(104deg, #cadcea, #f5f5f5, #cadcea);\n  background-size: 600% 600%;\n  animation: iisys-list-hover 9s ease infinite;\n  box-shadow: inset 0 0 12px -8px rgba(0, 0, 0, 0.3607843137);\n}\n.iisys-left .iisys-mat-list .cdk-tree-node.lightGrey-bg {\n  background: linear-gradient(114deg, #ebebeb, #f5f5f5, #d2d2d2);\n  background-size: 180% 180%;\n  animation: gradient-animation 9s ease infinite;\n  box-shadow: inset 0 0 12px -8px rgba(0, 0, 0, 0.3607843137);\n}\n.iisys-left .iisys-mat-list .cdk-tree-node .iisys-mat-list-item {\n  border: 0;\n}\n.iisys-left .iisys-mat-list .cdk-tree-node .iisys-mat-list-item .progress-wrapper {\n  max-width: 90%;\n  overflow: hidden;\n}\n.iisys-left .iisys-mat-list .cdk-tree-node .iisys-mat-list-item:hover {\n  background: none;\n  animation: none;\n  box-shadow: none;\n}\n.iisys-left .iisys-mat-list .cdk-tree-node .mdc-icon-button {\n  position: absolute;\n  z-index: 1;\n  right: 0;\n  top: 24px;\n}\n.iisys-left .iisys-mat-list .cdk-tree-node .cdk-tree-node {\n  padding-left: 12px;\n}\n.iisys-left .iisys-mat-list .cdk-tree-node .cdk-tree-node:first-child {\n  border-top: solid 1px #f2f2f2;\n}\n.iisys-left .iisys-mat-list .cdk-tree-node .cdk-tree-node:last-child {\n  border-bottom: 0;\n}\n.iisys-left .iisys-mat-list .cdk-tree-node .cdk-tree-node .progress-wrapper {\n  max-width: none;\n}\n.iisys-left .iisys-mat-list .iisys-mat-list-item:hover {\n  background: linear-gradient(104deg, #cadcea, #f5f5f5, #cadcea);\n  background-size: 600% 600%;\n  animation: iisys-list-hover 9s ease infinite;\n  box-shadow: inset 0 0 12px -8px rgba(0, 0, 0, 0.3607843137);\n}\n.iisys-left .iisys-mat-list .iisys-mat-list-item.mousedown, .iisys-left .iisys-mat-list .iisys-mat-list-item:has(.mousedown) {\n  background: linear-gradient(109deg, #fbbcbb, #f5f5f5, #fdc8c7);\n  background-size: 600% 600%;\n  animation: iisys-list-mousedown 5s ease infinite;\n}\n.iisys-left .nothing-selected {\n  text-align: center;\n  font-size: 15px;\n  margin: auto;\n  padding-top: 32px;\n  color: lightgray;\n}\n.iisys-left .spalten-2 .iisys-mat-list-item span {\n  line-height: 20px !important;\n}\n\n.slide-toggle-menu .mat-mdc-menu-content {\n  padding: 12px 24px 12px 24px;\n}\n.slide-toggle-menu .mat-mdc-menu-content .mat-mdc-slide-toggle:not(:last-child) {\n  padding-bottom: 18px;\n}\n\n.iisys-right .btn-active {\n  color: white !important;\n  background: #01579b;\n  background: linear-gradient(124deg, #01579b, rgba(1, 87, 155, 0.81), #01579b);\n  background-size: 600% 600%;\n  animation: iisys-list-hover 9s ease infinite;\n  box-shadow: inset 0 0 12px -8px #01579b;\n}\n.iisys-right .btn-accent {\n  background: linear-gradient(104deg, #eacaca, #f5f5f5, #eacaca);\n  background-size: 600% 600%;\n  animation: iisys-list-hover 9s ease infinite;\n  box-shadow: inset 0 0 12px -9px rgb(230, 6, 10);\n}\n.iisys-right div.vis-panel.vis-center {\n  box-shadow: inset 6px 6px 12px 0px rgba(220, 220, 220, 0.5411764706);\n}\n.iisys-right .vis-item-content .progress-wrapper {\n  padding: 6px;\n}\n.iisys-right .vis-item-content .progress-wrapper .title {\n  font-weight: 600;\n  display: block;\n  margin: 0 0 4px;\n  font-size: 15px;\n}\n.iisys-right .vis-item-content .progress-wrapper p {\n  margin: 0px;\n  font-weight: 400;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.37);\n}\n.iisys-right .vis-view-controls {\n  border-bottom: 1px solid #f2f2f2;\n  padding-top: 11px;\n  padding-bottom: 11px;\n  margin-bottom: 0px;\n  box-shadow: 0px 6px 13px -9px rgba(0, 0, 0, 0.3882352941);\n  z-index: 99999;\n}\n.iisys-right .vis-view-controls .mat-mdc-slide-toggle {\n  display: flex;\n  margin-right: 24px;\n  margin-left: 12px;\n}\n.iisys-right .vis-view-controls .mat-button-toggle-group {\n  margin-right: 12px;\n  align-items: center;\n}\n.iisys-right .vis-view-controls .mat-button-toggle-group:last-child {\n  margin-right: 0;\n}\n.iisys-right .vis-view-controls .mat-button-toggle-group .mat-button-toggle-label-content {\n  line-height: 34px;\n  font-size: 14px;\n  color: var(--mdc-outlined-button-label-text-color, inherit);\n}\n.iisys-right #timeline {\n  padding: 4px;\n}\n.iisys-right .timeline-content {\n  padding: 0 !important;\n}\n.iisys-right .vis-item.vis-selected.setupTime {\n  background-color: #c70b0b;\n  border-color: #a2a291;\n}\n.iisys-right .vis-item.setupTime {\n  border-color: black;\n  background-color: rgba(199, 11, 11, 0.53);\n}\n.iisys-right .vis-group-level-unknown-but-gte1 {\n  border: none;\n  background-color: rgba(246, 2, 2, 0.47);\n}\n.iisys-right .vis-drag-left, .iisys-right .vis-drag-right {\n  display: none;\n}\n.iisys-right .vis-item .vis-item-content {\n  white-space: nowrap;\n  box-sizing: border-box;\n  padding: 2px;\n}\n.iisys-right .vis-timeline {\n  border: none;\n  font-size: 12pt;\n  background: #ffffff;\n}\n.iisys-right .vis-timeline p.content-section {\n  text-align: end;\n  margin-left: 4px;\n}\n.iisys-right .vis-timeline .group-section {\n  grid-column: span 2;\n}\n.iisys-right .vis-item {\n  border-radius: 6px !important;\n}\n.iisys-right .vis-item.colored {\n  background: linear-gradient(104deg, #d2e1ee, #f5f5f5, #c5eadb);\n  background-size: 500% 500%;\n  box-shadow: inset 0 0 12px -8px rgba(0, 0, 0, 0.3607843137);\n  border-color: #c0d0de;\n}\n.iisys-right .vis-item.vis-selected.colored {\n  background: linear-gradient(109deg, #fbbcbb, #f5f5f5, #fdc8c7);\n  background-size: 600% 600%;\n  animation: iisys-list-mousedown 5s ease infinite;\n  box-shadow: inset 0 0 12px -8px rgba(0, 0, 0, 0.3607843137);\n  border-color: #e7a9a8;\n}\n.iisys-right .vis-labelset .vis-label {\n  display: flex;\n  align-items: center;\n  border-color: #ebebeb;\n  border-bottom: 1px solid #ebebeb;\n  color: #2a70a4;\n  font-size: 14px;\n  font-weight: 500 !important;\n  line-height: 22px;\n  padding-left: 12px;\n  background: #fcfcfc;\n}\n.iisys-right .vis-labelset .vis-label.vis-nested-group .vis-inner {\n  padding-left: 24px;\n  width: 192px;\n}\n.iisys-right .vis-labelset .vis-label:not(.vis-nesting-group):not(.vis-group-level-0) {\n  color: #1a1a1a;\n  background-color: white;\n  font-size: 14px;\n  line-height: 28px;\n  font-weight: 400 !important;\n}\n.iisys-right .vis-time-axis .vis-text {\n  color: #a3a3a3;\n  font-size: 14px;\n  font-weight: 400;\n}\n.iisys-right .vis-time-axis .vis-text.vis-minor {\n  color: #1a1a1a;\n  font-size: 15px;\n  font-weight: 600;\n}\n\n.gradient-background {\n  background: linear-gradient(114deg, #ebebeb, #f5f5f5, #d2d2d2);\n  background-size: 180% 180%;\n  animation: gradient-animation 9s ease infinite;\n}\n\n@media (prefers-color-scheme: dark) {\n  body {\n    background-color: black;\n    color: white;\n  }\n  .green-bg {\n    background-color: #5daf55 !important;\n  }\n  .vis-timeline {\n    border: 2px solid #8d99a6;\n    font-size: 12pt;\n    color: white;\n    background: #000000;\n  }\n  .vis-item.vis-selected.colored {\n    background-color: rgba(255, 255, 255, 0.6);\n    border-color: #a2a291;\n  }\n  .vis-item.colored {\n    border-color: black;\n    background-color: rgb(255, 255, 255);\n  }\n  .vis-labelset .vis-label {\n    color: white;\n  }\n  .vis-ltr .vis-label:not(.vis-nesting-group):not(.vis-group-level-0) {\n    color: white;\n    background-color: black;\n  }\n  .vis-time-axis .vis-text {\n    color: white;\n  }\n}\n.filter-active {\n  background-color: lightgreen !important;\n  color: gray !important;\n}\n\n.filter-not-active {\n  background-color: lightgray !important;\n  color: black !important;\n}\n\n.loader {\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  display: block;\n  margin: 15px auto;\n  position: relative;\n  color: #912525;\n  left: -100px;\n  box-sizing: border-box;\n  animation: shadowRolling 2s linear infinite;\n}\n\n@keyframes shadowRolling {\n  0% {\n    box-shadow: 0px 0 rgba(255, 255, 255, 0), 0px 0 rgba(255, 255, 255, 0), 0px 0 rgba(255, 255, 255, 0), 0px 0 rgba(255, 255, 255, 0);\n  }\n  12% {\n    box-shadow: 100px 0 black, 0px 0 rgba(255, 255, 255, 0), 0px 0 rgba(255, 255, 255, 0), 0px 0 rgba(255, 255, 255, 0);\n  }\n  25% {\n    box-shadow: 110px 0 black, 100px 0 black, 0px 0 rgba(255, 255, 255, 0), 0px 0 rgba(255, 255, 255, 0);\n  }\n  36% {\n    box-shadow: 120px 0 black, 110px 0 black, 100px 0 black, 0px 0 rgba(255, 255, 255, 0);\n  }\n  50% {\n    box-shadow: 130px 0 black, 120px 0 black, 110px 0 black, 100px 0 black;\n  }\n  62% {\n    box-shadow: 200px 0 rgba(255, 255, 255, 0), 130px 0 black, 120px 0 black, 110px 0 black;\n  }\n  75% {\n    box-shadow: 200px 0 rgba(255, 255, 255, 0), 200px 0 rgba(255, 255, 255, 0), 130px 0 black, 120px 0 black;\n  }\n  87% {\n    box-shadow: 200px 0 rgba(255, 255, 255, 0), 200px 0 rgba(255, 255, 255, 0), 200px 0 rgba(255, 255, 255, 0), 130px 0 black;\n  }\n  100% {\n    box-shadow: 200px 0 rgba(255, 255, 255, 0), 200px 0 rgba(255, 255, 255, 0), 200px 0 rgba(255, 255, 255, 0), 200px 0 rgba(255, 255, 255, 0);\n  }\n}\n.tgb-left {\n  border: none !important;\n}\n.tgb-left button {\n  border-top-left-radius: 4px;\n  border-bottom-left-radius: 4px;\n  border: 1px solid #e0e0e0;\n  border-right: none;\n}\n\n.tgb-middle {\n  border: none !important;\n}\n.tgb-middle button {\n  border: none !important;\n  border-left: 1px solid #e0e0e0 !important;\n  border-top: 1px solid #e0e0e0 !important;\n  border-bottom: 1px solid #e0e0e0 !important;\n}\n\n.tgb-single {\n  display: flex;\n  flex-direction: column;\n  border: 1px solid #e0e0e0 !important;\n  border-radius: 4px;\n  height: 100% !important;\n}\n.tgb-single mat-icon {\n  font-size: 24px !important;\n  height: 24px !important;\n  width: 24px !important;\n  padding: 2px;\n}\n.tgb-single span {\n  font-size: 10px;\n  font-weight: 500;\n  color: #a3a3a3;\n  text-transform: uppercase !important;\n  letter-spacing: normal;\n}\n.tgb-single.cdk-mouse-focused {\n  background-color: #1d569a;\n}\n.tgb-single.cdk-mouse-focused mat-icon {\n  color: #fff;\n}\n.tgb-single.cdk-mouse-focused span {\n  color: #fff;\n}\n\n.tgb-right {\n  border: none !important;\n}\n.tgb-right button {\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  border: 1px solid #e0e0e0;\n}\n\n.btn-toolbar, .btn-toolbar button {\n  height: 100%;\n}\n\n.icon-btn-toolbar .mat-icon {\n  margin-top: -8px;\n  color: #222;\n}\n.icon-btn-toolbar.mat-button-toggle-checked {\n  border-color: #e0e0e0 !important;\n}\n.icon-btn-toolbar.mat-button-toggle-checked.tgb-right {\n  border-top-right-radius: 7px !important;\n  border-bottom-right-radius: 7px !important;\n}\n.icon-btn-toolbar.mat-button-toggle-checked.tgb-left {\n  border-top-left-radius: 7px !important;\n  border-bottom-left-radius: 7px !important;\n}\n.icon-btn-toolbar.mat-button-toggle-checked .mat-icon, .icon-btn-toolbar.mat-button-toggle-checked .icon-btn-toolbar-text {\n  color: white !important;\n}\n\n.icon-btn-toolbar-text {\n  display: block;\n  margin-top: -17px;\n  font-size: 10px;\n  margin-bottom: -10px;\n  font-weight: 500;\n  color: #a3a3a3;\n  text-transform: uppercase;\n}\n\n.mdc-button {\n  flex-direction: column;\n}\n.mdc-button .icon-btn-toolbar-text {\n  margin: 0;\n}", "",{"version":3,"sources":["webpack://./apps/web-app/src/styles/animations.scss","webpack://./apps/web-app/src/app/gantt%20demo/vis-timeline/vis-timeline.component.scss","webpack://./apps/web-app/src/app/gantt demo/vis-timeline/vis-timeline.component.scss"],"names":[],"mappings":"AAKA;EACE;IAAG,0BAAA;ECQH;EDPA;IAAI,6BAAA;ECUJ;EDTA;IAAK,0BAAA;ECYL;AACF;ADLA;EACE;IAAG,0BAAA;ECmBH;EDlBA;IAAI,6BAAA;ECqBJ;EDpBA;IAAK,0BAAA;ECuBL;AACF;ADrBA;EACE;IACE,0BAAA;ECuBF;EDrBA;IACE,6BAAA;ECuBF;EDrBA;IACE,0BAAA;ECuBF;AACF;ACpDA;EACE,oCAAA;ADsDF;;ACpDA;EACE,wBAAA;EACA,SAAA;EACA,oCAAA;ADuDF;;ACrDA;EACE,aAAA;ADwDF;;ACtDA;EACE,6BAAA;EACA,iBAAA;EACA,aAAA;EACA,uBAAA;ADyDF;ACxDE;EACE,2BAAA;EACA,kEAAA;EACA,UAAA;EACA,YAAA;EACA,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,gDAAA;AD0DJ;ACzDI;EACE,UAAA;EACA,UAAA;EACA,yBAAA;EACA,kBAAA;EACA,mBAAA;EACA,mBAAA;EACA,aAAA;EACA,uBAAA;EACA,mBAAA;AD2DN;ACzDM;EACE,UAAA;EACA,WAAA;EACA,mBAAA;EACA,qCAAA;AD2DR;;ACpDA;EACE,sDAAA;UAAA,8CAAA;ADuDF;;ACpDA;EACE,gBAAA;EACA,uBAAA;EACA,iBAAA;ADuDF;;ACrDA;EACE,gCAAA;EACA,oBAAA;EACA,mBAAA;EACA,yDAAA;ADwDF;;ACrDA;EACE,cAAA;ADwDF;ACvDE;EACE,WAAA;ADyDJ;ACxDI;EACE,gBAAA;EACA,aAAA;EACA,kBAAA;EACA,aAAA;EACA,8BAAA;EACA,mBAAA;AD0DN;;ACrDA;EACE,aAAA;EACA,SAAA;EACA,2BAAA;EACA,4BAAA;ADwDF;ACvDE;EACE,YAAA;EACA,aAAA;EACA,SAAA;EACA,yDAAA;EACA,wBAAA;ADyDJ;ACvDI;EACE,WAAA;ADyDN;ACrDE;EACE,mBAAA;EACA,mBAAA;EACA,mBAAA;EACA,WAAA;ADuDJ;ACtDM;EACE,UAAA;ADwDR;ACtDQ;EACE,iBAAA;EACA,mBAAA;EACA,mBAAA;ADwDV;ACjDE;EACE,+BAAA;EACA,gBAAA,EAAA,2BAAA;ADmDJ;ACjDI;EACE,gBAAA;ADmDN;ACjDM;EACE,aAAA;ADmDR;AChDM;EACE,iBAAA;EACA,uBAAA;EACA,gCAAA;EACA,iBAAA;ADkDR;AChDQ;EACE,8DAAA;EACA,0BAAA;EACA,8CAAA;EACA,2DAAA;ADkDV;AC9CU;EACE,eAAA;EACA,WAAA;ADgDZ;AC7CU;EACE,cAAA;EACA,eAAA;EACA,SAAA;EACA,cAAA;AD+CZ;ACxCE;EACE,qBAAA;EACA,+BAAA;EACA,2BAAA;AD0CJ;ACxCI;EACE,aAAA;AD0CN;ACvCI;EACE,cAAA;EACA,kBAAA;ADyCN;ACvCM;EACE,6BAAA;ADyCR;ACtCM;EACE,gCAAA;ADwCR;ACrCM;EACE,8DAAA;EACA,0BAAA;EACA,4CAAA;EACA,2DAAA;ADuCR;ACpCM;EACE,8DAAA;EACA,0BAAA;EACA,8CAAA;EACA,2DAAA;ADsCR;ACnCM;EACE,SAAA;ADqCR;ACnCQ;EACE,cAAA;EACA,gBAAA;ADqCV;AClCU;EACE,gBAAA;EACA,eAAA;EACA,gBAAA;ADoCZ;AChCM;EACE,kBAAA;EACA,UAAA;EACA,QAAA;EACA,SAAA;ADkCR;AC/BM;EACE,kBAAA;ADiCR;AC/BQ;EACE,6BAAA;ADiCV;AC9BQ;EACE,gBAAA;ADgCV;AC7BQ;EACE,eAAA;AD+BV;ACzBM;EACE,8DAAA;EACA,0BAAA;EACA,4CAAA;EACA,2DAAA;AD2BR;ACzBM;EACE,8DAAA;EACA,0BAAA;EAEA,gDAAA;AD2BR;ACtBE;EACE,kBAAA;EACA,eAAA;EACA,YAAA;EACA,iBAAA;EACA,gBAAA;ADwBJ;ACpBI;EACE,4BAAA;ADsBN;;ACfE;EACE,4BAAA;ADkBJ;ACjBI;EACE,oBAAA;ADmBN;;ACbE;EACE,uBAAA;EACA,mBAAA;EACA,6EAAA;EACA,0BAAA;EACA,4CAAA;EACA,uCAAA;ADgBJ;ACdE;EACE,8DAAA;EACA,0BAAA;EACA,4CAAA;EACA,+CAAA;ADgBJ;ACdE;EACE,oEAAA;ADgBJ;ACbI;EACE,YAAA;ADeN;ACdM;EACE,gBAAA;EACA,cAAA;EACA,eAAA;EACA,eAAA;ADgBR;ACdM;EACE,WAAA;EACA,gBAAA;EACA,eAAA;EACA,0BAAA;ADgBR;ACZE;EACE,gCAAA;EACA,iBAAA;EACA,oBAAA;EACA,kBAAA;EACA,yDAAA;EACA,cAAA;ADcJ;ACXI;EACE,aAAA;EACA,kBAAA;EACA,iBAAA;ADaN;ACXI;EACE,kBAAA;EACA,mBAAA;ADaN;ACZM;EACE,eAAA;ADcR;ACZM;EACE,iBAAA;EACA,eAAA;EACA,2DAAA;ADcR;ACVE;EACE,YAAA;ADYJ;ACVE;EACE,qBAAA;ADYJ;ACTE;EACE,yBAAA;EACA,qBAAA;ADWJ;ACRE;EACE,mBAAA;EACA,yCAAA;ADUJ;ACPE;EACE,YAAA;EACA,uCAAA;ADSJ;ACNE;EACE,aAAA;ADQJ;ACJE;EACE,mBAAA;EACA,sBAAA;EACA,YAAA;ADMJ;ACDE;EACE,YAAA;EACA,eAAA;EACA,mBAAA;ADGJ;ACDI;EACE,eAAA;EACA,gBAAA;ADGN;ACAI;EACE,mBAAA;ADEN;ACEE;EACE,6BAAA;ADAJ;ACCI;EACE,8DAAA;EACA,0BAAA;EACA,2DAAA;EACA,qBAAA;ADCN;ACEI;EACE,8DAAA;EACA,0BAAA;EAEA,gDAAA;EACA,2DAAA;EACA,qBAAA;ADAN;ACKE;EACE,aAAA;EACA,mBAAA;EAMA,qBAAA;EACA,gCAAA;EACA,cAAA;EACA,eAAA;EACA,2BAAA;EACA,iBAAA;EACA,kBAAA;EACA,mBAAA;ADRJ;ACJI;EACE,kBAAA;EACA,YAAA;ADMN;ACKI;EACE,cAAA;EACA,uBAAA;EACA,eAAA;EACA,iBAAA;EACA,2BAAA;ADHN;ACQI;EACE,cAAA;EACA,eAAA;EACA,gBAAA;ADNN;ACOM;EACE,cAAA;EACA,eAAA;EACA,gBAAA;ADLR;;ACWA;EACE,8DAAA;EACA,0BAAA;EACA,8CAAA;ADRF;;ACUA;EACE;IACE,uBAAA;IACA,YAAA;EDPF;ECUA;IACE,oCAAA;EDRF;ECUA;IACE,yBAAA;IACA,eAAA;IACA,YAAA;IACA,mBAAA;EDRF;ECWA;IACE,0CAAA;IACA,qBAAA;EDTF;ECYA;IACE,mBAAA;IACA,oCAAA;EDVF;ECYA;IACE,YAAA;EDVF;ECYA;IACE,YAAA;IACA,uBAAA;EDVF;ECaA;IACE,YAAA;EDXF;AACF;ACcA;EACE,uCAAA;EACA,sBAAA;ADZF;;ACeA;EACE,sCAAA;EACA,uBAAA;ADZF;;ACeA;EACE,WAAA;EACA,YAAA;EACA,kBAAA;EACA,cAAA;EACA,iBAAA;EACA,kBAAA;EACA,cAAA;EACA,YAAA;EACA,sBAAA;EACA,2CAAA;ADZF;;ACeA;EACE;IACE,kIAAA;EDZF;ECcA;IACE,mHAAA;EDZF;ECcA;IACE,oGAAA;EDZF;ECcA;IACE,qFAAA;EDZF;ECcA;IACE,sEAAA;EDZF;ECcA;IACE,uFAAA;EDZF;ECcA;IACE,wGAAA;EDZF;ECcA;IACE,yHAAA;EDZF;ECcA;IACE,0IAAA;EDZF;AACF;ACgBA;EACE,uBAAA;ADdF;ACeE;EACE,2BAAA;EACA,8BAAA;EACA,yBAAA;EACA,kBAAA;ADbJ;;ACgBE;EACE,uBAAA;ADbJ;ACcI;EACE,uBAAA;EACC,yCAAA;EACD,wCAAA;EACA,2CAAA;ADZN;;ACiBA;EACE,aAAA;EACA,sBAAA;EACA,oCAAA;EACA,kBAAA;EACA,uBAAA;ADdF;ACeE;EACE,0BAAA;EACA,uBAAA;EACA,sBAAA;EACA,YAAA;ADbJ;ACgBE;EACE,eAAA;EACA,gBAAA;EACA,cAAA;EACA,oCAAA;EACA,sBAAA;ADdJ;ACgBE;EACE,yBAAA;ADdJ;ACeI;EACE,WAAA;ADbN;ACeI;EACE,WAAA;ADbN;;ACkBE;EACE,uBAAA;ADfJ;ACgBI;EACE,4BAAA;EACA,+BAAA;EACA,yBAAA;ADdN;;ACiBC;EACE,YAAA;ADdH;;ACkBE;EACE,gBAAA;EACA,WAAA;ADfJ;ACiBE;EACE,gCAAA;ADfJ;ACgBI;EACE,uCAAA;EACA,0CAAA;ADdN;ACgBI;EACE,sCAAA;EACA,yCAAA;ADdN;ACmBE;EACE,uBAAA;ADjBJ;;ACoBA;EACE,cAAA;EACA,iBAAA;EACA,eAAA;EACA,oBAAA;EACA,gBAAA;EACA,cAAA;EACA,yBAAA;ADjBF;;ACmBA;EACE,sBAAA;ADhBF;ACkBE;EACE,SAAA;ADhBJ","sourcesContent":["@-webkit-keyframes iisys-list-mousedown {\r\n  0%{background-position:31% 0}\r\n  50%{background-position:70% 100%}\r\n  100%{background-position:31% 0}\r\n}\r\n@keyframes iisys-list-mousedown {\r\n  0%{background-position:31% 0}\r\n  50%{background-position:70% 100%}\r\n  100%{background-position:31% 0}\r\n}\r\n\r\n@-webkit-keyframes iisys-list-hover {\r\n  0%{background-position:0 84%}\r\n  50%{background-position:100% 17%}\r\n  100%{background-position:0 84%}\r\n}\r\n@keyframes iisys-list-hover {\r\n  0%{background-position:0 84%}\r\n  50%{background-position:100% 17%}\r\n  100%{background-position:0 84%}\r\n}\r\n\r\n@keyframes gradient-animation {\r\n  0% {\r\n    background-position: 0 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n  100% {\r\n    background-position: 0 50%;\r\n  }\r\n}\r\n","@-webkit-keyframes iisys-list-mousedown {\n  0% {\n    background-position: 31% 0;\n  }\n  50% {\n    background-position: 70% 100%;\n  }\n  100% {\n    background-position: 31% 0;\n  }\n}\n@keyframes iisys-list-mousedown {\n  0% {\n    background-position: 31% 0;\n  }\n  50% {\n    background-position: 70% 100%;\n  }\n  100% {\n    background-position: 31% 0;\n  }\n}\n@-webkit-keyframes iisys-list-hover {\n  0% {\n    background-position: 0 84%;\n  }\n  50% {\n    background-position: 100% 17%;\n  }\n  100% {\n    background-position: 0 84%;\n  }\n}\n@keyframes iisys-list-hover {\n  0% {\n    background-position: 0 84%;\n  }\n  50% {\n    background-position: 100% 17%;\n  }\n  100% {\n    background-position: 0 84%;\n  }\n}\n@keyframes gradient-animation {\n  0% {\n    background-position: 0 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0 50%;\n  }\n}\n.green-bg {\n  background-color: #5daf55 !important;\n}\n\n.iisys-vis-card {\n  display: grid !important;\n  gap: 24px;\n  grid-template-columns: 35% 10px auto;\n}\n\n.iisys-container {\n  padding: 14px;\n}\n\n#rightdragbar {\n  background-color: transparent;\n  cursor: ew-resize;\n  display: flex;\n  justify-content: center;\n}\n#rightdragbar #dragbar-inner {\n  background-color: lightgray;\n  background-image: linear-gradient(0deg, #eeeeee, #c5c5c5, #eeeeee);\n  width: 2px;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0 0 12px rgba(0, 0, 0, 0.1098039216);\n}\n#rightdragbar #dragbar-inner #dragbar-nubsi {\n  width: 6px;\n  height: 6%;\n  border: 1px solid #c5c5c5;\n  position: absolute;\n  border-radius: 20px;\n  background: #e5e5e5;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n#rightdragbar #dragbar-inner #dragbar-nubsi #dragbar-nubsi-inner {\n  width: 2px;\n  height: 32%;\n  border-radius: 20px;\n  background: rgba(152, 152, 152, 0.75);\n}\n\n.menu-backdrop {\n  backdrop-filter: saturate(20%) brightness(95%);\n}\n\n.mat-mdc-card-title {\n  font-weight: 500;\n  letter-spacing: 0.05rem;\n  font-size: 1.1rem;\n}\n\n.mat-mdc-card-header:not(.display-setting) {\n  border-bottom: 1px solid #f2f2f2;\n  padding-bottom: 12px;\n  margin-bottom: 12px;\n  box-shadow: 0px 6px 13px -9px rgba(0, 0, 0, 0.3882352941);\n}\n\n.display-setting {\n  padding-top: 0;\n}\n.display-setting .mat-mdc-card-header-text {\n  width: 100%;\n}\n.display-setting .mat-mdc-card-header-text h3 {\n  font-weight: 500;\n  margin: 6px 0;\n  padding-left: 12px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.iisys-left {\n  display: grid;\n  gap: 12px;\n  grid-template-columns: 100%;\n  grid-template-rows: auto 1fr;\n}\n.iisys-left .spalten {\n  flex-grow: 1;\n  display: grid;\n  gap: 12px;\n  grid-template-columns: repeat(auto-fill, calc(50% - 6px));\n  grid-template-rows: auto;\n}\n.iisys-left .spalten .header-section {\n  width: 100%;\n}\n.iisys-left .mat-button-toggle-group:first-child {\n  height: min-content;\n  padding-bottom: 0px;\n  grid-column: span 2;\n  width: 100%;\n}\n.iisys-left .mat-button-toggle-group:first-child .mat-button-toggle {\n  width: 50%;\n}\n.iisys-left .mat-button-toggle-group:first-child .mat-button-toggle span {\n  padding: 12px 8px;\n  line-height: normal;\n  white-space: normal;\n}\n.iisys-left .tree-container {\n  max-height: calc(100vh - 287px);\n  overflow-y: auto; /* Enable vertical scroll */\n}\n.iisys-left .tree-container .iisys-mat-list {\n  max-height: none;\n}\n.iisys-left .tree-container .iisys-mat-list::-webkit-scrollbar {\n  display: none;\n}\n.iisys-left .tree-container .iisys-mat-list .iisys-mat-list-item {\n  padding: 6px 12px;\n  height: auto !important;\n  border-bottom: solid 1px #f2f2f2;\n  line-height: 24px;\n}\n.iisys-left .tree-container .iisys-mat-list .iisys-mat-list-item.lightGrey-bg {\n  background: linear-gradient(114deg, #ebebeb, #f5f5f5, #d2d2d2);\n  background-size: 180% 180%;\n  animation: gradient-animation 9s ease infinite;\n  box-shadow: inset 0 0 12px -8px rgba(0, 0, 0, 0.3607843137);\n}\n.iisys-left .tree-container .iisys-mat-list .iisys-mat-list-item .progress-wrapper .title-section {\n  font-size: 15px;\n  color: #222;\n}\n.iisys-left .tree-container .iisys-mat-list .iisys-mat-list-item .progress-wrapper .text-section {\n  color: #a3a3a3;\n  font-size: 15px;\n  margin: 0;\n  display: block;\n}\n.iisys-left .iisys-mat-list {\n  padding: 0 !important;\n  max-height: calc(100vh - 231px);\n  overflow-x: auto !important;\n}\n.iisys-left .iisys-mat-list .mat-tree-invisible {\n  display: none;\n}\n.iisys-left .iisys-mat-list .cdk-tree-node {\n  display: block;\n  position: relative;\n}\n.iisys-left .iisys-mat-list .cdk-tree-node:not(:first-child) {\n  border-top: solid 1px #f2f2f2;\n}\n.iisys-left .iisys-mat-list .cdk-tree-node:last-child {\n  border-bottom: solid 1px #f2f2f2;\n}\n.iisys-left .iisys-mat-list .cdk-tree-node:hover {\n  background: linear-gradient(104deg, #cadcea, #f5f5f5, #cadcea);\n  background-size: 600% 600%;\n  animation: iisys-list-hover 9s ease infinite;\n  box-shadow: inset 0 0 12px -8px rgba(0, 0, 0, 0.3607843137);\n}\n.iisys-left .iisys-mat-list .cdk-tree-node.lightGrey-bg {\n  background: linear-gradient(114deg, #ebebeb, #f5f5f5, #d2d2d2);\n  background-size: 180% 180%;\n  animation: gradient-animation 9s ease infinite;\n  box-shadow: inset 0 0 12px -8px rgba(0, 0, 0, 0.3607843137);\n}\n.iisys-left .iisys-mat-list .cdk-tree-node .iisys-mat-list-item {\n  border: 0;\n}\n.iisys-left .iisys-mat-list .cdk-tree-node .iisys-mat-list-item .progress-wrapper {\n  max-width: 90%;\n  overflow: hidden;\n}\n.iisys-left .iisys-mat-list .cdk-tree-node .iisys-mat-list-item:hover {\n  background: none;\n  animation: none;\n  box-shadow: none;\n}\n.iisys-left .iisys-mat-list .cdk-tree-node .mdc-icon-button {\n  position: absolute;\n  z-index: 1;\n  right: 0;\n  top: 24px;\n}\n.iisys-left .iisys-mat-list .cdk-tree-node .cdk-tree-node {\n  padding-left: 12px;\n}\n.iisys-left .iisys-mat-list .cdk-tree-node .cdk-tree-node:first-child {\n  border-top: solid 1px #f2f2f2;\n}\n.iisys-left .iisys-mat-list .cdk-tree-node .cdk-tree-node:last-child {\n  border-bottom: 0;\n}\n.iisys-left .iisys-mat-list .cdk-tree-node .cdk-tree-node .progress-wrapper {\n  max-width: none;\n}\n.iisys-left .iisys-mat-list .iisys-mat-list-item:hover {\n  background: linear-gradient(104deg, #cadcea, #f5f5f5, #cadcea);\n  background-size: 600% 600%;\n  animation: iisys-list-hover 9s ease infinite;\n  box-shadow: inset 0 0 12px -8px rgba(0, 0, 0, 0.3607843137);\n}\n.iisys-left .iisys-mat-list .iisys-mat-list-item.mousedown, .iisys-left .iisys-mat-list .iisys-mat-list-item:has(.mousedown) {\n  background: linear-gradient(109deg, #fbbcbb, #f5f5f5, #fdc8c7);\n  background-size: 600% 600%;\n  -webkit-animation: iisys-list-mousedown 5s ease infinite;\n  animation: iisys-list-mousedown 5s ease infinite;\n}\n.iisys-left .nothing-selected {\n  text-align: center;\n  font-size: 15px;\n  margin: auto;\n  padding-top: 32px;\n  color: lightgray;\n}\n.iisys-left .spalten-2 .iisys-mat-list-item span {\n  line-height: 20px !important;\n}\n\n.slide-toggle-menu .mat-mdc-menu-content {\n  padding: 12px 24px 12px 24px;\n}\n.slide-toggle-menu .mat-mdc-menu-content .mat-mdc-slide-toggle:not(:last-child) {\n  padding-bottom: 18px;\n}\n\n.iisys-right .btn-active {\n  color: white !important;\n  background: #01579b;\n  background: linear-gradient(124deg, #01579b, rgba(1, 87, 155, 0.81), #01579b);\n  background-size: 600% 600%;\n  animation: iisys-list-hover 9s ease infinite;\n  box-shadow: inset 0 0 12px -8px #01579b;\n}\n.iisys-right .btn-accent {\n  background: linear-gradient(104deg, #eacaca, #f5f5f5, #eacaca);\n  background-size: 600% 600%;\n  animation: iisys-list-hover 9s ease infinite;\n  box-shadow: inset 0 0 12px -9px rgb(230, 6, 10);\n}\n.iisys-right div.vis-panel.vis-center {\n  box-shadow: inset 6px 6px 12px 0px rgba(220, 220, 220, 0.5411764706);\n}\n.iisys-right .vis-item-content .progress-wrapper {\n  padding: 6px;\n}\n.iisys-right .vis-item-content .progress-wrapper .title {\n  font-weight: 600;\n  display: block;\n  margin: 0 0 4px;\n  font-size: 15px;\n}\n.iisys-right .vis-item-content .progress-wrapper p {\n  margin: 0px;\n  font-weight: 400;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.37);\n}\n.iisys-right .vis-view-controls {\n  border-bottom: 1px solid #f2f2f2;\n  padding-top: 11px;\n  padding-bottom: 11px;\n  margin-bottom: 0px;\n  box-shadow: 0px 6px 13px -9px rgba(0, 0, 0, 0.3882352941);\n  z-index: 99999;\n}\n.iisys-right .vis-view-controls .mat-mdc-slide-toggle {\n  display: flex;\n  margin-right: 24px;\n  margin-left: 12px;\n}\n.iisys-right .vis-view-controls .mat-button-toggle-group {\n  margin-right: 12px;\n  align-items: center;\n}\n.iisys-right .vis-view-controls .mat-button-toggle-group:last-child {\n  margin-right: 0;\n}\n.iisys-right .vis-view-controls .mat-button-toggle-group .mat-button-toggle-label-content {\n  line-height: 34px;\n  font-size: 14px;\n  color: var(--mdc-outlined-button-label-text-color, inherit);\n}\n.iisys-right #timeline {\n  padding: 4px;\n}\n.iisys-right .timeline-content {\n  padding: 0 !important;\n}\n.iisys-right .vis-item.vis-selected.setupTime {\n  background-color: #c70b0b;\n  border-color: #a2a291;\n}\n.iisys-right .vis-item.setupTime {\n  border-color: black;\n  background-color: rgba(199, 11, 11, 0.53);\n}\n.iisys-right .vis-group-level-unknown-but-gte1 {\n  border: none;\n  background-color: rgba(246, 2, 2, 0.47);\n}\n.iisys-right .vis-drag-left, .iisys-right .vis-drag-right {\n  display: none;\n}\n.iisys-right .vis-item .vis-item-content {\n  white-space: nowrap;\n  box-sizing: border-box;\n  padding: 2px;\n}\n.iisys-right .vis-timeline {\n  border: none;\n  font-size: 12pt;\n  background: #ffffff;\n}\n.iisys-right .vis-timeline p.content-section {\n  text-align: end;\n  margin-left: 4px;\n}\n.iisys-right .vis-timeline .group-section {\n  grid-column: span 2;\n}\n.iisys-right .vis-item {\n  border-radius: 6px !important;\n}\n.iisys-right .vis-item.colored {\n  background: linear-gradient(104deg, #d2e1ee, #f5f5f5, #c5eadb);\n  background-size: 500% 500%;\n  box-shadow: inset 0 0 12px -8px rgba(0, 0, 0, 0.3607843137);\n  border-color: #c0d0de;\n}\n.iisys-right .vis-item.vis-selected.colored {\n  background: linear-gradient(109deg, #fbbcbb, #f5f5f5, #fdc8c7);\n  background-size: 600% 600%;\n  -webkit-animation: iisys-list-mousedown 5s ease infinite;\n  animation: iisys-list-mousedown 5s ease infinite;\n  box-shadow: inset 0 0 12px -8px rgba(0, 0, 0, 0.3607843137);\n  border-color: #e7a9a8;\n}\n.iisys-right .vis-labelset .vis-label {\n  display: flex;\n  align-items: center;\n  border-color: #ebebeb;\n  border-bottom: 1px solid #ebebeb;\n  color: #2a70a4;\n  font-size: 14px;\n  font-weight: 500 !important;\n  line-height: 22px;\n  padding-left: 12px;\n  background: #fcfcfc;\n}\n.iisys-right .vis-labelset .vis-label.vis-nested-group .vis-inner {\n  padding-left: 24px;\n  width: 192px;\n}\n.iisys-right .vis-labelset .vis-label:not(.vis-nesting-group):not(.vis-group-level-0) {\n  color: #1a1a1a;\n  background-color: white;\n  font-size: 14px;\n  line-height: 28px;\n  font-weight: 400 !important;\n}\n.iisys-right .vis-time-axis .vis-text {\n  color: #a3a3a3;\n  font-size: 14px;\n  font-weight: 400;\n}\n.iisys-right .vis-time-axis .vis-text.vis-minor {\n  color: #1a1a1a;\n  font-size: 15px;\n  font-weight: 600;\n}\n\n.gradient-background {\n  background: linear-gradient(114deg, #ebebeb, #f5f5f5, #d2d2d2);\n  background-size: 180% 180%;\n  animation: gradient-animation 9s ease infinite;\n}\n\n@media (prefers-color-scheme: dark) {\n  body {\n    background-color: black;\n    color: white;\n  }\n  .green-bg {\n    background-color: #5daf55 !important;\n  }\n  .vis-timeline {\n    border: 2px solid #8d99a6;\n    font-size: 12pt;\n    color: white;\n    background: #000000;\n  }\n  .vis-item.vis-selected.colored {\n    background-color: rgba(255, 255, 255, 0.6);\n    border-color: #a2a291;\n  }\n  .vis-item.colored {\n    border-color: black;\n    background-color: rgb(255, 255, 255);\n  }\n  .vis-labelset .vis-label {\n    color: white;\n  }\n  .vis-ltr .vis-label:not(.vis-nesting-group):not(.vis-group-level-0) {\n    color: white;\n    background-color: black;\n  }\n  .vis-time-axis .vis-text {\n    color: white;\n  }\n}\n.filter-active {\n  background-color: lightgreen !important;\n  color: gray !important;\n}\n\n.filter-not-active {\n  background-color: lightgray !important;\n  color: black !important;\n}\n\n.loader {\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  display: block;\n  margin: 15px auto;\n  position: relative;\n  color: #912525;\n  left: -100px;\n  box-sizing: border-box;\n  animation: shadowRolling 2s linear infinite;\n}\n\n@keyframes shadowRolling {\n  0% {\n    box-shadow: 0px 0 rgba(255, 255, 255, 0), 0px 0 rgba(255, 255, 255, 0), 0px 0 rgba(255, 255, 255, 0), 0px 0 rgba(255, 255, 255, 0);\n  }\n  12% {\n    box-shadow: 100px 0 black, 0px 0 rgba(255, 255, 255, 0), 0px 0 rgba(255, 255, 255, 0), 0px 0 rgba(255, 255, 255, 0);\n  }\n  25% {\n    box-shadow: 110px 0 black, 100px 0 black, 0px 0 rgba(255, 255, 255, 0), 0px 0 rgba(255, 255, 255, 0);\n  }\n  36% {\n    box-shadow: 120px 0 black, 110px 0 black, 100px 0 black, 0px 0 rgba(255, 255, 255, 0);\n  }\n  50% {\n    box-shadow: 130px 0 black, 120px 0 black, 110px 0 black, 100px 0 black;\n  }\n  62% {\n    box-shadow: 200px 0 rgba(255, 255, 255, 0), 130px 0 black, 120px 0 black, 110px 0 black;\n  }\n  75% {\n    box-shadow: 200px 0 rgba(255, 255, 255, 0), 200px 0 rgba(255, 255, 255, 0), 130px 0 black, 120px 0 black;\n  }\n  87% {\n    box-shadow: 200px 0 rgba(255, 255, 255, 0), 200px 0 rgba(255, 255, 255, 0), 200px 0 rgba(255, 255, 255, 0), 130px 0 black;\n  }\n  100% {\n    box-shadow: 200px 0 rgba(255, 255, 255, 0), 200px 0 rgba(255, 255, 255, 0), 200px 0 rgba(255, 255, 255, 0), 200px 0 rgba(255, 255, 255, 0);\n  }\n}\n.tgb-left {\n  border: none !important;\n}\n.tgb-left button {\n  border-top-left-radius: 4px;\n  border-bottom-left-radius: 4px;\n  border: 1px solid #e0e0e0;\n  border-right: none;\n}\n\n.tgb-middle {\n  border: none !important;\n}\n.tgb-middle button {\n  border: none !important;\n  border-left: 1px solid #e0e0e0 !important;\n  border-top: 1px solid #e0e0e0 !important;\n  border-bottom: 1px solid #e0e0e0 !important;\n}\n\n.tgb-single {\n  display: flex;\n  flex-direction: column;\n  border: 1px solid #e0e0e0 !important;\n  border-radius: 4px;\n  height: 100% !important;\n}\n.tgb-single mat-icon {\n  font-size: 24px !important;\n  height: 24px !important;\n  width: 24px !important;\n  padding: 2px;\n}\n.tgb-single span {\n  font-size: 10px;\n  font-weight: 500;\n  color: #a3a3a3;\n  text-transform: uppercase !important;\n  letter-spacing: normal;\n}\n.tgb-single.cdk-mouse-focused {\n  background-color: #1d569a;\n}\n.tgb-single.cdk-mouse-focused mat-icon {\n  color: #fff;\n}\n.tgb-single.cdk-mouse-focused span {\n  color: #fff;\n}\n\n.tgb-right {\n  border: none !important;\n}\n.tgb-right button {\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  border: 1px solid #e0e0e0;\n}\n\n.btn-toolbar, .btn-toolbar button {\n  height: 100%;\n}\n\n.icon-btn-toolbar .mat-icon {\n  margin-top: -8px;\n  color: #222;\n}\n.icon-btn-toolbar.mat-button-toggle-checked {\n  border-color: #e0e0e0 !important;\n}\n.icon-btn-toolbar.mat-button-toggle-checked.tgb-right {\n  border-top-right-radius: 7px !important;\n  border-bottom-right-radius: 7px !important;\n}\n.icon-btn-toolbar.mat-button-toggle-checked.tgb-left {\n  border-top-left-radius: 7px !important;\n  border-bottom-left-radius: 7px !important;\n}\n.icon-btn-toolbar.mat-button-toggle-checked .mat-icon, .icon-btn-toolbar.mat-button-toggle-checked .icon-btn-toolbar-text {\n  color: white !important;\n}\n\n.icon-btn-toolbar-text {\n  display: block;\n  margin-top: -17px;\n  font-size: 10px;\n  margin-bottom: -10px;\n  font-weight: 500;\n  color: #a3a3a3;\n  text-transform: uppercase;\n}\n\n.mdc-button {\n  flex-direction: column;\n}\n.mdc-button .icon-btn-toolbar-text {\n  margin: 0;\n}","@import \"../../../styles/animations.scss\";\r\n\r\n.green-bg {\r\n  background-color: #5daf55 !important;\r\n}\r\n.iisys-vis-card {\r\n  display: grid !important;\r\n  gap:24px;\r\n  grid-template-columns: 35% 10px auto;\r\n}\r\n.iisys-container {\r\n  padding: 14px;\r\n}\r\n#rightdragbar {\r\n  background-color: transparent;\r\n  cursor: ew-resize;\r\n  display: flex;\r\n  justify-content: center;\r\n  #dragbar-inner {\r\n    background-color: lightgray;\r\n    background-image: linear-gradient(0deg, #eeeeee, #c5c5c5, #eeeeee);\r\n    width: 2px;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-shadow: 0 0 12px #0000001c;\r\n    #dragbar-nubsi {\r\n      width: 6px;\r\n      height: 6%;\r\n      border: 1px solid #c5c5c5;\r\n      position: absolute;\r\n      border-radius: 20px;\r\n      background: #e5e5e5;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n\r\n      #dragbar-nubsi-inner {\r\n        width: 2px;\r\n        height: 32%;\r\n        border-radius: 20px;\r\n        background: rgba(152, 152, 152, 0.75);\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n\r\n.menu-backdrop {\r\n  backdrop-filter:  saturate(20%) brightness(95%);\r\n}\r\n\r\n.mat-mdc-card-title {\r\n  font-weight: 500;\r\n  letter-spacing: 0.05rem;\r\n  font-size: 1.1rem;\r\n}\r\n.mat-mdc-card-header:not(.display-setting) {\r\n  border-bottom: 1px solid #f2f2f2;\r\n  padding-bottom: 12px;\r\n  margin-bottom: 12px;\r\n  box-shadow: 0px 6px 13px -9px #00000063;\r\n}\r\n\r\n.display-setting {\r\n  padding-top: 0;\r\n  .mat-mdc-card-header-text {\r\n    width: 100%;\r\n    h3 {\r\n      font-weight: 500;\r\n      margin: 6px 0;\r\n      padding-left: 12px;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n    }\r\n  }\r\n}\r\n\r\n.iisys-left {\r\n  display: grid;\r\n  gap: 12px;\r\n  grid-template-columns: 100%;\r\n  grid-template-rows: auto 1fr;\r\n  .spalten {\r\n    flex-grow: 1;\r\n    display: grid;\r\n    gap: 12px;\r\n    grid-template-columns: repeat(auto-fill, calc(50% - 6px));\r\n    grid-template-rows: auto;\r\n\r\n    .header-section {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  .mat-button-toggle-group:first-child {\r\n    height: min-content;\r\n    padding-bottom: 0px;\r\n    grid-column: span 2;\r\n    width: 100%;\r\n      .mat-button-toggle {\r\n        width: 50%;\r\n\r\n        span {\r\n          padding: 12px 8px;\r\n          line-height: normal;\r\n          white-space: normal;\r\n        }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  .tree-container {\r\n    max-height: calc(100vh - 287px);\r\n    overflow-y: auto; /* Enable vertical scroll */\r\n    \r\n    .iisys-mat-list {\r\n      max-height: none;\r\n      \r\n      &::-webkit-scrollbar {\r\n        display: none;\r\n      }\r\n\r\n      .iisys-mat-list-item {\r\n        padding: 6px 12px;\r\n        height: auto !important;\r\n        border-bottom: solid 1px #f2f2f2;\r\n        line-height: 24px;\r\n    \r\n        &.lightGrey-bg {\r\n          background: linear-gradient(114deg,#ebebeb,#f5f5f5,#d2d2d2);\r\n          background-size: 180% 180%;\r\n          animation: gradient-animation 9s ease infinite;\r\n          box-shadow: inset 0 0 12px -8px #0000005c;\r\n        }\r\n    \r\n        .progress-wrapper {\r\n          .title-section {\r\n            font-size: 15px;\r\n            color: #222;\r\n          }\r\n    \r\n          .text-section {\r\n            color: #a3a3a3;\r\n            font-size: 15px;\r\n            margin: 0;\r\n            display: block;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  .iisys-mat-list {\r\n    padding: 0 !important;\r\n    max-height: calc(100vh - 231px);\r\n    overflow-x: auto !important;\r\n\r\n    .mat-tree-invisible {\r\n      display: none;\r\n    }\r\n\r\n    .cdk-tree-node {\r\n      display: block;\r\n      position: relative;\r\n      \r\n      &:not(:first-child) {\r\n        border-top: solid 1px #f2f2f2;\r\n      }\r\n\r\n      &:last-child {\r\n        border-bottom: solid 1px #f2f2f2;\r\n      }\r\n\r\n      &:hover {\r\n        background: linear-gradient(104deg, #cadcea, #f5f5f5, #cadcea);\r\n        background-size: 600% 600%;\r\n        animation: iisys-list-hover 9s ease infinite;\r\n        box-shadow: inset 0 0 12px -8px #0000005c;\r\n      }\r\n\r\n      &.lightGrey-bg {\r\n        background: linear-gradient(114deg,#ebebeb,#f5f5f5,#d2d2d2);\r\n        background-size: 180% 180%;\r\n        animation: gradient-animation 9s ease infinite;\r\n        box-shadow: inset 0 0 12px -8px #0000005c;\r\n      }\r\n\r\n      .iisys-mat-list-item {\r\n        border: 0;\r\n\r\n        .progress-wrapper {\r\n          max-width: 90%;\r\n          overflow: hidden;\r\n        }\r\n  \r\n          &:hover{\r\n            background: none;\r\n            animation: none;\r\n            box-shadow: none;\r\n          }\r\n      }\r\n\r\n      .mdc-icon-button {\r\n        position: absolute;\r\n        z-index: 1;\r\n        right: 0;\r\n        top: 24px; //To Do - current position is not generic, 50% will not work because of expanded children, find better solution\r\n      }\r\n\r\n      .cdk-tree-node {\r\n        padding-left: 12px;\r\n\r\n        &:first-child {\r\n          border-top: solid 1px #f2f2f2;\r\n        }\r\n\r\n        &:last-child {\r\n          border-bottom: 0;\r\n        }\r\n\r\n        .progress-wrapper {\r\n          max-width: none;\r\n        }\r\n      }\r\n    }\r\n    \r\n    .iisys-mat-list-item {\r\n      &:hover{\r\n        background: linear-gradient(104deg, #cadcea, #f5f5f5, #cadcea);\r\n        background-size: 600% 600%;\r\n        animation: iisys-list-hover 9s ease infinite;\r\n        box-shadow: inset 0 0 12px -8px #0000005c;\r\n      }\r\n      &.mousedown, &:has(.mousedown) {\r\n        background: linear-gradient(109deg, #fbbcbb, #f5f5f5, #fdc8c7);\r\n        background-size: 600% 600%;\r\n        -webkit-animation: iisys-list-mousedown 5s ease infinite;\r\n        animation: iisys-list-mousedown 5s ease infinite;\r\n      }\r\n    }\r\n  }\r\n\r\n  .nothing-selected {\r\n    text-align: center;\r\n    font-size: 15px;\r\n    margin: auto;\r\n    padding-top: 32px;\r\n    color: lightgray;\r\n  }\r\n\r\n  .spalten-2 .iisys-mat-list-item {\r\n    span {\r\n      line-height: 20px !important;\r\n    }\r\n  }\r\n}\r\n\r\n.slide-toggle-menu {\r\n\r\n  .mat-mdc-menu-content {\r\n    padding: 12px 24px 12px 24px;\r\n    .mat-mdc-slide-toggle:not(:last-child) {\r\n      padding-bottom: 18px;\r\n    }\r\n  }\r\n\r\n}\r\n.iisys-right{\r\n  .btn-active {\r\n    color: white !important;\r\n    background: #01579b;\r\n    background: linear-gradient(124deg, #01579b, rgba(1, 87, 155, 0.81), #01579b);\r\n    background-size: 600% 600%;\r\n    animation: iisys-list-hover 9s ease infinite;\r\n    box-shadow: inset 0 0 12px -8px #01579b;\r\n  }\r\n  .btn-accent {\r\n    background: linear-gradient(104deg, #eacaca, #f5f5f5, #eacaca);\r\n    background-size: 600% 600%;\r\n    animation: iisys-list-hover 9s ease infinite;\r\n    box-shadow: inset 0 0 12px -9px rgb(230, 6, 10);\r\n  }\r\n  div.vis-panel.vis-center {\r\n    box-shadow: inset 6px 6px 12px 0px #dcdcdc8a;\r\n  }\r\n  .vis-item-content {\r\n    .progress-wrapper {\r\n      padding: 6px;\r\n      .title {\r\n        font-weight: 600;\r\n        display: block;\r\n        margin: 0 0 4px;\r\n        font-size: 15px;\r\n      }\r\n      p {\r\n        margin: 0px;\r\n        font-weight: 400;\r\n        font-size: 14px;\r\n        color: rgba(0, 0, 0, 0.37);\r\n      }\r\n    }\r\n  }\r\n  .vis-view-controls {\r\n    border-bottom: 1px solid #f2f2f2;\r\n    padding-top: 11px;\r\n    padding-bottom: 11px;\r\n    margin-bottom: 0px;\r\n    box-shadow: 0px 6px 13px -9px rgba(0, 0, 0, 0.3882352941);\r\n    z-index: 99999;\r\n\r\n\r\n    .mat-mdc-slide-toggle {\r\n      display: flex;\r\n      margin-right: 24px;\r\n      margin-left: 12px;\r\n    }\r\n    .mat-button-toggle-group {\r\n      margin-right: 12px;\r\n      align-items: center;\r\n      &:last-child {\r\n        margin-right: 0;\r\n      }\r\n      .mat-button-toggle-label-content {\r\n        line-height: 34px;\r\n        font-size: 14px;\r\n        color: var(--mdc-outlined-button-label-text-color, inherit);\r\n      }\r\n    }\r\n  }\r\n  #timeline {\r\n    padding: 4px;\r\n  }\r\n  .timeline-content {\r\n    padding: 0 !important;\r\n  }\r\n\r\n  .vis-item.vis-selected.setupTime {\r\n    background-color: #c70b0b;\r\n    border-color: #a2a291;\r\n  }\r\n\r\n  .vis-item.setupTime {\r\n    border-color: black;\r\n    background-color: rgba(199, 11, 11, 0.53);\r\n  }\r\n\r\n  .vis-group-level-unknown-but-gte1 {\r\n    border: none;\r\n    background-color: rgba(246, 2, 2, 0.47);\r\n  }\r\n\r\n  .vis-drag-left, .vis-drag-right {\r\n    display: none;\r\n  }\r\n\r\n\r\n  .vis-item .vis-item-content {\r\n    white-space : nowrap;\r\n    box-sizing : border-box;\r\n    padding : 2px;\r\n  }\r\n\r\n\r\n\r\n  .vis-timeline {\r\n    border: none;\r\n    font-size: 12pt;\r\n    background: #ffffff;\r\n\r\n    p.content-section {\r\n      text-align: end;\r\n      margin-left: 4px;\r\n    }\r\n\r\n    .group-section {\r\n      grid-column: span 2;\r\n    }\r\n  }\r\n\r\n  .vis-item{\r\n    border-radius: 6px !important;\r\n    &.colored {\r\n      background: linear-gradient(104deg, #d2e1ee, #f5f5f5, #c5eadb);\r\n      background-size: 500% 500%;\r\n      box-shadow: inset 0 0 12px -8px #0000005c;\r\n      border-color: #c0d0de;\r\n\r\n    }\r\n    &.vis-selected.colored {\r\n      background: linear-gradient(109deg, #fbbcbb, #f5f5f5, #fdc8c7);\r\n      background-size: 600% 600%;\r\n      -webkit-animation: iisys-list-mousedown 5s ease infinite;\r\n      animation: iisys-list-mousedown 5s ease infinite;\r\n      box-shadow: inset 0 0 12px -8px #0000005c;\r\n      border-color: #e7a9a8;\r\n    }\r\n  }\r\n\r\n\r\n  .vis-labelset .vis-label {\r\n    display: flex;\r\n    align-items: center;\r\n    &.vis-nested-group .vis-inner {\r\n      padding-left: 24px;\r\n      width: 192px;\r\n\r\n    }\r\n    border-color:#ebebeb;\r\n    border-bottom: 1px solid #ebebeb;\r\n    color: #2a70a4;\r\n    font-size: 14px;\r\n    font-weight:500 !important;\r\n    line-height: 22px;\r\n    padding-left: 12px;\r\n    background: #fcfcfc;\r\n    &:not(.vis-nesting-group):not(.vis-group-level-0) {\r\n      color: #1a1a1a;\r\n      background-color: white;\r\n      font-size: 14px;\r\n      line-height: 28px;\r\n      font-weight: 400 !important;;\r\n    }\r\n  }\r\n\r\n  .vis-time-axis {\r\n    .vis-text {\r\n      color: #a3a3a3;\r\n      font-size: 14px;\r\n      font-weight: 400;\r\n      &.vis-minor {\r\n        color: #1a1a1a;\r\n        font-size: 15px;\r\n        font-weight: 600;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.gradient-background {\r\n  background: linear-gradient(114deg,#ebebeb,#f5f5f5,#d2d2d2);\r\n  background-size: 180% 180%;\r\n  animation: gradient-animation 9s ease infinite;\r\n}\r\n@media (prefers-color-scheme: dark) {\r\n  body {\r\n    background-color: black;\r\n    color: white;\r\n  }\r\n\r\n  .green-bg {\r\n    background-color: #5daf55 !important;\r\n  }\r\n  .vis-timeline {\r\n    border: 2px solid #8d99a6;\r\n    font-size: 12pt;\r\n    color: white;\r\n    background: #000000;\r\n  }\r\n\r\n  .vis-item.vis-selected.colored {\r\n    background-color: rgba(255, 255, 255, 0.6);\r\n    border-color: #a2a291;\r\n  }\r\n\r\n  .vis-item.colored {\r\n    border-color: black;\r\n    background-color: rgb(255, 255, 255);\r\n  }\r\n  .vis-labelset .vis-label {\r\n    color: white;\r\n  }\r\n  .vis-ltr .vis-label:not(.vis-nesting-group):not(.vis-group-level-0) {\r\n    color: white;\r\n    background-color: black;\r\n  }\r\n\r\n  .vis-time-axis .vis-text {\r\n    color: white;\r\n  }\r\n}\r\n\r\n.filter-active {\r\n  background-color: lightgreen !important;\r\n  color: gray !important;\r\n}\r\n\r\n.filter-not-active {\r\n  background-color: lightgray !important;\r\n  color: black !important;\r\n}\r\n\r\n.loader {\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 50%;\r\n  display: block;\r\n  margin:15px auto;\r\n  position: relative;\r\n  color: #912525;\r\n  left: -100px;\r\n  box-sizing: border-box;\r\n  animation: shadowRolling 2s linear infinite;\r\n}\r\n\r\n@keyframes shadowRolling {\r\n  0% {\r\n    box-shadow: 0px 0 rgba(255, 255, 255, 0), 0px 0 rgba(255, 255, 255, 0), 0px 0 rgba(255, 255, 255, 0), 0px 0 rgba(255, 255, 255, 0);\r\n  }\r\n  12% {\r\n    box-shadow: 100px 0 black, 0px 0 rgba(255, 255, 255, 0), 0px 0 rgba(255, 255, 255, 0), 0px 0 rgba(255, 255, 255, 0);\r\n  }\r\n  25% {\r\n    box-shadow: 110px 0 black, 100px 0 black, 0px 0 rgba(255, 255, 255, 0), 0px 0 rgba(255, 255, 255, 0);\r\n  }\r\n  36% {\r\n    box-shadow: 120px 0 black, 110px 0 black, 100px 0 black, 0px 0 rgba(255, 255, 255, 0);\r\n  }\r\n  50% {\r\n    box-shadow: 130px 0 black, 120px 0 black, 110px 0 black, 100px 0 black;\r\n  }\r\n  62% {\r\n    box-shadow: 200px 0 rgba(255, 255, 255, 0), 130px 0 black, 120px 0 black, 110px 0 black;\r\n  }\r\n  75% {\r\n    box-shadow: 200px 0 rgba(255, 255, 255, 0), 200px 0 rgba(255, 255, 255, 0), 130px 0 black, 120px 0 black;\r\n  }\r\n  87% {\r\n    box-shadow: 200px 0 rgba(255, 255, 255, 0), 200px 0 rgba(255, 255, 255, 0), 200px 0 rgba(255, 255, 255, 0), 130px 0 black;\r\n  }\r\n  100% {\r\n    box-shadow: 200px 0 rgba(255, 255, 255, 0), 200px 0 rgba(255, 255, 255, 0), 200px 0 rgba(255, 255, 255, 0), 200px 0 rgba(255, 255, 255, 0);\r\n  }\r\n}\r\n\r\n\r\n.tgb-left {\r\n  border: none !important;\r\n  button{\r\n    border-top-left-radius: 4px;\r\n    border-bottom-left-radius: 4px;\r\n    border:1px solid #e0e0e0 ;\r\n    border-right: none;\r\n  }\r\n}\r\n  .tgb-middle {\r\n    border: none !important;\r\n    button{\r\n      border: none !important;\r\n       border-left: 1px solid #e0e0e0 !important;\r\n      border-top: 1px solid #e0e0e0 !important;\r\n      border-bottom: 1px solid #e0e0e0 !important;\r\n     }\r\n  }\r\n\r\n\r\n.tgb-single {\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid #e0e0e0 !important;\r\n  border-radius: 4px;\r\n  height: 100% !important;\r\n  mat-icon {\r\n    font-size: 24px !important;\r\n    height: 24px !important;\r\n    width: 24px !important;\r\n    padding: 2px;\r\n  }\r\n\r\n  span {\r\n    font-size: 10px;\r\n    font-weight: 500;\r\n    color: #a3a3a3;\r\n    text-transform: uppercase !important;\r\n    letter-spacing: normal;\r\n  }\r\n  &.cdk-mouse-focused {\r\n    background-color: #1d569a;\r\n    mat-icon {\r\n      color: #fff;\r\n    }\r\n    span {\r\n      color: #fff;\r\n    }\r\n  }\r\n}\r\n\r\n  .tgb-right {\r\n    border: none !important;\r\n    button{\r\n      border-top-right-radius: 4px;\r\n      border-bottom-right-radius: 4px;\r\n      border:1px solid #e0e0e0 ;\r\n    }\r\n  }\r\n .btn-toolbar, .btn-toolbar button {\r\n   height: 100%;\r\n\r\n }\r\n.icon-btn-toolbar {\r\n  .mat-icon {\r\n    margin-top: -8px;\r\n    color: #222;\r\n  }\r\n  &.mat-button-toggle-checked{\r\n    border-color: #e0e0e0 !important;\r\n    &.tgb-right {\r\n      border-top-right-radius: 7px !important;\r\n      border-bottom-right-radius: 7px !important;\r\n    }\r\n    &.tgb-left {\r\n      border-top-left-radius: 7px !important;\r\n      border-bottom-left-radius: 7px !important;\r\n    }\r\n\r\n  }\r\n\r\n  &.mat-button-toggle-checked .mat-icon, &.mat-button-toggle-checked .icon-btn-toolbar-text {\r\n    color: white !important;\r\n  }\r\n}\r\n.icon-btn-toolbar-text {\r\n  display: block;\r\n  margin-top: -17px;\r\n  font-size: 10px;\r\n  margin-bottom: -10px;\r\n  font-weight: 500;\r\n  color: #a3a3a3;\r\n  text-transform: uppercase;\r\n}\r\n.mdc-button {\r\n  flex-direction: column;\r\n\r\n  .icon-btn-toolbar-text {\r\n    margin: 0;\r\n  }\r\n}"],"sourceRoot":""}]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ 7311:
/*!********************************************************************************************!*\
  !*** ./apps/web-app/src/app/core/components/list-item/list-item.component.html?ngResource ***!
  \********************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div *ngIf=\"listHtml\" class=\"iisys-mat-list-item\" [innerHTML]=\"listHtml[index] | sanitizeHtml\" (click)=\"clickListItem.emit()\" [draggable]=\"isDraggable\"\r\n    [ngClass]=\"{'disabled': isDisabled, 'lightGrey-bg': isClass}\"\r\n    (mousedown)=\"mouseDownListItem.emit($event)\"\r\n    (mouseup)=\"mouseUpListItem.emit($event)\"\r\n    (dragstart)=\"dragStartListItem.emit($event)\"\r\n    (dragend)=\"dragEndListItem.emit($event)\"></div>";

/***/ }),

/***/ 2893:
/*!**************************************************************************************************!*\
  !*** ./apps/web-app/src/app/core/components/search-field/search-field.component.html?ngResource ***!
  \**************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<mat-form-field class=\"search-field\" appearance=\"outline\">\r\n    <mat-label>{{label}}</mat-label>\r\n    <input type=\"search\" matInput [placeholder]=\"placeholder\" (keyup)=\"onSearch($event)\" #searchInput>\r\n    <mat-icon matSuffix>search</mat-icon>\r\n</mat-form-field>\r\n";

/***/ }),

/***/ 7242:
/*!*************************************************************************************************************!*\
  !*** ./apps/web-app/src/app/gantt demo/customization-dialog/customization-dialog.component.html?ngResource ***!
  \*************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<h2 mat-dialog-title>Auftrag-Nr.{{orderNumber}}</h2>\r\n\r\n<mat-dialog-content style=\"display: flex; flex-direction: column\" [formGroup]=\"form\">\r\n  <mat-tab-group animationDuration=\"400ms\">\r\n    <mat-tab label=\"Einstellungen\">\r\n      <mat-form-field>\r\n        <mat-label>Setze Startdatum</mat-label>\r\n        <input matInput [ngxMatDatetimePicker]=\"startDatepicker\" formControlName=\"startDate\">\r\n        <mat-datepicker-toggle matSuffix [for]=\"$any(startDatepicker)\"></mat-datepicker-toggle>\r\n        <ngx-mat-datetime-picker #startDatepicker [showSpinners]=\"true\" [showSeconds]=\"false\" [enableMeridian]=\"false\">\r\n        </ngx-mat-datetime-picker>\r\n        <small style=\"color: red\" *ngIf=\"!validateStartDate(moment(form.get('startDate').value).toDate())\">Bitte Startdatum bzw. Reihenfolge der Arbeitsgänge beachten</small>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <mat-label>Setze Enddatum</mat-label>\r\n        <input matInput [ngxMatDatetimePicker]=\"endDatepicker\" formControlName=\"endDate\">\r\n        <mat-datepicker-toggle matSuffix [for]=\"$any(endDatepicker)\"></mat-datepicker-toggle>\r\n        <ngx-mat-datetime-picker #endDatepicker [showSpinners]=\"true\" [showSeconds]=\"false\" [enableMeridian]=\"false\">\r\n        </ngx-mat-datetime-picker>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <button\r\n          mat-icon-button\r\n          matPrefix\r\n          (click)=\"decrementPercentValueOfDate()\"\r\n          [disabled]=\"shouldDisableDecrementPercentValueOfDate()\">\r\n          <mat-icon>remove</mat-icon>\r\n        </button>\r\n        <mat-label>Dauer in % erhöhen</mat-label>\r\n        <input (change)=\"disableDatePicker()\" style=\"text-align: center;\" matInput type=\"number\" formControlName=\"durationPercentOfDate\" />\r\n        <button\r\n          mat-icon-button\r\n          matSuffix\r\n          (click)=\"incrementPercentValueOfDate()\">\r\n          <mat-icon>add</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <mat-label>Maschinengruppe</mat-label>\r\n        <mat-select [formControl]=\"mgFromControl\">\r\n          <mat-option *ngFor=\"let group of allowedGroups\" [value]=\"group.id\">{{group.content}}</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </mat-tab>\r\n    <mat-tab label=\"Aufträge\" *ngIf=\"subOrders.length > 0\">\r\n      <mat-list class=\"items-list\">\r\n        <mat-list-item *ngFor=\"let order of subOrders\">{{order.content}}</mat-list-item>\r\n      </mat-list>\r\n    </mat-tab>\r\n\r\n\r\n  </mat-tab-group>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n  <button mat-raised-button [mat-dialog-close]=\"null\">Schließen</button>\r\n  <button mat-raised-button [disabled]=\"validateData()\" [mat-dialog-close]=\"sendFormValue()\" color=\"primary\">Speichern</button>\r\n  <button mat-raised-button [mat-dialog-close]=\"setDeleteItem()\" color=\"warn\">Element löschen</button>\r\n</mat-dialog-actions>\r\n";

/***/ }),

/***/ 7929:
/*!***********************************************************************************************!*\
  !*** ./apps/web-app/src/app/gantt demo/delete-dialog/delete-dialog.component.html?ngResource ***!
  \***********************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<h2 mat-dialog-title>Lösch-Optionen</h2>\r\n\r\n<mat-dialog-actions>\r\n  <button mat-raised-button [mat-dialog-close]=\"null\">Schließen</button>\r\n  <button mat-raised-button (click)=\"onSelectionDeleteClicked()\" [mat-dialog-close]=\"\" color=\"primary\">Selektierte Balken löschen</button>\r\n  <button mat-raised-button (click)=\"onNextBarsDeleteClicked()\" [mat-dialog-close]=\"\" color=\"primary\">Nachfolgende Balken löschen</button>\r\n  <button mat-raised-button (click)=\"onPlanningDeleteClicked()\" [mat-dialog-close]=\"\" color=\"primary\">Komplette Planung löschen</button>\r\n</mat-dialog-actions>\r\n";

/***/ }),

/***/ 5828:
/*!***********************************************************************************************!*\
  !*** ./apps/web-app/src/app/gantt demo/filter-dialog/filter-dialog.component.html?ngResource ***!
  \***********************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<h2 mat-dialog-title>Filter-Möglichkeiten</h2>\r\n\r\n<mat-dialog-content style=\"display: flex; flex-direction: column\" [formGroup]=\"form\">\r\n\r\n  <mat-form-field id=\"data-pw-msgFilter-input\">\r\n    <mat-label id=\"data-pw-msgFilter-input-label\">Maschinengruppen</mat-label>\r\n    <mat-select id=\"data-pw-msgFilter-input-select\" [formControl]=\"mgFromControl\" multiple>\r\n      <mat-option id=\"data-pw-msgFilter-input-select-option\" style=\"background-color: white\">\r\n        <ngx-mat-select-search [formControl]=\"mgFilterCtrl\"></ngx-mat-select-search>\r\n      </mat-option>\r\n      <mat-option  *ngFor=\"let machineGroup of filteredMgsMulti | async\" [value]=\"machineGroup\" (click)=\"togglePerOne()\">{{machineGroup.name}}</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n  <mat-checkbox id=\"data-pw-msgFilter-toggleAllSelection-checkbox\" (change)=\"toggleAllSelection()\" [formControl]=\"selectAllMsg\">Alles auswählen</mat-checkbox>\r\n  <mat-checkbox id=\"data-pw-msgFilter-toogleFromOrderSelection-checkbox\" *ngIf=\"allStepsOfProduct\" (change)=\"toggleFromOrderSelection()\" [formControl]=\"selectMsgFromOrder\">An ausgewählten Auftrag anpassen</mat-checkbox>\r\n\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n  <button mat-raised-button id=\"data-pw-msgFilter-close-button\" [mat-dialog-close]=\"null\">Schließen</button>\r\n  <button mat-raised-button id=\"data-pw-msgFilter-save-button\" (click)=\"setChosenMgsToLocalStorage()\" [mat-dialog-close]=\"sendFormValue()\" color=\"primary\" [disabled]=\"disableSave()\">Speichern</button>\r\n</mat-dialog-actions>\r\n";

/***/ }),

/***/ 2429:
/*!***********************************************************************************************************************!*\
  !*** ./apps/web-app/src/app/gantt demo/suborders-planning-dialog/suborders-planning-dialog.component.html?ngResource ***!
  \***********************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<h2 mat-dialog-title>Planung</h2>\r\n\r\n<mat-dialog-content style=\"display: flex; flex-direction: column\" [formGroup]=\"form\">\r\n\r\n  <mat-form-field *ngIf=\"subordersAmount > 0\">\r\n    <mat-label>Anzahl der zu planenden Container</mat-label>\r\n    <input id=\"data-pw-numberOfPlannedContainers\" matInput type=\"number\" [min]=\"ordersLeft > 0 ? 1 : 0\" [max]=\"ordersLeft\" [formControl]=\"ordersAmountToBePlanned\">\r\n    <mat-hint *ngIf=\"ordersLeft > 0\" align=\"start\"><strong>Die eingegebene Zahl muss zwischen 1 und {{ordersLeft}} liegen</strong> </mat-hint>\r\n    <mat-hint *ngIf=\"ordersLeft === 0\" align=\"start\"><strong>Alle Teilaufträge (Behälter) sind verplant</strong> </mat-hint>\r\n  </mat-form-field>\r\n\r\n  <mat-checkbox formControlName=\"setupTimeChecked\">Rüstzeit berücksichtigen</mat-checkbox>\r\n\r\n  <mat-checkbox formControlName=\"collectiveOrder\">Handelt es sich um einen Sammelauftrag? (Produktionsdauer unabhängig von Stückzahl)</mat-checkbox>\r\n\r\n  <mat-form-field *ngIf=\"subordersAmount > 0 && form.get('collectiveOrder').value === true && form.get('ordersAmountToBePlanned').value > 1\">\r\n    <mat-label>Wie viele Teilaufträge können zusammengesammelt werden?</mat-label>\r\n    <input matInput type=\"number\" [min]=\"2\" [max]=\"form.get('ordersAmountToBePlanned').value\" [formControl]=\"collectionOrdersAmount\">\r\n    <mat-hint align=\"start\"><strong>Die eingegebene Zahl muss zwischen 2 und {{form.get('ordersAmountToBePlanned').value}} liegen</strong> </mat-hint>\r\n  </mat-form-field>\r\n\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n  <button mat-raised-button [mat-dialog-close]=\"null\">Schließen</button>\r\n  <button mat-raised-button [mat-dialog-close]=\"sendFormValue()\" color=\"primary\" [disabled]=\"subordersAmount > 0 ? checkSelection() : false\">Speichern</button>\r\n</mat-dialog-actions>\r\n";

/***/ }),

/***/ 8352:
/*!******************************************************************************************************!*\
  !*** ./apps/web-app/src/app/gantt demo/view-settings/view-settings-dialog.component.html?ngResource ***!
  \******************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<h2 mat-dialog-title>Ansicht-Einstellungen</h2>\r\n\r\n<mat-dialog-content style=\"display: flex; flex-direction: column\">\r\n\r\n  poo\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n  <button mat-raised-button [mat-dialog-close]=\"null\">Schließen</button>\r\n  <button mat-raised-button  color=\"primary\">Speichern</button>\r\n</mat-dialog-actions>\r\n";

/***/ }),

/***/ 4610:
/*!*********************************************************************************************!*\
  !*** ./apps/web-app/src/app/gantt demo/vis-timeline/vis-timeline.component.html?ngResource ***!
  \*********************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<div  class=\"iisys-container\">\r\n  <div id=\"page\" (mouseup)=\"endWidthDrag()\" (mousemove)=\"onWidthDrag($event)\" (touchmove)=\"onWidthDrag($event)\" class=\"iisys-vis-card\">\r\n    <div id=\"leftcol\" style=\"display:flex; flex-grow: 1; \"  class=\"iisys-left\">\r\n      <mat-card  style=\"display:flex; flex-grow: 1; \" class=\"mat-elevation-z8\">\r\n        <mat-card-header class=\"display-setting\">\r\n          <mat-card-title >\r\n            <h3 *ngIf=\"productionStepViewSelected\">Arbeitsgangszentrierte Ansicht  <button id=\"data-pw-view-menu-productionStepViewSelected\" mat-icon-button [matMenuTriggerFor]=\"menu\" style=\"height: 24px; width: 24px; padding: 0\"> <mat-icon>more_vert</mat-icon></button> </h3>\r\n            <h3 *ngIf=\"orderViewSelected\">Auftragszentrierte Ansicht <button id=\"data-pw-view-menu-orderViewSelected\" mat-icon-button [matMenuTriggerFor]=\"menu\" style=\"height: 24px; width: 24px; padding: 0\" > <mat-icon>more_vert</mat-icon></button> </h3>\r\n\r\n            <mat-menu hasBackdrop backdropClass=\"menu-backdrop\" #menu=\"matMenu\">\r\n              <button id=\"data-pw-view-menu-button-setOrderView\" mat-menu-item [value]=\"orderViewSelected\"  (click)=\"setOrderView()\" >\r\n                <mat-icon>looks_one</mat-icon>\r\n                <span>Auftragszentrierte Ansicht</span>\r\n              </button>\r\n              <button id=\"data-pw-view-menu-button-setProductionStepView\" mat-menu-item  [value]=\"productionStepViewSelected\"  (click)=\"setProductionStepView()\">\r\n                <mat-icon>looks_two</mat-icon>\r\n                <span>Arbeitsgangszentrierte Ansicht</span>\r\n              </button>\r\n\r\n            </mat-menu>\r\n\r\n          </mat-card-title>\r\n\r\n\r\n\r\n        </mat-card-header>\r\n\r\n        <mat-card-content style=\"display:flex; flex-grow: 1;\">\r\n          <div class=\"spalten\">\r\n            <mat-card *ngIf=\"orderViewSelected\" class=\"mat-elevation-z8 order-overview spalten-1\">\r\n              <mat-card-header>\r\n                <div class=\"header-section\">\r\n                  <mat-card-title>\r\n                    Unverplante Aufträge\r\n                  </mat-card-title>\r\n                  <app-search-field #searchOrdersInput placeholder=\"Suche\" label=\"Suche\" (search)=\"onSearchProductionOrders($event)\"></app-search-field>\r\n                </div>\r\n              </mat-card-header>\r\n              <mat-card-content >\r\n                <div *ngIf=\"!gotProductionOrders\">\r\n                  <span class=\"loader\"></span>\r\n                </div>\r\n\r\n                <div #scroller1 class=\"tree-container\" (scroll)=\"onScrollOrders($event)\" *ngIf=\"ordersListHtml.length > 0\">\r\n                  <mat-tree class=\"iisys-mat-list\" [dataSource]=\"productionOrdersDataSource$.getValue()\" [treeControl]=\"treeControl\">  \r\n                     <mat-tree-node *matTreeNodeDef=\"let node\" [class]=\"selectedOrder?.id === node.id ? 'lightGrey-bg' : 'white-bg'\">\r\n                       <app-list-item [attr.id]=\"'data-pw-unplannedProductionOrder-' + node.id\" *ngIf=\"node.parentProductionOrderId !== null\" [data]=\"subProductionOrders$\" [template]=\"contractsTemplate\" [format]=\"contractsFormat\" (clickListItem)=\"getProductionStepsOfProduct(node)\"  [index]=\"node.index\"></app-list-item>\r\n                       <div [attr.id]=\"'data-pw-unplannedProductionOrder-' + node.id\" *ngIf=\"ordersListHtml && node.parentProductionOrderId === null\" class=\"iisys-mat-list-item\" [innerHTML]=\"ordersListHtml[node.index] | sanitizeHtml\" (click)=\"getProductionStepsOfProduct(node)\"></div>\r\n                       <button mat-icon-button disabled></button>\r\n                     </mat-tree-node>\r\n                     <mat-tree-node  *matTreeNodeDef=\"let node; when: hasChildAndDifferentProductId\" [class]=\"selectedOrder?.id === node.id ? 'lightGrey-bg' : 'white-bg'\">\r\n                       <div [attr.id]=\"'data-pw-unplannedProductionOrder-' + node.id\" *ngIf=\"ordersListHtml && hasChildAndDifferentProductId\" class=\"iisys-mat-list-item\" [innerHTML]=\"ordersListHtml[node.index] | sanitizeHtml\" (click)=\"getProductionStepsOfProduct(node)\"></div>\r\n                       <button *ngIf=\"hasChildAndDifferentProductId\" [attr.id]=\"'data-pw-toggleroductionOrder-' + node.id\" mat-icon-button [attr.aria-label]=\"'Toggle ' + node.name\" matTreeNodeToggle (click)=\"expandOrCollapseNode(node)\">\r\n                         <mat-icon class=\"mat-icon-rtl-mirror\">\r\n                           {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n                         </mat-icon>\r\n                       </button>\r\n                     </mat-tree-node>\r\n                   </mat-tree>\r\n                   <div *ngIf=\"loading\">\r\n                     <span class=\"loader\"></span>\r\n                   </div>\r\n                </div>\r\n              </mat-card-content>\r\n            </mat-card>\r\n\r\n\r\n            <mat-card id=\"data-pw-productionStepsOfOrder\" *ngIf=\"orderViewSelected\" class=\"mat-elevation-z8 order-overview spalten-2\">\r\n              <mat-card-header>\r\n                <mat-card-title>\r\n                  Arbeitsgänge\r\n                </mat-card-title>\r\n              </mat-card-header>\r\n              <mat-card-content >\r\n                <mat-list class=\"iisys-mat-list\">\r\n                  <app-list-item *ngFor=\"let item of productionSteps | async; index as i\" [data]=\"productionSteps\" [template]=\"productionStepsTemplate\" [format]=\"productionStepsFormat\" [isDraggable]=\"true\" [index]=\"i\"\r\n                                 (mouseDownListItem)=\"onListMouseDown($event)\"\r\n                                 (mouseUpListItem)=\"onListMouseUp($event)\"\r\n                                 (dragStartListItem)=\"handleDragStart($event, item)\"\r\n                                 (dragEndListItem)=\"handleDragEnd($event, item.machineTypeId * 999)\"\r\n                                 [attr.id]=\"'data-pw-productionStepOfOrder-' + item.id\"\r\n                  ></app-list-item>\r\n                  <app-list-item [attr.id]=\"'data-pw-plannedProductionStepOfOrder-' + item.id\" *ngFor=\"let item of plannedSteps | async; index as i\" [data]=\"plannedSteps\" [template]=\"productionStepsTemplate\" [format]=\"productionStepsFormat\" [isDisabled]=\"true\" [index]=\"i\"></app-list-item>\r\n                </mat-list>\r\n                <div class=\"nothing-selected\" *ngIf=\"productionSteps.value?.length === 0 && productionOrdersDataSource$?.getValue().data.length > 0 && !selectedOrder\">\r\n                  Nichts ausgewählt\r\n                </div>\r\n              </mat-card-content>\r\n            </mat-card>\r\n\r\n\r\n            <mat-card id=\"data-pw-allProductionSteps\" *ngIf=\"productionStepViewSelected\" class=\"mat-elevation-z8 order-overview spalten-2\">\r\n              <mat-card-header>\r\n                <div class=\"header-section\">\r\n                  <mat-card-title>\r\n                    Arbeitsgänge\r\n                  </mat-card-title>\r\n                  <app-search-field #searchProductionStepsInput placeholder=\"Suche\" label=\"Suche\" (search)=\"onSearchAllProductionSteps($event)\"></app-search-field>\r\n                </div>\r\n              </mat-card-header>\r\n              <mat-card-content>\r\n                <div #scroller2 class=\"tree-container\" (scroll)=\"onScrollSteps($event)\">\r\n                  <mat-list class=\"iisys-mat-list\" *ngIf=\"stepsListHtml.length > 0\">\r\n                    <div *ngFor=\"let item of allProductionSteps | async; index as i\" [class]=\"{'iisys-mat-list-item': true, 'lightGrey-bg': selectedStep?.id === item.id}\" [innerHTML]=\"stepsListHtml[i] | sanitizeHtml\" (click)=\"getOrdersOfStep(item)\" [attr.id]=\"'data-pw-productionStep-' + item.id\"></div>\r\n                  </mat-list>\r\n                  <div *ngIf=\"loading\">\r\n                    <span class=\"loader\"></span>\r\n                  </div>\r\n                </div>\r\n              </mat-card-content>\r\n            </mat-card>\r\n\r\n\r\n            <mat-card *ngIf=\"productionStepViewSelected\" class=\"mat-elevation-z8 spalten-1\">\r\n              <mat-card-header>\r\n                <div class=\"header-section\">\r\n                  <mat-card-title>\r\n                    Unverplante Aufträge\r\n                  </mat-card-title>\r\n                  <app-search-field placeholder=\"Suche\" label=\"Suche\" (search)=\"onSearchOrdersOfStep($event)\"></app-search-field>\r\n                </div>\r\n              </mat-card-header>\r\n              <mat-card-content >\r\n                <div #scroller3 class=\"tree-container\" (scroll)=\"onScrollOrdersOfSteps($event)\">\r\n                  <mat-tree *ngIf=\"ordersOfStepDataSource$.getValue().data?.length > 0\" class=\"iisys-mat-list\" [dataSource]=\"ordersOfStepDataSource$.getValue()\" [treeControl]=\"treeControl\">\r\n                    <mat-tree-node *matTreeNodeDef=\"let node\">\r\n                      <app-list-item [data]=\"ordersOfStepDataSource$\" [template]=\"contractsTemplate\" [format]=\"contractsFormat\" [index]=\"node.index\"></app-list-item>\r\n                      <button mat-icon-button disabled></button>\r\n                    </mat-tree-node>\r\n                    <mat-tree-node *matTreeNodeDef=\"let node; when: hasChildAndDifferentProductId\">\r\n                      <app-list-item [data]=\"ordersOfStep\" [template]=\"contractsTemplate\" [format]=\"contractsFormat\" [index]=\"node.index\"></app-list-item>\r\n                      <button *ngIf=\"hasChildAndDifferentProductId\" mat-icon-button [attr.aria-label]=\"'Toggle ' + node.name\" matTreeNodeToggle (click)=\"expandOrCollapseNode(node)\">\r\n                        <mat-icon class=\"mat-icon-rtl-mirror\">\r\n                          {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n                        </mat-icon>\r\n                      </button>\r\n                      <div [class.mat-tree-invisible]=\"!treeControl.isExpanded(node)\">\r\n                        <ng-container matTreeNodeOutlet></ng-container>\r\n                      </div>\r\n                    </mat-tree-node>\r\n                    <div *ngIf=\"loading\">\r\n                      <span class=\"loader\"></span>\r\n                    </div>\r\n                  </mat-tree>\r\n                </div>\r\n                <div *ngIf=\"ordersOfStepDataSource$.getValue().data?.length === 0 && allProductionSteps.value?.length > 0\" class=\"nothing-selected\" >\r\n                  Nichts ausgewählt\r\n                </div>\r\n              </mat-card-content>\r\n            </mat-card>\r\n\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n    <div id=\"rightdragbar\" (mousedown)=\"startWidthDrag('mouse')\" (touchstart)=\"startWidthDrag('touch')\">\r\n      <div id=\"dragbar-inner\">\r\n        <div id=\"dragbar-nubsi\">\r\n          <div id=\"dragbar-nubsi-inner\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div id=\"rightcol\"class=\"iisys-right\">\r\n      <mat-card  class=\"mat-elevation-z8\">\r\n        <mat-card-header class=\"display-setting\">\r\n          <mat-card-title >\r\n            <h3>Maschinen Tabelle</h3>\r\n          </mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <mat-card  >\r\n            <mat-card-header class=\"vis-view-controls\">\r\n\r\n              <mat-button-toggle-group style=\"border: none\">\r\n                <mat-button-toggle class=\"tgb-left icon-btn-toolbar\" (click)=\"setViewModeToDay()\" id=\"data-pw-day-button\"><mat-icon fontSet=\"material-symbols-sharp\">calendar_view_day</mat-icon><span class=\"icon-btn-toolbar-text\">Tag</span></mat-button-toggle>\r\n                <mat-button-toggle class=\"tgb-middle icon-btn-toolbar\"(click)=\"setViewModeToWeek()\" id=\"data-pw-week-button\"><mat-icon fontSet=\"material-symbols-sharp\">calendar_view_week</mat-icon><span class=\"icon-btn-toolbar-text\">Woche</span><!--Week--></mat-button-toggle>\r\n                <mat-button-toggle class=\"tgb-right icon-btn-toolbar\"(click)=\"setViewModeToMonth()\" id=\"data-pw-month-button\"  color=\"primary\"><mat-icon fontSet=\"material-symbols-sharp\">calendar_view_month</mat-icon><span class=\"icon-btn-toolbar-text\">Monat</span><!--Month--></mat-button-toggle>\r\n\r\n                <mat-button-toggle class=\"tgb-left icon-btn-toolbar\" (click)=\"fitTimeline()\" id=\"data-pw-einpassen-button\" color=\"warn\"><mat-icon fontSet=\"material-symbols-sharp\">fit_width</mat-icon><span class=\"icon-btn-toolbar-text\">Einpassen</span><!--Fit timeline--></mat-button-toggle>\r\n                <mat-button-toggle class=\"tgb-right icon-btn-toolbar\"(click)=\"moveToNow()\"   color=\"accent\"><mat-icon fontSet=\"material-symbols-sharp\">step_into</mat-icon><span class=\"icon-btn-toolbar-text\">Jetzt</span><!--Move to now--></mat-button-toggle>\r\n              </mat-button-toggle-group>\r\n\r\n              <mat-button-toggle-group style=\"border: none\">\r\n                <button mat-button class=\"tgb-single\" (click)=\"collapseAll()\" id=\"data-pw-compress-button\">\r\n                  <mat-icon fontSet=\"material-symbols-sharp\">compress</mat-icon>\r\n                  <span>Alles einklappen</span>\r\n                </button>\r\n\r\n                <button mat-button class=\"tgb-single\" (click)=\"expandAll()\" id=\"data-pw-expand-button\" >\r\n                  <mat-icon fontSet=\"material-symbols-sharp\">expand</mat-icon>\r\n                  <span>Alles ausklappen</span>\r\n                </button>\r\n              </mat-button-toggle-group>\r\n\r\n              <mat-button-toggle-group class=\"flex-right-push\">\r\n                <mat-button-toggle class=\"btn-toolbar icon-btn-toolbar\" id=\"data-pw-msgReset-button\" (click)=\"resetDeletedMachineOccupations()\"><mat-icon fontSet=\"material-symbols-sharp\">restore</mat-icon><span class=\"icon-btn-toolbar-text\">Reset</span></mat-button-toggle>\r\n                <mat-button-toggle class=\"btn-toolbar icon-btn-toolbar\" id=\"data-pw-msgFilter-button\"  (click)=\"openFilterDialog()\" color=\"accent\"><mat-icon fontSet=\"material-symbols-sharp\">filter_alt</mat-icon><span class=\"icon-btn-toolbar-text\">Filter</span></mat-button-toggle>\r\n              </mat-button-toggle-group>\r\n              <mat-menu hasBackdrop backdropClass=\"menu-backdrop\" #menuViewSettings=\"matMenu\" class=\"slide-toggle-menu\">\r\n                <mat-slide-toggle [disabled]=\"checkSelectedOrderPlanToggle()\" [checked]=\"setViewSelectedOrderPlanToggle\" (change)=\"viewAndEditPlanOfSelectedOrder($event, false)\" id=\"data-pw-msgReadonly-button\">Planung des selektierten Auftrags darstellen (Readonly!)</mat-slide-toggle>\r\n                <mat-slide-toggle [disabled]=\"this.items?.length < 1\" [checked]=\"setUnoccupiedMachinesToggleChecked\" (change)=\"filterUnoccupiedMachines($event)\">Unbelegte Maschinen ausblenden</mat-slide-toggle>\r\n                <mat-slide-toggle #barsConstraints>Einschränkungen einschalten</mat-slide-toggle>\r\n              </mat-menu>\r\n\r\n              <mat-menu hasBackdrop backdropClass=\"menu-backdrop\" #menuViewPlanningOfSelectedOrder=\"matMenu\" class=\"slide-toggle-menu\">\r\n                <mat-slide-toggle #planningModeOfSelectedOrder [disabled]=\"!selectedOrder\" (change)=\"viewAndEditPlanOfSelectedOrder($event, true)\">Planung des selektierten Auftrags darstellen (Planungsmodus)</mat-slide-toggle>\r\n                <mat-slide-toggle #showAllMachines [disabled]=\"!selectedOrder || !planningModeOfSelectedOrder.checked\" (change)=\"showAllMachinesInThePlanningOfSelectedOrder($event)\">Alle Maschinen einblenden</mat-slide-toggle>\r\n              </mat-menu>\r\n\r\n              <button type=\"button\" style=\"height: auto;margin-right: 12px;\" [ngClass]=\"{  'btn-active': x3}\" [matMenuTriggerFor]=\"menuViewPlanningOfSelectedOrder\" mat-stroked-button ><mat-icon style=\"margin: 0; font-size: 24px;height: auto;width: auto;\" fontSet=\"material-symbols-sharp\">filter_list</mat-icon><span class=\"icon-btn-toolbar-text\">Filter List</span></button>\r\n\r\n              <button type=\"button\" style=\"height: auto;margin-right: 12px;\" [ngClass]=\"{  'btn-active': x1 || x2}\" [matMenuTriggerFor]=\"menuViewSettings\" mat-stroked-button ><mat-icon style=\"margin: 0; font-size: 24px;height: auto;width: auto;\" fontSet=\"material-symbols-sharp\">display_settings </mat-icon> <span class=\"icon-btn-toolbar-text\">Display Settings</span></button>\r\n\r\n              <button type=\"button\" style=\"height: auto;\" (click)=\"saveChanges()\" mat-flat-button class=\"btn-accent\" id=\"data-pw-save-button\"><mat-icon style=\"margin: 0;    font-size: 24px;    height: auto;    width: auto;\" fontSet=\"material-symbols-sharp\">save</mat-icon><span class=\"icon-btn-toolbar-text\">Save</span></button>\r\n\r\n            </mat-card-header>\r\n            <mat-card-content class=\"timeline-content\">\r\n              <div  #timeline id=\"timeline\"></div>\r\n            </mat-card-content>\r\n          </mat-card>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n";

/***/ }),

/***/ 7727:
/*!**********************************************************!*\
  !*** ./node_modules/@angular/cdk/fesm2020/drag-drop.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CDK_DRAG_CONFIG": () => (/* binding */ CDK_DRAG_CONFIG),
/* harmony export */   "CDK_DRAG_HANDLE": () => (/* binding */ CDK_DRAG_HANDLE),
/* harmony export */   "CDK_DRAG_PARENT": () => (/* binding */ CDK_DRAG_PARENT),
/* harmony export */   "CDK_DRAG_PLACEHOLDER": () => (/* binding */ CDK_DRAG_PLACEHOLDER),
/* harmony export */   "CDK_DRAG_PREVIEW": () => (/* binding */ CDK_DRAG_PREVIEW),
/* harmony export */   "CDK_DROP_LIST": () => (/* binding */ CDK_DROP_LIST),
/* harmony export */   "CDK_DROP_LIST_GROUP": () => (/* binding */ CDK_DROP_LIST_GROUP),
/* harmony export */   "CdkDrag": () => (/* binding */ CdkDrag),
/* harmony export */   "CdkDragHandle": () => (/* binding */ CdkDragHandle),
/* harmony export */   "CdkDragPlaceholder": () => (/* binding */ CdkDragPlaceholder),
/* harmony export */   "CdkDragPreview": () => (/* binding */ CdkDragPreview),
/* harmony export */   "CdkDropList": () => (/* binding */ CdkDropList),
/* harmony export */   "CdkDropListGroup": () => (/* binding */ CdkDropListGroup),
/* harmony export */   "DragDrop": () => (/* binding */ DragDrop),
/* harmony export */   "DragDropModule": () => (/* binding */ DragDropModule),
/* harmony export */   "DragDropRegistry": () => (/* binding */ DragDropRegistry),
/* harmony export */   "DragRef": () => (/* binding */ DragRef),
/* harmony export */   "DropListRef": () => (/* binding */ DropListRef),
/* harmony export */   "copyArrayItem": () => (/* binding */ copyArrayItem),
/* harmony export */   "moveItemInArray": () => (/* binding */ moveItemInArray),
/* harmony export */   "transferArrayItem": () => (/* binding */ transferArrayItem)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/core */ 2560);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common */ 4666);
/* harmony import */ var _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/cdk/scrolling */ 6328);
/* harmony import */ var _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/cdk/platform */ 9107);
/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/cdk/coercion */ 8971);
/* harmony import */ var _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/cdk/a11y */ 4218);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 228);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 6078);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ 8653);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ 8184);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ 833);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ 6646);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs/operators */ 8951);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs/operators */ 4874);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs/operators */ 635);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs/operators */ 9295);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs/operators */ 9337);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! rxjs/operators */ 2673);
/* harmony import */ var _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/cdk/bidi */ 2867);












/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * Shallow-extends a stylesheet object with another stylesheet-like object.
 * Note that the keys in `source` have to be dash-cased.
 * @docs-private
 */
function extendStyles(dest, source, importantProperties) {
  for (let key in source) {
    if (source.hasOwnProperty(key)) {
      const value = source[key];
      if (value) {
        dest.setProperty(key, value, importantProperties?.has(key) ? 'important' : '');
      } else {
        dest.removeProperty(key);
      }
    }
  }
  return dest;
}
/**
 * Toggles whether the native drag interactions should be enabled for an element.
 * @param element Element on which to toggle the drag interactions.
 * @param enable Whether the drag interactions should be enabled.
 * @docs-private
 */
function toggleNativeDragInteractions(element, enable) {
  const userSelect = enable ? '' : 'none';
  extendStyles(element.style, {
    'touch-action': enable ? '' : 'none',
    '-webkit-user-drag': enable ? '' : 'none',
    '-webkit-tap-highlight-color': enable ? '' : 'transparent',
    'user-select': userSelect,
    '-ms-user-select': userSelect,
    '-webkit-user-select': userSelect,
    '-moz-user-select': userSelect
  });
}
/**
 * Toggles whether an element is visible while preserving its dimensions.
 * @param element Element whose visibility to toggle
 * @param enable Whether the element should be visible.
 * @param importantProperties Properties to be set as `!important`.
 * @docs-private
 */
function toggleVisibility(element, enable, importantProperties) {
  extendStyles(element.style, {
    position: enable ? '' : 'fixed',
    top: enable ? '' : '0',
    opacity: enable ? '' : '0',
    left: enable ? '' : '-999em'
  }, importantProperties);
}
/**
 * Combines a transform string with an optional other transform
 * that exited before the base transform was applied.
 */
function combineTransforms(transform, initialTransform) {
  return initialTransform && initialTransform != 'none' ? transform + ' ' + initialTransform : transform;
}

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/** Parses a CSS time value to milliseconds. */
function parseCssTimeUnitsToMs(value) {
  // Some browsers will return it in seconds, whereas others will return milliseconds.
  const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;
  return parseFloat(value) * multiplier;
}
/** Gets the transform transition duration, including the delay, of an element in milliseconds. */
function getTransformTransitionDurationInMs(element) {
  const computedStyle = getComputedStyle(element);
  const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');
  const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');
  // If there's no transition for `all` or `transform`, we shouldn't do anything.
  if (!property) {
    return 0;
  }
  // Get the index of the property that we're interested in and match
  // it up to the same index in `transition-delay` and `transition-duration`.
  const propertyIndex = transitionedProperties.indexOf(property);
  const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');
  const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');
  return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) + parseCssTimeUnitsToMs(rawDelays[propertyIndex]);
}
/** Parses out multiple values from a computed style into an array. */
function parseCssPropertyValue(computedStyle, name) {
  const value = computedStyle.getPropertyValue(name);
  return value.split(',').map(part => part.trim());
}

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/** Gets a mutable version of an element's bounding `ClientRect`. */
function getMutableClientRect(element) {
  const clientRect = element.getBoundingClientRect();
  // We need to clone the `clientRect` here, because all the values on it are readonly
  // and we need to be able to update them. Also we can't use a spread here, because
  // the values on a `ClientRect` aren't own properties. See:
  // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes
  return {
    top: clientRect.top,
    right: clientRect.right,
    bottom: clientRect.bottom,
    left: clientRect.left,
    width: clientRect.width,
    height: clientRect.height,
    x: clientRect.x,
    y: clientRect.y
  };
}
/**
 * Checks whether some coordinates are within a `ClientRect`.
 * @param clientRect ClientRect that is being checked.
 * @param x Coordinates along the X axis.
 * @param y Coordinates along the Y axis.
 */
function isInsideClientRect(clientRect, x, y) {
  const {
    top,
    bottom,
    left,
    right
  } = clientRect;
  return y >= top && y <= bottom && x >= left && x <= right;
}
/**
 * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.
 * @param clientRect `ClientRect` that should be updated.
 * @param top Amount to add to the `top` position.
 * @param left Amount to add to the `left` position.
 */
function adjustClientRect(clientRect, top, left) {
  clientRect.top += top;
  clientRect.bottom = clientRect.top + clientRect.height;
  clientRect.left += left;
  clientRect.right = clientRect.left + clientRect.width;
}
/**
 * Checks whether the pointer coordinates are close to a ClientRect.
 * @param rect ClientRect to check against.
 * @param threshold Threshold around the ClientRect.
 * @param pointerX Coordinates along the X axis.
 * @param pointerY Coordinates along the Y axis.
 */
function isPointerNearClientRect(rect, threshold, pointerX, pointerY) {
  const {
    top,
    right,
    bottom,
    left,
    width,
    height
  } = rect;
  const xThreshold = width * threshold;
  const yThreshold = height * threshold;
  return pointerY > top - yThreshold && pointerY < bottom + yThreshold && pointerX > left - xThreshold && pointerX < right + xThreshold;
}

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/** Keeps track of the scroll position and dimensions of the parents of an element. */
class ParentPositionTracker {
  constructor(_document) {
    this._document = _document;
    /** Cached positions of the scrollable parent elements. */
    this.positions = new Map();
  }
  /** Clears the cached positions. */
  clear() {
    this.positions.clear();
  }
  /** Caches the positions. Should be called at the beginning of a drag sequence. */
  cache(elements) {
    this.clear();
    this.positions.set(this._document, {
      scrollPosition: this.getViewportScrollPosition()
    });
    elements.forEach(element => {
      this.positions.set(element, {
        scrollPosition: {
          top: element.scrollTop,
          left: element.scrollLeft
        },
        clientRect: getMutableClientRect(element)
      });
    });
  }
  /** Handles scrolling while a drag is taking place. */
  handleScroll(event) {
    const target = (0,_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_0__._getEventTarget)(event);
    const cachedPosition = this.positions.get(target);
    if (!cachedPosition) {
      return null;
    }
    const scrollPosition = cachedPosition.scrollPosition;
    let newTop;
    let newLeft;
    if (target === this._document) {
      const viewportScrollPosition = this.getViewportScrollPosition();
      newTop = viewportScrollPosition.top;
      newLeft = viewportScrollPosition.left;
    } else {
      newTop = target.scrollTop;
      newLeft = target.scrollLeft;
    }
    const topDifference = scrollPosition.top - newTop;
    const leftDifference = scrollPosition.left - newLeft;
    // Go through and update the cached positions of the scroll
    // parents that are inside the element that was scrolled.
    this.positions.forEach((position, node) => {
      if (position.clientRect && target !== node && target.contains(node)) {
        adjustClientRect(position.clientRect, topDifference, leftDifference);
      }
    });
    scrollPosition.top = newTop;
    scrollPosition.left = newLeft;
    return {
      top: topDifference,
      left: leftDifference
    };
  }
  /**
   * Gets the scroll position of the viewport. Note that we use the scrollX and scrollY directly,
   * instead of going through the `ViewportRuler`, because the first value the ruler looks at is
   * the top/left offset of the `document.documentElement` which works for most cases, but breaks
   * if the element is offset by something like the `BlockScrollStrategy`.
   */
  getViewportScrollPosition() {
    return {
      top: window.scrollY,
      left: window.scrollX
    };
  }
}

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/** Creates a deep clone of an element. */
function deepCloneNode(node) {
  const clone = node.cloneNode(true);
  const descendantsWithId = clone.querySelectorAll('[id]');
  const nodeName = node.nodeName.toLowerCase();
  // Remove the `id` to avoid having multiple elements with the same id on the page.
  clone.removeAttribute('id');
  for (let i = 0; i < descendantsWithId.length; i++) {
    descendantsWithId[i].removeAttribute('id');
  }
  if (nodeName === 'canvas') {
    transferCanvasData(node, clone);
  } else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {
    transferInputData(node, clone);
  }
  transferData('canvas', node, clone, transferCanvasData);
  transferData('input, textarea, select', node, clone, transferInputData);
  return clone;
}
/** Matches elements between an element and its clone and allows for their data to be cloned. */
function transferData(selector, node, clone, callback) {
  const descendantElements = node.querySelectorAll(selector);
  if (descendantElements.length) {
    const cloneElements = clone.querySelectorAll(selector);
    for (let i = 0; i < descendantElements.length; i++) {
      callback(descendantElements[i], cloneElements[i]);
    }
  }
}
// Counter for unique cloned radio button names.
let cloneUniqueId = 0;
/** Transfers the data of one input element to another. */
function transferInputData(source, clone) {
  // Browsers throw an error when assigning the value of a file input programmatically.
  if (clone.type !== 'file') {
    clone.value = source.value;
  }
  // Radio button `name` attributes must be unique for radio button groups
  // otherwise original radio buttons can lose their checked state
  // once the clone is inserted in the DOM.
  if (clone.type === 'radio' && clone.name) {
    clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;
  }
}
/** Transfers the data of one canvas element to another. */
function transferCanvasData(source, clone) {
  const context = clone.getContext('2d');
  if (context) {
    // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).
    // We can't do much about it so just ignore the error.
    try {
      context.drawImage(source, 0, 0);
    } catch {}
  }
}

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/** Options that can be used to bind a passive event listener. */
const passiveEventListenerOptions = (0,_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_0__.normalizePassiveListenerOptions)({
  passive: true
});
/** Options that can be used to bind an active event listener. */
const activeEventListenerOptions = (0,_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_0__.normalizePassiveListenerOptions)({
  passive: false
});
/**
 * Time in milliseconds for which to ignore mouse events, after
 * receiving a touch event. Used to avoid doing double work for
 * touch devices where the browser fires fake mouse events, in
 * addition to touch events.
 */
const MOUSE_EVENT_IGNORE_TIME = 800;
/** Inline styles to be set as `!important` while dragging. */
const dragImportantProperties = new Set([
// Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.
'position']);
/**
 * Reference to a draggable item. Used to manipulate or dispose of the item.
 */
class DragRef {
  /** Whether starting to drag this element is disabled. */
  get disabled() {
    return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);
  }
  set disabled(value) {
    const newValue = (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.coerceBooleanProperty)(value);
    if (newValue !== this._disabled) {
      this._disabled = newValue;
      this._toggleNativeDragInteractions();
      this._handles.forEach(handle => toggleNativeDragInteractions(handle, newValue));
    }
  }
  constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {
    this._config = _config;
    this._document = _document;
    this._ngZone = _ngZone;
    this._viewportRuler = _viewportRuler;
    this._dragDropRegistry = _dragDropRegistry;
    /**
     * CSS `transform` applied to the element when it isn't being dragged. We need a
     * passive transform in order for the dragged element to retain its new position
     * after the user has stopped dragging and because we need to know the relative
     * position in case they start dragging again. This corresponds to `element.style.transform`.
     */
    this._passiveTransform = {
      x: 0,
      y: 0
    };
    /** CSS `transform` that is applied to the element while it's being dragged. */
    this._activeTransform = {
      x: 0,
      y: 0
    };
    /**
     * Whether the dragging sequence has been started. Doesn't
     * necessarily mean that the element has been moved.
     */
    this._hasStartedDragging = false;
    /** Emits when the item is being moved. */
    this._moveEvents = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    /** Subscription to pointer movement events. */
    this._pointerMoveSubscription = rxjs__WEBPACK_IMPORTED_MODULE_3__.Subscription.EMPTY;
    /** Subscription to the event that is dispatched when the user lifts their pointer. */
    this._pointerUpSubscription = rxjs__WEBPACK_IMPORTED_MODULE_3__.Subscription.EMPTY;
    /** Subscription to the viewport being scrolled. */
    this._scrollSubscription = rxjs__WEBPACK_IMPORTED_MODULE_3__.Subscription.EMPTY;
    /** Subscription to the viewport being resized. */
    this._resizeSubscription = rxjs__WEBPACK_IMPORTED_MODULE_3__.Subscription.EMPTY;
    /** Cached reference to the boundary element. */
    this._boundaryElement = null;
    /** Whether the native dragging interactions have been enabled on the root element. */
    this._nativeInteractionsEnabled = true;
    /** Elements that can be used to drag the draggable item. */
    this._handles = [];
    /** Registered handles that are currently disabled. */
    this._disabledHandles = new Set();
    /** Layout direction of the item. */
    this._direction = 'ltr';
    /**
     * Amount of milliseconds to wait after the user has put their
     * pointer down before starting to drag the element.
     */
    this.dragStartDelay = 0;
    this._disabled = false;
    /** Emits as the drag sequence is being prepared. */
    this.beforeStarted = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    /** Emits when the user starts dragging the item. */
    this.started = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    /** Emits when the user has released a drag item, before any animations have started. */
    this.released = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    /** Emits when the user stops dragging an item in the container. */
    this.ended = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    /** Emits when the user has moved the item into a new container. */
    this.entered = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    /** Emits when the user removes the item its container by dragging it into another container. */
    this.exited = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    /** Emits when the user drops the item inside a container. */
    this.dropped = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    /**
     * Emits as the user is dragging the item. Use with caution,
     * because this event will fire for every pixel that the user has dragged.
     */
    this.moved = this._moveEvents;
    /** Handler for the `mousedown`/`touchstart` events. */
    this._pointerDown = event => {
      this.beforeStarted.next();
      // Delegate the event based on whether it started from a handle or the element itself.
      if (this._handles.length) {
        const targetHandle = this._getTargetHandle(event);
        if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {
          this._initializeDragSequence(targetHandle, event);
        }
      } else if (!this.disabled) {
        this._initializeDragSequence(this._rootElement, event);
      }
    };
    /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */
    this._pointerMove = event => {
      const pointerPosition = this._getPointerPositionOnPage(event);
      if (!this._hasStartedDragging) {
        const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);
        const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);
        const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;
        // Only start dragging after the user has moved more than the minimum distance in either
        // direction. Note that this is preferable over doing something like `skip(minimumDistance)`
        // in the `pointerMove` subscription, because we're not guaranteed to have one move event
        // per pixel of movement (e.g. if the user moves their pointer quickly).
        if (isOverThreshold) {
          const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);
          const container = this._dropContainer;
          if (!isDelayElapsed) {
            this._endDragSequence(event);
            return;
          }
          // Prevent other drag sequences from starting while something in the container is still
          // being dragged. This can happen while we're waiting for the drop animation to finish
          // and can cause errors, because some elements might still be moving around.
          if (!container || !container.isDragging() && !container.isReceiving()) {
            // Prevent the default action as soon as the dragging sequence is considered as
            // "started" since waiting for the next event can allow the device to begin scrolling.
            event.preventDefault();
            this._hasStartedDragging = true;
            this._ngZone.run(() => this._startDragSequence(event));
          }
        }
        return;
      }
      // We prevent the default action down here so that we know that dragging has started. This is
      // important for touch devices where doing this too early can unnecessarily block scrolling,
      // if there's a dragging delay.
      event.preventDefault();
      const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);
      this._hasMoved = true;
      this._lastKnownPointerPosition = pointerPosition;
      this._updatePointerDirectionDelta(constrainedPointerPosition);
      if (this._dropContainer) {
        this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);
      } else {
        // If there's a position constraint function, we want the element's top/left to be at the
        // specific position on the page. Use the initial position as a reference if that's the case.
        const offset = this.constrainPosition ? this._initialClientRect : this._pickupPositionOnPage;
        const activeTransform = this._activeTransform;
        activeTransform.x = constrainedPointerPosition.x - offset.x + this._passiveTransform.x;
        activeTransform.y = constrainedPointerPosition.y - offset.y + this._passiveTransform.y;
        this._applyRootElementTransform(activeTransform.x, activeTransform.y);
      }
      // Since this event gets fired for every pixel while dragging, we only
      // want to fire it if the consumer opted into it. Also we have to
      // re-enter the zone because we run all of the events on the outside.
      if (this._moveEvents.observers.length) {
        this._ngZone.run(() => {
          this._moveEvents.next({
            source: this,
            pointerPosition: constrainedPointerPosition,
            event,
            distance: this._getDragDistance(constrainedPointerPosition),
            delta: this._pointerDirectionDelta
          });
        });
      }
    };
    /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */
    this._pointerUp = event => {
      this._endDragSequence(event);
    };
    /** Handles a native `dragstart` event. */
    this._nativeDragStart = event => {
      if (this._handles.length) {
        const targetHandle = this._getTargetHandle(event);
        if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {
          event.preventDefault();
        }
      } else if (!this.disabled) {
        // Usually this isn't necessary since the we prevent the default action in `pointerDown`,
        // but some cases like dragging of links can slip through (see #24403).
        event.preventDefault();
      }
    };
    this.withRootElement(element).withParent(_config.parentDragRef || null);
    this._parentPositions = new ParentPositionTracker(_document);
    _dragDropRegistry.registerDragItem(this);
  }
  /**
   * Returns the element that is being used as a placeholder
   * while the current element is being dragged.
   */
  getPlaceholderElement() {
    return this._placeholder;
  }
  /** Returns the root draggable element. */
  getRootElement() {
    return this._rootElement;
  }
  /**
   * Gets the currently-visible element that represents the drag item.
   * While dragging this is the placeholder, otherwise it's the root element.
   */
  getVisibleElement() {
    return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();
  }
  /** Registers the handles that can be used to drag the element. */
  withHandles(handles) {
    this._handles = handles.map(handle => (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.coerceElement)(handle));
    this._handles.forEach(handle => toggleNativeDragInteractions(handle, this.disabled));
    this._toggleNativeDragInteractions();
    // Delete any lingering disabled handles that may have been destroyed. Note that we re-create
    // the set, rather than iterate over it and filter out the destroyed handles, because while
    // the ES spec allows for sets to be modified while they're being iterated over, some polyfills
    // use an array internally which may throw an error.
    const disabledHandles = new Set();
    this._disabledHandles.forEach(handle => {
      if (this._handles.indexOf(handle) > -1) {
        disabledHandles.add(handle);
      }
    });
    this._disabledHandles = disabledHandles;
    return this;
  }
  /**
   * Registers the template that should be used for the drag preview.
   * @param template Template that from which to stamp out the preview.
   */
  withPreviewTemplate(template) {
    this._previewTemplate = template;
    return this;
  }
  /**
   * Registers the template that should be used for the drag placeholder.
   * @param template Template that from which to stamp out the placeholder.
   */
  withPlaceholderTemplate(template) {
    this._placeholderTemplate = template;
    return this;
  }
  /**
   * Sets an alternate drag root element. The root element is the element that will be moved as
   * the user is dragging. Passing an alternate root element is useful when trying to enable
   * dragging on an element that you might not have access to.
   */
  withRootElement(rootElement) {
    const element = (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.coerceElement)(rootElement);
    if (element !== this._rootElement) {
      if (this._rootElement) {
        this._removeRootElementListeners(this._rootElement);
      }
      this._ngZone.runOutsideAngular(() => {
        element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);
        element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);
        element.addEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);
      });
      this._initialTransform = undefined;
      this._rootElement = element;
    }
    if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {
      this._ownerSVGElement = this._rootElement.ownerSVGElement;
    }
    return this;
  }
  /**
   * Element to which the draggable's position will be constrained.
   */
  withBoundaryElement(boundaryElement) {
    this._boundaryElement = boundaryElement ? (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.coerceElement)(boundaryElement) : null;
    this._resizeSubscription.unsubscribe();
    if (boundaryElement) {
      this._resizeSubscription = this._viewportRuler.change(10).subscribe(() => this._containInsideBoundaryOnResize());
    }
    return this;
  }
  /** Sets the parent ref that the ref is nested in.  */
  withParent(parent) {
    this._parentDragRef = parent;
    return this;
  }
  /** Removes the dragging functionality from the DOM element. */
  dispose() {
    this._removeRootElementListeners(this._rootElement);
    // Do this check before removing from the registry since it'll
    // stop being considered as dragged once it is removed.
    if (this.isDragging()) {
      // Since we move out the element to the end of the body while it's being
      // dragged, we have to make sure that it's removed if it gets destroyed.
      this._rootElement?.remove();
    }
    this._anchor?.remove();
    this._destroyPreview();
    this._destroyPlaceholder();
    this._dragDropRegistry.removeDragItem(this);
    this._removeSubscriptions();
    this.beforeStarted.complete();
    this.started.complete();
    this.released.complete();
    this.ended.complete();
    this.entered.complete();
    this.exited.complete();
    this.dropped.complete();
    this._moveEvents.complete();
    this._handles = [];
    this._disabledHandles.clear();
    this._dropContainer = undefined;
    this._resizeSubscription.unsubscribe();
    this._parentPositions.clear();
    this._boundaryElement = this._rootElement = this._ownerSVGElement = this._placeholderTemplate = this._previewTemplate = this._anchor = this._parentDragRef = null;
  }
  /** Checks whether the element is currently being dragged. */
  isDragging() {
    return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);
  }
  /** Resets a standalone drag item to its initial position. */
  reset() {
    this._rootElement.style.transform = this._initialTransform || '';
    this._activeTransform = {
      x: 0,
      y: 0
    };
    this._passiveTransform = {
      x: 0,
      y: 0
    };
  }
  /**
   * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.
   * @param handle Handle element that should be disabled.
   */
  disableHandle(handle) {
    if (!this._disabledHandles.has(handle) && this._handles.indexOf(handle) > -1) {
      this._disabledHandles.add(handle);
      toggleNativeDragInteractions(handle, true);
    }
  }
  /**
   * Enables a handle, if it has been disabled.
   * @param handle Handle element to be enabled.
   */
  enableHandle(handle) {
    if (this._disabledHandles.has(handle)) {
      this._disabledHandles.delete(handle);
      toggleNativeDragInteractions(handle, this.disabled);
    }
  }
  /** Sets the layout direction of the draggable item. */
  withDirection(direction) {
    this._direction = direction;
    return this;
  }
  /** Sets the container that the item is part of. */
  _withDropContainer(container) {
    this._dropContainer = container;
  }
  /**
   * Gets the current position in pixels the draggable outside of a drop container.
   */
  getFreeDragPosition() {
    const position = this.isDragging() ? this._activeTransform : this._passiveTransform;
    return {
      x: position.x,
      y: position.y
    };
  }
  /**
   * Sets the current position in pixels the draggable outside of a drop container.
   * @param value New position to be set.
   */
  setFreeDragPosition(value) {
    this._activeTransform = {
      x: 0,
      y: 0
    };
    this._passiveTransform.x = value.x;
    this._passiveTransform.y = value.y;
    if (!this._dropContainer) {
      this._applyRootElementTransform(value.x, value.y);
    }
    return this;
  }
  /**
   * Sets the container into which to insert the preview element.
   * @param value Container into which to insert the preview.
   */
  withPreviewContainer(value) {
    this._previewContainer = value;
    return this;
  }
  /** Updates the item's sort order based on the last-known pointer position. */
  _sortFromLastPointerPosition() {
    const position = this._lastKnownPointerPosition;
    if (position && this._dropContainer) {
      this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);
    }
  }
  /** Unsubscribes from the global subscriptions. */
  _removeSubscriptions() {
    this._pointerMoveSubscription.unsubscribe();
    this._pointerUpSubscription.unsubscribe();
    this._scrollSubscription.unsubscribe();
  }
  /** Destroys the preview element and its ViewRef. */
  _destroyPreview() {
    this._preview?.remove();
    this._previewRef?.destroy();
    this._preview = this._previewRef = null;
  }
  /** Destroys the placeholder element and its ViewRef. */
  _destroyPlaceholder() {
    this._placeholder?.remove();
    this._placeholderRef?.destroy();
    this._placeholder = this._placeholderRef = null;
  }
  /**
   * Clears subscriptions and stops the dragging sequence.
   * @param event Browser event object that ended the sequence.
   */
  _endDragSequence(event) {
    // Note that here we use `isDragging` from the service, rather than from `this`.
    // The difference is that the one from the service reflects whether a dragging sequence
    // has been initiated, whereas the one on `this` includes whether the user has passed
    // the minimum dragging threshold.
    if (!this._dragDropRegistry.isDragging(this)) {
      return;
    }
    this._removeSubscriptions();
    this._dragDropRegistry.stopDragging(this);
    this._toggleNativeDragInteractions();
    if (this._handles) {
      this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;
    }
    if (!this._hasStartedDragging) {
      return;
    }
    this.released.next({
      source: this,
      event
    });
    if (this._dropContainer) {
      // Stop scrolling immediately, instead of waiting for the animation to finish.
      this._dropContainer._stopScrolling();
      this._animatePreviewToPlaceholder().then(() => {
        this._cleanupDragArtifacts(event);
        this._cleanupCachedDimensions();
        this._dragDropRegistry.stopDragging(this);
      });
    } else {
      // Convert the active transform into a passive one. This means that next time
      // the user starts dragging the item, its position will be calculated relatively
      // to the new passive transform.
      this._passiveTransform.x = this._activeTransform.x;
      const pointerPosition = this._getPointerPositionOnPage(event);
      this._passiveTransform.y = this._activeTransform.y;
      this._ngZone.run(() => {
        this.ended.next({
          source: this,
          distance: this._getDragDistance(pointerPosition),
          dropPoint: pointerPosition,
          event
        });
      });
      this._cleanupCachedDimensions();
      this._dragDropRegistry.stopDragging(this);
    }
  }
  /** Starts the dragging sequence. */
  _startDragSequence(event) {
    if (isTouchEvent(event)) {
      this._lastTouchEventTime = Date.now();
    }
    this._toggleNativeDragInteractions();
    const dropContainer = this._dropContainer;
    if (dropContainer) {
      const element = this._rootElement;
      const parent = element.parentNode;
      const placeholder = this._placeholder = this._createPlaceholderElement();
      const anchor = this._anchor = this._anchor || this._document.createComment('');
      // Needs to happen before the root element is moved.
      const shadowRoot = this._getShadowRoot();
      // Insert an anchor node so that we can restore the element's position in the DOM.
      parent.insertBefore(anchor, element);
      // There's no risk of transforms stacking when inside a drop container so
      // we can keep the initial transform up to date any time dragging starts.
      this._initialTransform = element.style.transform || '';
      // Create the preview after the initial transform has
      // been cached, because it can be affected by the transform.
      this._preview = this._createPreviewElement();
      // We move the element out at the end of the body and we make it hidden, because keeping it in
      // place will throw off the consumer's `:last-child` selectors. We can't remove the element
      // from the DOM completely, because iOS will stop firing all subsequent events in the chain.
      toggleVisibility(element, false, dragImportantProperties);
      this._document.body.appendChild(parent.replaceChild(placeholder, element));
      this._getPreviewInsertionPoint(parent, shadowRoot).appendChild(this._preview);
      this.started.next({
        source: this,
        event
      }); // Emit before notifying the container.
      dropContainer.start();
      this._initialContainer = dropContainer;
      this._initialIndex = dropContainer.getItemIndex(this);
    } else {
      this.started.next({
        source: this,
        event
      });
      this._initialContainer = this._initialIndex = undefined;
    }
    // Important to run after we've called `start` on the parent container
    // so that it has had time to resolve its scrollable parents.
    this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);
  }
  /**
   * Sets up the different variables and subscriptions
   * that will be necessary for the dragging sequence.
   * @param referenceElement Element that started the drag sequence.
   * @param event Browser event object that started the sequence.
   */
  _initializeDragSequence(referenceElement, event) {
    // Stop propagation if the item is inside another
    // draggable so we don't start multiple drag sequences.
    if (this._parentDragRef) {
      event.stopPropagation();
    }
    const isDragging = this.isDragging();
    const isTouchSequence = isTouchEvent(event);
    const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;
    const rootElement = this._rootElement;
    const target = (0,_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_0__._getEventTarget)(event);
    const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime && this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();
    const isFakeEvent = isTouchSequence ? (0,_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__.isFakeTouchstartFromScreenReader)(event) : (0,_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__.isFakeMousedownFromScreenReader)(event);
    // If the event started from an element with the native HTML drag&drop, it'll interfere
    // with our own dragging (e.g. `img` tags do it by default). Prevent the default action
    // to stop it from happening. Note that preventing on `dragstart` also seems to work, but
    // it's flaky and it fails if the user drags it away quickly. Also note that we only want
    // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`
    // events from firing on touch devices.
    if (target && target.draggable && event.type === 'mousedown') {
      event.preventDefault();
    }
    // Abort if the user is already dragging or is using a mouse button other than the primary one.
    if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent || isFakeEvent) {
      return;
    }
    // If we've got handles, we need to disable the tap highlight on the entire root element,
    // otherwise iOS will still add it, even though all the drag interactions on the handle
    // are disabled.
    if (this._handles.length) {
      const rootStyles = rootElement.style;
      this._rootElementTapHighlight = rootStyles.webkitTapHighlightColor || '';
      rootStyles.webkitTapHighlightColor = 'transparent';
    }
    this._hasStartedDragging = this._hasMoved = false;
    // Avoid multiple subscriptions and memory leaks when multi touch
    // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)
    this._removeSubscriptions();
    this._initialClientRect = this._rootElement.getBoundingClientRect();
    this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);
    this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);
    this._scrollSubscription = this._dragDropRegistry.scrolled(this._getShadowRoot()).subscribe(scrollEvent => this._updateOnScroll(scrollEvent));
    if (this._boundaryElement) {
      this._boundaryRect = getMutableClientRect(this._boundaryElement);
    }
    // If we have a custom preview we can't know ahead of time how large it'll be so we position
    // it next to the cursor. The exception is when the consumer has opted into making the preview
    // the same size as the root element, in which case we do know the size.
    const previewTemplate = this._previewTemplate;
    this._pickupPositionInElement = previewTemplate && previewTemplate.template && !previewTemplate.matchSize ? {
      x: 0,
      y: 0
    } : this._getPointerPositionInElement(this._initialClientRect, referenceElement, event);
    const pointerPosition = this._pickupPositionOnPage = this._lastKnownPointerPosition = this._getPointerPositionOnPage(event);
    this._pointerDirectionDelta = {
      x: 0,
      y: 0
    };
    this._pointerPositionAtLastDirectionChange = {
      x: pointerPosition.x,
      y: pointerPosition.y
    };
    this._dragStartTime = Date.now();
    this._dragDropRegistry.startDragging(this, event);
  }
  /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */
  _cleanupDragArtifacts(event) {
    // Restore the element's visibility and insert it at its old position in the DOM.
    // It's important that we maintain the position, because moving the element around in the DOM
    // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,
    // while moving the existing elements in all other cases.
    toggleVisibility(this._rootElement, true, dragImportantProperties);
    this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);
    this._destroyPreview();
    this._destroyPlaceholder();
    this._initialClientRect = this._boundaryRect = this._previewRect = this._initialTransform = undefined;
    // Re-enter the NgZone since we bound `document` events on the outside.
    this._ngZone.run(() => {
      const container = this._dropContainer;
      const currentIndex = container.getItemIndex(this);
      const pointerPosition = this._getPointerPositionOnPage(event);
      const distance = this._getDragDistance(pointerPosition);
      const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);
      this.ended.next({
        source: this,
        distance,
        dropPoint: pointerPosition,
        event
      });
      this.dropped.next({
        item: this,
        currentIndex,
        previousIndex: this._initialIndex,
        container: container,
        previousContainer: this._initialContainer,
        isPointerOverContainer,
        distance,
        dropPoint: pointerPosition,
        event
      });
      container.drop(this, currentIndex, this._initialIndex, this._initialContainer, isPointerOverContainer, distance, pointerPosition, event);
      this._dropContainer = this._initialContainer;
    });
  }
  /**
   * Updates the item's position in its drop container, or moves it
   * into a new one, depending on its current drag position.
   */
  _updateActiveDropContainer({
    x,
    y
  }, {
    x: rawX,
    y: rawY
  }) {
    // Drop container that draggable has been moved into.
    let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);
    // If we couldn't find a new container to move the item into, and the item has left its
    // initial container, check whether the it's over the initial container. This handles the
    // case where two containers are connected one way and the user tries to undo dragging an
    // item into a new container.
    if (!newContainer && this._dropContainer !== this._initialContainer && this._initialContainer._isOverContainer(x, y)) {
      newContainer = this._initialContainer;
    }
    if (newContainer && newContainer !== this._dropContainer) {
      this._ngZone.run(() => {
        // Notify the old container that the item has left.
        this.exited.next({
          item: this,
          container: this._dropContainer
        });
        this._dropContainer.exit(this);
        // Notify the new container that the item has entered.
        this._dropContainer = newContainer;
        this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&
        // If we're re-entering the initial container and sorting is disabled,
        // put item the into its starting index to begin with.
        newContainer.sortingDisabled ? this._initialIndex : undefined);
        this.entered.next({
          item: this,
          container: newContainer,
          currentIndex: newContainer.getItemIndex(this)
        });
      });
    }
    // Dragging may have been interrupted as a result of the events above.
    if (this.isDragging()) {
      this._dropContainer._startScrollingIfNecessary(rawX, rawY);
      this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);
      if (this.constrainPosition) {
        this._applyPreviewTransform(x, y);
      } else {
        this._applyPreviewTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);
      }
    }
  }
  /**
   * Creates the element that will be rendered next to the user's pointer
   * and will be used as a preview of the element that is being dragged.
   */
  _createPreviewElement() {
    const previewConfig = this._previewTemplate;
    const previewClass = this.previewClass;
    const previewTemplate = previewConfig ? previewConfig.template : null;
    let preview;
    if (previewTemplate && previewConfig) {
      // Measure the element before we've inserted the preview
      // since the insertion could throw off the measurement.
      const rootRect = previewConfig.matchSize ? this._initialClientRect : null;
      const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);
      viewRef.detectChanges();
      preview = getRootNode(viewRef, this._document);
      this._previewRef = viewRef;
      if (previewConfig.matchSize) {
        matchElementSize(preview, rootRect);
      } else {
        preview.style.transform = getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);
      }
    } else {
      preview = deepCloneNode(this._rootElement);
      matchElementSize(preview, this._initialClientRect);
      if (this._initialTransform) {
        preview.style.transform = this._initialTransform;
      }
    }
    extendStyles(preview.style, {
      // It's important that we disable the pointer events on the preview, because
      // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.
      'pointer-events': 'none',
      // We have to reset the margin, because it can throw off positioning relative to the viewport.
      'margin': '0',
      'position': 'fixed',
      'top': '0',
      'left': '0',
      'z-index': `${this._config.zIndex || 1000}`
    }, dragImportantProperties);
    toggleNativeDragInteractions(preview, false);
    preview.classList.add('cdk-drag-preview');
    preview.setAttribute('dir', this._direction);
    if (previewClass) {
      if (Array.isArray(previewClass)) {
        previewClass.forEach(className => preview.classList.add(className));
      } else {
        preview.classList.add(previewClass);
      }
    }
    return preview;
  }
  /**
   * Animates the preview element from its current position to the location of the drop placeholder.
   * @returns Promise that resolves when the animation completes.
   */
  _animatePreviewToPlaceholder() {
    // If the user hasn't moved yet, the transitionend event won't fire.
    if (!this._hasMoved) {
      return Promise.resolve();
    }
    const placeholderRect = this._placeholder.getBoundingClientRect();
    // Apply the class that adds a transition to the preview.
    this._preview.classList.add('cdk-drag-animating');
    // Move the preview to the placeholder position.
    this._applyPreviewTransform(placeholderRect.left, placeholderRect.top);
    // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since
    // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to
    // apply its style, we take advantage of the available info to figure out whether we need to
    // bind the event in the first place.
    const duration = getTransformTransitionDurationInMs(this._preview);
    if (duration === 0) {
      return Promise.resolve();
    }
    return this._ngZone.runOutsideAngular(() => {
      return new Promise(resolve => {
        const handler = event => {
          if (!event || (0,_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_0__._getEventTarget)(event) === this._preview && event.propertyName === 'transform') {
            this._preview?.removeEventListener('transitionend', handler);
            resolve();
            clearTimeout(timeout);
          }
        };
        // If a transition is short enough, the browser might not fire the `transitionend` event.
        // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll
        // fire if the transition hasn't completed when it was supposed to.
        const timeout = setTimeout(handler, duration * 1.5);
        this._preview.addEventListener('transitionend', handler);
      });
    });
  }
  /** Creates an element that will be shown instead of the current element while dragging. */
  _createPlaceholderElement() {
    const placeholderConfig = this._placeholderTemplate;
    const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;
    let placeholder;
    if (placeholderTemplate) {
      this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);
      this._placeholderRef.detectChanges();
      placeholder = getRootNode(this._placeholderRef, this._document);
    } else {
      placeholder = deepCloneNode(this._rootElement);
    }
    // Stop pointer events on the preview so the user can't
    // interact with it while the preview is animating.
    placeholder.style.pointerEvents = 'none';
    placeholder.classList.add('cdk-drag-placeholder');
    return placeholder;
  }
  /**
   * Figures out the coordinates at which an element was picked up.
   * @param referenceElement Element that initiated the dragging.
   * @param event Event that initiated the dragging.
   */
  _getPointerPositionInElement(elementRect, referenceElement, event) {
    const handleElement = referenceElement === this._rootElement ? null : referenceElement;
    const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;
    const point = isTouchEvent(event) ? event.targetTouches[0] : event;
    const scrollPosition = this._getViewportScrollPosition();
    const x = point.pageX - referenceRect.left - scrollPosition.left;
    const y = point.pageY - referenceRect.top - scrollPosition.top;
    return {
      x: referenceRect.left - elementRect.left + x,
      y: referenceRect.top - elementRect.top + y
    };
  }
  /** Determines the point of the page that was touched by the user. */
  _getPointerPositionOnPage(event) {
    const scrollPosition = this._getViewportScrollPosition();
    const point = isTouchEvent(event) ?
    // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.
    // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`
    // to have a value, but Firefox in device emulation mode has a bug where both can be empty
    // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid
    // throwing an error. The value returned here will be incorrect, but since this only
    // breaks inside a developer tool and the value is only used for secondary information,
    // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.
    event.touches[0] || event.changedTouches[0] || {
      pageX: 0,
      pageY: 0
    } : event;
    const x = point.pageX - scrollPosition.left;
    const y = point.pageY - scrollPosition.top;
    // if dragging SVG element, try to convert from the screen coordinate system to the SVG
    // coordinate system
    if (this._ownerSVGElement) {
      const svgMatrix = this._ownerSVGElement.getScreenCTM();
      if (svgMatrix) {
        const svgPoint = this._ownerSVGElement.createSVGPoint();
        svgPoint.x = x;
        svgPoint.y = y;
        return svgPoint.matrixTransform(svgMatrix.inverse());
      }
    }
    return {
      x,
      y
    };
  }
  /** Gets the pointer position on the page, accounting for any position constraints. */
  _getConstrainedPointerPosition(point) {
    const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;
    let {
      x,
      y
    } = this.constrainPosition ? this.constrainPosition(point, this, this._initialClientRect, this._pickupPositionInElement) : point;
    if (this.lockAxis === 'x' || dropContainerLock === 'x') {
      y = this._pickupPositionOnPage.y;
    } else if (this.lockAxis === 'y' || dropContainerLock === 'y') {
      x = this._pickupPositionOnPage.x;
    }
    if (this._boundaryRect) {
      const {
        x: pickupX,
        y: pickupY
      } = this._pickupPositionInElement;
      const boundaryRect = this._boundaryRect;
      const {
        width: previewWidth,
        height: previewHeight
      } = this._getPreviewRect();
      const minY = boundaryRect.top + pickupY;
      const maxY = boundaryRect.bottom - (previewHeight - pickupY);
      const minX = boundaryRect.left + pickupX;
      const maxX = boundaryRect.right - (previewWidth - pickupX);
      x = clamp$1(x, minX, maxX);
      y = clamp$1(y, minY, maxY);
    }
    return {
      x,
      y
    };
  }
  /** Updates the current drag delta, based on the user's current pointer position on the page. */
  _updatePointerDirectionDelta(pointerPositionOnPage) {
    const {
      x,
      y
    } = pointerPositionOnPage;
    const delta = this._pointerDirectionDelta;
    const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;
    // Amount of pixels the user has dragged since the last time the direction changed.
    const changeX = Math.abs(x - positionSinceLastChange.x);
    const changeY = Math.abs(y - positionSinceLastChange.y);
    // Because we handle pointer events on a per-pixel basis, we don't want the delta
    // to change for every pixel, otherwise anything that depends on it can look erratic.
    // To make the delta more consistent, we track how much the user has moved since the last
    // delta change and we only update it after it has reached a certain threshold.
    if (changeX > this._config.pointerDirectionChangeThreshold) {
      delta.x = x > positionSinceLastChange.x ? 1 : -1;
      positionSinceLastChange.x = x;
    }
    if (changeY > this._config.pointerDirectionChangeThreshold) {
      delta.y = y > positionSinceLastChange.y ? 1 : -1;
      positionSinceLastChange.y = y;
    }
    return delta;
  }
  /** Toggles the native drag interactions, based on how many handles are registered. */
  _toggleNativeDragInteractions() {
    if (!this._rootElement || !this._handles) {
      return;
    }
    const shouldEnable = this._handles.length > 0 || !this.isDragging();
    if (shouldEnable !== this._nativeInteractionsEnabled) {
      this._nativeInteractionsEnabled = shouldEnable;
      toggleNativeDragInteractions(this._rootElement, shouldEnable);
    }
  }
  /** Removes the manually-added event listeners from the root element. */
  _removeRootElementListeners(element) {
    element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);
    element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);
    element.removeEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);
  }
  /**
   * Applies a `transform` to the root element, taking into account any existing transforms on it.
   * @param x New transform value along the X axis.
   * @param y New transform value along the Y axis.
   */
  _applyRootElementTransform(x, y) {
    const transform = getTransform(x, y);
    const styles = this._rootElement.style;
    // Cache the previous transform amount only after the first drag sequence, because
    // we don't want our own transforms to stack on top of each other.
    // Should be excluded none because none + translate3d(x, y, x) is invalid css
    if (this._initialTransform == null) {
      this._initialTransform = styles.transform && styles.transform != 'none' ? styles.transform : '';
    }
    // Preserve the previous `transform` value, if there was one. Note that we apply our own
    // transform before the user's, because things like rotation can affect which direction
    // the element will be translated towards.
    styles.transform = combineTransforms(transform, this._initialTransform);
  }
  /**
   * Applies a `transform` to the preview, taking into account any existing transforms on it.
   * @param x New transform value along the X axis.
   * @param y New transform value along the Y axis.
   */
  _applyPreviewTransform(x, y) {
    // Only apply the initial transform if the preview is a clone of the original element, otherwise
    // it could be completely different and the transform might not make sense anymore.
    const initialTransform = this._previewTemplate?.template ? undefined : this._initialTransform;
    const transform = getTransform(x, y);
    this._preview.style.transform = combineTransforms(transform, initialTransform);
  }
  /**
   * Gets the distance that the user has dragged during the current drag sequence.
   * @param currentPosition Current position of the user's pointer.
   */
  _getDragDistance(currentPosition) {
    const pickupPosition = this._pickupPositionOnPage;
    if (pickupPosition) {
      return {
        x: currentPosition.x - pickupPosition.x,
        y: currentPosition.y - pickupPosition.y
      };
    }
    return {
      x: 0,
      y: 0
    };
  }
  /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */
  _cleanupCachedDimensions() {
    this._boundaryRect = this._previewRect = undefined;
    this._parentPositions.clear();
  }
  /**
   * Checks whether the element is still inside its boundary after the viewport has been resized.
   * If not, the position is adjusted so that the element fits again.
   */
  _containInsideBoundaryOnResize() {
    let {
      x,
      y
    } = this._passiveTransform;
    if (x === 0 && y === 0 || this.isDragging() || !this._boundaryElement) {
      return;
    }
    // Note: don't use `_clientRectAtStart` here, because we want the latest position.
    const elementRect = this._rootElement.getBoundingClientRect();
    const boundaryRect = this._boundaryElement.getBoundingClientRect();
    // It's possible that the element got hidden away after dragging (e.g. by switching to a
    // different tab). Don't do anything in this case so we don't clear the user's position.
    if (boundaryRect.width === 0 && boundaryRect.height === 0 || elementRect.width === 0 && elementRect.height === 0) {
      return;
    }
    const leftOverflow = boundaryRect.left - elementRect.left;
    const rightOverflow = elementRect.right - boundaryRect.right;
    const topOverflow = boundaryRect.top - elementRect.top;
    const bottomOverflow = elementRect.bottom - boundaryRect.bottom;
    // If the element has become wider than the boundary, we can't
    // do much to make it fit so we just anchor it to the left.
    if (boundaryRect.width > elementRect.width) {
      if (leftOverflow > 0) {
        x += leftOverflow;
      }
      if (rightOverflow > 0) {
        x -= rightOverflow;
      }
    } else {
      x = 0;
    }
    // If the element has become taller than the boundary, we can't
    // do much to make it fit so we just anchor it to the top.
    if (boundaryRect.height > elementRect.height) {
      if (topOverflow > 0) {
        y += topOverflow;
      }
      if (bottomOverflow > 0) {
        y -= bottomOverflow;
      }
    } else {
      y = 0;
    }
    if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {
      this.setFreeDragPosition({
        y,
        x
      });
    }
  }
  /** Gets the drag start delay, based on the event type. */
  _getDragStartDelay(event) {
    const value = this.dragStartDelay;
    if (typeof value === 'number') {
      return value;
    } else if (isTouchEvent(event)) {
      return value.touch;
    }
    return value ? value.mouse : 0;
  }
  /** Updates the internal state of the draggable element when scrolling has occurred. */
  _updateOnScroll(event) {
    const scrollDifference = this._parentPositions.handleScroll(event);
    if (scrollDifference) {
      const target = (0,_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_0__._getEventTarget)(event);
      // ClientRect dimensions are based on the scroll position of the page and its parent
      // node so we have to update the cached boundary ClientRect if the user has scrolled.
      if (this._boundaryRect && target !== this._boundaryElement && target.contains(this._boundaryElement)) {
        adjustClientRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);
      }
      this._pickupPositionOnPage.x += scrollDifference.left;
      this._pickupPositionOnPage.y += scrollDifference.top;
      // If we're in free drag mode, we have to update the active transform, because
      // it isn't relative to the viewport like the preview inside a drop list.
      if (!this._dropContainer) {
        this._activeTransform.x -= scrollDifference.left;
        this._activeTransform.y -= scrollDifference.top;
        this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);
      }
    }
  }
  /** Gets the scroll position of the viewport. */
  _getViewportScrollPosition() {
    return this._parentPositions.positions.get(this._document)?.scrollPosition || this._parentPositions.getViewportScrollPosition();
  }
  /**
   * Lazily resolves and returns the shadow root of the element. We do this in a function, rather
   * than saving it in property directly on init, because we want to resolve it as late as possible
   * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the
   * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.
   */
  _getShadowRoot() {
    if (this._cachedShadowRoot === undefined) {
      this._cachedShadowRoot = (0,_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_0__._getShadowRoot)(this._rootElement);
    }
    return this._cachedShadowRoot;
  }
  /** Gets the element into which the drag preview should be inserted. */
  _getPreviewInsertionPoint(initialParent, shadowRoot) {
    const previewContainer = this._previewContainer || 'global';
    if (previewContainer === 'parent') {
      return initialParent;
    }
    if (previewContainer === 'global') {
      const documentRef = this._document;
      // We can't use the body if the user is in fullscreen mode,
      // because the preview will render under the fullscreen element.
      // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.
      return shadowRoot || documentRef.fullscreenElement || documentRef.webkitFullscreenElement || documentRef.mozFullScreenElement || documentRef.msFullscreenElement || documentRef.body;
    }
    return (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.coerceElement)(previewContainer);
  }
  /** Lazily resolves and returns the dimensions of the preview. */
  _getPreviewRect() {
    // Cache the preview element rect if we haven't cached it already or if
    // we cached it too early before the element dimensions were computed.
    if (!this._previewRect || !this._previewRect.width && !this._previewRect.height) {
      this._previewRect = this._preview ? this._preview.getBoundingClientRect() : this._initialClientRect;
    }
    return this._previewRect;
  }
  /** Gets a handle that is the target of an event. */
  _getTargetHandle(event) {
    return this._handles.find(handle => {
      return event.target && (event.target === handle || handle.contains(event.target));
    });
  }
}
/**
 * Gets a 3d `transform` that can be applied to an element.
 * @param x Desired position of the element along the X axis.
 * @param y Desired position of the element along the Y axis.
 */
function getTransform(x, y) {
  // Round the transforms since some browsers will
  // blur the elements for sub-pixel transforms.
  return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;
}
/** Clamps a value between a minimum and a maximum. */
function clamp$1(value, min, max) {
  return Math.max(min, Math.min(max, value));
}
/** Determines whether an event is a touch event. */
function isTouchEvent(event) {
  // This function is called for every pixel that the user has dragged so we need it to be
  // as fast as possible. Since we only bind mouse events and touch events, we can assume
  // that if the event's name starts with `t`, it's a touch event.
  return event.type[0] === 't';
}
/**
 * Gets the root HTML element of an embedded view.
 * If the root is not an HTML element it gets wrapped in one.
 */
function getRootNode(viewRef, _document) {
  const rootNodes = viewRef.rootNodes;
  if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {
    return rootNodes[0];
  }
  const wrapper = _document.createElement('div');
  rootNodes.forEach(node => wrapper.appendChild(node));
  return wrapper;
}
/**
 * Matches the target element's size to the source's size.
 * @param target Element that needs to be resized.
 * @param sourceRect Dimensions of the source element.
 */
function matchElementSize(target, sourceRect) {
  target.style.width = `${sourceRect.width}px`;
  target.style.height = `${sourceRect.height}px`;
  target.style.transform = getTransform(sourceRect.left, sourceRect.top);
}

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * Moves an item one index in an array to another.
 * @param array Array in which to move the item.
 * @param fromIndex Starting index of the item.
 * @param toIndex Index to which the item should be moved.
 */
function moveItemInArray(array, fromIndex, toIndex) {
  const from = clamp(fromIndex, array.length - 1);
  const to = clamp(toIndex, array.length - 1);
  if (from === to) {
    return;
  }
  const target = array[from];
  const delta = to < from ? -1 : 1;
  for (let i = from; i !== to; i += delta) {
    array[i] = array[i + delta];
  }
  array[to] = target;
}
/**
 * Moves an item from one array to another.
 * @param currentArray Array from which to transfer the item.
 * @param targetArray Array into which to put the item.
 * @param currentIndex Index of the item in its current array.
 * @param targetIndex Index at which to insert the item.
 */
function transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {
  const from = clamp(currentIndex, currentArray.length - 1);
  const to = clamp(targetIndex, targetArray.length);
  if (currentArray.length) {
    targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);
  }
}
/**
 * Copies an item from one array to another, leaving it in its
 * original position in current array.
 * @param currentArray Array from which to copy the item.
 * @param targetArray Array into which is copy the item.
 * @param currentIndex Index of the item in its current array.
 * @param targetIndex Index at which to insert the item.
 *
 */
function copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {
  const to = clamp(targetIndex, targetArray.length);
  if (currentArray.length) {
    targetArray.splice(to, 0, currentArray[currentIndex]);
  }
}
/** Clamps a number between zero and a maximum. */
function clamp(value, max) {
  return Math.max(0, Math.min(max, value));
}

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * Strategy that only supports sorting along a single axis.
 * Items are reordered using CSS transforms which allows for sorting to be animated.
 * @docs-private
 */
class SingleAxisSortStrategy {
  constructor(_element, _dragDropRegistry) {
    this._element = _element;
    this._dragDropRegistry = _dragDropRegistry;
    /** Cache of the dimensions of all the items inside the container. */
    this._itemPositions = [];
    /** Direction in which the list is oriented. */
    this.orientation = 'vertical';
    /**
     * Keeps track of the item that was last swapped with the dragged item, as well as what direction
     * the pointer was moving in when the swap occurred and whether the user's pointer continued to
     * overlap with the swapped item after the swapping occurred.
     */
    this._previousSwap = {
      drag: null,
      delta: 0,
      overlaps: false
    };
  }
  /**
   * To be called when the drag sequence starts.
   * @param items Items that are currently in the list.
   */
  start(items) {
    this.withItems(items);
  }
  /**
   * To be called when an item is being sorted.
   * @param item Item to be sorted.
   * @param pointerX Position of the item along the X axis.
   * @param pointerY Position of the item along the Y axis.
   * @param pointerDelta Direction in which the pointer is moving along each axis.
   */
  sort(item, pointerX, pointerY, pointerDelta) {
    const siblings = this._itemPositions;
    const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);
    if (newIndex === -1 && siblings.length > 0) {
      return null;
    }
    const isHorizontal = this.orientation === 'horizontal';
    const currentIndex = siblings.findIndex(currentItem => currentItem.drag === item);
    const siblingAtNewPosition = siblings[newIndex];
    const currentPosition = siblings[currentIndex].clientRect;
    const newPosition = siblingAtNewPosition.clientRect;
    const delta = currentIndex > newIndex ? 1 : -1;
    // How many pixels the item's placeholder should be offset.
    const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);
    // How many pixels all the other items should be offset.
    const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);
    // Save the previous order of the items before moving the item to its new index.
    // We use this to check whether an item has been moved as a result of the sorting.
    const oldOrder = siblings.slice();
    // Shuffle the array in place.
    moveItemInArray(siblings, currentIndex, newIndex);
    siblings.forEach((sibling, index) => {
      // Don't do anything if the position hasn't changed.
      if (oldOrder[index] === sibling) {
        return;
      }
      const isDraggedItem = sibling.drag === item;
      const offset = isDraggedItem ? itemOffset : siblingOffset;
      const elementToOffset = isDraggedItem ? item.getPlaceholderElement() : sibling.drag.getRootElement();
      // Update the offset to reflect the new position.
      sibling.offset += offset;
      // Since we're moving the items with a `transform`, we need to adjust their cached
      // client rects to reflect their new position, as well as swap their positions in the cache.
      // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the
      // elements may be mid-animation which will give us a wrong result.
      if (isHorizontal) {
        // Round the transforms since some browsers will
        // blur the elements, for sub-pixel transforms.
        elementToOffset.style.transform = combineTransforms(`translate3d(${Math.round(sibling.offset)}px, 0, 0)`, sibling.initialTransform);
        adjustClientRect(sibling.clientRect, 0, offset);
      } else {
        elementToOffset.style.transform = combineTransforms(`translate3d(0, ${Math.round(sibling.offset)}px, 0)`, sibling.initialTransform);
        adjustClientRect(sibling.clientRect, offset, 0);
      }
    });
    // Note that it's important that we do this after the client rects have been adjusted.
    this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);
    this._previousSwap.drag = siblingAtNewPosition.drag;
    this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;
    return {
      previousIndex: currentIndex,
      currentIndex: newIndex
    };
  }
  /**
   * Called when an item is being moved into the container.
   * @param item Item that was moved into the container.
   * @param pointerX Position of the item along the X axis.
   * @param pointerY Position of the item along the Y axis.
   * @param index Index at which the item entered. If omitted, the container will try to figure it
   *   out automatically.
   */
  enter(item, pointerX, pointerY, index) {
    const newIndex = index == null || index < 0 ?
    // We use the coordinates of where the item entered the drop
    // zone to figure out at which index it should be inserted.
    this._getItemIndexFromPointerPosition(item, pointerX, pointerY) : index;
    const activeDraggables = this._activeDraggables;
    const currentIndex = activeDraggables.indexOf(item);
    const placeholder = item.getPlaceholderElement();
    let newPositionReference = activeDraggables[newIndex];
    // If the item at the new position is the same as the item that is being dragged,
    // it means that we're trying to restore the item to its initial position. In this
    // case we should use the next item from the list as the reference.
    if (newPositionReference === item) {
      newPositionReference = activeDraggables[newIndex + 1];
    }
    // If we didn't find a new position reference, it means that either the item didn't start off
    // in this container, or that the item requested to be inserted at the end of the list.
    if (!newPositionReference && (newIndex == null || newIndex === -1 || newIndex < activeDraggables.length - 1) && this._shouldEnterAsFirstChild(pointerX, pointerY)) {
      newPositionReference = activeDraggables[0];
    }
    // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it
    // into another container and back again), we have to ensure that it isn't duplicated.
    if (currentIndex > -1) {
      activeDraggables.splice(currentIndex, 1);
    }
    // Don't use items that are being dragged as a reference, because
    // their element has been moved down to the bottom of the body.
    if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {
      const element = newPositionReference.getRootElement();
      element.parentElement.insertBefore(placeholder, element);
      activeDraggables.splice(newIndex, 0, item);
    } else {
      (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.coerceElement)(this._element).appendChild(placeholder);
      activeDraggables.push(item);
    }
    // The transform needs to be cleared so it doesn't throw off the measurements.
    placeholder.style.transform = '';
    // Note that usually `start` is called together with `enter` when an item goes into a new
    // container. This will cache item positions, but we need to refresh them since the amount
    // of items has changed.
    this._cacheItemPositions();
  }
  /** Sets the items that are currently part of the list. */
  withItems(items) {
    this._activeDraggables = items.slice();
    this._cacheItemPositions();
  }
  /** Assigns a sort predicate to the strategy. */
  withSortPredicate(predicate) {
    this._sortPredicate = predicate;
  }
  /** Resets the strategy to its initial state before dragging was started. */
  reset() {
    // TODO(crisbeto): may have to wait for the animations to finish.
    this._activeDraggables.forEach(item => {
      const rootElement = item.getRootElement();
      if (rootElement) {
        const initialTransform = this._itemPositions.find(p => p.drag === item)?.initialTransform;
        rootElement.style.transform = initialTransform || '';
      }
    });
    this._itemPositions = [];
    this._activeDraggables = [];
    this._previousSwap.drag = null;
    this._previousSwap.delta = 0;
    this._previousSwap.overlaps = false;
  }
  /**
   * Gets a snapshot of items currently in the list.
   * Can include items that we dragged in from another list.
   */
  getActiveItemsSnapshot() {
    return this._activeDraggables;
  }
  /** Gets the index of a specific item. */
  getItemIndex(item) {
    // Items are sorted always by top/left in the cache, however they flow differently in RTL.
    // The rest of the logic still stands no matter what orientation we're in, however
    // we need to invert the array when determining the index.
    const items = this.orientation === 'horizontal' && this.direction === 'rtl' ? this._itemPositions.slice().reverse() : this._itemPositions;
    return items.findIndex(currentItem => currentItem.drag === item);
  }
  /** Used to notify the strategy that the scroll position has changed. */
  updateOnScroll(topDifference, leftDifference) {
    // Since we know the amount that the user has scrolled we can shift all of the
    // client rectangles ourselves. This is cheaper than re-measuring everything and
    // we can avoid inconsistent behavior where we might be measuring the element before
    // its position has changed.
    this._itemPositions.forEach(({
      clientRect
    }) => {
      adjustClientRect(clientRect, topDifference, leftDifference);
    });
    // We need two loops for this, because we want all of the cached
    // positions to be up-to-date before we re-sort the item.
    this._itemPositions.forEach(({
      drag
    }) => {
      if (this._dragDropRegistry.isDragging(drag)) {
        // We need to re-sort the item manually, because the pointer move
        // events won't be dispatched while the user is scrolling.
        drag._sortFromLastPointerPosition();
      }
    });
  }
  /** Refreshes the position cache of the items and sibling containers. */
  _cacheItemPositions() {
    const isHorizontal = this.orientation === 'horizontal';
    this._itemPositions = this._activeDraggables.map(drag => {
      const elementToMeasure = drag.getVisibleElement();
      return {
        drag,
        offset: 0,
        initialTransform: elementToMeasure.style.transform || '',
        clientRect: getMutableClientRect(elementToMeasure)
      };
    }).sort((a, b) => {
      return isHorizontal ? a.clientRect.left - b.clientRect.left : a.clientRect.top - b.clientRect.top;
    });
  }
  /**
   * Gets the offset in pixels by which the item that is being dragged should be moved.
   * @param currentPosition Current position of the item.
   * @param newPosition Position of the item where the current item should be moved.
   * @param delta Direction in which the user is moving.
   */
  _getItemOffsetPx(currentPosition, newPosition, delta) {
    const isHorizontal = this.orientation === 'horizontal';
    let itemOffset = isHorizontal ? newPosition.left - currentPosition.left : newPosition.top - currentPosition.top;
    // Account for differences in the item width/height.
    if (delta === -1) {
      itemOffset += isHorizontal ? newPosition.width - currentPosition.width : newPosition.height - currentPosition.height;
    }
    return itemOffset;
  }
  /**
   * Gets the offset in pixels by which the items that aren't being dragged should be moved.
   * @param currentIndex Index of the item currently being dragged.
   * @param siblings All of the items in the list.
   * @param delta Direction in which the user is moving.
   */
  _getSiblingOffsetPx(currentIndex, siblings, delta) {
    const isHorizontal = this.orientation === 'horizontal';
    const currentPosition = siblings[currentIndex].clientRect;
    const immediateSibling = siblings[currentIndex + delta * -1];
    let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;
    if (immediateSibling) {
      const start = isHorizontal ? 'left' : 'top';
      const end = isHorizontal ? 'right' : 'bottom';
      // Get the spacing between the start of the current item and the end of the one immediately
      // after it in the direction in which the user is dragging, or vice versa. We add it to the
      // offset in order to push the element to where it will be when it's inline and is influenced
      // by the `margin` of its siblings.
      if (delta === -1) {
        siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];
      } else {
        siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];
      }
    }
    return siblingOffset;
  }
  /**
   * Checks if pointer is entering in the first position
   * @param pointerX Position of the user's pointer along the X axis.
   * @param pointerY Position of the user's pointer along the Y axis.
   */
  _shouldEnterAsFirstChild(pointerX, pointerY) {
    if (!this._activeDraggables.length) {
      return false;
    }
    const itemPositions = this._itemPositions;
    const isHorizontal = this.orientation === 'horizontal';
    // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index
    // check if container is using some sort of "reverse" ordering (eg: flex-direction: row-reverse)
    const reversed = itemPositions[0].drag !== this._activeDraggables[0];
    if (reversed) {
      const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;
      return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;
    } else {
      const firstItemRect = itemPositions[0].clientRect;
      return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;
    }
  }
  /**
   * Gets the index of an item in the drop container, based on the position of the user's pointer.
   * @param item Item that is being sorted.
   * @param pointerX Position of the user's pointer along the X axis.
   * @param pointerY Position of the user's pointer along the Y axis.
   * @param delta Direction in which the user is moving their pointer.
   */
  _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {
    const isHorizontal = this.orientation === 'horizontal';
    const index = this._itemPositions.findIndex(({
      drag,
      clientRect
    }) => {
      // Skip the item itself.
      if (drag === item) {
        return false;
      }
      if (delta) {
        const direction = isHorizontal ? delta.x : delta.y;
        // If the user is still hovering over the same item as last time, their cursor hasn't left
        // the item after we made the swap, and they didn't change the direction in which they're
        // dragging, we don't consider it a direction swap.
        if (drag === this._previousSwap.drag && this._previousSwap.overlaps && direction === this._previousSwap.delta) {
          return false;
        }
      }
      return isHorizontal ?
      // Round these down since most browsers report client rects with
      // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.
      pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right) : pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);
    });
    return index === -1 || !this._sortPredicate(index, item) ? -1 : index;
  }
}

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * Proximity, as a ratio to width/height, at which a
 * dragged item will affect the drop container.
 */
const DROP_PROXIMITY_THRESHOLD = 0.05;
/**
 * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the
 * viewport. The value comes from trying it out manually until it feels right.
 */
const SCROLL_PROXIMITY_THRESHOLD = 0.05;
/**
 * Reference to a drop list. Used to manipulate or dispose of the container.
 */
class DropListRef {
  constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {
    this._dragDropRegistry = _dragDropRegistry;
    this._ngZone = _ngZone;
    this._viewportRuler = _viewportRuler;
    /** Whether starting a dragging sequence from this container is disabled. */
    this.disabled = false;
    /** Whether sorting items within the list is disabled. */
    this.sortingDisabled = false;
    /**
     * Whether auto-scrolling the view when the user
     * moves their pointer close to the edges is disabled.
     */
    this.autoScrollDisabled = false;
    /** Number of pixels to scroll for each frame when auto-scrolling an element. */
    this.autoScrollStep = 2;
    /**
     * Function that is used to determine whether an item
     * is allowed to be moved into a drop container.
     */
    this.enterPredicate = () => true;
    /** Function that is used to determine whether an item can be sorted into a particular index. */
    this.sortPredicate = () => true;
    /** Emits right before dragging has started. */
    this.beforeStarted = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    /**
     * Emits when the user has moved a new drag item into this container.
     */
    this.entered = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    /**
     * Emits when the user removes an item from the container
     * by dragging it into another container.
     */
    this.exited = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    /** Emits when the user drops an item inside the container. */
    this.dropped = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    /** Emits as the user is swapping items while actively dragging. */
    this.sorted = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    /** Emits when a dragging sequence is started in a list connected to the current one. */
    this.receivingStarted = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    /** Emits when a dragging sequence is stopped from a list connected to the current one. */
    this.receivingStopped = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    /** Whether an item in the list is being dragged. */
    this._isDragging = false;
    /** Draggable items in the container. */
    this._draggables = [];
    /** Drop lists that are connected to the current one. */
    this._siblings = [];
    /** Connected siblings that currently have a dragged item. */
    this._activeSiblings = new Set();
    /** Subscription to the window being scrolled. */
    this._viewportScrollSubscription = rxjs__WEBPACK_IMPORTED_MODULE_3__.Subscription.EMPTY;
    /** Vertical direction in which the list is currently scrolling. */
    this._verticalScrollDirection = 0 /* AutoScrollVerticalDirection.NONE */;
    /** Horizontal direction in which the list is currently scrolling. */
    this._horizontalScrollDirection = 0 /* AutoScrollHorizontalDirection.NONE */;
    /** Used to signal to the current auto-scroll sequence when to stop. */
    this._stopScrollTimers = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */
    this._cachedShadowRoot = null;
    /** Starts the interval that'll auto-scroll the element. */
    this._startScrollInterval = () => {
      this._stopScrolling();
      (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.interval)(0, rxjs__WEBPACK_IMPORTED_MODULE_6__.animationFrameScheduler).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.takeUntil)(this._stopScrollTimers)).subscribe(() => {
        const node = this._scrollNode;
        const scrollStep = this.autoScrollStep;
        if (this._verticalScrollDirection === 1 /* AutoScrollVerticalDirection.UP */) {
          node.scrollBy(0, -scrollStep);
        } else if (this._verticalScrollDirection === 2 /* AutoScrollVerticalDirection.DOWN */) {
          node.scrollBy(0, scrollStep);
        }
        if (this._horizontalScrollDirection === 1 /* AutoScrollHorizontalDirection.LEFT */) {
          node.scrollBy(-scrollStep, 0);
        } else if (this._horizontalScrollDirection === 2 /* AutoScrollHorizontalDirection.RIGHT */) {
          node.scrollBy(scrollStep, 0);
        }
      });
    };
    this.element = (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.coerceElement)(element);
    this._document = _document;
    this.withScrollableParents([this.element]);
    _dragDropRegistry.registerDropContainer(this);
    this._parentPositions = new ParentPositionTracker(_document);
    this._sortStrategy = new SingleAxisSortStrategy(this.element, _dragDropRegistry);
    this._sortStrategy.withSortPredicate((index, item) => this.sortPredicate(index, item, this));
  }
  /** Removes the drop list functionality from the DOM element. */
  dispose() {
    this._stopScrolling();
    this._stopScrollTimers.complete();
    this._viewportScrollSubscription.unsubscribe();
    this.beforeStarted.complete();
    this.entered.complete();
    this.exited.complete();
    this.dropped.complete();
    this.sorted.complete();
    this.receivingStarted.complete();
    this.receivingStopped.complete();
    this._activeSiblings.clear();
    this._scrollNode = null;
    this._parentPositions.clear();
    this._dragDropRegistry.removeDropContainer(this);
  }
  /** Whether an item from this list is currently being dragged. */
  isDragging() {
    return this._isDragging;
  }
  /** Starts dragging an item. */
  start() {
    this._draggingStarted();
    this._notifyReceivingSiblings();
  }
  /**
   * Attempts to move an item into the container.
   * @param item Item that was moved into the container.
   * @param pointerX Position of the item along the X axis.
   * @param pointerY Position of the item along the Y axis.
   * @param index Index at which the item entered. If omitted, the container will try to figure it
   *   out automatically.
   */
  enter(item, pointerX, pointerY, index) {
    this._draggingStarted();
    // If sorting is disabled, we want the item to return to its starting
    // position if the user is returning it to its initial container.
    if (index == null && this.sortingDisabled) {
      index = this._draggables.indexOf(item);
    }
    this._sortStrategy.enter(item, pointerX, pointerY, index);
    // Note that this usually happens inside `_draggingStarted` as well, but the dimensions
    // can change when the sort strategy moves the item around inside `enter`.
    this._cacheParentPositions();
    // Notify siblings at the end so that the item has been inserted into the `activeDraggables`.
    this._notifyReceivingSiblings();
    this.entered.next({
      item,
      container: this,
      currentIndex: this.getItemIndex(item)
    });
  }
  /**
   * Removes an item from the container after it was dragged into another container by the user.
   * @param item Item that was dragged out.
   */
  exit(item) {
    this._reset();
    this.exited.next({
      item,
      container: this
    });
  }
  /**
   * Drops an item into this container.
   * @param item Item being dropped into the container.
   * @param currentIndex Index at which the item should be inserted.
   * @param previousIndex Index of the item when dragging started.
   * @param previousContainer Container from which the item got dragged in.
   * @param isPointerOverContainer Whether the user's pointer was over the
   *    container when the item was dropped.
   * @param distance Distance the user has dragged since the start of the dragging sequence.
   * @param event Event that triggered the dropping sequence.
   *
   * @breaking-change 15.0.0 `previousIndex` and `event` parameters to become required.
   */
  drop(item, currentIndex, previousIndex, previousContainer, isPointerOverContainer, distance, dropPoint, event = {}) {
    this._reset();
    this.dropped.next({
      item,
      currentIndex,
      previousIndex,
      container: this,
      previousContainer,
      isPointerOverContainer,
      distance,
      dropPoint,
      event
    });
  }
  /**
   * Sets the draggable items that are a part of this list.
   * @param items Items that are a part of this list.
   */
  withItems(items) {
    const previousItems = this._draggables;
    this._draggables = items;
    items.forEach(item => item._withDropContainer(this));
    if (this.isDragging()) {
      const draggedItems = previousItems.filter(item => item.isDragging());
      // If all of the items being dragged were removed
      // from the list, abort the current drag sequence.
      if (draggedItems.every(item => items.indexOf(item) === -1)) {
        this._reset();
      } else {
        this._sortStrategy.withItems(this._draggables);
      }
    }
    return this;
  }
  /** Sets the layout direction of the drop list. */
  withDirection(direction) {
    this._sortStrategy.direction = direction;
    return this;
  }
  /**
   * Sets the containers that are connected to this one. When two or more containers are
   * connected, the user will be allowed to transfer items between them.
   * @param connectedTo Other containers that the current containers should be connected to.
   */
  connectedTo(connectedTo) {
    this._siblings = connectedTo.slice();
    return this;
  }
  /**
   * Sets the orientation of the container.
   * @param orientation New orientation for the container.
   */
  withOrientation(orientation) {
    // TODO(crisbeto): eventually we should be constructing the new sort strategy here based on
    // the new orientation. For now we can assume that it'll always be `SingleAxisSortStrategy`.
    this._sortStrategy.orientation = orientation;
    return this;
  }
  /**
   * Sets which parent elements are can be scrolled while the user is dragging.
   * @param elements Elements that can be scrolled.
   */
  withScrollableParents(elements) {
    const element = (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.coerceElement)(this.element);
    // We always allow the current element to be scrollable
    // so we need to ensure that it's in the array.
    this._scrollableElements = elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();
    return this;
  }
  /** Gets the scrollable parents that are registered with this drop container. */
  getScrollableParents() {
    return this._scrollableElements;
  }
  /**
   * Figures out the index of an item in the container.
   * @param item Item whose index should be determined.
   */
  getItemIndex(item) {
    return this._isDragging ? this._sortStrategy.getItemIndex(item) : this._draggables.indexOf(item);
  }
  /**
   * Whether the list is able to receive the item that
   * is currently being dragged inside a connected drop list.
   */
  isReceiving() {
    return this._activeSiblings.size > 0;
  }
  /**
   * Sorts an item inside the container based on its position.
   * @param item Item to be sorted.
   * @param pointerX Position of the item along the X axis.
   * @param pointerY Position of the item along the Y axis.
   * @param pointerDelta Direction in which the pointer is moving along each axis.
   */
  _sortItem(item, pointerX, pointerY, pointerDelta) {
    // Don't sort the item if sorting is disabled or it's out of range.
    if (this.sortingDisabled || !this._clientRect || !isPointerNearClientRect(this._clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {
      return;
    }
    const result = this._sortStrategy.sort(item, pointerX, pointerY, pointerDelta);
    if (result) {
      this.sorted.next({
        previousIndex: result.previousIndex,
        currentIndex: result.currentIndex,
        container: this,
        item
      });
    }
  }
  /**
   * Checks whether the user's pointer is close to the edges of either the
   * viewport or the drop list and starts the auto-scroll sequence.
   * @param pointerX User's pointer position along the x axis.
   * @param pointerY User's pointer position along the y axis.
   */
  _startScrollingIfNecessary(pointerX, pointerY) {
    if (this.autoScrollDisabled) {
      return;
    }
    let scrollNode;
    let verticalScrollDirection = 0 /* AutoScrollVerticalDirection.NONE */;
    let horizontalScrollDirection = 0 /* AutoScrollHorizontalDirection.NONE */;
    // Check whether we should start scrolling any of the parent containers.
    this._parentPositions.positions.forEach((position, element) => {
      // We have special handling for the `document` below. Also this would be
      // nicer with a  for...of loop, but it requires changing a compiler flag.
      if (element === this._document || !position.clientRect || scrollNode) {
        return;
      }
      if (isPointerNearClientRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {
        [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, pointerX, pointerY);
        if (verticalScrollDirection || horizontalScrollDirection) {
          scrollNode = element;
        }
      }
    });
    // Otherwise check if we can start scrolling the viewport.
    if (!verticalScrollDirection && !horizontalScrollDirection) {
      const {
        width,
        height
      } = this._viewportRuler.getViewportSize();
      const clientRect = {
        width,
        height,
        top: 0,
        right: width,
        bottom: height,
        left: 0
      };
      verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);
      horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);
      scrollNode = window;
    }
    if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection || horizontalScrollDirection !== this._horizontalScrollDirection || scrollNode !== this._scrollNode)) {
      this._verticalScrollDirection = verticalScrollDirection;
      this._horizontalScrollDirection = horizontalScrollDirection;
      this._scrollNode = scrollNode;
      if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {
        this._ngZone.runOutsideAngular(this._startScrollInterval);
      } else {
        this._stopScrolling();
      }
    }
  }
  /** Stops any currently-running auto-scroll sequences. */
  _stopScrolling() {
    this._stopScrollTimers.next();
  }
  /** Starts the dragging sequence within the list. */
  _draggingStarted() {
    const styles = (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.coerceElement)(this.element).style;
    this.beforeStarted.next();
    this._isDragging = true;
    // We need to disable scroll snapping while the user is dragging, because it breaks automatic
    // scrolling. The browser seems to round the value based on the snapping points which means
    // that we can't increment/decrement the scroll position.
    this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';
    styles.scrollSnapType = styles.msScrollSnapType = 'none';
    this._sortStrategy.start(this._draggables);
    this._cacheParentPositions();
    this._viewportScrollSubscription.unsubscribe();
    this._listenToScrollEvents();
  }
  /** Caches the positions of the configured scrollable parents. */
  _cacheParentPositions() {
    const element = (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.coerceElement)(this.element);
    this._parentPositions.cache(this._scrollableElements);
    // The list element is always in the `scrollableElements`
    // so we can take advantage of the cached `ClientRect`.
    this._clientRect = this._parentPositions.positions.get(element).clientRect;
  }
  /** Resets the container to its initial state. */
  _reset() {
    this._isDragging = false;
    const styles = (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.coerceElement)(this.element).style;
    styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;
    this._siblings.forEach(sibling => sibling._stopReceiving(this));
    this._sortStrategy.reset();
    this._stopScrolling();
    this._viewportScrollSubscription.unsubscribe();
    this._parentPositions.clear();
  }
  /**
   * Checks whether the user's pointer is positioned over the container.
   * @param x Pointer position along the X axis.
   * @param y Pointer position along the Y axis.
   */
  _isOverContainer(x, y) {
    return this._clientRect != null && isInsideClientRect(this._clientRect, x, y);
  }
  /**
   * Figures out whether an item should be moved into a sibling
   * drop container, based on its current position.
   * @param item Drag item that is being moved.
   * @param x Position of the item along the X axis.
   * @param y Position of the item along the Y axis.
   */
  _getSiblingContainerFromPosition(item, x, y) {
    return this._siblings.find(sibling => sibling._canReceive(item, x, y));
  }
  /**
   * Checks whether the drop list can receive the passed-in item.
   * @param item Item that is being dragged into the list.
   * @param x Position of the item along the X axis.
   * @param y Position of the item along the Y axis.
   */
  _canReceive(item, x, y) {
    if (!this._clientRect || !isInsideClientRect(this._clientRect, x, y) || !this.enterPredicate(item, this)) {
      return false;
    }
    const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);
    // If there's no element at the pointer position, then
    // the client rect is probably scrolled out of the view.
    if (!elementFromPoint) {
      return false;
    }
    const nativeElement = (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.coerceElement)(this.element);
    // The `ClientRect`, that we're using to find the container over which the user is
    // hovering, doesn't give us any information on whether the element has been scrolled
    // out of the view or whether it's overlapping with other containers. This means that
    // we could end up transferring the item into a container that's invisible or is positioned
    // below another one. We use the result from `elementFromPoint` to get the top-most element
    // at the pointer position and to find whether it's one of the intersecting drop containers.
    return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);
  }
  /**
   * Called by one of the connected drop lists when a dragging sequence has started.
   * @param sibling Sibling in which dragging has started.
   */
  _startReceiving(sibling, items) {
    const activeSiblings = this._activeSiblings;
    if (!activeSiblings.has(sibling) && items.every(item => {
      // Note that we have to add an exception to the `enterPredicate` for items that started off
      // in this drop list. The drag ref has logic that allows an item to return to its initial
      // container, if it has left the initial container and none of the connected containers
      // allow it to enter. See `DragRef._updateActiveDropContainer` for more context.
      return this.enterPredicate(item, this) || this._draggables.indexOf(item) > -1;
    })) {
      activeSiblings.add(sibling);
      this._cacheParentPositions();
      this._listenToScrollEvents();
      this.receivingStarted.next({
        initiator: sibling,
        receiver: this,
        items
      });
    }
  }
  /**
   * Called by a connected drop list when dragging has stopped.
   * @param sibling Sibling whose dragging has stopped.
   */
  _stopReceiving(sibling) {
    this._activeSiblings.delete(sibling);
    this._viewportScrollSubscription.unsubscribe();
    this.receivingStopped.next({
      initiator: sibling,
      receiver: this
    });
  }
  /**
   * Starts listening to scroll events on the viewport.
   * Used for updating the internal state of the list.
   */
  _listenToScrollEvents() {
    this._viewportScrollSubscription = this._dragDropRegistry.scrolled(this._getShadowRoot()).subscribe(event => {
      if (this.isDragging()) {
        const scrollDifference = this._parentPositions.handleScroll(event);
        if (scrollDifference) {
          this._sortStrategy.updateOnScroll(scrollDifference.top, scrollDifference.left);
        }
      } else if (this.isReceiving()) {
        this._cacheParentPositions();
      }
    });
  }
  /**
   * Lazily resolves and returns the shadow root of the element. We do this in a function, rather
   * than saving it in property directly on init, because we want to resolve it as late as possible
   * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the
   * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.
   */
  _getShadowRoot() {
    if (!this._cachedShadowRoot) {
      const shadowRoot = (0,_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_0__._getShadowRoot)((0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.coerceElement)(this.element));
      this._cachedShadowRoot = shadowRoot || this._document;
    }
    return this._cachedShadowRoot;
  }
  /** Notifies any siblings that may potentially receive the item. */
  _notifyReceivingSiblings() {
    const draggedItems = this._sortStrategy.getActiveItemsSnapshot().filter(item => item.isDragging());
    this._siblings.forEach(sibling => sibling._startReceiving(this, draggedItems));
  }
}
/**
 * Gets whether the vertical auto-scroll direction of a node.
 * @param clientRect Dimensions of the node.
 * @param pointerY Position of the user's pointer along the y axis.
 */
function getVerticalScrollDirection(clientRect, pointerY) {
  const {
    top,
    bottom,
    height
  } = clientRect;
  const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;
  if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {
    return 1 /* AutoScrollVerticalDirection.UP */;
  } else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {
    return 2 /* AutoScrollVerticalDirection.DOWN */;
  }

  return 0 /* AutoScrollVerticalDirection.NONE */;
}
/**
 * Gets whether the horizontal auto-scroll direction of a node.
 * @param clientRect Dimensions of the node.
 * @param pointerX Position of the user's pointer along the x axis.
 */
function getHorizontalScrollDirection(clientRect, pointerX) {
  const {
    left,
    right,
    width
  } = clientRect;
  const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;
  if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {
    return 1 /* AutoScrollHorizontalDirection.LEFT */;
  } else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {
    return 2 /* AutoScrollHorizontalDirection.RIGHT */;
  }

  return 0 /* AutoScrollHorizontalDirection.NONE */;
}
/**
 * Gets the directions in which an element node should be scrolled,
 * assuming that the user's pointer is already within it scrollable region.
 * @param element Element for which we should calculate the scroll direction.
 * @param clientRect Bounding client rectangle of the element.
 * @param pointerX Position of the user's pointer along the x axis.
 * @param pointerY Position of the user's pointer along the y axis.
 */
function getElementScrollDirections(element, clientRect, pointerX, pointerY) {
  const computedVertical = getVerticalScrollDirection(clientRect, pointerY);
  const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);
  let verticalScrollDirection = 0 /* AutoScrollVerticalDirection.NONE */;
  let horizontalScrollDirection = 0 /* AutoScrollHorizontalDirection.NONE */;
  // Note that we here we do some extra checks for whether the element is actually scrollable in
  // a certain direction and we only assign the scroll direction if it is. We do this so that we
  // can allow other elements to be scrolled, if the current element can't be scrolled anymore.
  // This allows us to handle cases where the scroll regions of two scrollable elements overlap.
  if (computedVertical) {
    const scrollTop = element.scrollTop;
    if (computedVertical === 1 /* AutoScrollVerticalDirection.UP */) {
      if (scrollTop > 0) {
        verticalScrollDirection = 1 /* AutoScrollVerticalDirection.UP */;
      }
    } else if (element.scrollHeight - scrollTop > element.clientHeight) {
      verticalScrollDirection = 2 /* AutoScrollVerticalDirection.DOWN */;
    }
  }

  if (computedHorizontal) {
    const scrollLeft = element.scrollLeft;
    if (computedHorizontal === 1 /* AutoScrollHorizontalDirection.LEFT */) {
      if (scrollLeft > 0) {
        horizontalScrollDirection = 1 /* AutoScrollHorizontalDirection.LEFT */;
      }
    } else if (element.scrollWidth - scrollLeft > element.clientWidth) {
      horizontalScrollDirection = 2 /* AutoScrollHorizontalDirection.RIGHT */;
    }
  }

  return [verticalScrollDirection, horizontalScrollDirection];
}

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/** Event options that can be used to bind an active, capturing event. */
const activeCapturingEventOptions = (0,_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_0__.normalizePassiveListenerOptions)({
  passive: false,
  capture: true
});
/**
 * Service that keeps track of all the drag item and drop container
 * instances, and manages global event listeners on the `document`.
 * @docs-private
 */
// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order
// to avoid circular imports. If we were to reference them here, importing the registry into the
// classes that are registering themselves will introduce a circular import.
class DragDropRegistry {
  constructor(_ngZone, _document) {
    this._ngZone = _ngZone;
    /** Registered drop container instances. */
    this._dropInstances = new Set();
    /** Registered drag item instances. */
    this._dragInstances = new Set();
    /** Drag item instances that are currently being dragged. */
    this._activeDragInstances = [];
    /** Keeps track of the event listeners that we've bound to the `document`. */
    this._globalListeners = new Map();
    /**
     * Predicate function to check if an item is being dragged.  Moved out into a property,
     * because it'll be called a lot and we don't want to create a new function every time.
     */
    this._draggingPredicate = item => item.isDragging();
    /**
     * Emits the `touchmove` or `mousemove` events that are dispatched
     * while the user is dragging a drag item instance.
     */
    this.pointerMove = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    /**
     * Emits the `touchend` or `mouseup` events that are dispatched
     * while the user is dragging a drag item instance.
     */
    this.pointerUp = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    /**
     * Emits when the viewport has been scrolled while the user is dragging an item.
     * @deprecated To be turned into a private member. Use the `scrolled` method instead.
     * @breaking-change 13.0.0
     */
    this.scroll = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    /**
     * Event listener that will prevent the default browser action while the user is dragging.
     * @param event Event whose default action should be prevented.
     */
    this._preventDefaultWhileDragging = event => {
      if (this._activeDragInstances.length > 0) {
        event.preventDefault();
      }
    };
    /** Event listener for `touchmove` that is bound even if no dragging is happening. */
    this._persistentTouchmoveListener = event => {
      if (this._activeDragInstances.length > 0) {
        // Note that we only want to prevent the default action after dragging has actually started.
        // Usually this is the same time at which the item is added to the `_activeDragInstances`,
        // but it could be pushed back if the user has set up a drag delay or threshold.
        if (this._activeDragInstances.some(this._draggingPredicate)) {
          event.preventDefault();
        }
        this.pointerMove.next(event);
      }
    };
    this._document = _document;
  }
  /** Adds a drop container to the registry. */
  registerDropContainer(drop) {
    if (!this._dropInstances.has(drop)) {
      this._dropInstances.add(drop);
    }
  }
  /** Adds a drag item instance to the registry. */
  registerDragItem(drag) {
    this._dragInstances.add(drag);
    // The `touchmove` event gets bound once, ahead of time, because WebKit
    // won't preventDefault on a dynamically-added `touchmove` listener.
    // See https://bugs.webkit.org/show_bug.cgi?id=184250.
    if (this._dragInstances.size === 1) {
      this._ngZone.runOutsideAngular(() => {
        // The event handler has to be explicitly active,
        // because newer browsers make it passive by default.
        this._document.addEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);
      });
    }
  }
  /** Removes a drop container from the registry. */
  removeDropContainer(drop) {
    this._dropInstances.delete(drop);
  }
  /** Removes a drag item instance from the registry. */
  removeDragItem(drag) {
    this._dragInstances.delete(drag);
    this.stopDragging(drag);
    if (this._dragInstances.size === 0) {
      this._document.removeEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);
    }
  }
  /**
   * Starts the dragging sequence for a drag instance.
   * @param drag Drag instance which is being dragged.
   * @param event Event that initiated the dragging.
   */
  startDragging(drag, event) {
    // Do not process the same drag twice to avoid memory leaks and redundant listeners
    if (this._activeDragInstances.indexOf(drag) > -1) {
      return;
    }
    this._activeDragInstances.push(drag);
    if (this._activeDragInstances.length === 1) {
      const isTouchEvent = event.type.startsWith('touch');
      // We explicitly bind __active__ listeners here, because newer browsers will default to
      // passive ones for `mousemove` and `touchmove`. The events need to be active, because we
      // use `preventDefault` to prevent the page from scrolling while the user is dragging.
      this._globalListeners.set(isTouchEvent ? 'touchend' : 'mouseup', {
        handler: e => this.pointerUp.next(e),
        options: true
      }).set('scroll', {
        handler: e => this.scroll.next(e),
        // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't
        // the document. See https://github.com/angular/components/issues/17144.
        options: true
      })
      // Preventing the default action on `mousemove` isn't enough to disable text selection
      // on Safari so we need to prevent the selection event as well. Alternatively this can
      // be done by setting `user-select: none` on the `body`, however it has causes a style
      // recalculation which can be expensive on pages with a lot of elements.
      .set('selectstart', {
        handler: this._preventDefaultWhileDragging,
        options: activeCapturingEventOptions
      });
      // We don't have to bind a move event for touch drag sequences, because
      // we already have a persistent global one bound from `registerDragItem`.
      if (!isTouchEvent) {
        this._globalListeners.set('mousemove', {
          handler: e => this.pointerMove.next(e),
          options: activeCapturingEventOptions
        });
      }
      this._ngZone.runOutsideAngular(() => {
        this._globalListeners.forEach((config, name) => {
          this._document.addEventListener(name, config.handler, config.options);
        });
      });
    }
  }
  /** Stops dragging a drag item instance. */
  stopDragging(drag) {
    const index = this._activeDragInstances.indexOf(drag);
    if (index > -1) {
      this._activeDragInstances.splice(index, 1);
      if (this._activeDragInstances.length === 0) {
        this._clearGlobalListeners();
      }
    }
  }
  /** Gets whether a drag item instance is currently being dragged. */
  isDragging(drag) {
    return this._activeDragInstances.indexOf(drag) > -1;
  }
  /**
   * Gets a stream that will emit when any element on the page is scrolled while an item is being
   * dragged.
   * @param shadowRoot Optional shadow root that the current dragging sequence started from.
   *   Top-level listeners won't pick up events coming from the shadow DOM so this parameter can
   *   be used to include an additional top-level listener at the shadow root level.
   */
  scrolled(shadowRoot) {
    const streams = [this.scroll];
    if (shadowRoot && shadowRoot !== this._document) {
      // Note that this is basically the same as `fromEvent` from rxjs, but we do it ourselves,
      // because we want to guarantee that the event is bound outside of the `NgZone`. With
      // `fromEvent` it'll only happen if the subscription is outside the `NgZone`.
      streams.push(new rxjs__WEBPACK_IMPORTED_MODULE_8__.Observable(observer => {
        return this._ngZone.runOutsideAngular(() => {
          const eventOptions = true;
          const callback = event => {
            if (this._activeDragInstances.length) {
              observer.next(event);
            }
          };
          shadowRoot.addEventListener('scroll', callback, eventOptions);
          return () => {
            shadowRoot.removeEventListener('scroll', callback, eventOptions);
          };
        });
      }));
    }
    return (0,rxjs__WEBPACK_IMPORTED_MODULE_9__.merge)(...streams);
  }
  ngOnDestroy() {
    this._dragInstances.forEach(instance => this.removeDragItem(instance));
    this._dropInstances.forEach(instance => this.removeDropContainer(instance));
    this._clearGlobalListeners();
    this.pointerMove.complete();
    this.pointerUp.complete();
  }
  /** Clears out the global event listeners from the `document`. */
  _clearGlobalListeners() {
    this._globalListeners.forEach((config, name) => {
      this._document.removeEventListener(name, config.handler, config.options);
    });
    this._globalListeners.clear();
  }
}
DragDropRegistry.ɵfac = function DragDropRegistry_Factory(t) {
  return new (t || DragDropRegistry)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_11__.DOCUMENT));
};
DragDropRegistry.ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineInjectable"]({
  token: DragDropRegistry,
  factory: DragDropRegistry.ɵfac,
  providedIn: 'root'
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵsetClassMetadata"](DragDropRegistry, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Injectable,
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.NgZone
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Inject,
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_11__.DOCUMENT]
      }]
    }];
  }, null);
})();

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/** Default configuration to be used when creating a `DragRef`. */
const DEFAULT_CONFIG = {
  dragStartThreshold: 5,
  pointerDirectionChangeThreshold: 5
};
/**
 * Service that allows for drag-and-drop functionality to be attached to DOM elements.
 */
class DragDrop {
  constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {
    this._document = _document;
    this._ngZone = _ngZone;
    this._viewportRuler = _viewportRuler;
    this._dragDropRegistry = _dragDropRegistry;
  }
  /**
   * Turns an element into a draggable item.
   * @param element Element to which to attach the dragging functionality.
   * @param config Object used to configure the dragging behavior.
   */
  createDrag(element, config = DEFAULT_CONFIG) {
    return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);
  }
  /**
   * Turns an element into a drop list.
   * @param element Element to which to attach the drop list functionality.
   */
  createDropList(element) {
    return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);
  }
}
DragDrop.ɵfac = function DragDrop_Factory(t) {
  return new (t || DragDrop)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_11__.DOCUMENT), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_12__.ViewportRuler), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](DragDropRegistry));
};
DragDrop.ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineInjectable"]({
  token: DragDrop,
  factory: DragDrop.ɵfac,
  providedIn: 'root'
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵsetClassMetadata"](DragDrop, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Injectable,
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Inject,
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_11__.DOCUMENT]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.NgZone
    }, {
      type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_12__.ViewportRuler
    }, {
      type: DragDropRegistry
    }];
  }, null);
})();

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the
 * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily
 * to avoid circular imports.
 * @docs-private
 */
const CDK_DRAG_PARENT = new _angular_core__WEBPACK_IMPORTED_MODULE_10__.InjectionToken('CDK_DRAG_PARENT');

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as
 * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary
 * retention of the class and its directive metadata.
 */
const CDK_DROP_LIST_GROUP = new _angular_core__WEBPACK_IMPORTED_MODULE_10__.InjectionToken('CdkDropListGroup');
/**
 * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`
 * elements that are placed inside a `cdkDropListGroup` will be connected to each other
 * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input
 * from `cdkDropList`.
 */
class CdkDropListGroup {
  constructor() {
    /** Drop lists registered inside the group. */
    this._items = new Set();
    this._disabled = false;
  }
  /** Whether starting a dragging sequence from inside this group is disabled. */
  get disabled() {
    return this._disabled;
  }
  set disabled(value) {
    this._disabled = (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.coerceBooleanProperty)(value);
  }
  ngOnDestroy() {
    this._items.clear();
  }
}
CdkDropListGroup.ɵfac = function CdkDropListGroup_Factory(t) {
  return new (t || CdkDropListGroup)();
};
CdkDropListGroup.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineDirective"]({
  type: CdkDropListGroup,
  selectors: [["", "cdkDropListGroup", ""]],
  inputs: {
    disabled: ["cdkDropListGroupDisabled", "disabled"]
  },
  exportAs: ["cdkDropListGroup"],
  standalone: true,
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵProvidersFeature"]([{
    provide: CDK_DROP_LIST_GROUP,
    useExisting: CdkDropListGroup
  }])]
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵsetClassMetadata"](CdkDropListGroup, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Directive,
    args: [{
      selector: '[cdkDropListGroup]',
      exportAs: 'cdkDropListGroup',
      standalone: true,
      providers: [{
        provide: CDK_DROP_LIST_GROUP,
        useExisting: CdkDropListGroup
      }]
    }]
  }], null, {
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input,
      args: ['cdkDropListGroupDisabled']
    }]
  });
})();

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * Injection token that can be used to configure the
 * behavior of the drag&drop-related components.
 */
const CDK_DRAG_CONFIG = new _angular_core__WEBPACK_IMPORTED_MODULE_10__.InjectionToken('CDK_DRAG_CONFIG');

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * Asserts that a particular node is an element.
 * @param node Node to be checked.
 * @param name Name to attach to the error message.
 */
function assertElementNode(node, name) {
  if (node.nodeType !== 1) {
    throw Error(`${name} must be attached to an element node. ` + `Currently attached to "${node.nodeName}".`);
  }
}

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/** Counter used to generate unique ids for drop zones. */
let _uniqueIdCounter = 0;
/**
 * Injection token that can be used to reference instances of `CdkDropList`. It serves as
 * alternative token to the actual `CdkDropList` class which could cause unnecessary
 * retention of the class and its directive metadata.
 */
const CDK_DROP_LIST = new _angular_core__WEBPACK_IMPORTED_MODULE_10__.InjectionToken('CdkDropList');
/** Container that wraps a set of draggable items. */
class CdkDropList {
  /** Whether starting a dragging sequence from this container is disabled. */
  get disabled() {
    return this._disabled || !!this._group && this._group.disabled;
  }
  set disabled(value) {
    // Usually we sync the directive and ref state right before dragging starts, in order to have
    // a single point of failure and to avoid having to use setters for everything. `disabled` is
    // a special case, because it can prevent the `beforeStarted` event from firing, which can lock
    // the user in a disabled state, so we also need to sync it as it's being set.
    this._dropListRef.disabled = this._disabled = (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.coerceBooleanProperty)(value);
  }
  constructor( /** Element that the drop list is attached to. */
  element, dragDrop, _changeDetectorRef, _scrollDispatcher, _dir, _group, config) {
    this.element = element;
    this._changeDetectorRef = _changeDetectorRef;
    this._scrollDispatcher = _scrollDispatcher;
    this._dir = _dir;
    this._group = _group;
    /** Emits when the list has been destroyed. */
    this._destroyed = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    /**
     * Other draggable containers that this container is connected to and into which the
     * container's items can be transferred. Can either be references to other drop containers,
     * or their unique IDs.
     */
    this.connectedTo = [];
    /**
     * Unique ID for the drop zone. Can be used as a reference
     * in the `connectedTo` of another `CdkDropList`.
     */
    this.id = `cdk-drop-list-${_uniqueIdCounter++}`;
    /**
     * Function that is used to determine whether an item
     * is allowed to be moved into a drop container.
     */
    this.enterPredicate = () => true;
    /** Functions that is used to determine whether an item can be sorted into a particular index. */
    this.sortPredicate = () => true;
    /** Emits when the user drops an item inside the container. */
    this.dropped = new _angular_core__WEBPACK_IMPORTED_MODULE_10__.EventEmitter();
    /**
     * Emits when the user has moved a new drag item into this container.
     */
    this.entered = new _angular_core__WEBPACK_IMPORTED_MODULE_10__.EventEmitter();
    /**
     * Emits when the user removes an item from the container
     * by dragging it into another container.
     */
    this.exited = new _angular_core__WEBPACK_IMPORTED_MODULE_10__.EventEmitter();
    /** Emits as the user is swapping items while actively dragging. */
    this.sorted = new _angular_core__WEBPACK_IMPORTED_MODULE_10__.EventEmitter();
    /**
     * Keeps track of the items that are registered with this container. Historically we used to
     * do this with a `ContentChildren` query, however queries don't handle transplanted views very
     * well which means that we can't handle cases like dragging the headers of a `mat-table`
     * correctly. What we do instead is to have the items register themselves with the container
     * and then we sort them based on their position in the DOM.
     */
    this._unsortedItems = new Set();
    if (typeof ngDevMode === 'undefined' || ngDevMode) {
      assertElementNode(element.nativeElement, 'cdkDropList');
    }
    this._dropListRef = dragDrop.createDropList(element);
    this._dropListRef.data = this;
    if (config) {
      this._assignDefaults(config);
    }
    this._dropListRef.enterPredicate = (drag, drop) => {
      return this.enterPredicate(drag.data, drop.data);
    };
    this._dropListRef.sortPredicate = (index, drag, drop) => {
      return this.sortPredicate(index, drag.data, drop.data);
    };
    this._setupInputSyncSubscription(this._dropListRef);
    this._handleEvents(this._dropListRef);
    CdkDropList._dropLists.push(this);
    if (_group) {
      _group._items.add(this);
    }
  }
  /** Registers an items with the drop list. */
  addItem(item) {
    this._unsortedItems.add(item);
    if (this._dropListRef.isDragging()) {
      this._syncItemsWithRef();
    }
  }
  /** Removes an item from the drop list. */
  removeItem(item) {
    this._unsortedItems.delete(item);
    if (this._dropListRef.isDragging()) {
      this._syncItemsWithRef();
    }
  }
  /** Gets the registered items in the list, sorted by their position in the DOM. */
  getSortedItems() {
    return Array.from(this._unsortedItems).sort((a, b) => {
      const documentPosition = a._dragRef.getVisibleElement().compareDocumentPosition(b._dragRef.getVisibleElement());
      // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.
      // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition
      // tslint:disable-next-line:no-bitwise
      return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;
    });
  }
  ngOnDestroy() {
    const index = CdkDropList._dropLists.indexOf(this);
    if (index > -1) {
      CdkDropList._dropLists.splice(index, 1);
    }
    if (this._group) {
      this._group._items.delete(this);
    }
    this._unsortedItems.clear();
    this._dropListRef.dispose();
    this._destroyed.next();
    this._destroyed.complete();
  }
  /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */
  _setupInputSyncSubscription(ref) {
    if (this._dir) {
      this._dir.change.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.startWith)(this._dir.value), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.takeUntil)(this._destroyed)).subscribe(value => ref.withDirection(value));
    }
    ref.beforeStarted.subscribe(() => {
      const siblings = (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.coerceArray)(this.connectedTo).map(drop => {
        if (typeof drop === 'string') {
          const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);
          if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {
            console.warn(`CdkDropList could not find connected drop list with id "${drop}"`);
          }
          return correspondingDropList;
        }
        return drop;
      });
      if (this._group) {
        this._group._items.forEach(drop => {
          if (siblings.indexOf(drop) === -1) {
            siblings.push(drop);
          }
        });
      }
      // Note that we resolve the scrollable parents here so that we delay the resolution
      // as long as possible, ensuring that the element is in its final place in the DOM.
      if (!this._scrollableParentsResolved) {
        const scrollableParents = this._scrollDispatcher.getAncestorScrollContainers(this.element).map(scrollable => scrollable.getElementRef().nativeElement);
        this._dropListRef.withScrollableParents(scrollableParents);
        // Only do this once since it involves traversing the DOM and the parents
        // shouldn't be able to change without the drop list being destroyed.
        this._scrollableParentsResolved = true;
      }
      ref.disabled = this.disabled;
      ref.lockAxis = this.lockAxis;
      ref.sortingDisabled = (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.coerceBooleanProperty)(this.sortingDisabled);
      ref.autoScrollDisabled = (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.coerceBooleanProperty)(this.autoScrollDisabled);
      ref.autoScrollStep = (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.coerceNumberProperty)(this.autoScrollStep, 2);
      ref.connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef)).withOrientation(this.orientation);
    });
  }
  /** Handles events from the underlying DropListRef. */
  _handleEvents(ref) {
    ref.beforeStarted.subscribe(() => {
      this._syncItemsWithRef();
      this._changeDetectorRef.markForCheck();
    });
    ref.entered.subscribe(event => {
      this.entered.emit({
        container: this,
        item: event.item.data,
        currentIndex: event.currentIndex
      });
    });
    ref.exited.subscribe(event => {
      this.exited.emit({
        container: this,
        item: event.item.data
      });
      this._changeDetectorRef.markForCheck();
    });
    ref.sorted.subscribe(event => {
      this.sorted.emit({
        previousIndex: event.previousIndex,
        currentIndex: event.currentIndex,
        container: this,
        item: event.item.data
      });
    });
    ref.dropped.subscribe(dropEvent => {
      this.dropped.emit({
        previousIndex: dropEvent.previousIndex,
        currentIndex: dropEvent.currentIndex,
        previousContainer: dropEvent.previousContainer.data,
        container: dropEvent.container.data,
        item: dropEvent.item.data,
        isPointerOverContainer: dropEvent.isPointerOverContainer,
        distance: dropEvent.distance,
        dropPoint: dropEvent.dropPoint,
        event: dropEvent.event
      });
      // Mark for check since all of these events run outside of change
      // detection and we're not guaranteed for something else to have triggered it.
      this._changeDetectorRef.markForCheck();
    });
    (0,rxjs__WEBPACK_IMPORTED_MODULE_9__.merge)(ref.receivingStarted, ref.receivingStopped).subscribe(() => this._changeDetectorRef.markForCheck());
  }
  /** Assigns the default input values based on a provided config object. */
  _assignDefaults(config) {
    const {
      lockAxis,
      draggingDisabled,
      sortingDisabled,
      listAutoScrollDisabled,
      listOrientation
    } = config;
    this.disabled = draggingDisabled == null ? false : draggingDisabled;
    this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;
    this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;
    this.orientation = listOrientation || 'vertical';
    if (lockAxis) {
      this.lockAxis = lockAxis;
    }
  }
  /** Syncs up the registered drag items with underlying drop list ref. */
  _syncItemsWithRef() {
    this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));
  }
}
/** Keeps track of the drop lists that are currently on the page. */
CdkDropList._dropLists = [];
CdkDropList.ɵfac = function CdkDropList_Factory(t) {
  return new (t || CdkDropList)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](DragDrop), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_12__.ScrollDispatcher), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_14__.Directionality, 8), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](CDK_DROP_LIST_GROUP, 12), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](CDK_DRAG_CONFIG, 8));
};
CdkDropList.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineDirective"]({
  type: CdkDropList,
  selectors: [["", "cdkDropList", ""], ["cdk-drop-list"]],
  hostAttrs: [1, "cdk-drop-list"],
  hostVars: 7,
  hostBindings: function CdkDropList_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵattribute"]("id", ctx.id);
      _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵclassProp"]("cdk-drop-list-disabled", ctx.disabled)("cdk-drop-list-dragging", ctx._dropListRef.isDragging())("cdk-drop-list-receiving", ctx._dropListRef.isReceiving());
    }
  },
  inputs: {
    connectedTo: ["cdkDropListConnectedTo", "connectedTo"],
    data: ["cdkDropListData", "data"],
    orientation: ["cdkDropListOrientation", "orientation"],
    id: "id",
    lockAxis: ["cdkDropListLockAxis", "lockAxis"],
    disabled: ["cdkDropListDisabled", "disabled"],
    sortingDisabled: ["cdkDropListSortingDisabled", "sortingDisabled"],
    enterPredicate: ["cdkDropListEnterPredicate", "enterPredicate"],
    sortPredicate: ["cdkDropListSortPredicate", "sortPredicate"],
    autoScrollDisabled: ["cdkDropListAutoScrollDisabled", "autoScrollDisabled"],
    autoScrollStep: ["cdkDropListAutoScrollStep", "autoScrollStep"]
  },
  outputs: {
    dropped: "cdkDropListDropped",
    entered: "cdkDropListEntered",
    exited: "cdkDropListExited",
    sorted: "cdkDropListSorted"
  },
  exportAs: ["cdkDropList"],
  standalone: true,
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵProvidersFeature"]([
  // Prevent child drop lists from picking up the same group as their parent.
  {
    provide: CDK_DROP_LIST_GROUP,
    useValue: undefined
  }, {
    provide: CDK_DROP_LIST,
    useExisting: CdkDropList
  }])]
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵsetClassMetadata"](CdkDropList, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Directive,
    args: [{
      selector: '[cdkDropList], cdk-drop-list',
      exportAs: 'cdkDropList',
      standalone: true,
      providers: [
      // Prevent child drop lists from picking up the same group as their parent.
      {
        provide: CDK_DROP_LIST_GROUP,
        useValue: undefined
      }, {
        provide: CDK_DROP_LIST,
        useExisting: CdkDropList
      }],
      host: {
        'class': 'cdk-drop-list',
        '[attr.id]': 'id',
        '[class.cdk-drop-list-disabled]': 'disabled',
        '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',
        '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()'
      }
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.ElementRef
    }, {
      type: DragDrop
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.ChangeDetectorRef
    }, {
      type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_12__.ScrollDispatcher
    }, {
      type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_14__.Directionality,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Optional
      }]
    }, {
      type: CdkDropListGroup,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Optional
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Inject,
        args: [CDK_DROP_LIST_GROUP]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.SkipSelf
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Optional
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Inject,
        args: [CDK_DRAG_CONFIG]
      }]
    }];
  }, {
    connectedTo: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input,
      args: ['cdkDropListConnectedTo']
    }],
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input,
      args: ['cdkDropListData']
    }],
    orientation: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input,
      args: ['cdkDropListOrientation']
    }],
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input
    }],
    lockAxis: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input,
      args: ['cdkDropListLockAxis']
    }],
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input,
      args: ['cdkDropListDisabled']
    }],
    sortingDisabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input,
      args: ['cdkDropListSortingDisabled']
    }],
    enterPredicate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input,
      args: ['cdkDropListEnterPredicate']
    }],
    sortPredicate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input,
      args: ['cdkDropListSortPredicate']
    }],
    autoScrollDisabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input,
      args: ['cdkDropListAutoScrollDisabled']
    }],
    autoScrollStep: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input,
      args: ['cdkDropListAutoScrollStep']
    }],
    dropped: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Output,
      args: ['cdkDropListDropped']
    }],
    entered: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Output,
      args: ['cdkDropListEntered']
    }],
    exited: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Output,
      args: ['cdkDropListExited']
    }],
    sorted: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Output,
      args: ['cdkDropListSorted']
    }]
  });
})();

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as
 * alternative token to the actual `CdkDragHandle` class which could cause unnecessary
 * retention of the class and its directive metadata.
 */
const CDK_DRAG_HANDLE = new _angular_core__WEBPACK_IMPORTED_MODULE_10__.InjectionToken('CdkDragHandle');
/** Handle that can be used to drag a CdkDrag instance. */
class CdkDragHandle {
  /** Whether starting to drag through this handle is disabled. */
  get disabled() {
    return this._disabled;
  }
  set disabled(value) {
    this._disabled = (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.coerceBooleanProperty)(value);
    this._stateChanges.next(this);
  }
  constructor(element, parentDrag) {
    this.element = element;
    /** Emits when the state of the handle has changed. */
    this._stateChanges = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    this._disabled = false;
    if (typeof ngDevMode === 'undefined' || ngDevMode) {
      assertElementNode(element.nativeElement, 'cdkDragHandle');
    }
    this._parentDrag = parentDrag;
  }
  ngOnDestroy() {
    this._stateChanges.complete();
  }
}
CdkDragHandle.ɵfac = function CdkDragHandle_Factory(t) {
  return new (t || CdkDragHandle)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](CDK_DRAG_PARENT, 12));
};
CdkDragHandle.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineDirective"]({
  type: CdkDragHandle,
  selectors: [["", "cdkDragHandle", ""]],
  hostAttrs: [1, "cdk-drag-handle"],
  inputs: {
    disabled: ["cdkDragHandleDisabled", "disabled"]
  },
  standalone: true,
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵProvidersFeature"]([{
    provide: CDK_DRAG_HANDLE,
    useExisting: CdkDragHandle
  }])]
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵsetClassMetadata"](CdkDragHandle, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Directive,
    args: [{
      selector: '[cdkDragHandle]',
      standalone: true,
      host: {
        'class': 'cdk-drag-handle'
      },
      providers: [{
        provide: CDK_DRAG_HANDLE,
        useExisting: CdkDragHandle
      }]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.ElementRef
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Inject,
        args: [CDK_DRAG_PARENT]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Optional
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.SkipSelf
      }]
    }];
  }, {
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input,
      args: ['cdkDragHandleDisabled']
    }]
  });
})();

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as
 * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary
 * retention of the class and its directive metadata.
 */
const CDK_DRAG_PLACEHOLDER = new _angular_core__WEBPACK_IMPORTED_MODULE_10__.InjectionToken('CdkDragPlaceholder');
/**
 * Element that will be used as a template for the placeholder of a CdkDrag when
 * it is being dragged. The placeholder is displayed in place of the element being dragged.
 */
class CdkDragPlaceholder {
  constructor(templateRef) {
    this.templateRef = templateRef;
  }
}
CdkDragPlaceholder.ɵfac = function CdkDragPlaceholder_Factory(t) {
  return new (t || CdkDragPlaceholder)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__.TemplateRef));
};
CdkDragPlaceholder.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineDirective"]({
  type: CdkDragPlaceholder,
  selectors: [["ng-template", "cdkDragPlaceholder", ""]],
  inputs: {
    data: "data"
  },
  standalone: true,
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵProvidersFeature"]([{
    provide: CDK_DRAG_PLACEHOLDER,
    useExisting: CdkDragPlaceholder
  }])]
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵsetClassMetadata"](CdkDragPlaceholder, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Directive,
    args: [{
      selector: 'ng-template[cdkDragPlaceholder]',
      standalone: true,
      providers: [{
        provide: CDK_DRAG_PLACEHOLDER,
        useExisting: CdkDragPlaceholder
      }]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.TemplateRef
    }];
  }, {
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input
    }]
  });
})();

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as
 * alternative token to the actual `CdkDragPreview` class which could cause unnecessary
 * retention of the class and its directive metadata.
 */
const CDK_DRAG_PREVIEW = new _angular_core__WEBPACK_IMPORTED_MODULE_10__.InjectionToken('CdkDragPreview');
/**
 * Element that will be used as a template for the preview
 * of a CdkDrag when it is being dragged.
 */
class CdkDragPreview {
  /** Whether the preview should preserve the same size as the item that is being dragged. */
  get matchSize() {
    return this._matchSize;
  }
  set matchSize(value) {
    this._matchSize = (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.coerceBooleanProperty)(value);
  }
  constructor(templateRef) {
    this.templateRef = templateRef;
    this._matchSize = false;
  }
}
CdkDragPreview.ɵfac = function CdkDragPreview_Factory(t) {
  return new (t || CdkDragPreview)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__.TemplateRef));
};
CdkDragPreview.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineDirective"]({
  type: CdkDragPreview,
  selectors: [["ng-template", "cdkDragPreview", ""]],
  inputs: {
    data: "data",
    matchSize: "matchSize"
  },
  standalone: true,
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵProvidersFeature"]([{
    provide: CDK_DRAG_PREVIEW,
    useExisting: CdkDragPreview
  }])]
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵsetClassMetadata"](CdkDragPreview, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Directive,
    args: [{
      selector: 'ng-template[cdkDragPreview]',
      standalone: true,
      providers: [{
        provide: CDK_DRAG_PREVIEW,
        useExisting: CdkDragPreview
      }]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.TemplateRef
    }];
  }, {
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input
    }],
    matchSize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input
    }]
  });
})();

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
const DRAG_HOST_CLASS = 'cdk-drag';
/** Element that can be moved inside a CdkDropList container. */
class CdkDrag {
  /** Whether starting to drag this element is disabled. */
  get disabled() {
    return this._disabled || this.dropContainer && this.dropContainer.disabled;
  }
  set disabled(value) {
    this._disabled = (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.coerceBooleanProperty)(value);
    this._dragRef.disabled = this._disabled;
  }
  constructor( /** Element that the draggable is attached to. */
  element, /** Droppable container that the draggable is a part of. */
  dropContainer,
  /**
   * @deprecated `_document` parameter no longer being used and will be removed.
   * @breaking-change 12.0.0
   */
  _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef, _selfHandle, _parentDrag) {
    this.element = element;
    this.dropContainer = dropContainer;
    this._ngZone = _ngZone;
    this._viewContainerRef = _viewContainerRef;
    this._dir = _dir;
    this._changeDetectorRef = _changeDetectorRef;
    this._selfHandle = _selfHandle;
    this._parentDrag = _parentDrag;
    this._destroyed = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
    /** Emits when the user starts dragging the item. */
    this.started = new _angular_core__WEBPACK_IMPORTED_MODULE_10__.EventEmitter();
    /** Emits when the user has released a drag item, before any animations have started. */
    this.released = new _angular_core__WEBPACK_IMPORTED_MODULE_10__.EventEmitter();
    /** Emits when the user stops dragging an item in the container. */
    this.ended = new _angular_core__WEBPACK_IMPORTED_MODULE_10__.EventEmitter();
    /** Emits when the user has moved the item into a new container. */
    this.entered = new _angular_core__WEBPACK_IMPORTED_MODULE_10__.EventEmitter();
    /** Emits when the user removes the item its container by dragging it into another container. */
    this.exited = new _angular_core__WEBPACK_IMPORTED_MODULE_10__.EventEmitter();
    /** Emits when the user drops the item inside a container. */
    this.dropped = new _angular_core__WEBPACK_IMPORTED_MODULE_10__.EventEmitter();
    /**
     * Emits as the user is dragging the item. Use with caution,
     * because this event will fire for every pixel that the user has dragged.
     */
    this.moved = new rxjs__WEBPACK_IMPORTED_MODULE_8__.Observable(observer => {
      const subscription = this._dragRef.moved.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_15__.map)(movedEvent => ({
        source: this,
        pointerPosition: movedEvent.pointerPosition,
        event: movedEvent.event,
        delta: movedEvent.delta,
        distance: movedEvent.distance
      }))).subscribe(observer);
      return () => {
        subscription.unsubscribe();
      };
    });
    this._dragRef = dragDrop.createDrag(element, {
      dragStartThreshold: config && config.dragStartThreshold != null ? config.dragStartThreshold : 5,
      pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null ? config.pointerDirectionChangeThreshold : 5,
      zIndex: config?.zIndex
    });
    this._dragRef.data = this;
    // We have to keep track of the drag instances in order to be able to match an element to
    // a drag instance. We can't go through the global registry of `DragRef`, because the root
    // element could be different.
    CdkDrag._dragInstances.push(this);
    if (config) {
      this._assignDefaults(config);
    }
    // Note that usually the container is assigned when the drop list is picks up the item, but in
    // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation
    // where there are no items on the first change detection pass, but the items get picked up as
    // soon as the user triggers another pass by dragging. This is a problem, because the item would
    // have to switch from standalone mode to drag mode in the middle of the dragging sequence which
    // is too late since the two modes save different kinds of information. We work around it by
    // assigning the drop container both from here and the list.
    if (dropContainer) {
      this._dragRef._withDropContainer(dropContainer._dropListRef);
      dropContainer.addItem(this);
    }
    this._syncInputs(this._dragRef);
    this._handleEvents(this._dragRef);
  }
  /**
   * Returns the element that is being used as a placeholder
   * while the current element is being dragged.
   */
  getPlaceholderElement() {
    return this._dragRef.getPlaceholderElement();
  }
  /** Returns the root draggable element. */
  getRootElement() {
    return this._dragRef.getRootElement();
  }
  /** Resets a standalone drag item to its initial position. */
  reset() {
    this._dragRef.reset();
  }
  /**
   * Gets the pixel coordinates of the draggable outside of a drop container.
   */
  getFreeDragPosition() {
    return this._dragRef.getFreeDragPosition();
  }
  /**
   * Sets the current position in pixels the draggable outside of a drop container.
   * @param value New position to be set.
   */
  setFreeDragPosition(value) {
    this._dragRef.setFreeDragPosition(value);
  }
  ngAfterViewInit() {
    // Normally this isn't in the zone, but it can cause major performance regressions for apps
    // using `zone-patch-rxjs` because it'll trigger a change detection when it unsubscribes.
    this._ngZone.runOutsideAngular(() => {
      // We need to wait for the zone to stabilize, in order for the reference
      // element to be in the proper place in the DOM. This is mostly relevant
      // for draggable elements inside portals since they get stamped out in
      // their original DOM position and then they get transferred to the portal.
      this._ngZone.onStable.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_16__.take)(1), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.takeUntil)(this._destroyed)).subscribe(() => {
        this._updateRootElement();
        this._setupHandlesListener();
        if (this.freeDragPosition) {
          this._dragRef.setFreeDragPosition(this.freeDragPosition);
        }
      });
    });
  }
  ngOnChanges(changes) {
    const rootSelectorChange = changes['rootElementSelector'];
    const positionChange = changes['freeDragPosition'];
    // We don't have to react to the first change since it's being
    // handled in `ngAfterViewInit` where it needs to be deferred.
    if (rootSelectorChange && !rootSelectorChange.firstChange) {
      this._updateRootElement();
    }
    // Skip the first change since it's being handled in `ngAfterViewInit`.
    if (positionChange && !positionChange.firstChange && this.freeDragPosition) {
      this._dragRef.setFreeDragPosition(this.freeDragPosition);
    }
  }
  ngOnDestroy() {
    if (this.dropContainer) {
      this.dropContainer.removeItem(this);
    }
    const index = CdkDrag._dragInstances.indexOf(this);
    if (index > -1) {
      CdkDrag._dragInstances.splice(index, 1);
    }
    // Unnecessary in most cases, but used to avoid extra change detections with `zone-paths-rxjs`.
    this._ngZone.runOutsideAngular(() => {
      this._destroyed.next();
      this._destroyed.complete();
      this._dragRef.dispose();
    });
  }
  /** Syncs the root element with the `DragRef`. */
  _updateRootElement() {
    const element = this.element.nativeElement;
    let rootElement = element;
    if (this.rootElementSelector) {
      rootElement = element.closest !== undefined ? element.closest(this.rootElementSelector) :
      // Comment tag doesn't have closest method, so use parent's one.
      element.parentElement?.closest(this.rootElementSelector);
    }
    if (rootElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {
      assertElementNode(rootElement, 'cdkDrag');
    }
    this._dragRef.withRootElement(rootElement || element);
  }
  /** Gets the boundary element, based on the `boundaryElement` value. */
  _getBoundaryElement() {
    const boundary = this.boundaryElement;
    if (!boundary) {
      return null;
    }
    if (typeof boundary === 'string') {
      return this.element.nativeElement.closest(boundary);
    }
    return (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.coerceElement)(boundary);
  }
  /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */
  _syncInputs(ref) {
    ref.beforeStarted.subscribe(() => {
      if (!ref.isDragging()) {
        const dir = this._dir;
        const dragStartDelay = this.dragStartDelay;
        const placeholder = this._placeholderTemplate ? {
          template: this._placeholderTemplate.templateRef,
          context: this._placeholderTemplate.data,
          viewContainer: this._viewContainerRef
        } : null;
        const preview = this._previewTemplate ? {
          template: this._previewTemplate.templateRef,
          context: this._previewTemplate.data,
          matchSize: this._previewTemplate.matchSize,
          viewContainer: this._viewContainerRef
        } : null;
        ref.disabled = this.disabled;
        ref.lockAxis = this.lockAxis;
        ref.dragStartDelay = typeof dragStartDelay === 'object' && dragStartDelay ? dragStartDelay : (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__.coerceNumberProperty)(dragStartDelay);
        ref.constrainPosition = this.constrainPosition;
        ref.previewClass = this.previewClass;
        ref.withBoundaryElement(this._getBoundaryElement()).withPlaceholderTemplate(placeholder).withPreviewTemplate(preview).withPreviewContainer(this.previewContainer || 'global');
        if (dir) {
          ref.withDirection(dir.value);
        }
      }
    });
    // This only needs to be resolved once.
    ref.beforeStarted.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_16__.take)(1)).subscribe(() => {
      // If we managed to resolve a parent through DI, use it.
      if (this._parentDrag) {
        ref.withParent(this._parentDrag._dragRef);
        return;
      }
      // Otherwise fall back to resolving the parent by looking up the DOM. This can happen if
      // the item was projected into another item by something like `ngTemplateOutlet`.
      let parent = this.element.nativeElement.parentElement;
      while (parent) {
        if (parent.classList.contains(DRAG_HOST_CLASS)) {
          ref.withParent(CdkDrag._dragInstances.find(drag => {
            return drag.element.nativeElement === parent;
          })?._dragRef || null);
          break;
        }
        parent = parent.parentElement;
      }
    });
  }
  /** Handles the events from the underlying `DragRef`. */
  _handleEvents(ref) {
    ref.started.subscribe(startEvent => {
      this.started.emit({
        source: this,
        event: startEvent.event
      });
      // Since all of these events run outside of change detection,
      // we need to ensure that everything is marked correctly.
      this._changeDetectorRef.markForCheck();
    });
    ref.released.subscribe(releaseEvent => {
      this.released.emit({
        source: this,
        event: releaseEvent.event
      });
    });
    ref.ended.subscribe(endEvent => {
      this.ended.emit({
        source: this,
        distance: endEvent.distance,
        dropPoint: endEvent.dropPoint,
        event: endEvent.event
      });
      // Since all of these events run outside of change detection,
      // we need to ensure that everything is marked correctly.
      this._changeDetectorRef.markForCheck();
    });
    ref.entered.subscribe(enterEvent => {
      this.entered.emit({
        container: enterEvent.container.data,
        item: this,
        currentIndex: enterEvent.currentIndex
      });
    });
    ref.exited.subscribe(exitEvent => {
      this.exited.emit({
        container: exitEvent.container.data,
        item: this
      });
    });
    ref.dropped.subscribe(dropEvent => {
      this.dropped.emit({
        previousIndex: dropEvent.previousIndex,
        currentIndex: dropEvent.currentIndex,
        previousContainer: dropEvent.previousContainer.data,
        container: dropEvent.container.data,
        isPointerOverContainer: dropEvent.isPointerOverContainer,
        item: this,
        distance: dropEvent.distance,
        dropPoint: dropEvent.dropPoint,
        event: dropEvent.event
      });
    });
  }
  /** Assigns the default input values based on a provided config object. */
  _assignDefaults(config) {
    const {
      lockAxis,
      dragStartDelay,
      constrainPosition,
      previewClass,
      boundaryElement,
      draggingDisabled,
      rootElementSelector,
      previewContainer
    } = config;
    this.disabled = draggingDisabled == null ? false : draggingDisabled;
    this.dragStartDelay = dragStartDelay || 0;
    if (lockAxis) {
      this.lockAxis = lockAxis;
    }
    if (constrainPosition) {
      this.constrainPosition = constrainPosition;
    }
    if (previewClass) {
      this.previewClass = previewClass;
    }
    if (boundaryElement) {
      this.boundaryElement = boundaryElement;
    }
    if (rootElementSelector) {
      this.rootElementSelector = rootElementSelector;
    }
    if (previewContainer) {
      this.previewContainer = previewContainer;
    }
  }
  /** Sets up the listener that syncs the handles with the drag ref. */
  _setupHandlesListener() {
    // Listen for any newly-added handles.
    this._handles.changes.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.startWith)(this._handles),
    // Sync the new handles with the DragRef.
    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_17__.tap)(handles => {
      const childHandleElements = handles.filter(handle => handle._parentDrag === this).map(handle => handle.element);
      // Usually handles are only allowed to be a descendant of the drag element, but if
      // the consumer defined a different drag root, we should allow the drag element
      // itself to be a handle too.
      if (this._selfHandle && this.rootElementSelector) {
        childHandleElements.push(this.element);
      }
      this._dragRef.withHandles(childHandleElements);
    }),
    // Listen if the state of any of the handles changes.
    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.switchMap)(handles => {
      return (0,rxjs__WEBPACK_IMPORTED_MODULE_9__.merge)(...handles.map(item => {
        return item._stateChanges.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.startWith)(item));
      }));
    }), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.takeUntil)(this._destroyed)).subscribe(handleInstance => {
      // Enabled/disable the handle that changed in the DragRef.
      const dragRef = this._dragRef;
      const handle = handleInstance.element.nativeElement;
      handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);
    });
  }
}
CdkDrag._dragInstances = [];
CdkDrag.ɵfac = function CdkDrag_Factory(t) {
  return new (t || CdkDrag)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](CDK_DROP_LIST, 12), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_11__.DOCUMENT), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__.ViewContainerRef), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](CDK_DRAG_CONFIG, 8), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_14__.Directionality, 8), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](DragDrop), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](CDK_DRAG_HANDLE, 10), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](CDK_DRAG_PARENT, 12));
};
CdkDrag.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineDirective"]({
  type: CdkDrag,
  selectors: [["", "cdkDrag", ""]],
  contentQueries: function CdkDrag_ContentQueries(rf, ctx, dirIndex) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵcontentQuery"](dirIndex, CDK_DRAG_PREVIEW, 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵcontentQuery"](dirIndex, CDK_DRAG_PLACEHOLDER, 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵcontentQuery"](dirIndex, CDK_DRAG_HANDLE, 5);
    }
    if (rf & 2) {
      let _t;
      _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵloadQuery"]()) && (ctx._previewTemplate = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵloadQuery"]()) && (ctx._placeholderTemplate = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵloadQuery"]()) && (ctx._handles = _t);
    }
  },
  hostAttrs: [1, "cdk-drag"],
  hostVars: 4,
  hostBindings: function CdkDrag_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵclassProp"]("cdk-drag-disabled", ctx.disabled)("cdk-drag-dragging", ctx._dragRef.isDragging());
    }
  },
  inputs: {
    data: ["cdkDragData", "data"],
    lockAxis: ["cdkDragLockAxis", "lockAxis"],
    rootElementSelector: ["cdkDragRootElement", "rootElementSelector"],
    boundaryElement: ["cdkDragBoundary", "boundaryElement"],
    dragStartDelay: ["cdkDragStartDelay", "dragStartDelay"],
    freeDragPosition: ["cdkDragFreeDragPosition", "freeDragPosition"],
    disabled: ["cdkDragDisabled", "disabled"],
    constrainPosition: ["cdkDragConstrainPosition", "constrainPosition"],
    previewClass: ["cdkDragPreviewClass", "previewClass"],
    previewContainer: ["cdkDragPreviewContainer", "previewContainer"]
  },
  outputs: {
    started: "cdkDragStarted",
    released: "cdkDragReleased",
    ended: "cdkDragEnded",
    entered: "cdkDragEntered",
    exited: "cdkDragExited",
    dropped: "cdkDragDropped",
    moved: "cdkDragMoved"
  },
  exportAs: ["cdkDrag"],
  standalone: true,
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵProvidersFeature"]([{
    provide: CDK_DRAG_PARENT,
    useExisting: CdkDrag
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵNgOnChangesFeature"]]
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵsetClassMetadata"](CdkDrag, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Directive,
    args: [{
      selector: '[cdkDrag]',
      exportAs: 'cdkDrag',
      standalone: true,
      host: {
        'class': DRAG_HOST_CLASS,
        '[class.cdk-drag-disabled]': 'disabled',
        '[class.cdk-drag-dragging]': '_dragRef.isDragging()'
      },
      providers: [{
        provide: CDK_DRAG_PARENT,
        useExisting: CdkDrag
      }]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.ElementRef
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Inject,
        args: [CDK_DROP_LIST]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Optional
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.SkipSelf
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Inject,
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_11__.DOCUMENT]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.NgZone
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.ViewContainerRef
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Optional
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Inject,
        args: [CDK_DRAG_CONFIG]
      }]
    }, {
      type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_14__.Directionality,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Optional
      }]
    }, {
      type: DragDrop
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.ChangeDetectorRef
    }, {
      type: CdkDragHandle,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Optional
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Self
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Inject,
        args: [CDK_DRAG_HANDLE]
      }]
    }, {
      type: CdkDrag,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Optional
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.SkipSelf
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Inject,
        args: [CDK_DRAG_PARENT]
      }]
    }];
  }, {
    _handles: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.ContentChildren,
      args: [CDK_DRAG_HANDLE, {
        descendants: true
      }]
    }],
    _previewTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.ContentChild,
      args: [CDK_DRAG_PREVIEW]
    }],
    _placeholderTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.ContentChild,
      args: [CDK_DRAG_PLACEHOLDER]
    }],
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input,
      args: ['cdkDragData']
    }],
    lockAxis: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input,
      args: ['cdkDragLockAxis']
    }],
    rootElementSelector: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input,
      args: ['cdkDragRootElement']
    }],
    boundaryElement: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input,
      args: ['cdkDragBoundary']
    }],
    dragStartDelay: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input,
      args: ['cdkDragStartDelay']
    }],
    freeDragPosition: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input,
      args: ['cdkDragFreeDragPosition']
    }],
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input,
      args: ['cdkDragDisabled']
    }],
    constrainPosition: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input,
      args: ['cdkDragConstrainPosition']
    }],
    previewClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input,
      args: ['cdkDragPreviewClass']
    }],
    previewContainer: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Input,
      args: ['cdkDragPreviewContainer']
    }],
    started: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Output,
      args: ['cdkDragStarted']
    }],
    released: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Output,
      args: ['cdkDragReleased']
    }],
    ended: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Output,
      args: ['cdkDragEnded']
    }],
    entered: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Output,
      args: ['cdkDragEntered']
    }],
    exited: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Output,
      args: ['cdkDragExited']
    }],
    dropped: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Output,
      args: ['cdkDragDropped']
    }],
    moved: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.Output,
      args: ['cdkDragMoved']
    }]
  });
})();

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
const DRAG_DROP_DIRECTIVES = [CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder];
class DragDropModule {}
DragDropModule.ɵfac = function DragDropModule_Factory(t) {
  return new (t || DragDropModule)();
};
DragDropModule.ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineNgModule"]({
  type: DragDropModule,
  imports: [CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder],
  exports: [_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_12__.CdkScrollableModule, CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder]
});
DragDropModule.ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineInjector"]({
  providers: [DragDrop],
  imports: [_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_12__.CdkScrollableModule]
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵsetClassMetadata"](DragDropModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_10__.NgModule,
    args: [{
      imports: DRAG_DROP_DIRECTIVES,
      exports: [_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_12__.CdkScrollableModule, ...DRAG_DROP_DIRECTIVES],
      providers: [DragDrop]
    }]
  }], null, null);
})();

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */



/***/ }),

/***/ 8322:
/*!*******************************************************************************!*\
  !*** ./node_modules/ngx-mat-select-search/fesm2020/ngx-mat-select-search.mjs ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MAT_SELECTSEARCH_DEFAULT_OPTIONS": () => (/* binding */ MAT_SELECTSEARCH_DEFAULT_OPTIONS),
/* harmony export */   "MatSelectNoEntriesFoundDirective": () => (/* binding */ MatSelectNoEntriesFoundDirective),
/* harmony export */   "MatSelectSearchClearDirective": () => (/* binding */ MatSelectSearchClearDirective),
/* harmony export */   "MatSelectSearchComponent": () => (/* binding */ MatSelectSearchComponent),
/* harmony export */   "MatSelectSearchVersion": () => (/* binding */ MatSelectSearchVersion),
/* harmony export */   "NgxMatSelectSearchModule": () => (/* binding */ NgxMatSelectSearchModule),
/* harmony export */   "configurableDefaultOptions": () => (/* binding */ configurableDefaultOptions)
/* harmony export */ });
/* harmony import */ var _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/cdk/keycodes */ 8456);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 2560);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/material/core */ 9121);
/* harmony import */ var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/material/form-field */ 5074);
/* harmony import */ var _angular_material_select__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/material/select */ 7371);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 6317);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ 745);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ 6562);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ 228);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ 2673);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ 635);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 4874);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs/operators */ 1339);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs/operators */ 8951);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs/operators */ 9295);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs/operators */ 9337);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! rxjs/operators */ 116);
/* harmony import */ var _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/cdk/scrolling */ 6328);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/common */ 4666);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/material/button */ 4522);
/* harmony import */ var _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/material/checkbox */ 4792);
/* harmony import */ var _angular_material_icon__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @angular/material/icon */ 7822);
/* harmony import */ var _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @angular/material/progress-spinner */ 1708);
/* harmony import */ var _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @angular/material/tooltip */ 6896);
/* harmony import */ var _angular_material_divider__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @angular/material/divider */ 1528);





























/**
 * Directive for providing a custom clear-icon.
 * e.g.
 * <ngx-mat-select-search [formControl]="bankFilterCtrl">
 *   <mat-icon ngxMatSelectSearchClear>delete</mat-icon>
 * </ngx-mat-select-search>
 */
const _c0 = ["searchSelectInput"];
const _c1 = ["innerSelectSearch"];
function MatSelectSearchComponent_mat_checkbox_4_Template(rf, ctx) {
  if (rf & 1) {
    const _r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mat-checkbox", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("change", function MatSelectSearchComponent_mat_checkbox_4_Template_mat_checkbox_change_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r7);
      const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r6._emitSelectAllBooleanToParent($event.checked));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("color", ctx_r1.matFormField == null ? null : ctx_r1.matFormField.color)("checked", ctx_r1.toggleAllCheckboxChecked)("indeterminate", ctx_r1.toggleAllCheckboxIndeterminate)("matTooltip", ctx_r1.toggleAllCheckboxTooltipMessage)("matTooltipPosition", ctx_r1.toggleAllCheckboxTooltipPosition);
  }
}
function MatSelectSearchComponent_mat_spinner_7_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "mat-spinner", 11);
  }
}
function MatSelectSearchComponent_button_8_ng_content_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](0, 1, ["*ngIf", "clearIcon; else defaultIcon"]);
  }
}
function MatSelectSearchComponent_button_8_ng_template_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mat-icon", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("svgIcon", ctx_r10.closeSvgIcon);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", !ctx_r10.closeSvgIcon ? ctx_r10.closeIcon : null, " ");
  }
}
function MatSelectSearchComponent_button_8_Template(rf, ctx) {
  if (rf & 1) {
    const _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "button", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function MatSelectSearchComponent_button_8_Template_button_click_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r12);
      const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r11._reset(true));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, MatSelectSearchComponent_button_8_ng_content_1_Template, 1, 0, "ng-content", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, MatSelectSearchComponent_button_8_ng_template_2_Template, 2, 2, "ng-template", null, 14, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const _r9 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](3);
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r4.clearIcon)("ngIfElse", _r9);
  }
}
function MatSelectSearchComponent_div_11_ng_content_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](0, 2, ["*ngIf", "noEntriesFound; else defaultNoEntriesFound"]);
  }
}
function MatSelectSearchComponent_div_11_ng_template_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0);
  }
  if (rf & 2) {
    const ctx_r15 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r15.noEntriesFoundLabel);
  }
}
function MatSelectSearchComponent_div_11_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, MatSelectSearchComponent_div_11_ng_content_1_Template, 1, 0, "ng-content", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, MatSelectSearchComponent_div_11_ng_template_2_Template, 1, 1, "ng-template", null, 17, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const _r14 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](3);
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r5.noEntriesFound)("ngIfElse", _r14);
  }
}
const _c2 = [[["", 8, "mat-select-search-custom-header-content"]], [["", "ngxMatSelectSearchClear", ""]], [["", "ngxMatSelectNoEntriesFound", ""]]];
const _c3 = function (a0, a1) {
  return {
    "mat-select-search-inner-multiple": a0,
    "mat-select-search-inner-toggle-all": a1
  };
};
const _c4 = [".mat-select-search-custom-header-content", "[ngxMatSelectSearchClear]", "[ngxMatSelectNoEntriesFound]"];
class MatSelectSearchClearDirective {}
MatSelectSearchClearDirective.ɵfac = function MatSelectSearchClearDirective_Factory(t) {
  return new (t || MatSelectSearchClearDirective)();
};
MatSelectSearchClearDirective.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
  type: MatSelectSearchClearDirective,
  selectors: [["", "ngxMatSelectSearchClear", ""]]
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](MatSelectSearchClearDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
    args: [{
      selector: '[ngxMatSelectSearchClear]'
    }]
  }], null, null);
})();

/** List of inputs of NgxMatSelectSearchComponent that can be configured with a global default. */
const configurableDefaultOptions = ['ariaLabel', 'clearSearchInput', 'closeIcon', 'closeSvgIcon', 'disableInitialFocus', 'disableScrollToActiveOnOptionsChanged', 'enableClearOnEscapePressed', 'hideClearSearchButton', 'noEntriesFoundLabel', 'placeholderLabel', 'preventHomeEndKeyPropagation', 'searching'];
/**
 * InjectionToken that can be used to specify global options. e.g.
 *
 * ```typescript
 * providers: [
 *   {
 *     provide: MAT_SELECTSEARCH_DEFAULT_OPTIONS,
 *     useValue: <MatSelectSearchOptions>{
 *       closeIcon: 'delete',
 *       noEntriesFoundLabel: 'No options found'
 *     }
 *   }
 * ]
 * ```
 *
 * See the corresponding inputs of `MatSelectSearchComponent` for documentation.
 */
const MAT_SELECTSEARCH_DEFAULT_OPTIONS = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken('mat-selectsearch-default-options');

/**
 * Directive for providing a custom no entries found element.
 * e.g.
 * <ngx-mat-select-search [formControl]="bankFilterCtrl">
 *   <span ngxMatSelectNoEntriesFound>
 *     No entries found <button>Add</button>
 *   </span>
 * </ngx-mat-select-search>
 */
class MatSelectNoEntriesFoundDirective {}
MatSelectNoEntriesFoundDirective.ɵfac = function MatSelectNoEntriesFoundDirective_Factory(t) {
  return new (t || MatSelectNoEntriesFoundDirective)();
};
MatSelectNoEntriesFoundDirective.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
  type: MatSelectNoEntriesFoundDirective,
  selectors: [["", "ngxMatSelectNoEntriesFound", ""]]
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](MatSelectNoEntriesFoundDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
    args: [{
      selector: '[ngxMatSelectNoEntriesFound]'
    }]
  }], null, null);
})();

/**
 * Copyright (c) 2018 Bithost GmbH All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/* tslint:disable:member-ordering component-selector */
/**
 * Component providing an input field for searching MatSelect options.
 *
 * Example usage:
 *
 * interface Bank {
 *  id: string;
 *  name: string;
 * }
 *
 * @Component({
 *   selector: 'my-app-data-selection',
 *   template: `
 *     <mat-form-field>
 *       <mat-select [formControl]="bankCtrl" placeholder="Bank">
 *         <mat-option>
 *           <ngx-mat-select-search [formControl]="bankFilterCtrl"></ngx-mat-select-search>
 *         </mat-option>
 *         <mat-option *ngFor="let bank of filteredBanks | async" [value]="bank.id">
 *           {{bank.name}}
 *         </mat-option>
 *       </mat-select>
 *     </mat-form-field>
 *   `
 * })
 * export class DataSelectionComponent implements OnInit, OnDestroy {
 *
 *   // control for the selected bank
 *   public bankCtrl: FormControl = new FormControl();
 *   // control for the MatSelect filter keyword
 *   public bankFilterCtrl: FormControl = new FormControl();
 *
 *   // list of banks
 *   private banks: Bank[] = [{name: 'Bank A', id: 'A'}, {name: 'Bank B', id: 'B'}, {name: 'Bank C', id: 'C'}];
 *   // list of banks filtered by search keyword
 *   public filteredBanks: ReplaySubject<Bank[]> = new ReplaySubject<Bank[]>(1);
 *
 *   // Subject that emits when the component has been destroyed.
 *   private _onDestroy = new Subject<void>();
 *
 *
 *   ngOnInit() {
 *     // load the initial bank list
 *     this.filteredBanks.next(this.banks.slice());
 *     // listen for search field value changes
 *     this.bankFilterCtrl.valueChanges
 *       .pipe(takeUntil(this._onDestroy))
 *       .subscribe(() => {
 *         this.filterBanks();
 *       });
 *   }
 *
 *   ngOnDestroy() {
 *     this._onDestroy.next();
 *     this._onDestroy.complete();
 *   }
 *
 *   private filterBanks() {
 *     if (!this.banks) {
 *       return;
 *     }
 *
 *     // get the search keyword
 *     let search = this.bankFilterCtrl.value;
 *     if (!search) {
 *       this.filteredBanks.next(this.banks.slice());
 *       return;
 *     } else {
 *       search = search.toLowerCase();
 *     }
 *
 *     // filter the banks
 *     this.filteredBanks.next(
 *       this.banks.filter(bank => bank.name.toLowerCase().indexOf(search) > -1)
 *     );
 *   }
 * }
 */
class MatSelectSearchComponent {
  constructor(matSelect, changeDetectorRef, _viewportRuler, matOption = null, matFormField = null, defaultOptions) {
    this.matSelect = matSelect;
    this.changeDetectorRef = changeDetectorRef;
    this._viewportRuler = _viewportRuler;
    this.matOption = matOption;
    this.matFormField = matFormField;
    /** Label of the search placeholder */
    this.placeholderLabel = 'Suche';
    /** Type of the search input field */
    this.type = 'text';
    /** Font-based icon used for displaying Close-Icon */
    this.closeIcon = 'close';
    /** Label to be shown when no entries are found. Set to null if no message should be shown. */
    this.noEntriesFoundLabel = 'Keine Optionen gefunden';
    /**
      * Whether or not the search field should be cleared after the dropdown menu is closed.
      * Useful for server-side filtering. See [#3](https://github.com/bithost-gmbh/ngx-mat-select-search/issues/3)
      */
    this.clearSearchInput = true;
    /** Whether to show the search-in-progress indicator */
    this.searching = false;
    /** Disables initial focusing of the input field */
    this.disableInitialFocus = false;
    /** Enable clear input on escape pressed */
    this.enableClearOnEscapePressed = false;
    /**
     * Prevents home / end key being propagated to mat-select,
     * allowing to move the cursor within the search input instead of navigating the options
     */
    this.preventHomeEndKeyPropagation = false;
    /** Disables scrolling to active options when option list changes. Useful for server-side search */
    this.disableScrollToActiveOnOptionsChanged = false;
    /** Adds 508 screen reader support for search box */
    this.ariaLabel = 'dropdown search';
    /** Whether to show Select All Checkbox (for mat-select[multi=true]) */
    this.showToggleAllCheckbox = false;
    /** select all checkbox checked state */
    this.toggleAllCheckboxChecked = false;
    /** select all checkbox indeterminate state */
    this.toggleAllCheckboxIndeterminate = false;
    /** Display a message in a tooltip on the toggle-all checkbox */
    this.toggleAllCheckboxTooltipMessage = '';
    /** Define the position of the tooltip on the toggle-all checkbox. */
    this.toggleAllCheckboxTooltipPosition = 'below';
    /** Show/Hide the search clear button of the search input */
    this.hideClearSearchButton = false;
    /**
     * Always restore selected options on selectionChange for mode multi (e.g. for lazy loading/infinity scrolling).
     * Defaults to false, so selected options are only restored while filtering is active.
     */
    this.alwaysRestoreSelectedOptionsMulti = false;
    /** Output emitter to send to parent component with the toggle all boolean */
    this.toggleAll = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.onTouched = _ => {};
    this._options$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject(null);
    this.optionsList$ = this._options$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.switchMap)(_options => _options ? _options.changes.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)(options => options.toArray()), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.startWith)(_options.toArray())) : (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(null)));
    this.optionsLength$ = this.optionsList$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)(options => options ? options.length : 0));
    this._formControl = new _angular_forms__WEBPACK_IMPORTED_MODULE_6__.FormControl('');
    /** whether to show the no entries found message */
    this._showNoEntriesFound$ = (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.combineLatest)([this._formControl.valueChanges, this.optionsLength$]).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)(([value, optionsLength]) => this.noEntriesFoundLabel && value && optionsLength === this.getOptionsLengthOffset()));
    /** Subject that emits when the component has been destroyed. */
    this._onDestroy = new rxjs__WEBPACK_IMPORTED_MODULE_8__.Subject();
    this.applyDefaultOptions(defaultOptions);
  }
  /** Current search value */
  get value() {
    return this._formControl.value;
  }
  /** Reference to the MatSelect options */
  set _options(_options) {
    this._options$.next(_options);
  }
  get _options() {
    return this._options$.getValue();
  }
  applyDefaultOptions(defaultOptions) {
    if (!defaultOptions) {
      return;
    }
    for (const key of configurableDefaultOptions) {
      if (defaultOptions.hasOwnProperty(key)) {
        this[key] = defaultOptions[key];
      }
    }
  }
  ngOnInit() {
    // set custom mat-option class if the component was placed inside a mat-option
    if (this.matOption) {
      this.matOption.disabled = true;
      this.matOption._getHostElement().classList.add('contains-mat-select-search');
      this.matOption._getHostElement().setAttribute('aria-hidden', 'true');
    } else {
      console.error('<ngx-mat-select-search> must be placed inside a <mat-option> element');
    }
    // when the select dropdown panel is opened or closed
    this.matSelect.openedChange.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.delay)(1), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.takeUntil)(this._onDestroy)).subscribe(opened => {
      if (opened) {
        this.updateInputWidth();
        // focus the search field when opening
        if (!this.disableInitialFocus) {
          this._focus();
        }
      } else {
        // clear it when closing
        if (this.clearSearchInput) {
          this._reset();
        }
      }
    });
    // set the first item active after the options changed
    this.matSelect.openedChange.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.take)(1), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.switchMap)(_ => {
      this._options = this.matSelect.options;
      // Closure variable for tracking the most recent first option.
      // In order to avoid avoid causing the list to
      // scroll to the top when options are added to the bottom of
      // the list (eg: infinite scroll), we compare only
      // the changes to the first options to determine if we
      // should set the first item as active.
      // This prevents unnecessary scrolling to the top of the list
      // when options are appended, but allows the first item
      // in the list to be set as active by default when there
      // is no active selection
      let previousFirstOption = this._options.toArray()[this.getOptionsLengthOffset()];
      return this._options.changes.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.tap)(() => {
        // avoid "expression has been changed" error
        setTimeout(() => {
          // Convert the QueryList to an array
          const options = this._options.toArray();
          // The true first item is offset by 1
          const currentFirstOption = options[this.getOptionsLengthOffset()];
          const keyManager = this.matSelect._keyManager;
          if (keyManager && this.matSelect.panelOpen && currentFirstOption) {
            // set first item active and input width
            // Check to see if the first option in these changes is different from the previous.
            const firstOptionIsChanged = !previousFirstOption || !this.matSelect.compareWith(previousFirstOption.value, currentFirstOption.value);
            // CASE: The first option is different now.
            // Indiciates we should set it as active and scroll to the top.
            if (firstOptionIsChanged || !keyManager.activeItem || !options.find(option => this.matSelect.compareWith(option.value, keyManager.activeItem.value))) {
              keyManager.setActiveItem(this.getOptionsLengthOffset());
            }
            // wait for panel width changes
            setTimeout(() => {
              this.updateInputWidth();
            });
          }
          // Update our reference
          previousFirstOption = currentFirstOption;
        });
      }));
    })).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.takeUntil)(this._onDestroy)).subscribe();
    // add or remove css class depending on whether to show the no entries found message
    // note: this is hacky
    this._showNoEntriesFound$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.takeUntil)(this._onDestroy)).subscribe(showNoEntriesFound => {
      // set no entries found class on mat option
      if (this.matOption) {
        if (showNoEntriesFound) {
          this.matOption._getHostElement().classList.add('mat-select-search-no-entries-found');
        } else {
          this.matOption._getHostElement().classList.remove('mat-select-search-no-entries-found');
        }
      }
    });
    // resize the input width when the viewport is resized, i.e. the trigger width could potentially be resized
    this._viewportRuler.change().pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.takeUntil)(this._onDestroy)).subscribe(() => {
      if (this.matSelect.panelOpen) {
        this.updateInputWidth();
      }
    });
    this.initMultipleHandling();
    this.optionsList$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.takeUntil)(this._onDestroy)).subscribe(() => {
      // update view when available options change
      this.changeDetectorRef.markForCheck();
    });
  }
  _emitSelectAllBooleanToParent(state) {
    this.toggleAll.emit(state);
  }
  ngOnDestroy() {
    this._onDestroy.next();
    this._onDestroy.complete();
  }
  _isToggleAllCheckboxVisible() {
    return this.matSelect.multiple && this.showToggleAllCheckbox;
  }
  /**
   * Handles the key down event with MatSelect.
   * Allows e.g. selecting with enter key, navigation with arrow keys, etc.
   * @param event
   */
  _handleKeydown(event) {
    // Prevent propagation for all alphanumeric characters in order to avoid selection issues
    if (event.key && event.key.length === 1 || event.keyCode >= _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_13__.A && event.keyCode <= _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_13__.Z || event.keyCode >= _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_13__.ZERO && event.keyCode <= _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_13__.NINE || event.keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_13__.SPACE || this.preventHomeEndKeyPropagation && (event.keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_13__.HOME || event.keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_13__.END)) {
      event.stopPropagation();
    }
    if (this.matSelect.multiple && event.key && event.keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_13__.ENTER) {
      // Regain focus after multiselect, so we can further type
      setTimeout(() => this._focus());
    }
    // Special case if click Escape, if input is empty, close the dropdown, if not, empty out the search field
    if (this.enableClearOnEscapePressed === true && event.keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_13__.ESCAPE && this.value) {
      this._reset(true);
      event.stopPropagation();
    }
  }
  /**
   * Handles the key up event with MatSelect.
   * Allows e.g. the announcing of the currently activeDescendant by screen readers.
   */
  _handleKeyup(event) {
    if (event.keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_13__.UP_ARROW || event.keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_13__.DOWN_ARROW) {
      const ariaActiveDescendantId = this.matSelect._getAriaActiveDescendant();
      const index = this._options.toArray().findIndex(item => item.id === ariaActiveDescendantId);
      if (index !== -1) {
        this.unselectActiveDescendant();
        this.activeDescendant = this._options.toArray()[index]._getHostElement();
        this.activeDescendant.setAttribute('aria-selected', 'true');
        this.searchSelectInput.nativeElement.setAttribute('aria-activedescendant', ariaActiveDescendantId);
      }
    }
  }
  writeValue(value) {
    this._lastExternalInputValue = value;
    this._formControl.setValue(value);
    this.changeDetectorRef.markForCheck();
  }
  onBlur() {
    this.unselectActiveDescendant();
    this.onTouched();
  }
  registerOnChange(fn) {
    this._formControl.valueChanges.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.filter)(value => value !== this._lastExternalInputValue), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.tap)(() => this._lastExternalInputValue = undefined), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.takeUntil)(this._onDestroy)).subscribe(fn);
  }
  registerOnTouched(fn) {
    this.onTouched = fn;
  }
  /**
   * Focuses the search input field
   */
  _focus() {
    if (!this.searchSelectInput || !this.matSelect.panel) {
      return;
    }
    // save and restore scrollTop of panel, since it will be reset by focus()
    // note: this is hacky
    const panel = this.matSelect.panel.nativeElement;
    const scrollTop = panel.scrollTop;
    // focus
    this.searchSelectInput.nativeElement.focus();
    panel.scrollTop = scrollTop;
  }
  /**
   * Resets the current search value
   * @param focus whether to focus after resetting
   */
  _reset(focus) {
    this._formControl.setValue('');
    if (focus) {
      this._focus();
    }
  }
  /**
   * Initializes handling <mat-select [multiple]="true">
   * Note: to improve this code, mat-select should be extended to allow disabling resetting the selection while filtering.
   */
  initMultipleHandling() {
    if (!this.matSelect.ngControl) {
      if (this.matSelect.multiple) {
        // note: the access to matSelect.ngControl (instead of matSelect.value / matSelect.valueChanges)
        // is necessary to properly work in multi-selection mode.
        console.error('the mat-select containing ngx-mat-select-search must have a ngModel or formControl directive when multiple=true');
      }
      return;
    }
    // if <mat-select [multiple]="true">
    // store previously selected values and restore them when they are deselected
    // because the option is not available while we are currently filtering
    this.previousSelectedValues = this.matSelect.ngControl.value;
    this.matSelect.ngControl.valueChanges.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.takeUntil)(this._onDestroy)).subscribe(values => {
      let restoreSelectedValues = false;
      if (this.matSelect.multiple) {
        if ((this.alwaysRestoreSelectedOptionsMulti || this._formControl.value && this._formControl.value.length) && this.previousSelectedValues && Array.isArray(this.previousSelectedValues)) {
          if (!values || !Array.isArray(values)) {
            values = [];
          }
          const optionValues = this.matSelect.options.map(option => option.value);
          this.previousSelectedValues.forEach(previousValue => {
            if (!values.some(v => this.matSelect.compareWith(v, previousValue)) && !optionValues.some(v => this.matSelect.compareWith(v, previousValue))) {
              // if a value that was selected before is deselected and not found in the options, it was deselected
              // due to the filtering, so we restore it.
              values.push(previousValue);
              restoreSelectedValues = true;
            }
          });
        }
      }
      this.previousSelectedValues = values;
      if (restoreSelectedValues) {
        this.matSelect._onChange(values);
      }
    });
  }
  /**
   *  Set the width of the innerSelectSearch to fit even custom scrollbars
   *  And support all Operation Systems
   */
  updateInputWidth() {
    if (!this.innerSelectSearch || !this.innerSelectSearch.nativeElement) {
      return;
    }
    let element = this.innerSelectSearch.nativeElement;
    let panelElement;
    while (element = element.parentElement) {
      if (element.classList.contains('mat-select-panel')) {
        panelElement = element;
        break;
      }
    }
    if (panelElement) {
      this.innerSelectSearch.nativeElement.style.width = panelElement.clientWidth + 'px';
    }
  }
  /**
   * Determine the offset to length that can be caused by the optional matOption used as a search input.
   */
  getOptionsLengthOffset() {
    if (this.matOption) {
      return 1;
    } else {
      return 0;
    }
  }
  unselectActiveDescendant() {
    this.activeDescendant?.removeAttribute('aria-selected');
    this.searchSelectInput.nativeElement.removeAttribute('aria-activedescendant');
  }
}
MatSelectSearchComponent.ɵfac = function MatSelectSearchComponent_Factory(t) {
  return new (t || MatSelectSearchComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_material_select__WEBPACK_IMPORTED_MODULE_15__.MatSelect), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_16__.ViewportRuler), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_17__.MatOption, 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_material_form_field__WEBPACK_IMPORTED_MODULE_18__.MatFormField, 8), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](MAT_SELECTSEARCH_DEFAULT_OPTIONS, 8));
};
MatSelectSearchComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: MatSelectSearchComponent,
  selectors: [["ngx-mat-select-search"]],
  contentQueries: function MatSelectSearchComponent_ContentQueries(rf, ctx, dirIndex) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, MatSelectSearchClearDirective, 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, MatSelectNoEntriesFoundDirective, 5);
    }
    if (rf & 2) {
      let _t;
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.clearIcon = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.noEntriesFound = _t.first);
    }
  },
  viewQuery: function MatSelectSearchComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, 7, _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c1, 7, _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef);
    }
    if (rf & 2) {
      let _t;
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.searchSelectInput = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.innerSelectSearch = _t.first);
    }
  },
  inputs: {
    placeholderLabel: "placeholderLabel",
    type: "type",
    closeIcon: "closeIcon",
    closeSvgIcon: "closeSvgIcon",
    noEntriesFoundLabel: "noEntriesFoundLabel",
    clearSearchInput: "clearSearchInput",
    searching: "searching",
    disableInitialFocus: "disableInitialFocus",
    enableClearOnEscapePressed: "enableClearOnEscapePressed",
    preventHomeEndKeyPropagation: "preventHomeEndKeyPropagation",
    disableScrollToActiveOnOptionsChanged: "disableScrollToActiveOnOptionsChanged",
    ariaLabel: "ariaLabel",
    showToggleAllCheckbox: "showToggleAllCheckbox",
    toggleAllCheckboxChecked: "toggleAllCheckboxChecked",
    toggleAllCheckboxIndeterminate: "toggleAllCheckboxIndeterminate",
    toggleAllCheckboxTooltipMessage: "toggleAllCheckboxTooltipMessage",
    toggleAllCheckboxTooltipPosition: "toggleAllCheckboxTooltipPosition",
    hideClearSearchButton: "hideClearSearchButton",
    alwaysRestoreSelectedOptionsMulti: "alwaysRestoreSelectedOptionsMulti"
  },
  outputs: {
    toggleAll: "toggleAll"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵProvidersFeature"]([{
    provide: _angular_forms__WEBPACK_IMPORTED_MODULE_6__.NG_VALUE_ACCESSOR,
    useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => MatSelectSearchComponent),
    multi: true
  }])],
  ngContentSelectors: _c4,
  decls: 13,
  vars: 14,
  consts: [["matInput", "", 1, "mat-select-search-input", "mat-select-search-hidden"], [1, "mat-select-search-inner", "mat-typography", "mat-datepicker-content", "mat-tab-header", 3, "ngClass"], ["innerSelectSearch", ""], [1, "mat-select-search-inner-row"], ["class", "mat-select-search-toggle-all-checkbox", "matTooltipClass", "ngx-mat-select-search-toggle-all-tooltip", 3, "color", "checked", "indeterminate", "matTooltip", "matTooltipPosition", "change", 4, "ngIf"], ["autocomplete", "off", 1, "mat-select-search-input", 3, "type", "formControl", "placeholder", "keydown", "keyup", "blur"], ["searchSelectInput", ""], ["class", "mat-select-search-spinner", "diameter", "16", 4, "ngIf"], ["mat-icon-button", "", "aria-label", "Clear", "class", "mat-select-search-clear", 3, "click", 4, "ngIf"], ["class", "mat-select-search-no-entries-found", 4, "ngIf"], ["matTooltipClass", "ngx-mat-select-search-toggle-all-tooltip", 1, "mat-select-search-toggle-all-checkbox", 3, "color", "checked", "indeterminate", "matTooltip", "matTooltipPosition", "change"], ["diameter", "16", 1, "mat-select-search-spinner"], ["mat-icon-button", "", "aria-label", "Clear", 1, "mat-select-search-clear", 3, "click"], [4, "ngIf", "ngIfElse"], ["defaultIcon", ""], [3, "svgIcon"], [1, "mat-select-search-no-entries-found"], ["defaultNoEntriesFound", ""]],
  template: function MatSelectSearchComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"](_c2);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "input", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1, 2)(3, "div", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, MatSelectSearchComponent_mat_checkbox_4_Template, 1, 5, "mat-checkbox", 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "input", 5, 6);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("keydown", function MatSelectSearchComponent_Template_input_keydown_5_listener($event) {
        return ctx._handleKeydown($event);
      })("keyup", function MatSelectSearchComponent_Template_input_keyup_5_listener($event) {
        return ctx._handleKeyup($event);
      })("blur", function MatSelectSearchComponent_Template_input_blur_5_listener() {
        return ctx.onBlur();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](7, MatSelectSearchComponent_mat_spinner_7_Template, 1, 0, "mat-spinner", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](8, MatSelectSearchComponent_button_8_Template, 4, 2, "button", 8);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](9);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](10, "mat-divider");
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](11, MatSelectSearchComponent_div_11_Template, 4, 2, "div", 9);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](12, "async");
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction2"](11, _c3, ctx.matSelect.multiple, ctx._isToggleAllCheckboxVisible()));
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx._isToggleAllCheckboxVisible());
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("type", ctx.type)("formControl", ctx._formControl)("placeholder", ctx.placeholderLabel);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("aria-label", ctx.ariaLabel);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.searching);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx.hideClearSearchButton && ctx.value && !ctx.searching);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](12, 9, ctx._showNoEntriesFound$));
    }
  },
  dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_19__.NgClass, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgIf, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.FormControlDirective, _angular_material_button__WEBPACK_IMPORTED_MODULE_20__.MatIconButton, _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_21__.MatCheckbox, _angular_material_icon__WEBPACK_IMPORTED_MODULE_22__.MatIcon, _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_23__.MatProgressSpinner, _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_24__.MatTooltip, _angular_material_divider__WEBPACK_IMPORTED_MODULE_25__.MatDivider, _angular_common__WEBPACK_IMPORTED_MODULE_19__.AsyncPipe],
  styles: [".mat-select-search-hidden[_ngcontent-%COMP%]{visibility:hidden}.mat-select-search-inner[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;z-index:100;font-size:inherit;box-shadow:none;background-color:var(--mat-select-panel-background-color)}.mat-select-search-inner.mat-select-search-inner-multiple.mat-select-search-inner-toggle-all[_ngcontent-%COMP%]   .mat-select-search-inner-row[_ngcontent-%COMP%]{display:flex;align-items:center}.mat-select-search-input[_ngcontent-%COMP%]{box-sizing:border-box;width:100%;border:none;font-family:inherit;font-size:inherit;color:currentColor;outline:none;background-color:var(--mat-select-panel-background-color);padding:0 44px 0 16px;height:calc(3em - 1px);line-height:calc(3em - 1px)}[dir=rtl][_nghost-%COMP%]   .mat-select-search-input[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .mat-select-search-input[_ngcontent-%COMP%]{padding-right:16px;padding-left:44px}.mat-select-search-inner-toggle-all[_ngcontent-%COMP%]   .mat-select-search-input[_ngcontent-%COMP%]{padding-left:5px}.mat-select-search-no-entries-found[_ngcontent-%COMP%]{padding-top:8px}.mat-select-search-clear[_ngcontent-%COMP%]{position:absolute;right:4px;top:0}[dir=rtl][_nghost-%COMP%]   .mat-select-search-clear[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .mat-select-search-clear[_ngcontent-%COMP%]{right:auto;left:4px}.mat-select-search-spinner[_ngcontent-%COMP%]{position:absolute;right:16px;top:calc(50% - 8px)}[dir=rtl][_nghost-%COMP%]   .mat-select-search-spinner[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .mat-select-search-spinner[_ngcontent-%COMP%]{right:auto;left:16px}  .mat-mdc-option[aria-disabled=true].contains-mat-select-search{position:sticky;top:-8px;z-index:1;opacity:1;margin-top:-8px;pointer-events:all}  .mat-mdc-option[aria-disabled=true].contains-mat-select-search .mat-icon{margin-right:0;margin-left:0}  .mat-mdc-option[aria-disabled=true].contains-mat-select-search mat-pseudo-checkbox{display:none}  .mat-mdc-option[aria-disabled=true].contains-mat-select-search .mdc-list-item__primary-text{opacity:1}.mat-select-search-toggle-all-checkbox[_ngcontent-%COMP%]{padding-left:5px}[dir=rtl][_nghost-%COMP%]   .mat-select-search-toggle-all-checkbox[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .mat-select-search-toggle-all-checkbox[_ngcontent-%COMP%]{padding-left:0;padding-right:5px}"],
  changeDetection: 0
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](MatSelectSearchComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'ngx-mat-select-search',
      providers: [{
        provide: _angular_forms__WEBPACK_IMPORTED_MODULE_6__.NG_VALUE_ACCESSOR,
        useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => MatSelectSearchComponent),
        multi: true
      }],
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      template: "<!--\nCopyright (c) 2018 Bithost GmbH All Rights Reserved.\n\nUse of this source code is governed by an MIT-style license that can be\nfound in the LICENSE file at https://angular.io/license\n-->\n<!-- Placeholder to adjust vertical offset of the mat-option elements -->\n<input matInput class=\"mat-select-search-input mat-select-search-hidden\"/>\n\n<!-- Note: the  mat-datepicker-content mat-tab-header are needed to inherit the material theme colors, see PR #22 -->\n<div\n      #innerSelectSearch\n      class=\"mat-select-search-inner mat-typography mat-datepicker-content mat-tab-header\"\n      [ngClass]=\"{'mat-select-search-inner-multiple': matSelect.multiple, 'mat-select-search-inner-toggle-all': _isToggleAllCheckboxVisible() }\">\n\n  <div class=\"mat-select-search-inner-row\">\n    <mat-checkbox *ngIf=\"_isToggleAllCheckboxVisible()\"\n                  [color]=\"matFormField?.color\"\n                  class=\"mat-select-search-toggle-all-checkbox\"\n                  [checked]=\"toggleAllCheckboxChecked\"\n                  [indeterminate]=\"toggleAllCheckboxIndeterminate\"\n                  [matTooltip]=\"toggleAllCheckboxTooltipMessage\"\n                  matTooltipClass=\"ngx-mat-select-search-toggle-all-tooltip\"\n                  [matTooltipPosition]=\"toggleAllCheckboxTooltipPosition\"\n                  (change)=\"_emitSelectAllBooleanToParent($event.checked)\"\n    ></mat-checkbox>\n\n    <input class=\"mat-select-search-input\"\n           autocomplete=\"off\"\n           [type]=\"type\"\n           [formControl]=\"_formControl\"\n           #searchSelectInput\n           (keydown)=\"_handleKeydown($event)\"\n           (keyup)=\"_handleKeyup($event)\"\n           (blur)=\"onBlur()\"\n           [placeholder]=\"placeholderLabel\"\n           [attr.aria-label]=\"ariaLabel\"\n    />\n    <mat-spinner *ngIf=\"searching\"\n            class=\"mat-select-search-spinner\"\n            diameter=\"16\"></mat-spinner>\n\n    <button *ngIf=\"!hideClearSearchButton && value && !searching\"\n            mat-icon-button\n            aria-label=\"Clear\"\n            (click)=\"_reset(true)\"\n            class=\"mat-select-search-clear\">\n      <ng-content *ngIf=\"clearIcon; else defaultIcon\" select=\"[ngxMatSelectSearchClear]\"></ng-content>\n      <ng-template #defaultIcon>\n        <mat-icon [svgIcon]=\"closeSvgIcon\">\n          {{!closeSvgIcon ? closeIcon : null}}\n        </mat-icon>\n      </ng-template>\n    </button>\n\n    <ng-content select=\".mat-select-search-custom-header-content\"></ng-content>\n  </div>\n\n  <mat-divider></mat-divider>\n</div>\n\n<div *ngIf=\"_showNoEntriesFound$ | async\"\n     class=\"mat-select-search-no-entries-found\">\n  <ng-content *ngIf=\"noEntriesFound; else defaultNoEntriesFound\"\n              select=\"[ngxMatSelectNoEntriesFound]\"></ng-content>\n  <ng-template #defaultNoEntriesFound>{{noEntriesFoundLabel}}</ng-template>\n</div>\n\n",
      styles: [".mat-select-search-hidden{visibility:hidden}.mat-select-search-inner{position:absolute;top:0;left:0;width:100%;z-index:100;font-size:inherit;box-shadow:none;background-color:var(--mat-select-panel-background-color)}.mat-select-search-inner.mat-select-search-inner-multiple.mat-select-search-inner-toggle-all .mat-select-search-inner-row{display:flex;align-items:center}.mat-select-search-input{box-sizing:border-box;width:100%;border:none;font-family:inherit;font-size:inherit;color:currentColor;outline:none;background-color:var(--mat-select-panel-background-color);padding:0 44px 0 16px;height:calc(3em - 1px);line-height:calc(3em - 1px)}:host-context([dir=rtl]) .mat-select-search-input{padding-right:16px;padding-left:44px}.mat-select-search-inner-toggle-all .mat-select-search-input{padding-left:5px}.mat-select-search-no-entries-found{padding-top:8px}.mat-select-search-clear{position:absolute;right:4px;top:0}:host-context([dir=rtl]) .mat-select-search-clear{right:auto;left:4px}.mat-select-search-spinner{position:absolute;right:16px;top:calc(50% - 8px)}:host-context([dir=rtl]) .mat-select-search-spinner{right:auto;left:16px}::ng-deep .mat-mdc-option[aria-disabled=true].contains-mat-select-search{position:sticky;top:-8px;z-index:1;opacity:1;margin-top:-8px;pointer-events:all}::ng-deep .mat-mdc-option[aria-disabled=true].contains-mat-select-search .mat-icon{margin-right:0;margin-left:0}::ng-deep .mat-mdc-option[aria-disabled=true].contains-mat-select-search mat-pseudo-checkbox{display:none}::ng-deep .mat-mdc-option[aria-disabled=true].contains-mat-select-search .mdc-list-item__primary-text{opacity:1}.mat-select-search-toggle-all-checkbox{padding-left:5px}:host-context([dir=rtl]) .mat-select-search-toggle-all-checkbox{padding-left:0;padding-right:5px}\n"]
    }]
  }], function () {
    return [{
      type: _angular_material_select__WEBPACK_IMPORTED_MODULE_15__.MatSelect,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [_angular_material_select__WEBPACK_IMPORTED_MODULE_15__.MatSelect]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef
    }, {
      type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_16__.ViewportRuler
    }, {
      type: _angular_material_core__WEBPACK_IMPORTED_MODULE_17__.MatOption,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_17__.MatOption]
      }]
    }, {
      type: _angular_material_form_field__WEBPACK_IMPORTED_MODULE_18__.MatFormField,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [_angular_material_form_field__WEBPACK_IMPORTED_MODULE_18__.MatFormField]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [MAT_SELECTSEARCH_DEFAULT_OPTIONS]
      }]
    }];
  }, {
    placeholderLabel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    type: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    closeIcon: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    closeSvgIcon: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    noEntriesFoundLabel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    clearSearchInput: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    searching: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    disableInitialFocus: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    enableClearOnEscapePressed: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    preventHomeEndKeyPropagation: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    disableScrollToActiveOnOptionsChanged: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    ariaLabel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    showToggleAllCheckbox: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    toggleAllCheckboxChecked: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    toggleAllCheckboxIndeterminate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    toggleAllCheckboxTooltipMessage: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    toggleAllCheckboxTooltipPosition: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    hideClearSearchButton: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    alwaysRestoreSelectedOptionsMulti: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    toggleAll: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    searchSelectInput: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: ['searchSelectInput', {
        read: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef,
        static: true
      }]
    }],
    innerSelectSearch: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: ['innerSelectSearch', {
        read: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef,
        static: true
      }]
    }],
    clearIcon: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: [MatSelectSearchClearDirective]
    }],
    noEntriesFound: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: [MatSelectNoEntriesFoundDirective]
    }]
  });
})();

/**
 * Copyright (c) 2018 Bithost GmbH All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
const MatSelectSearchVersion = '7.0.6';
class NgxMatSelectSearchModule {}
NgxMatSelectSearchModule.ɵfac = function NgxMatSelectSearchModule_Factory(t) {
  return new (t || NgxMatSelectSearchModule)();
};
NgxMatSelectSearchModule.ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
  type: NgxMatSelectSearchModule,
  declarations: [MatSelectSearchComponent, MatSelectSearchClearDirective, MatSelectNoEntriesFoundDirective],
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_19__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.ReactiveFormsModule, _angular_material_button__WEBPACK_IMPORTED_MODULE_20__.MatButtonModule, _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_21__.MatCheckboxModule, _angular_material_icon__WEBPACK_IMPORTED_MODULE_22__.MatIconModule, _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_23__.MatProgressSpinnerModule, _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_24__.MatTooltipModule, _angular_material_divider__WEBPACK_IMPORTED_MODULE_25__.MatDividerModule],
  exports: [MatSelectSearchComponent, MatSelectSearchClearDirective, MatSelectNoEntriesFoundDirective]
});
NgxMatSelectSearchModule.ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_19__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.ReactiveFormsModule, _angular_material_button__WEBPACK_IMPORTED_MODULE_20__.MatButtonModule, _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_21__.MatCheckboxModule, _angular_material_icon__WEBPACK_IMPORTED_MODULE_22__.MatIconModule, _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_23__.MatProgressSpinnerModule, _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_24__.MatTooltipModule, _angular_material_divider__WEBPACK_IMPORTED_MODULE_25__.MatDividerModule]
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NgxMatSelectSearchModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
    args: [{
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_19__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.ReactiveFormsModule, _angular_material_button__WEBPACK_IMPORTED_MODULE_20__.MatButtonModule, _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_21__.MatCheckboxModule, _angular_material_icon__WEBPACK_IMPORTED_MODULE_22__.MatIconModule, _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_23__.MatProgressSpinnerModule, _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_24__.MatTooltipModule, _angular_material_divider__WEBPACK_IMPORTED_MODULE_25__.MatDividerModule],
      declarations: [MatSelectSearchComponent, MatSelectSearchClearDirective, MatSelectNoEntriesFoundDirective],
      exports: [MatSelectSearchComponent, MatSelectSearchClearDirective, MatSelectNoEntriesFoundDirective]
    }]
  }], null, null);
})();

/**
 * Generated bundle index. Do not edit.
 */



/***/ }),

/***/ 6265:
/*!****************************************************************************************!*\
  !*** ./apps/web-app/src/assets/templates/all-production-steps-list-item-template.json ***!
  \****************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('[{"key":"productionStep","label":"","htmltag":"strong","class":"title-section"},{"key":"machineType","label":"MG:","htmltag":"p","class":"text-section"}]');

/***/ }),

/***/ 1652:
/*!*****************************************************************************!*\
  !*** ./apps/web-app/src/assets/templates/contracts-list-item-template.json ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('[{"key":"product","label":"","htmltag":"strong","class":"title-section"},{"key":"content","label":"Auftragsnummer:","htmltag":"strong","class":"text-section"},{"group":[{"key":"container","label":"","htmltag":"strong"},{"key":"empty","label":["Behälter","Teilaufträge"," "],"htmltag":"strong"}],"htmltag":"p","class":"text-section"},{"key":"deadline","label":"KW:","htmltag":"strong","class":"text-section"}]');

/***/ }),

/***/ 4723:
/*!************************************************************************************!*\
  !*** ./apps/web-app/src/assets/templates/production-steps-list-item-template.json ***!
  \************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('[{"key":"productionStep","label":"","htmltag":"strong","class":"title-section"},{"key":"machineType","label":"MG:","htmltag":"p","class":"text-section"},{"key":"container","label":"","htmltag":"p","class":"text-section"}]');

/***/ }),

/***/ 3609:
/*!******************************************************************!*\
  !*** ./apps/web-app/src/assets/templates/vis-item-template.json ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('[{"key":"product","label":"","htmltag":"strong","class":"title"},{"group":[{"key":"amount","label":"Menge","htmltag":"span"},{"key":"unit","label":"","htmltag":"span"}],"htmltag":"p","class":"group-section"},{"key":"productionStepSequence","label":"Sequenz","htmltag":"p","class":""},{"key":"content","label":"","htmltag":"p","class":"content-section"}]');

/***/ })

}]);
//# sourceMappingURL=apps_web-app_src_app_gantt_demo_gantt-demo_module_ts.js.map